#pragma version 10

// This TEAL was generated by TEALScript v0.88.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	err

// test(uint64)void
*abi_route_test:
	// app: uint64
	txna ApplicationArgs 1
	btoi

	// execute test(uint64)void
	callsub test
	int 1
	return

// test(app: AppID): void
test:
	proto 1 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dup

	// contracts\test.algo.ts:13
	// info = this.boxStorage(app).value
	byte 0x62 // "b"
	frame_dig -1 // app: AppID
	itob
	concat
	frame_bury 0 // storage key//info

	// contracts\test.algo.ts:14
	// assert(info.p1 !== <uint64>1)
	int 0
	int 8
	byte 0x62 // "b"
	frame_dig -1 // app: AppID
	itob
	concat
	cover 2
	box_extract
	btoi
	int 1
	!=
	assert

	// contracts\test.algo.ts:15
	// assert(info.p2 !== <uint64>1)
	int 8 // headOffset
	int 8
	byte 0x62 // "b"
	frame_dig -1 // app: AppID
	itob
	concat
	cover 2
	box_extract
	btoi
	int 1
	!=
	assert

	// contracts\test.algo.ts:17
	// p = info.p1 / info.p2
	int 0
	int 8
	byte 0x62 // "b"
	frame_dig -1 // app: AppID
	itob
	concat
	cover 2
	box_extract
	btoi
	int 8 // headOffset
	int 8
	byte 0x62 // "b"
	frame_dig -1 // app: AppID
	itob
	concat
	cover 2
	box_extract
	btoi
	/
	frame_bury 1 // p: uint64

	// contracts\test.algo.ts:18
	// log(itob(p))
	frame_dig 1 // p: uint64
	itob
	log
	retsub

*abi_route_createApplication:
	int 1
	return

*create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication
	err

*call_NoOp:
	method "test(uint64)void"
	txna ApplicationArgs 0
	match *abi_route_test
	err