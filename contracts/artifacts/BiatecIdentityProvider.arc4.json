{
  "name": "BiatecIdentityProvider",
  "desc": "",
  "methods": [
    {
      "name": "createApplication",
      "desc": "Initial setup",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "bootstrap",
      "desc": "Biatec deploys single identity provider smart contract",
      "args": [
        {
          "name": "appBiatecConfigProvider",
          "type": "uint64",
          "desc": "Biatec amm provider"
        },
        {
          "name": "governor",
          "type": "address"
        },
        {
          "name": "verificationSetter",
          "type": "address"
        },
        {
          "name": "engagementSetter",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "updateApplication",
      "desc": "addressUdpater from global biatec configuration is allowed to update application",
      "args": [
        {
          "name": "appBiatecConfigProvider",
          "type": "uint64"
        },
        {
          "name": "newVersion",
          "type": "byte[]"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "selfRegistration",
      "args": [
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "info",
          "type": "(uint64,bool,uint64,uint64,uint64,uint64,uint64,bool,string,string,uint64,uint64,uint64,uint64,uint64,uint64,bool)"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "setInfo",
      "args": [
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "info",
          "type": "(uint64,bool,uint64,uint64,uint64,uint64,uint64,bool,string,string,uint64,uint64,uint64,uint64,uint64,uint64,bool)"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "sendOnlineKeyRegistration",
      "desc": "addressExecutiveFee can perfom key registration for this LP pool\n\n\nOnly addressExecutiveFee is allowed to execute this method.",
      "args": [
        {
          "name": "appBiatecConfigProvider",
          "type": "uint64"
        },
        {
          "name": "votePK",
          "type": "byte[]"
        },
        {
          "name": "selectionPK",
          "type": "byte[]"
        },
        {
          "name": "stateProofPK",
          "type": "byte[]"
        },
        {
          "name": "voteFirst",
          "type": "uint64"
        },
        {
          "name": "voteLast",
          "type": "uint64"
        },
        {
          "name": "voteKeyDilution",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "getUser",
      "desc": "Returns user information - fee multiplier, verification class, engagement class ..",
      "readonly": true,
      "args": [
        {
          "name": "user",
          "type": "address",
          "desc": "Get info for specific user address"
        },
        {
          "name": "v",
          "type": "uint8",
          "desc": "Version of the data structure to return"
        }
      ],
      "returns": {
        "type": "(uint8,uint64,uint64,bool,string,string,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,bool,uint64,uint64,bool)"
      }
    },
    {
      "name": "getUserShort",
      "desc": "Returns short user information - fee multiplier, verification class, engagement class ..",
      "readonly": true,
      "args": [
        {
          "name": "user",
          "type": "address",
          "desc": "Get info for specific user address"
        },
        {
          "name": "v",
          "type": "uint8",
          "desc": "Version of the data structure to return"
        }
      ],
      "returns": {
        "type": "(uint8,uint64,uint64,uint64,bool)"
      }
    },
    {
      "name": "withdrawExcessAssets",
      "desc": "If someone deposits excess assets to this smart contract biatec can use them.\n\n\nOnly addressExecutiveFee is allowed to execute this method.",
      "args": [
        {
          "name": "appBiatecConfigProvider",
          "type": "uint64",
          "desc": "Biatec config app. Only addressExecutiveFee is allowed to execute this method."
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset to withdraw. If native token, then zero"
        },
        {
          "name": "amount",
          "type": "uint64",
          "desc": "Amount of the asset to be withdrawn"
        }
      ],
      "returns": {
        "type": "uint64"
      }
    }
  ]
}