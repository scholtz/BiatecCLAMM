{
  "name": "BiatecConfigProvider",
  "desc": "",
  "methods": [
    {
      "name": "createApplication",
      "desc": "Initial setup",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    },
    {
      "name": "updateApplication",
      "desc": "addressUdpater from global biatec configuration is allowed to update application",
      "args": [
        {
          "name": "newVersion",
          "type": "byte[]"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "UpdateApplication"
        ]
      }
    },
    {
      "name": "bootstrap",
      "desc": "Setup the contract",
      "args": [
        {
          "name": "biatecFee",
          "type": "uint256",
          "desc": "Biatec fees"
        },
        {
          "name": "appBiatecIdentityProvider",
          "type": "uint64"
        },
        {
          "name": "appBiatecPoolProvider",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setAddressUdpater",
      "desc": "Top secret account with which it is possible update contracts or identity provider",
      "args": [
        {
          "name": "a",
          "type": "address",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setPaused",
      "desc": "Kill switch. In the extreme case all services (deposit, trading, withdrawal, identity modifications and more) can be suspended.",
      "args": [
        {
          "name": "a",
          "type": "uint64",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setAddressGov",
      "desc": "Execution address with which it is possible to opt in for governance",
      "args": [
        {
          "name": "a",
          "type": "address",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setAddressExecutive",
      "desc": "Execution address with which it is possible to change global biatec fees",
      "args": [
        {
          "name": "a",
          "type": "address",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setAddressExecutiveFee",
      "desc": "Execution fee address is address which can take fees from pools.",
      "args": [
        {
          "name": "a",
          "type": "address",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setBiatecIdentity",
      "desc": "App identity setter",
      "args": [
        {
          "name": "a",
          "type": "uint64",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setBiatecPool",
      "desc": "App identity setter",
      "args": [
        {
          "name": "a",
          "type": "uint64",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setBiatecFee",
      "desc": "Fees in 9 decimals. 1_000_000_000 = 100%\nFees in 9 decimals. 10_000_000 = 1%\nFees in 9 decimals. 100_000 = 0,01%\n\n\nFees are respectful from the all fees taken to the LP providers. If LPs charge 1% fee, and biatec charges 10% fee, LP will receive 0.09% fee and biatec 0.01% fee",
      "args": [
        {
          "name": "biatecFee",
          "type": "uint256",
          "desc": "Fee"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "sendOnlineKeyRegistration",
      "desc": "addressExecutiveFee can perfom key registration for this LP pool\n\n\nOnly addressExecutiveFee is allowed to execute this method.",
      "args": [
        {
          "name": "votePK",
          "type": "byte[]"
        },
        {
          "name": "selectionPK",
          "type": "byte[]"
        },
        {
          "name": "stateProofPK",
          "type": "byte[]"
        },
        {
          "name": "voteFirst",
          "type": "uint64"
        },
        {
          "name": "voteLast",
          "type": "uint64"
        },
        {
          "name": "voteKeyDilution",
          "type": "uint64"
        },
        {
          "name": "fee",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "withdrawExcessAssets",
      "desc": "If someone deposits excess assets to this smart contract biatec can use them.\n\n\nOnly addressExecutiveFee is allowed to execute this method.",
      "args": [
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset to withdraw. If native token, then zero"
        },
        {
          "name": "amount",
          "type": "uint64",
          "desc": "Amount of the asset to be withdrawn"
        }
      ],
      "returns": {
        "type": "uint64"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 6,
        "ints": 3
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "addressUdpater": {
          "key": "dQ==",
          "keyType": "AVMBytes",
          "valueType": "address"
        },
        "addressGov": {
          "key": "Zw==",
          "keyType": "AVMBytes",
          "valueType": "address"
        },
        "addressExecutive": {
          "key": "ZQ==",
          "keyType": "AVMBytes",
          "valueType": "address"
        },
        "addressExecutiveFee": {
          "key": "ZWY=",
          "keyType": "AVMBytes",
          "valueType": "address"
        },
        "appBiatecIdentityProvider": {
          "key": "aQ==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "appBiatecPoolProvider": {
          "key": "cA==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "suspended": {
          "key": "cw==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "biatecFee": {
          "key": "Zg==",
          "keyType": "AVMBytes",
          "valueType": "uint256"
        },
        "version": {
          "key": "c2N2ZXI=",
          "keyType": "AVMBytes",
          "valueType": "AVMBytes"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        {
          "teal": 3,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119
          ]
        },
        {
          "teal": 15,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            120,
            121
          ]
        },
        {
          "teal": 16,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            122
          ]
        },
        {
          "teal": 17,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            123,
            124
          ]
        },
        {
          "teal": 18,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            125
          ]
        },
        {
          "teal": 19,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            126,
            127
          ]
        },
        {
          "teal": 20,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            128
          ]
        },
        {
          "teal": 21,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154
          ]
        },
        {
          "teal": 25,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            155
          ]
        },
        {
          "teal": 30,
          "source": "contracts\\BiatecConfigProvider.algo.ts:60",
          "pc": [
            156,
            157,
            158
          ]
        },
        {
          "teal": 31,
          "source": "contracts\\BiatecConfigProvider.algo.ts:60",
          "pc": [
            159
          ]
        },
        {
          "teal": 32,
          "source": "contracts\\BiatecConfigProvider.algo.ts:60",
          "pc": [
            160
          ]
        },
        {
          "teal": 38,
          "source": "contracts\\BiatecConfigProvider.algo.ts:60",
          "pc": [
            161,
            162,
            163
          ]
        },
        {
          "teal": 42,
          "source": "contracts\\BiatecConfigProvider.algo.ts:61",
          "pc": [
            164,
            165
          ]
        },
        {
          "teal": 43,
          "source": "contracts\\BiatecConfigProvider.algo.ts:61",
          "pc": [
            166
          ]
        },
        {
          "teal": 44,
          "source": "contracts\\BiatecConfigProvider.algo.ts:61",
          "pc": [
            167
          ]
        },
        {
          "teal": 48,
          "source": "contracts\\BiatecConfigProvider.algo.ts:62",
          "pc": [
            168
          ]
        },
        {
          "teal": 49,
          "source": "contracts\\BiatecConfigProvider.algo.ts:62",
          "pc": [
            169,
            170
          ]
        },
        {
          "teal": 50,
          "source": "contracts\\BiatecConfigProvider.algo.ts:62",
          "pc": [
            171
          ]
        },
        {
          "teal": 54,
          "source": "contracts\\BiatecConfigProvider.algo.ts:63",
          "pc": [
            172,
            173
          ]
        },
        {
          "teal": 55,
          "source": "contracts\\BiatecConfigProvider.algo.ts:63",
          "pc": [
            174,
            175
          ]
        },
        {
          "teal": 56,
          "source": "contracts\\BiatecConfigProvider.algo.ts:63",
          "pc": [
            176
          ]
        },
        {
          "teal": 60,
          "source": "contracts\\BiatecConfigProvider.algo.ts:64",
          "pc": [
            177
          ]
        },
        {
          "teal": 61,
          "source": "contracts\\BiatecConfigProvider.algo.ts:64",
          "pc": [
            178,
            179
          ]
        },
        {
          "teal": 62,
          "source": "contracts\\BiatecConfigProvider.algo.ts:64",
          "pc": [
            180
          ]
        },
        {
          "teal": 66,
          "source": "contracts\\BiatecConfigProvider.algo.ts:65",
          "pc": [
            181
          ]
        },
        {
          "teal": 67,
          "source": "contracts\\BiatecConfigProvider.algo.ts:65",
          "pc": [
            182,
            183
          ]
        },
        {
          "teal": 68,
          "source": "contracts\\BiatecConfigProvider.algo.ts:65",
          "pc": [
            184
          ]
        },
        {
          "teal": 72,
          "source": "contracts\\BiatecConfigProvider.algo.ts:66",
          "pc": [
            185,
            186
          ]
        },
        {
          "teal": 73,
          "source": "contracts\\BiatecConfigProvider.algo.ts:66",
          "pc": [
            187
          ]
        },
        {
          "teal": 74,
          "source": "contracts\\BiatecConfigProvider.algo.ts:66",
          "pc": [
            188
          ]
        },
        {
          "teal": 75,
          "source": "contracts\\BiatecConfigProvider.algo.ts:60",
          "pc": [
            189
          ]
        },
        {
          "teal": 80,
          "source": "contracts\\BiatecConfigProvider.algo.ts:72",
          "pc": [
            190,
            191,
            192
          ]
        },
        {
          "teal": 81,
          "source": "contracts\\BiatecConfigProvider.algo.ts:72",
          "pc": [
            193,
            194,
            195
          ]
        },
        {
          "teal": 84,
          "source": "contracts\\BiatecConfigProvider.algo.ts:72",
          "pc": [
            196,
            197,
            198
          ]
        },
        {
          "teal": 85,
          "source": "contracts\\BiatecConfigProvider.algo.ts:72",
          "pc": [
            199
          ]
        },
        {
          "teal": 86,
          "source": "contracts\\BiatecConfigProvider.algo.ts:72",
          "pc": [
            200
          ]
        },
        {
          "teal": 92,
          "source": "contracts\\BiatecConfigProvider.algo.ts:72",
          "pc": [
            201,
            202,
            203
          ]
        },
        {
          "teal": 99,
          "source": "contracts\\BiatecConfigProvider.algo.ts:74",
          "pc": [
            204,
            205
          ]
        },
        {
          "teal": 100,
          "source": "contracts\\BiatecConfigProvider.algo.ts:74",
          "pc": [
            206
          ]
        },
        {
          "teal": 101,
          "source": "contracts\\BiatecConfigProvider.algo.ts:74",
          "pc": [
            207
          ]
        },
        {
          "teal": 102,
          "source": "contracts\\BiatecConfigProvider.algo.ts:74",
          "pc": [
            208
          ]
        },
        {
          "teal": 105,
          "source": "contracts\\BiatecConfigProvider.algo.ts:73",
          "errorMessage": "Only addressUdpater setup in the config can update application",
          "pc": [
            209
          ]
        },
        {
          "teal": 109,
          "source": "contracts\\BiatecConfigProvider.algo.ts:77",
          "pc": [
            210
          ]
        },
        {
          "teal": 110,
          "source": "contracts\\BiatecConfigProvider.algo.ts:77",
          "pc": [
            211
          ]
        },
        {
          "teal": 114,
          "source": "contracts\\BiatecConfigProvider.algo.ts:78",
          "pc": [
            212,
            213
          ]
        },
        {
          "teal": 115,
          "source": "contracts\\BiatecConfigProvider.algo.ts:78",
          "pc": [
            214
          ]
        },
        {
          "teal": 119,
          "source": "contracts\\BiatecConfigProvider.algo.ts:79",
          "pc": [
            215,
            216
          ]
        },
        {
          "teal": 120,
          "source": "contracts\\BiatecConfigProvider.algo.ts:79",
          "pc": [
            217
          ]
        },
        {
          "teal": 121,
          "source": "contracts\\BiatecConfigProvider.algo.ts:79",
          "pc": [
            218
          ]
        },
        {
          "teal": 122,
          "source": "contracts\\BiatecConfigProvider.algo.ts:72",
          "pc": [
            219
          ]
        },
        {
          "teal": 127,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            220,
            221,
            222
          ]
        },
        {
          "teal": 128,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            223
          ]
        },
        {
          "teal": 131,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            224,
            225,
            226
          ]
        },
        {
          "teal": 132,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            227
          ]
        },
        {
          "teal": 135,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            228,
            229,
            230
          ]
        },
        {
          "teal": 136,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            231
          ]
        },
        {
          "teal": 137,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            232
          ]
        },
        {
          "teal": 138,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            233
          ]
        },
        {
          "teal": 139,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            234
          ]
        },
        {
          "teal": 142,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "errorMessage": "argument 2 (biatecFee) for bootstrap must be a uint256",
          "pc": [
            235
          ]
        },
        {
          "teal": 145,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            236,
            237,
            238
          ]
        },
        {
          "teal": 146,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            239
          ]
        },
        {
          "teal": 147,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            240
          ]
        },
        {
          "teal": 154,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            241,
            242,
            243
          ]
        },
        {
          "teal": 158,
          "source": "contracts\\BiatecConfigProvider.algo.ts:87",
          "pc": [
            244,
            245
          ]
        },
        {
          "teal": 159,
          "source": "contracts\\BiatecConfigProvider.algo.ts:87",
          "pc": [
            246
          ]
        },
        {
          "teal": 160,
          "source": "contracts\\BiatecConfigProvider.algo.ts:87",
          "pc": [
            247
          ]
        },
        {
          "teal": 161,
          "source": "contracts\\BiatecConfigProvider.algo.ts:87",
          "pc": [
            248
          ]
        },
        {
          "teal": 164,
          "source": "contracts\\BiatecConfigProvider.algo.ts:87",
          "errorMessage": "Only updater can call bootstrap method",
          "pc": [
            249
          ]
        },
        {
          "teal": 168,
          "source": "contracts\\BiatecConfigProvider.algo.ts:88",
          "pc": [
            250,
            251
          ]
        },
        {
          "teal": 169,
          "source": "contracts\\BiatecConfigProvider.algo.ts:88",
          "pc": [
            252,
            253
          ]
        },
        {
          "teal": 170,
          "source": "contracts\\BiatecConfigProvider.algo.ts:88",
          "pc": [
            254,
            255
          ]
        },
        {
          "teal": 171,
          "source": "contracts\\BiatecConfigProvider.algo.ts:88",
          "pc": [
            256
          ]
        },
        {
          "teal": 172,
          "source": "contracts\\BiatecConfigProvider.algo.ts:88",
          "pc": [
            257
          ]
        },
        {
          "teal": 175,
          "source": "contracts\\BiatecConfigProvider.algo.ts:88",
          "errorMessage": "Biatec cannot set fees higher then 50% of lp fees",
          "pc": [
            258
          ]
        },
        {
          "teal": 179,
          "source": "contracts\\BiatecConfigProvider.algo.ts:89",
          "pc": [
            259,
            260
          ]
        },
        {
          "teal": 180,
          "source": "contracts\\BiatecConfigProvider.algo.ts:89",
          "pc": [
            261,
            262
          ]
        },
        {
          "teal": 181,
          "source": "contracts\\BiatecConfigProvider.algo.ts:89",
          "pc": [
            263
          ]
        },
        {
          "teal": 185,
          "source": "contracts\\BiatecConfigProvider.algo.ts:90",
          "pc": [
            264,
            265
          ]
        },
        {
          "teal": 186,
          "source": "contracts\\BiatecConfigProvider.algo.ts:90",
          "pc": [
            266,
            267
          ]
        },
        {
          "teal": 187,
          "source": "contracts\\BiatecConfigProvider.algo.ts:90",
          "pc": [
            268
          ]
        },
        {
          "teal": 191,
          "source": "contracts\\BiatecConfigProvider.algo.ts:91",
          "pc": [
            269,
            270
          ]
        },
        {
          "teal": 192,
          "source": "contracts\\BiatecConfigProvider.algo.ts:91",
          "pc": [
            271,
            272
          ]
        },
        {
          "teal": 193,
          "source": "contracts\\BiatecConfigProvider.algo.ts:91",
          "pc": [
            273
          ]
        },
        {
          "teal": 194,
          "source": "contracts\\BiatecConfigProvider.algo.ts:86",
          "pc": [
            274
          ]
        },
        {
          "teal": 199,
          "source": "contracts\\BiatecConfigProvider.algo.ts:99",
          "pc": [
            275,
            276,
            277
          ]
        },
        {
          "teal": 200,
          "source": "contracts\\BiatecConfigProvider.algo.ts:99",
          "pc": [
            278
          ]
        },
        {
          "teal": 201,
          "source": "contracts\\BiatecConfigProvider.algo.ts:99",
          "pc": [
            279
          ]
        },
        {
          "teal": 202,
          "source": "contracts\\BiatecConfigProvider.algo.ts:99",
          "pc": [
            280
          ]
        },
        {
          "teal": 203,
          "source": "contracts\\BiatecConfigProvider.algo.ts:99",
          "pc": [
            281
          ]
        },
        {
          "teal": 206,
          "source": "contracts\\BiatecConfigProvider.algo.ts:99",
          "errorMessage": "argument 0 (a) for setAddressUdpater must be a address",
          "pc": [
            282
          ]
        },
        {
          "teal": 209,
          "source": "contracts\\BiatecConfigProvider.algo.ts:99",
          "pc": [
            283,
            284,
            285
          ]
        },
        {
          "teal": 210,
          "source": "contracts\\BiatecConfigProvider.algo.ts:99",
          "pc": [
            286
          ]
        },
        {
          "teal": 211,
          "source": "contracts\\BiatecConfigProvider.algo.ts:99",
          "pc": [
            287
          ]
        },
        {
          "teal": 219,
          "source": "contracts\\BiatecConfigProvider.algo.ts:99",
          "pc": [
            288,
            289,
            290
          ]
        },
        {
          "teal": 223,
          "source": "contracts\\BiatecConfigProvider.algo.ts:100",
          "pc": [
            291,
            292
          ]
        },
        {
          "teal": 224,
          "source": "contracts\\BiatecConfigProvider.algo.ts:100",
          "pc": [
            293
          ]
        },
        {
          "teal": 225,
          "source": "contracts\\BiatecConfigProvider.algo.ts:100",
          "pc": [
            294
          ]
        },
        {
          "teal": 226,
          "source": "contracts\\BiatecConfigProvider.algo.ts:100",
          "pc": [
            295
          ]
        },
        {
          "teal": 229,
          "source": "contracts\\BiatecConfigProvider.algo.ts:100",
          "errorMessage": "Only updater can change updater address",
          "pc": [
            296
          ]
        },
        {
          "teal": 233,
          "source": "contracts\\BiatecConfigProvider.algo.ts:101",
          "pc": [
            297
          ]
        },
        {
          "teal": 234,
          "source": "contracts\\BiatecConfigProvider.algo.ts:101",
          "pc": [
            298,
            299
          ]
        },
        {
          "teal": 235,
          "source": "contracts\\BiatecConfigProvider.algo.ts:101",
          "pc": [
            300
          ]
        },
        {
          "teal": 236,
          "source": "contracts\\BiatecConfigProvider.algo.ts:99",
          "pc": [
            301
          ]
        },
        {
          "teal": 241,
          "source": "contracts\\BiatecConfigProvider.algo.ts:109",
          "pc": [
            302,
            303,
            304
          ]
        },
        {
          "teal": 242,
          "source": "contracts\\BiatecConfigProvider.algo.ts:109",
          "pc": [
            305
          ]
        },
        {
          "teal": 245,
          "source": "contracts\\BiatecConfigProvider.algo.ts:109",
          "pc": [
            306,
            307,
            308
          ]
        },
        {
          "teal": 246,
          "source": "contracts\\BiatecConfigProvider.algo.ts:109",
          "pc": [
            309
          ]
        },
        {
          "teal": 247,
          "source": "contracts\\BiatecConfigProvider.algo.ts:109",
          "pc": [
            310
          ]
        },
        {
          "teal": 255,
          "source": "contracts\\BiatecConfigProvider.algo.ts:109",
          "pc": [
            311,
            312,
            313
          ]
        },
        {
          "teal": 259,
          "source": "contracts\\BiatecConfigProvider.algo.ts:110",
          "pc": [
            314,
            315
          ]
        },
        {
          "teal": 260,
          "source": "contracts\\BiatecConfigProvider.algo.ts:110",
          "pc": [
            316
          ]
        },
        {
          "teal": 261,
          "source": "contracts\\BiatecConfigProvider.algo.ts:110",
          "pc": [
            317
          ]
        },
        {
          "teal": 262,
          "source": "contracts\\BiatecConfigProvider.algo.ts:110",
          "pc": [
            318
          ]
        },
        {
          "teal": 265,
          "source": "contracts\\BiatecConfigProvider.algo.ts:110",
          "errorMessage": "Only updater can pause and unpause the biatec services",
          "pc": [
            319
          ]
        },
        {
          "teal": 269,
          "source": "contracts\\BiatecConfigProvider.algo.ts:111",
          "pc": [
            320,
            321
          ]
        },
        {
          "teal": 270,
          "source": "contracts\\BiatecConfigProvider.algo.ts:111",
          "pc": [
            322,
            323
          ]
        },
        {
          "teal": 271,
          "source": "contracts\\BiatecConfigProvider.algo.ts:111",
          "pc": [
            324
          ]
        },
        {
          "teal": 272,
          "source": "contracts\\BiatecConfigProvider.algo.ts:109",
          "pc": [
            325
          ]
        },
        {
          "teal": 277,
          "source": "contracts\\BiatecConfigProvider.algo.ts:119",
          "pc": [
            326,
            327,
            328
          ]
        },
        {
          "teal": 278,
          "source": "contracts\\BiatecConfigProvider.algo.ts:119",
          "pc": [
            329
          ]
        },
        {
          "teal": 279,
          "source": "contracts\\BiatecConfigProvider.algo.ts:119",
          "pc": [
            330
          ]
        },
        {
          "teal": 280,
          "source": "contracts\\BiatecConfigProvider.algo.ts:119",
          "pc": [
            331
          ]
        },
        {
          "teal": 281,
          "source": "contracts\\BiatecConfigProvider.algo.ts:119",
          "pc": [
            332
          ]
        },
        {
          "teal": 284,
          "source": "contracts\\BiatecConfigProvider.algo.ts:119",
          "errorMessage": "argument 0 (a) for setAddressGov must be a address",
          "pc": [
            333
          ]
        },
        {
          "teal": 287,
          "source": "contracts\\BiatecConfigProvider.algo.ts:119",
          "pc": [
            334,
            335,
            336
          ]
        },
        {
          "teal": 288,
          "source": "contracts\\BiatecConfigProvider.algo.ts:119",
          "pc": [
            337
          ]
        },
        {
          "teal": 289,
          "source": "contracts\\BiatecConfigProvider.algo.ts:119",
          "pc": [
            338
          ]
        },
        {
          "teal": 297,
          "source": "contracts\\BiatecConfigProvider.algo.ts:119",
          "pc": [
            339,
            340,
            341
          ]
        },
        {
          "teal": 301,
          "source": "contracts\\BiatecConfigProvider.algo.ts:120",
          "pc": [
            342,
            343
          ]
        },
        {
          "teal": 302,
          "source": "contracts\\BiatecConfigProvider.algo.ts:120",
          "pc": [
            344
          ]
        },
        {
          "teal": 303,
          "source": "contracts\\BiatecConfigProvider.algo.ts:120",
          "pc": [
            345
          ]
        },
        {
          "teal": 304,
          "source": "contracts\\BiatecConfigProvider.algo.ts:120",
          "pc": [
            346
          ]
        },
        {
          "teal": 307,
          "source": "contracts\\BiatecConfigProvider.algo.ts:120",
          "errorMessage": "Only updater can change gov address",
          "pc": [
            347
          ]
        },
        {
          "teal": 311,
          "source": "contracts\\BiatecConfigProvider.algo.ts:121",
          "pc": [
            348,
            349
          ]
        },
        {
          "teal": 312,
          "source": "contracts\\BiatecConfigProvider.algo.ts:121",
          "pc": [
            350,
            351
          ]
        },
        {
          "teal": 313,
          "source": "contracts\\BiatecConfigProvider.algo.ts:121",
          "pc": [
            352
          ]
        },
        {
          "teal": 314,
          "source": "contracts\\BiatecConfigProvider.algo.ts:119",
          "pc": [
            353
          ]
        },
        {
          "teal": 319,
          "source": "contracts\\BiatecConfigProvider.algo.ts:129",
          "pc": [
            354,
            355,
            356
          ]
        },
        {
          "teal": 320,
          "source": "contracts\\BiatecConfigProvider.algo.ts:129",
          "pc": [
            357
          ]
        },
        {
          "teal": 321,
          "source": "contracts\\BiatecConfigProvider.algo.ts:129",
          "pc": [
            358
          ]
        },
        {
          "teal": 322,
          "source": "contracts\\BiatecConfigProvider.algo.ts:129",
          "pc": [
            359
          ]
        },
        {
          "teal": 323,
          "source": "contracts\\BiatecConfigProvider.algo.ts:129",
          "pc": [
            360
          ]
        },
        {
          "teal": 326,
          "source": "contracts\\BiatecConfigProvider.algo.ts:129",
          "errorMessage": "argument 0 (a) for setAddressExecutive must be a address",
          "pc": [
            361
          ]
        },
        {
          "teal": 329,
          "source": "contracts\\BiatecConfigProvider.algo.ts:129",
          "pc": [
            362,
            363,
            364
          ]
        },
        {
          "teal": 330,
          "source": "contracts\\BiatecConfigProvider.algo.ts:129",
          "pc": [
            365
          ]
        },
        {
          "teal": 331,
          "source": "contracts\\BiatecConfigProvider.algo.ts:129",
          "pc": [
            366
          ]
        },
        {
          "teal": 339,
          "source": "contracts\\BiatecConfigProvider.algo.ts:129",
          "pc": [
            367,
            368,
            369
          ]
        },
        {
          "teal": 343,
          "source": "contracts\\BiatecConfigProvider.algo.ts:130",
          "pc": [
            370,
            371
          ]
        },
        {
          "teal": 344,
          "source": "contracts\\BiatecConfigProvider.algo.ts:130",
          "pc": [
            372
          ]
        },
        {
          "teal": 345,
          "source": "contracts\\BiatecConfigProvider.algo.ts:130",
          "pc": [
            373
          ]
        },
        {
          "teal": 346,
          "source": "contracts\\BiatecConfigProvider.algo.ts:130",
          "pc": [
            374
          ]
        },
        {
          "teal": 349,
          "source": "contracts\\BiatecConfigProvider.algo.ts:130",
          "errorMessage": "Only updater can change addressExecutive",
          "pc": [
            375
          ]
        },
        {
          "teal": 353,
          "source": "contracts\\BiatecConfigProvider.algo.ts:131",
          "pc": [
            376
          ]
        },
        {
          "teal": 354,
          "source": "contracts\\BiatecConfigProvider.algo.ts:131",
          "pc": [
            377,
            378
          ]
        },
        {
          "teal": 355,
          "source": "contracts\\BiatecConfigProvider.algo.ts:131",
          "pc": [
            379
          ]
        },
        {
          "teal": 356,
          "source": "contracts\\BiatecConfigProvider.algo.ts:129",
          "pc": [
            380
          ]
        },
        {
          "teal": 361,
          "source": "contracts\\BiatecConfigProvider.algo.ts:139",
          "pc": [
            381,
            382,
            383
          ]
        },
        {
          "teal": 362,
          "source": "contracts\\BiatecConfigProvider.algo.ts:139",
          "pc": [
            384
          ]
        },
        {
          "teal": 363,
          "source": "contracts\\BiatecConfigProvider.algo.ts:139",
          "pc": [
            385
          ]
        },
        {
          "teal": 364,
          "source": "contracts\\BiatecConfigProvider.algo.ts:139",
          "pc": [
            386
          ]
        },
        {
          "teal": 365,
          "source": "contracts\\BiatecConfigProvider.algo.ts:139",
          "pc": [
            387
          ]
        },
        {
          "teal": 368,
          "source": "contracts\\BiatecConfigProvider.algo.ts:139",
          "errorMessage": "argument 0 (a) for setAddressExecutiveFee must be a address",
          "pc": [
            388
          ]
        },
        {
          "teal": 371,
          "source": "contracts\\BiatecConfigProvider.algo.ts:139",
          "pc": [
            389,
            390,
            391
          ]
        },
        {
          "teal": 372,
          "source": "contracts\\BiatecConfigProvider.algo.ts:139",
          "pc": [
            392
          ]
        },
        {
          "teal": 373,
          "source": "contracts\\BiatecConfigProvider.algo.ts:139",
          "pc": [
            393
          ]
        },
        {
          "teal": 381,
          "source": "contracts\\BiatecConfigProvider.algo.ts:139",
          "pc": [
            394,
            395,
            396
          ]
        },
        {
          "teal": 385,
          "source": "contracts\\BiatecConfigProvider.algo.ts:140",
          "pc": [
            397,
            398
          ]
        },
        {
          "teal": 386,
          "source": "contracts\\BiatecConfigProvider.algo.ts:140",
          "pc": [
            399
          ]
        },
        {
          "teal": 387,
          "source": "contracts\\BiatecConfigProvider.algo.ts:140",
          "pc": [
            400
          ]
        },
        {
          "teal": 388,
          "source": "contracts\\BiatecConfigProvider.algo.ts:140",
          "pc": [
            401
          ]
        },
        {
          "teal": 391,
          "source": "contracts\\BiatecConfigProvider.algo.ts:140",
          "errorMessage": "Only addressExecutive can change fee executor address",
          "pc": [
            402
          ]
        },
        {
          "teal": 395,
          "source": "contracts\\BiatecConfigProvider.algo.ts:141",
          "pc": [
            403
          ]
        },
        {
          "teal": 396,
          "source": "contracts\\BiatecConfigProvider.algo.ts:141",
          "pc": [
            404,
            405
          ]
        },
        {
          "teal": 397,
          "source": "contracts\\BiatecConfigProvider.algo.ts:141",
          "pc": [
            406
          ]
        },
        {
          "teal": 398,
          "source": "contracts\\BiatecConfigProvider.algo.ts:139",
          "pc": [
            407
          ]
        },
        {
          "teal": 403,
          "source": "contracts\\BiatecConfigProvider.algo.ts:149",
          "pc": [
            408,
            409,
            410
          ]
        },
        {
          "teal": 404,
          "source": "contracts\\BiatecConfigProvider.algo.ts:149",
          "pc": [
            411
          ]
        },
        {
          "teal": 407,
          "source": "contracts\\BiatecConfigProvider.algo.ts:149",
          "pc": [
            412,
            413,
            414
          ]
        },
        {
          "teal": 408,
          "source": "contracts\\BiatecConfigProvider.algo.ts:149",
          "pc": [
            415
          ]
        },
        {
          "teal": 409,
          "source": "contracts\\BiatecConfigProvider.algo.ts:149",
          "pc": [
            416
          ]
        },
        {
          "teal": 417,
          "source": "contracts\\BiatecConfigProvider.algo.ts:149",
          "pc": [
            417,
            418,
            419
          ]
        },
        {
          "teal": 421,
          "source": "contracts\\BiatecConfigProvider.algo.ts:150",
          "pc": [
            420,
            421
          ]
        },
        {
          "teal": 422,
          "source": "contracts\\BiatecConfigProvider.algo.ts:150",
          "pc": [
            422
          ]
        },
        {
          "teal": 423,
          "source": "contracts\\BiatecConfigProvider.algo.ts:150",
          "pc": [
            423
          ]
        },
        {
          "teal": 424,
          "source": "contracts\\BiatecConfigProvider.algo.ts:150",
          "pc": [
            424
          ]
        },
        {
          "teal": 427,
          "source": "contracts\\BiatecConfigProvider.algo.ts:150",
          "errorMessage": "Only updater can change appIdentityProvider",
          "pc": [
            425
          ]
        },
        {
          "teal": 431,
          "source": "contracts\\BiatecConfigProvider.algo.ts:151",
          "pc": [
            426,
            427
          ]
        },
        {
          "teal": 432,
          "source": "contracts\\BiatecConfigProvider.algo.ts:151",
          "pc": [
            428,
            429
          ]
        },
        {
          "teal": 433,
          "source": "contracts\\BiatecConfigProvider.algo.ts:151",
          "pc": [
            430
          ]
        },
        {
          "teal": 434,
          "source": "contracts\\BiatecConfigProvider.algo.ts:149",
          "pc": [
            431
          ]
        },
        {
          "teal": 439,
          "source": "contracts\\BiatecConfigProvider.algo.ts:159",
          "pc": [
            432,
            433,
            434
          ]
        },
        {
          "teal": 440,
          "source": "contracts\\BiatecConfigProvider.algo.ts:159",
          "pc": [
            435
          ]
        },
        {
          "teal": 443,
          "source": "contracts\\BiatecConfigProvider.algo.ts:159",
          "pc": [
            436,
            437,
            438
          ]
        },
        {
          "teal": 444,
          "source": "contracts\\BiatecConfigProvider.algo.ts:159",
          "pc": [
            439
          ]
        },
        {
          "teal": 445,
          "source": "contracts\\BiatecConfigProvider.algo.ts:159",
          "pc": [
            440
          ]
        },
        {
          "teal": 453,
          "source": "contracts\\BiatecConfigProvider.algo.ts:159",
          "pc": [
            441,
            442,
            443
          ]
        },
        {
          "teal": 457,
          "source": "contracts\\BiatecConfigProvider.algo.ts:160",
          "pc": [
            444,
            445
          ]
        },
        {
          "teal": 458,
          "source": "contracts\\BiatecConfigProvider.algo.ts:160",
          "pc": [
            446
          ]
        },
        {
          "teal": 459,
          "source": "contracts\\BiatecConfigProvider.algo.ts:160",
          "pc": [
            447
          ]
        },
        {
          "teal": 460,
          "source": "contracts\\BiatecConfigProvider.algo.ts:160",
          "pc": [
            448
          ]
        },
        {
          "teal": 463,
          "source": "contracts\\BiatecConfigProvider.algo.ts:160",
          "errorMessage": "Only updater can change appPoolProvider",
          "pc": [
            449
          ]
        },
        {
          "teal": 467,
          "source": "contracts\\BiatecConfigProvider.algo.ts:161",
          "pc": [
            450,
            451
          ]
        },
        {
          "teal": 468,
          "source": "contracts\\BiatecConfigProvider.algo.ts:161",
          "pc": [
            452,
            453
          ]
        },
        {
          "teal": 469,
          "source": "contracts\\BiatecConfigProvider.algo.ts:161",
          "pc": [
            454
          ]
        },
        {
          "teal": 470,
          "source": "contracts\\BiatecConfigProvider.algo.ts:159",
          "pc": [
            455
          ]
        },
        {
          "teal": 475,
          "source": "contracts\\BiatecConfigProvider.algo.ts:173",
          "pc": [
            456,
            457,
            458
          ]
        },
        {
          "teal": 476,
          "source": "contracts\\BiatecConfigProvider.algo.ts:173",
          "pc": [
            459
          ]
        },
        {
          "teal": 477,
          "source": "contracts\\BiatecConfigProvider.algo.ts:173",
          "pc": [
            460
          ]
        },
        {
          "teal": 478,
          "source": "contracts\\BiatecConfigProvider.algo.ts:173",
          "pc": [
            461
          ]
        },
        {
          "teal": 479,
          "source": "contracts\\BiatecConfigProvider.algo.ts:173",
          "pc": [
            462
          ]
        },
        {
          "teal": 482,
          "source": "contracts\\BiatecConfigProvider.algo.ts:173",
          "errorMessage": "argument 0 (biatecFee) for setBiatecFee must be a uint256",
          "pc": [
            463
          ]
        },
        {
          "teal": 485,
          "source": "contracts\\BiatecConfigProvider.algo.ts:173",
          "pc": [
            464,
            465,
            466
          ]
        },
        {
          "teal": 486,
          "source": "contracts\\BiatecConfigProvider.algo.ts:173",
          "pc": [
            467
          ]
        },
        {
          "teal": 487,
          "source": "contracts\\BiatecConfigProvider.algo.ts:173",
          "pc": [
            468
          ]
        },
        {
          "teal": 499,
          "source": "contracts\\BiatecConfigProvider.algo.ts:173",
          "pc": [
            469,
            470,
            471
          ]
        },
        {
          "teal": 503,
          "source": "contracts\\BiatecConfigProvider.algo.ts:174",
          "pc": [
            472,
            473
          ]
        },
        {
          "teal": 504,
          "source": "contracts\\BiatecConfigProvider.algo.ts:174",
          "pc": [
            474
          ]
        },
        {
          "teal": 505,
          "source": "contracts\\BiatecConfigProvider.algo.ts:174",
          "pc": [
            475
          ]
        },
        {
          "teal": 506,
          "source": "contracts\\BiatecConfigProvider.algo.ts:174",
          "pc": [
            476
          ]
        },
        {
          "teal": 509,
          "source": "contracts\\BiatecConfigProvider.algo.ts:174",
          "errorMessage": "Only executive address can change fees",
          "pc": [
            477
          ]
        },
        {
          "teal": 513,
          "source": "contracts\\BiatecConfigProvider.algo.ts:175",
          "pc": [
            478,
            479
          ]
        },
        {
          "teal": 514,
          "source": "contracts\\BiatecConfigProvider.algo.ts:175",
          "pc": [
            480,
            481
          ]
        },
        {
          "teal": 515,
          "source": "contracts\\BiatecConfigProvider.algo.ts:175",
          "pc": [
            482,
            483
          ]
        },
        {
          "teal": 516,
          "source": "contracts\\BiatecConfigProvider.algo.ts:175",
          "pc": [
            484
          ]
        },
        {
          "teal": 517,
          "source": "contracts\\BiatecConfigProvider.algo.ts:175",
          "pc": [
            485
          ]
        },
        {
          "teal": 520,
          "source": "contracts\\BiatecConfigProvider.algo.ts:175",
          "errorMessage": "Biatec cannot set fees higher then 50% of lp fees",
          "pc": [
            486
          ]
        },
        {
          "teal": 524,
          "source": "contracts\\BiatecConfigProvider.algo.ts:176",
          "pc": [
            487,
            488
          ]
        },
        {
          "teal": 525,
          "source": "contracts\\BiatecConfigProvider.algo.ts:176",
          "pc": [
            489,
            490
          ]
        },
        {
          "teal": 526,
          "source": "contracts\\BiatecConfigProvider.algo.ts:176",
          "pc": [
            491
          ]
        },
        {
          "teal": 527,
          "source": "contracts\\BiatecConfigProvider.algo.ts:173",
          "pc": [
            492
          ]
        },
        {
          "teal": 532,
          "source": "contracts\\BiatecConfigProvider.algo.ts:191",
          "pc": [
            493,
            494,
            495
          ]
        },
        {
          "teal": 533,
          "source": "contracts\\BiatecConfigProvider.algo.ts:191",
          "pc": [
            496
          ]
        },
        {
          "teal": 536,
          "source": "contracts\\BiatecConfigProvider.algo.ts:190",
          "pc": [
            497,
            498,
            499
          ]
        },
        {
          "teal": 537,
          "source": "contracts\\BiatecConfigProvider.algo.ts:190",
          "pc": [
            500
          ]
        },
        {
          "teal": 540,
          "source": "contracts\\BiatecConfigProvider.algo.ts:189",
          "pc": [
            501,
            502,
            503
          ]
        },
        {
          "teal": 541,
          "source": "contracts\\BiatecConfigProvider.algo.ts:189",
          "pc": [
            504
          ]
        },
        {
          "teal": 544,
          "source": "contracts\\BiatecConfigProvider.algo.ts:188",
          "pc": [
            505,
            506,
            507
          ]
        },
        {
          "teal": 545,
          "source": "contracts\\BiatecConfigProvider.algo.ts:188",
          "pc": [
            508
          ]
        },
        {
          "teal": 548,
          "source": "contracts\\BiatecConfigProvider.algo.ts:187",
          "pc": [
            509,
            510,
            511
          ]
        },
        {
          "teal": 549,
          "source": "contracts\\BiatecConfigProvider.algo.ts:187",
          "pc": [
            512,
            513,
            514
          ]
        },
        {
          "teal": 552,
          "source": "contracts\\BiatecConfigProvider.algo.ts:186",
          "pc": [
            515,
            516,
            517
          ]
        },
        {
          "teal": 553,
          "source": "contracts\\BiatecConfigProvider.algo.ts:186",
          "pc": [
            518,
            519,
            520
          ]
        },
        {
          "teal": 556,
          "source": "contracts\\BiatecConfigProvider.algo.ts:185",
          "pc": [
            521,
            522,
            523
          ]
        },
        {
          "teal": 557,
          "source": "contracts\\BiatecConfigProvider.algo.ts:185",
          "pc": [
            524,
            525,
            526
          ]
        },
        {
          "teal": 560,
          "source": "contracts\\BiatecConfigProvider.algo.ts:184",
          "pc": [
            527,
            528,
            529
          ]
        },
        {
          "teal": 561,
          "source": "contracts\\BiatecConfigProvider.algo.ts:184",
          "pc": [
            530
          ]
        },
        {
          "teal": 562,
          "source": "contracts\\BiatecConfigProvider.algo.ts:184",
          "pc": [
            531
          ]
        },
        {
          "teal": 570,
          "source": "contracts\\BiatecConfigProvider.algo.ts:184",
          "pc": [
            532,
            533,
            534
          ]
        },
        {
          "teal": 577,
          "source": "contracts\\BiatecConfigProvider.algo.ts:194",
          "pc": [
            535,
            536
          ]
        },
        {
          "teal": 578,
          "source": "contracts\\BiatecConfigProvider.algo.ts:194",
          "pc": [
            537
          ]
        },
        {
          "teal": 579,
          "source": "contracts\\BiatecConfigProvider.algo.ts:194",
          "pc": [
            538
          ]
        },
        {
          "teal": 580,
          "source": "contracts\\BiatecConfigProvider.algo.ts:194",
          "pc": [
            539
          ]
        },
        {
          "teal": 583,
          "source": "contracts\\BiatecConfigProvider.algo.ts:193",
          "errorMessage": "Only fee executor setup in the config can take the collected fees",
          "pc": [
            540
          ]
        },
        {
          "teal": 595,
          "source": "contracts\\BiatecConfigProvider.algo.ts:197",
          "pc": [
            541
          ]
        },
        {
          "teal": 596,
          "source": "contracts\\BiatecConfigProvider.algo.ts:197",
          "pc": [
            542,
            543
          ]
        },
        {
          "teal": 597,
          "source": "contracts\\BiatecConfigProvider.algo.ts:197",
          "pc": [
            544,
            545
          ]
        },
        {
          "teal": 601,
          "source": "contracts\\BiatecConfigProvider.algo.ts:198",
          "pc": [
            546,
            547
          ]
        },
        {
          "teal": 602,
          "source": "contracts\\BiatecConfigProvider.algo.ts:198",
          "pc": [
            548,
            549
          ]
        },
        {
          "teal": 606,
          "source": "contracts\\BiatecConfigProvider.algo.ts:199",
          "pc": [
            550,
            551
          ]
        },
        {
          "teal": 607,
          "source": "contracts\\BiatecConfigProvider.algo.ts:199",
          "pc": [
            552,
            553
          ]
        },
        {
          "teal": 611,
          "source": "contracts\\BiatecConfigProvider.algo.ts:200",
          "pc": [
            554,
            555
          ]
        },
        {
          "teal": 612,
          "source": "contracts\\BiatecConfigProvider.algo.ts:200",
          "pc": [
            556,
            557
          ]
        },
        {
          "teal": 616,
          "source": "contracts\\BiatecConfigProvider.algo.ts:201",
          "pc": [
            558,
            559
          ]
        },
        {
          "teal": 617,
          "source": "contracts\\BiatecConfigProvider.algo.ts:201",
          "pc": [
            560,
            561
          ]
        },
        {
          "teal": 621,
          "source": "contracts\\BiatecConfigProvider.algo.ts:202",
          "pc": [
            562,
            563
          ]
        },
        {
          "teal": 622,
          "source": "contracts\\BiatecConfigProvider.algo.ts:202",
          "pc": [
            564,
            565
          ]
        },
        {
          "teal": 626,
          "source": "contracts\\BiatecConfigProvider.algo.ts:203",
          "pc": [
            566,
            567
          ]
        },
        {
          "teal": 627,
          "source": "contracts\\BiatecConfigProvider.algo.ts:203",
          "pc": [
            568,
            569
          ]
        },
        {
          "teal": 631,
          "source": "contracts\\BiatecConfigProvider.algo.ts:204",
          "pc": [
            570,
            571
          ]
        },
        {
          "teal": 632,
          "source": "contracts\\BiatecConfigProvider.algo.ts:204",
          "pc": [
            572,
            573
          ]
        },
        {
          "teal": 635,
          "source": "contracts\\BiatecConfigProvider.algo.ts:197",
          "pc": [
            574
          ]
        },
        {
          "teal": 636,
          "source": "contracts\\BiatecConfigProvider.algo.ts:184",
          "pc": [
            575
          ]
        },
        {
          "teal": 641,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            576,
            577,
            578,
            579,
            580,
            581
          ]
        },
        {
          "teal": 644,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            582,
            583,
            584
          ]
        },
        {
          "teal": 645,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            585
          ]
        },
        {
          "teal": 648,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            586,
            587,
            588
          ]
        },
        {
          "teal": 649,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            589
          ]
        },
        {
          "teal": 652,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            590,
            591,
            592
          ]
        },
        {
          "teal": 653,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            593
          ]
        },
        {
          "teal": 654,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            594
          ]
        },
        {
          "teal": 655,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            595
          ]
        },
        {
          "teal": 656,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            596
          ]
        },
        {
          "teal": 657,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            597
          ]
        },
        {
          "teal": 668,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            598,
            599,
            600
          ]
        },
        {
          "teal": 675,
          "source": "contracts\\BiatecConfigProvider.algo.ts:218",
          "pc": [
            601,
            602
          ]
        },
        {
          "teal": 676,
          "source": "contracts\\BiatecConfigProvider.algo.ts:218",
          "pc": [
            603
          ]
        },
        {
          "teal": 677,
          "source": "contracts\\BiatecConfigProvider.algo.ts:218",
          "pc": [
            604
          ]
        },
        {
          "teal": 678,
          "source": "contracts\\BiatecConfigProvider.algo.ts:218",
          "pc": [
            605
          ]
        },
        {
          "teal": 681,
          "source": "contracts\\BiatecConfigProvider.algo.ts:217",
          "errorMessage": "Only fee executor setup in the config can take the collected fees",
          "pc": [
            606
          ]
        },
        {
          "teal": 685,
          "source": "contracts\\BiatecConfigProvider.algo.ts:222",
          "pc": [
            607,
            608
          ]
        },
        {
          "teal": 686,
          "source": "contracts\\BiatecConfigProvider.algo.ts:222",
          "pc": [
            609,
            610
          ]
        },
        {
          "teal": 687,
          "source": "contracts\\BiatecConfigProvider.algo.ts:222",
          "pc": [
            611,
            612
          ]
        },
        {
          "teal": 688,
          "source": "contracts\\BiatecConfigProvider.algo.ts:222",
          "pc": [
            613,
            614,
            615
          ]
        },
        {
          "teal": 692,
          "source": "contracts\\BiatecConfigProvider.algo.ts:224",
          "pc": [
            616,
            617
          ]
        },
        {
          "teal": 693,
          "source": "contracts\\BiatecConfigProvider.algo.ts:216",
          "pc": [
            618
          ]
        },
        {
          "teal": 702,
          "source": "contracts\\BiatecConfigProvider.algo.ts:233",
          "pc": [
            619,
            620,
            621
          ]
        },
        {
          "teal": 707,
          "source": "contracts\\BiatecConfigProvider.algo.ts:234",
          "pc": [
            622,
            623
          ]
        },
        {
          "teal": 708,
          "source": "contracts\\BiatecConfigProvider.algo.ts:234",
          "pc": [
            624
          ]
        },
        {
          "teal": 709,
          "source": "contracts\\BiatecConfigProvider.algo.ts:234",
          "pc": [
            625
          ]
        },
        {
          "teal": 710,
          "source": "contracts\\BiatecConfigProvider.algo.ts:234",
          "pc": [
            626,
            627,
            628
          ]
        },
        {
          "teal": 719,
          "source": "contracts\\BiatecConfigProvider.algo.ts:235",
          "pc": [
            629
          ]
        },
        {
          "teal": 720,
          "source": "contracts\\BiatecConfigProvider.algo.ts:235",
          "pc": [
            630
          ]
        },
        {
          "teal": 721,
          "source": "contracts\\BiatecConfigProvider.algo.ts:235",
          "pc": [
            631,
            632
          ]
        },
        {
          "teal": 725,
          "source": "contracts\\BiatecConfigProvider.algo.ts:236",
          "pc": [
            633,
            634
          ]
        },
        {
          "teal": 726,
          "source": "contracts\\BiatecConfigProvider.algo.ts:236",
          "pc": [
            635,
            636
          ]
        },
        {
          "teal": 730,
          "source": "contracts\\BiatecConfigProvider.algo.ts:237",
          "pc": [
            637,
            638
          ]
        },
        {
          "teal": 731,
          "source": "contracts\\BiatecConfigProvider.algo.ts:237",
          "pc": [
            639,
            640
          ]
        },
        {
          "teal": 735,
          "source": "contracts\\BiatecConfigProvider.algo.ts:238",
          "pc": [
            641
          ]
        },
        {
          "teal": 736,
          "source": "contracts\\BiatecConfigProvider.algo.ts:238",
          "pc": [
            642,
            643
          ]
        },
        {
          "teal": 739,
          "source": "contracts\\BiatecConfigProvider.algo.ts:235",
          "pc": [
            644
          ]
        },
        {
          "teal": 740,
          "source": "contracts\\BiatecConfigProvider.algo.ts:234",
          "pc": [
            645,
            646,
            647
          ]
        },
        {
          "teal": 750,
          "source": "contracts\\BiatecConfigProvider.algo.ts:241",
          "pc": [
            648
          ]
        },
        {
          "teal": 751,
          "source": "contracts\\BiatecConfigProvider.algo.ts:241",
          "pc": [
            649,
            650
          ]
        },
        {
          "teal": 752,
          "source": "contracts\\BiatecConfigProvider.algo.ts:241",
          "pc": [
            651,
            652
          ]
        },
        {
          "teal": 756,
          "source": "contracts\\BiatecConfigProvider.algo.ts:242",
          "pc": [
            653,
            654
          ]
        },
        {
          "teal": 757,
          "source": "contracts\\BiatecConfigProvider.algo.ts:242",
          "pc": [
            655,
            656
          ]
        },
        {
          "teal": 761,
          "source": "contracts\\BiatecConfigProvider.algo.ts:243",
          "pc": [
            657,
            658
          ]
        },
        {
          "teal": 762,
          "source": "contracts\\BiatecConfigProvider.algo.ts:243",
          "pc": [
            659,
            660
          ]
        },
        {
          "teal": 766,
          "source": "contracts\\BiatecConfigProvider.algo.ts:244",
          "pc": [
            661,
            662
          ]
        },
        {
          "teal": 767,
          "source": "contracts\\BiatecConfigProvider.algo.ts:244",
          "pc": [
            663,
            664
          ]
        },
        {
          "teal": 771,
          "source": "contracts\\BiatecConfigProvider.algo.ts:245",
          "pc": [
            665
          ]
        },
        {
          "teal": 772,
          "source": "contracts\\BiatecConfigProvider.algo.ts:245",
          "pc": [
            666,
            667
          ]
        },
        {
          "teal": 775,
          "source": "contracts\\BiatecConfigProvider.algo.ts:241",
          "pc": [
            668
          ]
        },
        {
          "teal": 778,
          "source": "contracts\\BiatecConfigProvider.algo.ts:233",
          "pc": [
            669
          ]
        },
        {
          "teal": 781,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            670,
            671,
            672,
            673,
            674,
            675
          ]
        },
        {
          "teal": 782,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            676,
            677,
            678
          ]
        },
        {
          "teal": 783,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            679,
            680,
            681,
            682
          ]
        },
        {
          "teal": 786,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            683
          ]
        },
        {
          "teal": 789,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            684,
            685,
            686,
            687,
            688,
            689
          ]
        },
        {
          "teal": 790,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            690,
            691,
            692,
            693,
            694,
            695
          ]
        },
        {
          "teal": 791,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            696,
            697,
            698,
            699,
            700,
            701
          ]
        },
        {
          "teal": 792,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            702,
            703,
            704,
            705,
            706,
            707
          ]
        },
        {
          "teal": 793,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            708,
            709,
            710,
            711,
            712,
            713
          ]
        },
        {
          "teal": 794,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            714,
            715,
            716,
            717,
            718,
            719
          ]
        },
        {
          "teal": 795,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            720,
            721,
            722,
            723,
            724,
            725
          ]
        },
        {
          "teal": 796,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            726,
            727,
            728,
            729,
            730,
            731
          ]
        },
        {
          "teal": 797,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            732,
            733,
            734,
            735,
            736,
            737
          ]
        },
        {
          "teal": 798,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            738,
            739,
            740,
            741,
            742,
            743
          ]
        },
        {
          "teal": 799,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            744,
            745,
            746,
            747,
            748,
            749
          ]
        },
        {
          "teal": 800,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            750,
            751,
            752
          ]
        },
        {
          "teal": 801,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            753,
            754,
            755,
            756,
            757,
            758,
            759,
            760,
            761,
            762,
            763,
            764,
            765,
            766,
            767,
            768,
            769,
            770,
            771,
            772,
            773,
            774,
            775,
            776
          ]
        },
        {
          "teal": 804,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            777
          ]
        },
        {
          "teal": 807,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            778,
            779,
            780,
            781,
            782,
            783
          ]
        },
        {
          "teal": 808,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            784,
            785,
            786
          ]
        },
        {
          "teal": 809,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "pc": [
            787,
            788,
            789,
            790
          ]
        },
        {
          "teal": 812,
          "source": "contracts\\BiatecConfigProvider.algo.ts:6",
          "errorMessage": "this contract does not implement the given ABI method for call UpdateApplication",
          "pc": [
            791
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADASAAJgwBdQJlZgFlFkJJQVRFQy1DT05GSUctMDEtMDItMDEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuaygAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIFc2N2ZXIBZwFzAWYBaQFwMRgUgQYLMRkIjQwCEQAAAAAAAAJvAAACAwAAAAAAAAAAAAAAiAACIkOKAAAnBitnKjEAZycHMQBnKDEAZykxAGcnCCRniTYaAVcCAIgAAiJDigEAMQAoZBJEK7CL/7AnBitniTYaAxc2GgIXNhoBSRUjEkSIAAIiQ4oDADEAKGQSRIv/JwQnBaKmRCcJi/9nJwqL/mcnC4v9Z4k2GgFJFSMSRIgAAiJDigEAMQAoZBJEKIv/Z4k2GgEXiAACIkOKAQAxAChkEkQnCIv/Z4k2GgFJFSMSRIgAAiJDigEAMQAoZBJEJweL/2eJNhoBSRUjEkSIAAIiQ4oBADEAKGQSRCqL/2eJNhoBSRUjEkSIAAIiQ4oBADEAKmQSRCmL/2eJNhoBF4gAAiJDigEAMQAoZBJEJwqL/2eJNhoBF4gAAiJDigEAMQAoZBJEJwuL/2eJNhoBSRUjEkSIAAIiQ4oBADEAKmQSRIv/JwQnBaKmRCcJi/9niTYaBxc2GgYXNhoFFzYaBBc2GgNXAgA2GgJXAgA2GgFXAgCIAAIiQ4oHADEAKWQSRLGBArIQi/6yC4v9sj+L/LIMi/qyDov7sg2L/7IKi/myAbOJgAQVH3x1NhoCFzYaAReIAAUWULAiQ4oCATEAKWQSRIv+i/8xAIgAA4v+iYoDAIv+JBJBABOxIrIQi/+yB4v9sggksgGzQgAVsYEEshCL/7IUi/6yEYv9shIksgGziYAEuER7NjYaAI4B/fEAgARJXOftgAS/wghggAQM3BD8gARrlV9LgASLGHs9gARQ4H2IgAS6vh4RgATFi52kgATKNEo0gARK5unLgASHKDcwNhoAjgv90/4K/iX+Pf5Z/nT+j/6n/r/+5P83AIAEaTbGLzYaAI4B/acA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 3,
      "patch": 0,
      "commitHash": "3e5d694b+"
    }
  }
}