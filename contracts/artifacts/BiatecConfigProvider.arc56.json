{
  "name": "BiatecConfigProvider",
  "desc": "",
  "methods": [
    {
      "name": "createApplication",
      "desc": "Initial setup",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    },
    {
      "name": "updateApplication",
      "desc": "addressUdpater from global biatec configuration is allowed to update application",
      "args": [
        {
          "name": "newVersion",
          "type": "byte[]"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "UpdateApplication"
        ]
      }
    },
    {
      "name": "bootstrap",
      "desc": "Setup the contract",
      "args": [
        {
          "name": "biatecFee",
          "type": "uint256",
          "desc": "Biatec fees"
        },
        {
          "name": "appBiatecIdentityProvider",
          "type": "uint64"
        },
        {
          "name": "appBiatecPoolProvider",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setAddressUdpater",
      "desc": "Top secret account with which it is possible update contracts or identity provider",
      "args": [
        {
          "name": "a",
          "type": "address",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setPaused",
      "desc": "Kill switch. In the extreme case all services (deposit, trading, withdrawal, identity modifications and more) can be suspended.",
      "args": [
        {
          "name": "a",
          "type": "uint64",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setAddressGov",
      "desc": "Execution address with which it is possible to opt in for governance",
      "args": [
        {
          "name": "a",
          "type": "address",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setAddressExecutive",
      "desc": "Execution address with which it is possible to change global biatec fees",
      "args": [
        {
          "name": "a",
          "type": "address",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setAddressExecutiveFee",
      "desc": "Execution fee address is address which can take fees from pools.",
      "args": [
        {
          "name": "a",
          "type": "address",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setBiatecIdentity",
      "desc": "App identity setter",
      "args": [
        {
          "name": "a",
          "type": "uint64",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setBiatecPool",
      "desc": "App identity setter",
      "args": [
        {
          "name": "a",
          "type": "uint64",
          "desc": "Address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setBiatecFee",
      "desc": "Fees in 9 decimals. 1_000_000_000 = 100%\nFees in 9 decimals. 10_000_000 = 1%\nFees in 9 decimals. 100_000 = 0,01%\n\n\nFees are respectful from the all fees taken to the LP providers. If LPs charge 1% fee, and biatec charges 10% fee, LP will receive 0.09% fee and biatec 0.01% fee",
      "args": [
        {
          "name": "biatecFee",
          "type": "uint256",
          "desc": "Fee"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "sendOnlineKeyRegistration",
      "desc": "addressExecutiveFee can perfom key registration for this LP pool\n\n\nOnly addressExecutiveFee is allowed to execute this method.",
      "args": [
        {
          "name": "votePK",
          "type": "byte[]"
        },
        {
          "name": "selectionPK",
          "type": "byte[]"
        },
        {
          "name": "stateProofPK",
          "type": "byte[]"
        },
        {
          "name": "voteFirst",
          "type": "uint64"
        },
        {
          "name": "voteLast",
          "type": "uint64"
        },
        {
          "name": "voteKeyDilution",
          "type": "uint64"
        },
        {
          "name": "fee",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "withdrawExcessAssets",
      "desc": "If someone deposits excess assets to this smart contract biatec can use them.\n\n\nOnly addressExecutiveFee is allowed to execute this method.",
      "args": [
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset to withdraw. If native token, then zero"
        },
        {
          "name": "amount",
          "type": "uint64",
          "desc": "Amount of the asset to be withdrawn"
        }
      ],
      "returns": {
        "type": "uint64"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 6,
        "ints": 3
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "addressUdpater": {
          "key": "dQ==",
          "keyType": "AVMBytes",
          "valueType": "address"
        },
        "addressGov": {
          "key": "Zw==",
          "keyType": "AVMBytes",
          "valueType": "address"
        },
        "addressExecutive": {
          "key": "ZQ==",
          "keyType": "AVMBytes",
          "valueType": "address"
        },
        "addressExecutiveFee": {
          "key": "ZWY=",
          "keyType": "AVMBytes",
          "valueType": "address"
        },
        "appBiatecIdentityProvider": {
          "key": "aQ==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "appBiatecPoolProvider": {
          "key": "cA==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "suspended": {
          "key": "cw==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "biatecFee": {
          "key": "Zg==",
          "keyType": "AVMBytes",
          "valueType": "uint256"
        },
        "version": {
          "key": "c2N2ZXI=",
          "keyType": "AVMBytes",
          "valueType": "AVMBytes"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        {
          "teal": 3,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96
          ]
        },
        {
          "teal": 15,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            97,
            98
          ]
        },
        {
          "teal": 16,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            99
          ]
        },
        {
          "teal": 17,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            100,
            101
          ]
        },
        {
          "teal": 18,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            102
          ]
        },
        {
          "teal": 19,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            103,
            104
          ]
        },
        {
          "teal": 20,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            105
          ]
        },
        {
          "teal": 21,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131
          ]
        },
        {
          "teal": 25,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            132
          ]
        },
        {
          "teal": 30,
          "source": "contracts/BiatecConfigProvider.algo.ts:60",
          "pc": [
            133,
            134,
            135
          ]
        },
        {
          "teal": 31,
          "source": "contracts/BiatecConfigProvider.algo.ts:60",
          "pc": [
            136
          ]
        },
        {
          "teal": 32,
          "source": "contracts/BiatecConfigProvider.algo.ts:60",
          "pc": [
            137
          ]
        },
        {
          "teal": 38,
          "source": "contracts/BiatecConfigProvider.algo.ts:60",
          "pc": [
            138,
            139,
            140
          ]
        },
        {
          "teal": 42,
          "source": "contracts/BiatecConfigProvider.algo.ts:61",
          "pc": [
            141,
            142
          ]
        },
        {
          "teal": 43,
          "source": "contracts/BiatecConfigProvider.algo.ts:61",
          "pc": [
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166
          ]
        },
        {
          "teal": 44,
          "source": "contracts/BiatecConfigProvider.algo.ts:61",
          "pc": [
            167
          ]
        },
        {
          "teal": 48,
          "source": "contracts/BiatecConfigProvider.algo.ts:62",
          "pc": [
            168
          ]
        },
        {
          "teal": 49,
          "source": "contracts/BiatecConfigProvider.algo.ts:62",
          "pc": [
            169,
            170
          ]
        },
        {
          "teal": 50,
          "source": "contracts/BiatecConfigProvider.algo.ts:62",
          "pc": [
            171
          ]
        },
        {
          "teal": 54,
          "source": "contracts/BiatecConfigProvider.algo.ts:63",
          "pc": [
            172,
            173
          ]
        },
        {
          "teal": 55,
          "source": "contracts/BiatecConfigProvider.algo.ts:63",
          "pc": [
            174,
            175
          ]
        },
        {
          "teal": 56,
          "source": "contracts/BiatecConfigProvider.algo.ts:63",
          "pc": [
            176
          ]
        },
        {
          "teal": 60,
          "source": "contracts/BiatecConfigProvider.algo.ts:64",
          "pc": [
            177
          ]
        },
        {
          "teal": 61,
          "source": "contracts/BiatecConfigProvider.algo.ts:64",
          "pc": [
            178,
            179
          ]
        },
        {
          "teal": 62,
          "source": "contracts/BiatecConfigProvider.algo.ts:64",
          "pc": [
            180
          ]
        },
        {
          "teal": 66,
          "source": "contracts/BiatecConfigProvider.algo.ts:65",
          "pc": [
            181
          ]
        },
        {
          "teal": 67,
          "source": "contracts/BiatecConfigProvider.algo.ts:65",
          "pc": [
            182,
            183
          ]
        },
        {
          "teal": 68,
          "source": "contracts/BiatecConfigProvider.algo.ts:65",
          "pc": [
            184
          ]
        },
        {
          "teal": 72,
          "source": "contracts/BiatecConfigProvider.algo.ts:66",
          "pc": [
            185,
            186
          ]
        },
        {
          "teal": 73,
          "source": "contracts/BiatecConfigProvider.algo.ts:66",
          "pc": [
            187
          ]
        },
        {
          "teal": 74,
          "source": "contracts/BiatecConfigProvider.algo.ts:66",
          "pc": [
            188
          ]
        },
        {
          "teal": 75,
          "source": "contracts/BiatecConfigProvider.algo.ts:60",
          "pc": [
            189
          ]
        },
        {
          "teal": 80,
          "source": "contracts/BiatecConfigProvider.algo.ts:72",
          "pc": [
            190,
            191,
            192
          ]
        },
        {
          "teal": 81,
          "source": "contracts/BiatecConfigProvider.algo.ts:72",
          "pc": [
            193,
            194,
            195
          ]
        },
        {
          "teal": 84,
          "source": "contracts/BiatecConfigProvider.algo.ts:72",
          "pc": [
            196,
            197,
            198
          ]
        },
        {
          "teal": 85,
          "source": "contracts/BiatecConfigProvider.algo.ts:72",
          "pc": [
            199
          ]
        },
        {
          "teal": 86,
          "source": "contracts/BiatecConfigProvider.algo.ts:72",
          "pc": [
            200
          ]
        },
        {
          "teal": 92,
          "source": "contracts/BiatecConfigProvider.algo.ts:72",
          "pc": [
            201,
            202,
            203
          ]
        },
        {
          "teal": 99,
          "source": "contracts/BiatecConfigProvider.algo.ts:74",
          "pc": [
            204,
            205
          ]
        },
        {
          "teal": 100,
          "source": "contracts/BiatecConfigProvider.algo.ts:74",
          "pc": [
            206
          ]
        },
        {
          "teal": 101,
          "source": "contracts/BiatecConfigProvider.algo.ts:74",
          "pc": [
            207
          ]
        },
        {
          "teal": 102,
          "source": "contracts/BiatecConfigProvider.algo.ts:74",
          "pc": [
            208
          ]
        },
        {
          "teal": 105,
          "source": "contracts/BiatecConfigProvider.algo.ts:73",
          "errorMessage": "Only addressUdpater setup in the config can update application",
          "pc": [
            209
          ]
        },
        {
          "teal": 109,
          "source": "contracts/BiatecConfigProvider.algo.ts:77",
          "pc": [
            210,
            211
          ]
        },
        {
          "teal": 110,
          "source": "contracts/BiatecConfigProvider.algo.ts:77",
          "pc": [
            212,
            213
          ]
        },
        {
          "teal": 111,
          "source": "contracts/BiatecConfigProvider.algo.ts:77",
          "pc": [
            214
          ]
        },
        {
          "teal": 112,
          "source": "contracts/BiatecConfigProvider.algo.ts:72",
          "pc": [
            215
          ]
        },
        {
          "teal": 117,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            216,
            217,
            218
          ]
        },
        {
          "teal": 118,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            219
          ]
        },
        {
          "teal": 121,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            220,
            221,
            222
          ]
        },
        {
          "teal": 122,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            223
          ]
        },
        {
          "teal": 125,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            224,
            225,
            226
          ]
        },
        {
          "teal": 126,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            227
          ]
        },
        {
          "teal": 127,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            228
          ]
        },
        {
          "teal": 128,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            229
          ]
        },
        {
          "teal": 129,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            230
          ]
        },
        {
          "teal": 132,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "errorMessage": "argument 2 (biatecFee) for bootstrap must be a uint256",
          "pc": [
            231
          ]
        },
        {
          "teal": 135,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            232,
            233,
            234
          ]
        },
        {
          "teal": 136,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            235
          ]
        },
        {
          "teal": 137,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            236
          ]
        },
        {
          "teal": 144,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            237,
            238,
            239
          ]
        },
        {
          "teal": 148,
          "source": "contracts/BiatecConfigProvider.algo.ts:85",
          "pc": [
            240,
            241
          ]
        },
        {
          "teal": 149,
          "source": "contracts/BiatecConfigProvider.algo.ts:85",
          "pc": [
            242
          ]
        },
        {
          "teal": 150,
          "source": "contracts/BiatecConfigProvider.algo.ts:85",
          "pc": [
            243
          ]
        },
        {
          "teal": 151,
          "source": "contracts/BiatecConfigProvider.algo.ts:85",
          "pc": [
            244
          ]
        },
        {
          "teal": 154,
          "source": "contracts/BiatecConfigProvider.algo.ts:85",
          "errorMessage": "Only updater can call bootstrap method",
          "pc": [
            245
          ]
        },
        {
          "teal": 158,
          "source": "contracts/BiatecConfigProvider.algo.ts:86",
          "pc": [
            246,
            247
          ]
        },
        {
          "teal": 159,
          "source": "contracts/BiatecConfigProvider.algo.ts:86",
          "pc": [
            248
          ]
        },
        {
          "teal": 160,
          "source": "contracts/BiatecConfigProvider.algo.ts:86",
          "pc": [
            249,
            250
          ]
        },
        {
          "teal": 161,
          "source": "contracts/BiatecConfigProvider.algo.ts:86",
          "pc": [
            251
          ]
        },
        {
          "teal": 162,
          "source": "contracts/BiatecConfigProvider.algo.ts:86",
          "pc": [
            252
          ]
        },
        {
          "teal": 165,
          "source": "contracts/BiatecConfigProvider.algo.ts:86",
          "errorMessage": "Biatec cannot set fees higher then 50% of lp fees",
          "pc": [
            253
          ]
        },
        {
          "teal": 169,
          "source": "contracts/BiatecConfigProvider.algo.ts:87",
          "pc": [
            254,
            255
          ]
        },
        {
          "teal": 170,
          "source": "contracts/BiatecConfigProvider.algo.ts:87",
          "pc": [
            256,
            257
          ]
        },
        {
          "teal": 171,
          "source": "contracts/BiatecConfigProvider.algo.ts:87",
          "pc": [
            258
          ]
        },
        {
          "teal": 175,
          "source": "contracts/BiatecConfigProvider.algo.ts:88",
          "pc": [
            259,
            260
          ]
        },
        {
          "teal": 176,
          "source": "contracts/BiatecConfigProvider.algo.ts:88",
          "pc": [
            261,
            262
          ]
        },
        {
          "teal": 177,
          "source": "contracts/BiatecConfigProvider.algo.ts:88",
          "pc": [
            263
          ]
        },
        {
          "teal": 181,
          "source": "contracts/BiatecConfigProvider.algo.ts:89",
          "pc": [
            264,
            265
          ]
        },
        {
          "teal": 182,
          "source": "contracts/BiatecConfigProvider.algo.ts:89",
          "pc": [
            266,
            267
          ]
        },
        {
          "teal": 183,
          "source": "contracts/BiatecConfigProvider.algo.ts:89",
          "pc": [
            268
          ]
        },
        {
          "teal": 184,
          "source": "contracts/BiatecConfigProvider.algo.ts:84",
          "pc": [
            269
          ]
        },
        {
          "teal": 189,
          "source": "contracts/BiatecConfigProvider.algo.ts:97",
          "pc": [
            270,
            271,
            272
          ]
        },
        {
          "teal": 190,
          "source": "contracts/BiatecConfigProvider.algo.ts:97",
          "pc": [
            273
          ]
        },
        {
          "teal": 191,
          "source": "contracts/BiatecConfigProvider.algo.ts:97",
          "pc": [
            274
          ]
        },
        {
          "teal": 192,
          "source": "contracts/BiatecConfigProvider.algo.ts:97",
          "pc": [
            275
          ]
        },
        {
          "teal": 193,
          "source": "contracts/BiatecConfigProvider.algo.ts:97",
          "pc": [
            276
          ]
        },
        {
          "teal": 196,
          "source": "contracts/BiatecConfigProvider.algo.ts:97",
          "errorMessage": "argument 0 (a) for setAddressUdpater must be a address",
          "pc": [
            277
          ]
        },
        {
          "teal": 199,
          "source": "contracts/BiatecConfigProvider.algo.ts:97",
          "pc": [
            278,
            279,
            280
          ]
        },
        {
          "teal": 200,
          "source": "contracts/BiatecConfigProvider.algo.ts:97",
          "pc": [
            281
          ]
        },
        {
          "teal": 201,
          "source": "contracts/BiatecConfigProvider.algo.ts:97",
          "pc": [
            282
          ]
        },
        {
          "teal": 209,
          "source": "contracts/BiatecConfigProvider.algo.ts:97",
          "pc": [
            283,
            284,
            285
          ]
        },
        {
          "teal": 213,
          "source": "contracts/BiatecConfigProvider.algo.ts:98",
          "pc": [
            286,
            287
          ]
        },
        {
          "teal": 214,
          "source": "contracts/BiatecConfigProvider.algo.ts:98",
          "pc": [
            288
          ]
        },
        {
          "teal": 215,
          "source": "contracts/BiatecConfigProvider.algo.ts:98",
          "pc": [
            289
          ]
        },
        {
          "teal": 216,
          "source": "contracts/BiatecConfigProvider.algo.ts:98",
          "pc": [
            290
          ]
        },
        {
          "teal": 219,
          "source": "contracts/BiatecConfigProvider.algo.ts:98",
          "errorMessage": "Only updater can change updater address",
          "pc": [
            291
          ]
        },
        {
          "teal": 223,
          "source": "contracts/BiatecConfigProvider.algo.ts:99",
          "pc": [
            292
          ]
        },
        {
          "teal": 224,
          "source": "contracts/BiatecConfigProvider.algo.ts:99",
          "pc": [
            293,
            294
          ]
        },
        {
          "teal": 225,
          "source": "contracts/BiatecConfigProvider.algo.ts:99",
          "pc": [
            295
          ]
        },
        {
          "teal": 226,
          "source": "contracts/BiatecConfigProvider.algo.ts:97",
          "pc": [
            296
          ]
        },
        {
          "teal": 231,
          "source": "contracts/BiatecConfigProvider.algo.ts:107",
          "pc": [
            297,
            298,
            299
          ]
        },
        {
          "teal": 232,
          "source": "contracts/BiatecConfigProvider.algo.ts:107",
          "pc": [
            300
          ]
        },
        {
          "teal": 235,
          "source": "contracts/BiatecConfigProvider.algo.ts:107",
          "pc": [
            301,
            302,
            303
          ]
        },
        {
          "teal": 236,
          "source": "contracts/BiatecConfigProvider.algo.ts:107",
          "pc": [
            304
          ]
        },
        {
          "teal": 237,
          "source": "contracts/BiatecConfigProvider.algo.ts:107",
          "pc": [
            305
          ]
        },
        {
          "teal": 245,
          "source": "contracts/BiatecConfigProvider.algo.ts:107",
          "pc": [
            306,
            307,
            308
          ]
        },
        {
          "teal": 249,
          "source": "contracts/BiatecConfigProvider.algo.ts:108",
          "pc": [
            309,
            310
          ]
        },
        {
          "teal": 250,
          "source": "contracts/BiatecConfigProvider.algo.ts:108",
          "pc": [
            311
          ]
        },
        {
          "teal": 251,
          "source": "contracts/BiatecConfigProvider.algo.ts:108",
          "pc": [
            312
          ]
        },
        {
          "teal": 252,
          "source": "contracts/BiatecConfigProvider.algo.ts:108",
          "pc": [
            313
          ]
        },
        {
          "teal": 255,
          "source": "contracts/BiatecConfigProvider.algo.ts:108",
          "errorMessage": "Only updater can pause and unpause the biatec services",
          "pc": [
            314
          ]
        },
        {
          "teal": 259,
          "source": "contracts/BiatecConfigProvider.algo.ts:109",
          "pc": [
            315,
            316
          ]
        },
        {
          "teal": 260,
          "source": "contracts/BiatecConfigProvider.algo.ts:109",
          "pc": [
            317,
            318
          ]
        },
        {
          "teal": 261,
          "source": "contracts/BiatecConfigProvider.algo.ts:109",
          "pc": [
            319
          ]
        },
        {
          "teal": 262,
          "source": "contracts/BiatecConfigProvider.algo.ts:107",
          "pc": [
            320
          ]
        },
        {
          "teal": 267,
          "source": "contracts/BiatecConfigProvider.algo.ts:117",
          "pc": [
            321,
            322,
            323
          ]
        },
        {
          "teal": 268,
          "source": "contracts/BiatecConfigProvider.algo.ts:117",
          "pc": [
            324
          ]
        },
        {
          "teal": 269,
          "source": "contracts/BiatecConfigProvider.algo.ts:117",
          "pc": [
            325
          ]
        },
        {
          "teal": 270,
          "source": "contracts/BiatecConfigProvider.algo.ts:117",
          "pc": [
            326
          ]
        },
        {
          "teal": 271,
          "source": "contracts/BiatecConfigProvider.algo.ts:117",
          "pc": [
            327
          ]
        },
        {
          "teal": 274,
          "source": "contracts/BiatecConfigProvider.algo.ts:117",
          "errorMessage": "argument 0 (a) for setAddressGov must be a address",
          "pc": [
            328
          ]
        },
        {
          "teal": 277,
          "source": "contracts/BiatecConfigProvider.algo.ts:117",
          "pc": [
            329,
            330,
            331
          ]
        },
        {
          "teal": 278,
          "source": "contracts/BiatecConfigProvider.algo.ts:117",
          "pc": [
            332
          ]
        },
        {
          "teal": 279,
          "source": "contracts/BiatecConfigProvider.algo.ts:117",
          "pc": [
            333
          ]
        },
        {
          "teal": 287,
          "source": "contracts/BiatecConfigProvider.algo.ts:117",
          "pc": [
            334,
            335,
            336
          ]
        },
        {
          "teal": 291,
          "source": "contracts/BiatecConfigProvider.algo.ts:118",
          "pc": [
            337,
            338
          ]
        },
        {
          "teal": 292,
          "source": "contracts/BiatecConfigProvider.algo.ts:118",
          "pc": [
            339
          ]
        },
        {
          "teal": 293,
          "source": "contracts/BiatecConfigProvider.algo.ts:118",
          "pc": [
            340
          ]
        },
        {
          "teal": 294,
          "source": "contracts/BiatecConfigProvider.algo.ts:118",
          "pc": [
            341
          ]
        },
        {
          "teal": 297,
          "source": "contracts/BiatecConfigProvider.algo.ts:118",
          "errorMessage": "Only updater can change gov address",
          "pc": [
            342
          ]
        },
        {
          "teal": 301,
          "source": "contracts/BiatecConfigProvider.algo.ts:119",
          "pc": [
            343,
            344
          ]
        },
        {
          "teal": 302,
          "source": "contracts/BiatecConfigProvider.algo.ts:119",
          "pc": [
            345,
            346
          ]
        },
        {
          "teal": 303,
          "source": "contracts/BiatecConfigProvider.algo.ts:119",
          "pc": [
            347
          ]
        },
        {
          "teal": 304,
          "source": "contracts/BiatecConfigProvider.algo.ts:117",
          "pc": [
            348
          ]
        },
        {
          "teal": 309,
          "source": "contracts/BiatecConfigProvider.algo.ts:127",
          "pc": [
            349,
            350,
            351
          ]
        },
        {
          "teal": 310,
          "source": "contracts/BiatecConfigProvider.algo.ts:127",
          "pc": [
            352
          ]
        },
        {
          "teal": 311,
          "source": "contracts/BiatecConfigProvider.algo.ts:127",
          "pc": [
            353
          ]
        },
        {
          "teal": 312,
          "source": "contracts/BiatecConfigProvider.algo.ts:127",
          "pc": [
            354
          ]
        },
        {
          "teal": 313,
          "source": "contracts/BiatecConfigProvider.algo.ts:127",
          "pc": [
            355
          ]
        },
        {
          "teal": 316,
          "source": "contracts/BiatecConfigProvider.algo.ts:127",
          "errorMessage": "argument 0 (a) for setAddressExecutive must be a address",
          "pc": [
            356
          ]
        },
        {
          "teal": 319,
          "source": "contracts/BiatecConfigProvider.algo.ts:127",
          "pc": [
            357,
            358,
            359
          ]
        },
        {
          "teal": 320,
          "source": "contracts/BiatecConfigProvider.algo.ts:127",
          "pc": [
            360
          ]
        },
        {
          "teal": 321,
          "source": "contracts/BiatecConfigProvider.algo.ts:127",
          "pc": [
            361
          ]
        },
        {
          "teal": 329,
          "source": "contracts/BiatecConfigProvider.algo.ts:127",
          "pc": [
            362,
            363,
            364
          ]
        },
        {
          "teal": 333,
          "source": "contracts/BiatecConfigProvider.algo.ts:128",
          "pc": [
            365,
            366
          ]
        },
        {
          "teal": 334,
          "source": "contracts/BiatecConfigProvider.algo.ts:128",
          "pc": [
            367
          ]
        },
        {
          "teal": 335,
          "source": "contracts/BiatecConfigProvider.algo.ts:128",
          "pc": [
            368
          ]
        },
        {
          "teal": 336,
          "source": "contracts/BiatecConfigProvider.algo.ts:128",
          "pc": [
            369
          ]
        },
        {
          "teal": 339,
          "source": "contracts/BiatecConfigProvider.algo.ts:128",
          "errorMessage": "Only updater can change addressExecutive",
          "pc": [
            370
          ]
        },
        {
          "teal": 343,
          "source": "contracts/BiatecConfigProvider.algo.ts:129",
          "pc": [
            371
          ]
        },
        {
          "teal": 344,
          "source": "contracts/BiatecConfigProvider.algo.ts:129",
          "pc": [
            372,
            373
          ]
        },
        {
          "teal": 345,
          "source": "contracts/BiatecConfigProvider.algo.ts:129",
          "pc": [
            374
          ]
        },
        {
          "teal": 346,
          "source": "contracts/BiatecConfigProvider.algo.ts:127",
          "pc": [
            375
          ]
        },
        {
          "teal": 351,
          "source": "contracts/BiatecConfigProvider.algo.ts:137",
          "pc": [
            376,
            377,
            378
          ]
        },
        {
          "teal": 352,
          "source": "contracts/BiatecConfigProvider.algo.ts:137",
          "pc": [
            379
          ]
        },
        {
          "teal": 353,
          "source": "contracts/BiatecConfigProvider.algo.ts:137",
          "pc": [
            380
          ]
        },
        {
          "teal": 354,
          "source": "contracts/BiatecConfigProvider.algo.ts:137",
          "pc": [
            381
          ]
        },
        {
          "teal": 355,
          "source": "contracts/BiatecConfigProvider.algo.ts:137",
          "pc": [
            382
          ]
        },
        {
          "teal": 358,
          "source": "contracts/BiatecConfigProvider.algo.ts:137",
          "errorMessage": "argument 0 (a) for setAddressExecutiveFee must be a address",
          "pc": [
            383
          ]
        },
        {
          "teal": 361,
          "source": "contracts/BiatecConfigProvider.algo.ts:137",
          "pc": [
            384,
            385,
            386
          ]
        },
        {
          "teal": 362,
          "source": "contracts/BiatecConfigProvider.algo.ts:137",
          "pc": [
            387
          ]
        },
        {
          "teal": 363,
          "source": "contracts/BiatecConfigProvider.algo.ts:137",
          "pc": [
            388
          ]
        },
        {
          "teal": 371,
          "source": "contracts/BiatecConfigProvider.algo.ts:137",
          "pc": [
            389,
            390,
            391
          ]
        },
        {
          "teal": 375,
          "source": "contracts/BiatecConfigProvider.algo.ts:138",
          "pc": [
            392,
            393
          ]
        },
        {
          "teal": 376,
          "source": "contracts/BiatecConfigProvider.algo.ts:138",
          "pc": [
            394
          ]
        },
        {
          "teal": 377,
          "source": "contracts/BiatecConfigProvider.algo.ts:138",
          "pc": [
            395
          ]
        },
        {
          "teal": 378,
          "source": "contracts/BiatecConfigProvider.algo.ts:138",
          "pc": [
            396
          ]
        },
        {
          "teal": 381,
          "source": "contracts/BiatecConfigProvider.algo.ts:138",
          "errorMessage": "Only addressExecutive can change fee executor address",
          "pc": [
            397
          ]
        },
        {
          "teal": 385,
          "source": "contracts/BiatecConfigProvider.algo.ts:139",
          "pc": [
            398
          ]
        },
        {
          "teal": 386,
          "source": "contracts/BiatecConfigProvider.algo.ts:139",
          "pc": [
            399,
            400
          ]
        },
        {
          "teal": 387,
          "source": "contracts/BiatecConfigProvider.algo.ts:139",
          "pc": [
            401
          ]
        },
        {
          "teal": 388,
          "source": "contracts/BiatecConfigProvider.algo.ts:137",
          "pc": [
            402
          ]
        },
        {
          "teal": 393,
          "source": "contracts/BiatecConfigProvider.algo.ts:147",
          "pc": [
            403,
            404,
            405
          ]
        },
        {
          "teal": 394,
          "source": "contracts/BiatecConfigProvider.algo.ts:147",
          "pc": [
            406
          ]
        },
        {
          "teal": 397,
          "source": "contracts/BiatecConfigProvider.algo.ts:147",
          "pc": [
            407,
            408,
            409
          ]
        },
        {
          "teal": 398,
          "source": "contracts/BiatecConfigProvider.algo.ts:147",
          "pc": [
            410
          ]
        },
        {
          "teal": 399,
          "source": "contracts/BiatecConfigProvider.algo.ts:147",
          "pc": [
            411
          ]
        },
        {
          "teal": 407,
          "source": "contracts/BiatecConfigProvider.algo.ts:147",
          "pc": [
            412,
            413,
            414
          ]
        },
        {
          "teal": 411,
          "source": "contracts/BiatecConfigProvider.algo.ts:148",
          "pc": [
            415,
            416
          ]
        },
        {
          "teal": 412,
          "source": "contracts/BiatecConfigProvider.algo.ts:148",
          "pc": [
            417
          ]
        },
        {
          "teal": 413,
          "source": "contracts/BiatecConfigProvider.algo.ts:148",
          "pc": [
            418
          ]
        },
        {
          "teal": 414,
          "source": "contracts/BiatecConfigProvider.algo.ts:148",
          "pc": [
            419
          ]
        },
        {
          "teal": 417,
          "source": "contracts/BiatecConfigProvider.algo.ts:148",
          "errorMessage": "Only updater can change appIdentityProvider",
          "pc": [
            420
          ]
        },
        {
          "teal": 421,
          "source": "contracts/BiatecConfigProvider.algo.ts:149",
          "pc": [
            421,
            422
          ]
        },
        {
          "teal": 422,
          "source": "contracts/BiatecConfigProvider.algo.ts:149",
          "pc": [
            423,
            424
          ]
        },
        {
          "teal": 423,
          "source": "contracts/BiatecConfigProvider.algo.ts:149",
          "pc": [
            425
          ]
        },
        {
          "teal": 424,
          "source": "contracts/BiatecConfigProvider.algo.ts:147",
          "pc": [
            426
          ]
        },
        {
          "teal": 429,
          "source": "contracts/BiatecConfigProvider.algo.ts:157",
          "pc": [
            427,
            428,
            429
          ]
        },
        {
          "teal": 430,
          "source": "contracts/BiatecConfigProvider.algo.ts:157",
          "pc": [
            430
          ]
        },
        {
          "teal": 433,
          "source": "contracts/BiatecConfigProvider.algo.ts:157",
          "pc": [
            431,
            432,
            433
          ]
        },
        {
          "teal": 434,
          "source": "contracts/BiatecConfigProvider.algo.ts:157",
          "pc": [
            434
          ]
        },
        {
          "teal": 435,
          "source": "contracts/BiatecConfigProvider.algo.ts:157",
          "pc": [
            435
          ]
        },
        {
          "teal": 443,
          "source": "contracts/BiatecConfigProvider.algo.ts:157",
          "pc": [
            436,
            437,
            438
          ]
        },
        {
          "teal": 447,
          "source": "contracts/BiatecConfigProvider.algo.ts:158",
          "pc": [
            439,
            440
          ]
        },
        {
          "teal": 448,
          "source": "contracts/BiatecConfigProvider.algo.ts:158",
          "pc": [
            441
          ]
        },
        {
          "teal": 449,
          "source": "contracts/BiatecConfigProvider.algo.ts:158",
          "pc": [
            442
          ]
        },
        {
          "teal": 450,
          "source": "contracts/BiatecConfigProvider.algo.ts:158",
          "pc": [
            443
          ]
        },
        {
          "teal": 453,
          "source": "contracts/BiatecConfigProvider.algo.ts:158",
          "errorMessage": "Only updater can change appPoolProvider",
          "pc": [
            444
          ]
        },
        {
          "teal": 457,
          "source": "contracts/BiatecConfigProvider.algo.ts:159",
          "pc": [
            445,
            446
          ]
        },
        {
          "teal": 458,
          "source": "contracts/BiatecConfigProvider.algo.ts:159",
          "pc": [
            447,
            448
          ]
        },
        {
          "teal": 459,
          "source": "contracts/BiatecConfigProvider.algo.ts:159",
          "pc": [
            449
          ]
        },
        {
          "teal": 460,
          "source": "contracts/BiatecConfigProvider.algo.ts:157",
          "pc": [
            450
          ]
        },
        {
          "teal": 465,
          "source": "contracts/BiatecConfigProvider.algo.ts:171",
          "pc": [
            451,
            452,
            453
          ]
        },
        {
          "teal": 466,
          "source": "contracts/BiatecConfigProvider.algo.ts:171",
          "pc": [
            454
          ]
        },
        {
          "teal": 467,
          "source": "contracts/BiatecConfigProvider.algo.ts:171",
          "pc": [
            455
          ]
        },
        {
          "teal": 468,
          "source": "contracts/BiatecConfigProvider.algo.ts:171",
          "pc": [
            456
          ]
        },
        {
          "teal": 469,
          "source": "contracts/BiatecConfigProvider.algo.ts:171",
          "pc": [
            457
          ]
        },
        {
          "teal": 472,
          "source": "contracts/BiatecConfigProvider.algo.ts:171",
          "errorMessage": "argument 0 (biatecFee) for setBiatecFee must be a uint256",
          "pc": [
            458
          ]
        },
        {
          "teal": 475,
          "source": "contracts/BiatecConfigProvider.algo.ts:171",
          "pc": [
            459,
            460,
            461
          ]
        },
        {
          "teal": 476,
          "source": "contracts/BiatecConfigProvider.algo.ts:171",
          "pc": [
            462
          ]
        },
        {
          "teal": 477,
          "source": "contracts/BiatecConfigProvider.algo.ts:171",
          "pc": [
            463
          ]
        },
        {
          "teal": 489,
          "source": "contracts/BiatecConfigProvider.algo.ts:171",
          "pc": [
            464,
            465,
            466
          ]
        },
        {
          "teal": 493,
          "source": "contracts/BiatecConfigProvider.algo.ts:172",
          "pc": [
            467,
            468
          ]
        },
        {
          "teal": 494,
          "source": "contracts/BiatecConfigProvider.algo.ts:172",
          "pc": [
            469
          ]
        },
        {
          "teal": 495,
          "source": "contracts/BiatecConfigProvider.algo.ts:172",
          "pc": [
            470
          ]
        },
        {
          "teal": 496,
          "source": "contracts/BiatecConfigProvider.algo.ts:172",
          "pc": [
            471
          ]
        },
        {
          "teal": 499,
          "source": "contracts/BiatecConfigProvider.algo.ts:172",
          "errorMessage": "Only executive address can change fees",
          "pc": [
            472
          ]
        },
        {
          "teal": 503,
          "source": "contracts/BiatecConfigProvider.algo.ts:173",
          "pc": [
            473,
            474
          ]
        },
        {
          "teal": 504,
          "source": "contracts/BiatecConfigProvider.algo.ts:173",
          "pc": [
            475
          ]
        },
        {
          "teal": 505,
          "source": "contracts/BiatecConfigProvider.algo.ts:173",
          "pc": [
            476,
            477
          ]
        },
        {
          "teal": 506,
          "source": "contracts/BiatecConfigProvider.algo.ts:173",
          "pc": [
            478
          ]
        },
        {
          "teal": 507,
          "source": "contracts/BiatecConfigProvider.algo.ts:173",
          "pc": [
            479
          ]
        },
        {
          "teal": 510,
          "source": "contracts/BiatecConfigProvider.algo.ts:173",
          "errorMessage": "Biatec cannot set fees higher then 50% of lp fees",
          "pc": [
            480
          ]
        },
        {
          "teal": 514,
          "source": "contracts/BiatecConfigProvider.algo.ts:174",
          "pc": [
            481,
            482
          ]
        },
        {
          "teal": 515,
          "source": "contracts/BiatecConfigProvider.algo.ts:174",
          "pc": [
            483,
            484
          ]
        },
        {
          "teal": 516,
          "source": "contracts/BiatecConfigProvider.algo.ts:174",
          "pc": [
            485
          ]
        },
        {
          "teal": 517,
          "source": "contracts/BiatecConfigProvider.algo.ts:171",
          "pc": [
            486
          ]
        },
        {
          "teal": 522,
          "source": "contracts/BiatecConfigProvider.algo.ts:189",
          "pc": [
            487,
            488,
            489
          ]
        },
        {
          "teal": 523,
          "source": "contracts/BiatecConfigProvider.algo.ts:189",
          "pc": [
            490
          ]
        },
        {
          "teal": 526,
          "source": "contracts/BiatecConfigProvider.algo.ts:188",
          "pc": [
            491,
            492,
            493
          ]
        },
        {
          "teal": 527,
          "source": "contracts/BiatecConfigProvider.algo.ts:188",
          "pc": [
            494
          ]
        },
        {
          "teal": 530,
          "source": "contracts/BiatecConfigProvider.algo.ts:187",
          "pc": [
            495,
            496,
            497
          ]
        },
        {
          "teal": 531,
          "source": "contracts/BiatecConfigProvider.algo.ts:187",
          "pc": [
            498
          ]
        },
        {
          "teal": 534,
          "source": "contracts/BiatecConfigProvider.algo.ts:186",
          "pc": [
            499,
            500,
            501
          ]
        },
        {
          "teal": 535,
          "source": "contracts/BiatecConfigProvider.algo.ts:186",
          "pc": [
            502
          ]
        },
        {
          "teal": 538,
          "source": "contracts/BiatecConfigProvider.algo.ts:185",
          "pc": [
            503,
            504,
            505
          ]
        },
        {
          "teal": 539,
          "source": "contracts/BiatecConfigProvider.algo.ts:185",
          "pc": [
            506,
            507,
            508
          ]
        },
        {
          "teal": 542,
          "source": "contracts/BiatecConfigProvider.algo.ts:184",
          "pc": [
            509,
            510,
            511
          ]
        },
        {
          "teal": 543,
          "source": "contracts/BiatecConfigProvider.algo.ts:184",
          "pc": [
            512,
            513,
            514
          ]
        },
        {
          "teal": 546,
          "source": "contracts/BiatecConfigProvider.algo.ts:183",
          "pc": [
            515,
            516,
            517
          ]
        },
        {
          "teal": 547,
          "source": "contracts/BiatecConfigProvider.algo.ts:183",
          "pc": [
            518,
            519,
            520
          ]
        },
        {
          "teal": 550,
          "source": "contracts/BiatecConfigProvider.algo.ts:182",
          "pc": [
            521,
            522,
            523
          ]
        },
        {
          "teal": 551,
          "source": "contracts/BiatecConfigProvider.algo.ts:182",
          "pc": [
            524
          ]
        },
        {
          "teal": 552,
          "source": "contracts/BiatecConfigProvider.algo.ts:182",
          "pc": [
            525
          ]
        },
        {
          "teal": 560,
          "source": "contracts/BiatecConfigProvider.algo.ts:182",
          "pc": [
            526,
            527,
            528
          ]
        },
        {
          "teal": 567,
          "source": "contracts/BiatecConfigProvider.algo.ts:192",
          "pc": [
            529,
            530
          ]
        },
        {
          "teal": 568,
          "source": "contracts/BiatecConfigProvider.algo.ts:192",
          "pc": [
            531
          ]
        },
        {
          "teal": 569,
          "source": "contracts/BiatecConfigProvider.algo.ts:192",
          "pc": [
            532
          ]
        },
        {
          "teal": 570,
          "source": "contracts/BiatecConfigProvider.algo.ts:192",
          "pc": [
            533
          ]
        },
        {
          "teal": 573,
          "source": "contracts/BiatecConfigProvider.algo.ts:191",
          "errorMessage": "Only fee executor setup in the config can take the collected fees",
          "pc": [
            534
          ]
        },
        {
          "teal": 585,
          "source": "contracts/BiatecConfigProvider.algo.ts:195",
          "pc": [
            535
          ]
        },
        {
          "teal": 586,
          "source": "contracts/BiatecConfigProvider.algo.ts:195",
          "pc": [
            536,
            537
          ]
        },
        {
          "teal": 587,
          "source": "contracts/BiatecConfigProvider.algo.ts:195",
          "pc": [
            538,
            539
          ]
        },
        {
          "teal": 591,
          "source": "contracts/BiatecConfigProvider.algo.ts:196",
          "pc": [
            540,
            541
          ]
        },
        {
          "teal": 592,
          "source": "contracts/BiatecConfigProvider.algo.ts:196",
          "pc": [
            542,
            543
          ]
        },
        {
          "teal": 596,
          "source": "contracts/BiatecConfigProvider.algo.ts:197",
          "pc": [
            544,
            545
          ]
        },
        {
          "teal": 597,
          "source": "contracts/BiatecConfigProvider.algo.ts:197",
          "pc": [
            546,
            547
          ]
        },
        {
          "teal": 601,
          "source": "contracts/BiatecConfigProvider.algo.ts:198",
          "pc": [
            548,
            549
          ]
        },
        {
          "teal": 602,
          "source": "contracts/BiatecConfigProvider.algo.ts:198",
          "pc": [
            550,
            551
          ]
        },
        {
          "teal": 606,
          "source": "contracts/BiatecConfigProvider.algo.ts:199",
          "pc": [
            552,
            553
          ]
        },
        {
          "teal": 607,
          "source": "contracts/BiatecConfigProvider.algo.ts:199",
          "pc": [
            554,
            555
          ]
        },
        {
          "teal": 611,
          "source": "contracts/BiatecConfigProvider.algo.ts:200",
          "pc": [
            556,
            557
          ]
        },
        {
          "teal": 612,
          "source": "contracts/BiatecConfigProvider.algo.ts:200",
          "pc": [
            558,
            559
          ]
        },
        {
          "teal": 616,
          "source": "contracts/BiatecConfigProvider.algo.ts:201",
          "pc": [
            560,
            561
          ]
        },
        {
          "teal": 617,
          "source": "contracts/BiatecConfigProvider.algo.ts:201",
          "pc": [
            562,
            563
          ]
        },
        {
          "teal": 621,
          "source": "contracts/BiatecConfigProvider.algo.ts:202",
          "pc": [
            564,
            565
          ]
        },
        {
          "teal": 622,
          "source": "contracts/BiatecConfigProvider.algo.ts:202",
          "pc": [
            566,
            567
          ]
        },
        {
          "teal": 625,
          "source": "contracts/BiatecConfigProvider.algo.ts:195",
          "pc": [
            568
          ]
        },
        {
          "teal": 626,
          "source": "contracts/BiatecConfigProvider.algo.ts:182",
          "pc": [
            569
          ]
        },
        {
          "teal": 631,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            570,
            571,
            572,
            573,
            574,
            575
          ]
        },
        {
          "teal": 634,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            576,
            577,
            578
          ]
        },
        {
          "teal": 635,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            579
          ]
        },
        {
          "teal": 638,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            580,
            581,
            582
          ]
        },
        {
          "teal": 639,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            583
          ]
        },
        {
          "teal": 642,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            584,
            585,
            586
          ]
        },
        {
          "teal": 643,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            587
          ]
        },
        {
          "teal": 644,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            588
          ]
        },
        {
          "teal": 645,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            589
          ]
        },
        {
          "teal": 646,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            590
          ]
        },
        {
          "teal": 647,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            591
          ]
        },
        {
          "teal": 658,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            592,
            593,
            594
          ]
        },
        {
          "teal": 665,
          "source": "contracts/BiatecConfigProvider.algo.ts:216",
          "pc": [
            595,
            596
          ]
        },
        {
          "teal": 666,
          "source": "contracts/BiatecConfigProvider.algo.ts:216",
          "pc": [
            597
          ]
        },
        {
          "teal": 667,
          "source": "contracts/BiatecConfigProvider.algo.ts:216",
          "pc": [
            598
          ]
        },
        {
          "teal": 668,
          "source": "contracts/BiatecConfigProvider.algo.ts:216",
          "pc": [
            599
          ]
        },
        {
          "teal": 671,
          "source": "contracts/BiatecConfigProvider.algo.ts:215",
          "errorMessage": "Only fee executor setup in the config can take the collected fees",
          "pc": [
            600
          ]
        },
        {
          "teal": 675,
          "source": "contracts/BiatecConfigProvider.algo.ts:220",
          "pc": [
            601,
            602
          ]
        },
        {
          "teal": 676,
          "source": "contracts/BiatecConfigProvider.algo.ts:220",
          "pc": [
            603,
            604
          ]
        },
        {
          "teal": 677,
          "source": "contracts/BiatecConfigProvider.algo.ts:220",
          "pc": [
            605,
            606
          ]
        },
        {
          "teal": 678,
          "source": "contracts/BiatecConfigProvider.algo.ts:220",
          "pc": [
            607,
            608,
            609
          ]
        },
        {
          "teal": 682,
          "source": "contracts/BiatecConfigProvider.algo.ts:222",
          "pc": [
            610,
            611
          ]
        },
        {
          "teal": 683,
          "source": "contracts/BiatecConfigProvider.algo.ts:214",
          "pc": [
            612
          ]
        },
        {
          "teal": 692,
          "source": "contracts/BiatecConfigProvider.algo.ts:231",
          "pc": [
            613,
            614,
            615
          ]
        },
        {
          "teal": 697,
          "source": "contracts/BiatecConfigProvider.algo.ts:232",
          "pc": [
            616,
            617
          ]
        },
        {
          "teal": 698,
          "source": "contracts/BiatecConfigProvider.algo.ts:232",
          "pc": [
            618
          ]
        },
        {
          "teal": 699,
          "source": "contracts/BiatecConfigProvider.algo.ts:232",
          "pc": [
            619
          ]
        },
        {
          "teal": 700,
          "source": "contracts/BiatecConfigProvider.algo.ts:232",
          "pc": [
            620,
            621,
            622
          ]
        },
        {
          "teal": 709,
          "source": "contracts/BiatecConfigProvider.algo.ts:233",
          "pc": [
            623
          ]
        },
        {
          "teal": 710,
          "source": "contracts/BiatecConfigProvider.algo.ts:233",
          "pc": [
            624
          ]
        },
        {
          "teal": 711,
          "source": "contracts/BiatecConfigProvider.algo.ts:233",
          "pc": [
            625,
            626
          ]
        },
        {
          "teal": 715,
          "source": "contracts/BiatecConfigProvider.algo.ts:234",
          "pc": [
            627,
            628
          ]
        },
        {
          "teal": 716,
          "source": "contracts/BiatecConfigProvider.algo.ts:234",
          "pc": [
            629,
            630
          ]
        },
        {
          "teal": 720,
          "source": "contracts/BiatecConfigProvider.algo.ts:235",
          "pc": [
            631,
            632
          ]
        },
        {
          "teal": 721,
          "source": "contracts/BiatecConfigProvider.algo.ts:235",
          "pc": [
            633,
            634
          ]
        },
        {
          "teal": 725,
          "source": "contracts/BiatecConfigProvider.algo.ts:236",
          "pc": [
            635
          ]
        },
        {
          "teal": 726,
          "source": "contracts/BiatecConfigProvider.algo.ts:236",
          "pc": [
            636,
            637
          ]
        },
        {
          "teal": 729,
          "source": "contracts/BiatecConfigProvider.algo.ts:233",
          "pc": [
            638
          ]
        },
        {
          "teal": 730,
          "source": "contracts/BiatecConfigProvider.algo.ts:232",
          "pc": [
            639,
            640,
            641
          ]
        },
        {
          "teal": 740,
          "source": "contracts/BiatecConfigProvider.algo.ts:239",
          "pc": [
            642
          ]
        },
        {
          "teal": 741,
          "source": "contracts/BiatecConfigProvider.algo.ts:239",
          "pc": [
            643,
            644
          ]
        },
        {
          "teal": 742,
          "source": "contracts/BiatecConfigProvider.algo.ts:239",
          "pc": [
            645,
            646
          ]
        },
        {
          "teal": 746,
          "source": "contracts/BiatecConfigProvider.algo.ts:240",
          "pc": [
            647,
            648
          ]
        },
        {
          "teal": 747,
          "source": "contracts/BiatecConfigProvider.algo.ts:240",
          "pc": [
            649,
            650
          ]
        },
        {
          "teal": 751,
          "source": "contracts/BiatecConfigProvider.algo.ts:241",
          "pc": [
            651,
            652
          ]
        },
        {
          "teal": 752,
          "source": "contracts/BiatecConfigProvider.algo.ts:241",
          "pc": [
            653,
            654
          ]
        },
        {
          "teal": 756,
          "source": "contracts/BiatecConfigProvider.algo.ts:242",
          "pc": [
            655,
            656
          ]
        },
        {
          "teal": 757,
          "source": "contracts/BiatecConfigProvider.algo.ts:242",
          "pc": [
            657,
            658
          ]
        },
        {
          "teal": 761,
          "source": "contracts/BiatecConfigProvider.algo.ts:243",
          "pc": [
            659
          ]
        },
        {
          "teal": 762,
          "source": "contracts/BiatecConfigProvider.algo.ts:243",
          "pc": [
            660,
            661
          ]
        },
        {
          "teal": 765,
          "source": "contracts/BiatecConfigProvider.algo.ts:239",
          "pc": [
            662
          ]
        },
        {
          "teal": 768,
          "source": "contracts/BiatecConfigProvider.algo.ts:231",
          "pc": [
            663
          ]
        },
        {
          "teal": 771,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            664,
            665,
            666,
            667,
            668,
            669
          ]
        },
        {
          "teal": 772,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            670,
            671,
            672
          ]
        },
        {
          "teal": 773,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            673,
            674,
            675,
            676
          ]
        },
        {
          "teal": 776,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            677
          ]
        },
        {
          "teal": 779,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            678,
            679,
            680,
            681,
            682,
            683
          ]
        },
        {
          "teal": 780,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            684,
            685,
            686,
            687,
            688,
            689
          ]
        },
        {
          "teal": 781,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            690,
            691,
            692,
            693,
            694,
            695
          ]
        },
        {
          "teal": 782,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            696,
            697,
            698,
            699,
            700,
            701
          ]
        },
        {
          "teal": 783,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            702,
            703,
            704,
            705,
            706,
            707
          ]
        },
        {
          "teal": 784,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            708,
            709,
            710,
            711,
            712,
            713
          ]
        },
        {
          "teal": 785,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            714,
            715,
            716,
            717,
            718,
            719
          ]
        },
        {
          "teal": 786,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            720,
            721,
            722,
            723,
            724,
            725
          ]
        },
        {
          "teal": 787,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            726,
            727,
            728,
            729,
            730,
            731
          ]
        },
        {
          "teal": 788,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            732,
            733,
            734,
            735,
            736,
            737
          ]
        },
        {
          "teal": 789,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            738,
            739,
            740,
            741,
            742,
            743
          ]
        },
        {
          "teal": 790,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            744,
            745,
            746
          ]
        },
        {
          "teal": 791,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            747,
            748,
            749,
            750,
            751,
            752,
            753,
            754,
            755,
            756,
            757,
            758,
            759,
            760,
            761,
            762,
            763,
            764,
            765,
            766,
            767,
            768,
            769,
            770
          ]
        },
        {
          "teal": 794,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            771
          ]
        },
        {
          "teal": 797,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            772,
            773,
            774,
            775,
            776,
            777
          ]
        },
        {
          "teal": 798,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            778,
            779,
            780
          ]
        },
        {
          "teal": 799,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "pc": [
            781,
            782,
            783,
            784
          ]
        },
        {
          "teal": 802,
          "source": "contracts/BiatecConfigProvider.algo.ts:6",
          "errorMessage": "this contract does not implement the given ABI method for call UpdateApplication",
          "pc": [
            785
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADASAAJgsBdQJlZgFlIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7msoAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBXNjdmVyAWcBcwFmAWkBcDEYFIEGCzEZCI0MAiIAAAAAAAACgAAAAhQAAAAAAAAAAAAAAIgAAiJDigAAJwWAFkJJQVRFQy1DT05GSUctMDEtMDItMDFnKjEAZycGMQBnKDEAZykxAGcnByRniTYaAVcCAIgAAiJDigEAMQAoZBJEJwWL/2eJNhoDFzYaAhc2GgFJFSMSRIgAAiJDigMAMQAoZBJEi/8rJwSipkQnCIv/ZycJi/5nJwqL/WeJNhoBSRUjEkSIAAIiQ4oBADEAKGQSRCiL/2eJNhoBF4gAAiJDigEAMQAoZBJEJweL/2eJNhoBSRUjEkSIAAIiQ4oBADEAKGQSRCcGi/9niTYaAUkVIxJEiAACIkOKAQAxAChkEkQqi/9niTYaAUkVIxJEiAACIkOKAQAxACpkEkQpi/9niTYaAReIAAIiQ4oBADEAKGQSRCcJi/9niTYaAReIAAIiQ4oBADEAKGQSRCcKi/9niTYaAUkVIxJEiAACIkOKAQAxACpkEkSL/ysnBKKmRCcIi/9niTYaBxc2GgYXNhoFFzYaBBc2GgNXAgA2GgJXAgA2GgFXAgCIAAIiQ4oHADEAKWQSRLGBArIQi/6yC4v9sj+L/LIMi/qyDov7sg2L/7IKi/myAbOJgAQVH3x1NhoCFzYaAReIAAUWULAiQ4oCATEAKWQSRIv+i/8xAIgAA4v+iYoDAIv+JBJBABOxIrIQi/+yB4v9sggksgGzQgAVsYEEshCL/7IUi/6yEYv9shIksgGziYAEuER7NjYaAI4B/eAAgARJXOftgAS/wghggAQM3BD8gARrlV9LgASLGHs9gARQ4H2IgAS6vh4RgATFi52kgATKNEo0gARK5unLgASHKDcwNhoAjgv91f4L/ib+Pv5a/nX+kP6o/sD+5P83AIAEaTbGLzYaAI4B/a0A",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 1,
      "patch": 2,
      "commitHash": "088f89dd+"
    }
  }
}