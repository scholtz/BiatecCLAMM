/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { type AlgorandClient } from '@algorandfoundation/algokit-utils/types/algorand-client';
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app';
import {
  Arc56Contract,
  getArc56ReturnValue,
  getABIStructFromABITuple,
} from '@algorandfoundation/algokit-utils/types/app-arc56';
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client';
import {
  AppFactory as _AppFactory,
  AppFactoryAppClientParams,
  AppFactoryResolveAppClientByCreatorAndNameParams,
  AppFactoryDeployParams,
  AppFactoryParams,
  CreateSchema,
} from '@algorandfoundation/algokit-utils/types/app-factory';
import {
  TransactionComposer,
  AppCallMethodCall,
  AppMethodCallTransactionArgument,
  SimulateOptions,
  RawSimulateOptions,
  SkipSignaturesSimulateOptions,
} from '@algorandfoundation/algokit-utils/types/composer';
import {
  SendParams,
  SendSingleTransactionResult,
  SendAtomicTransactionComposerResults,
} from '@algorandfoundation/algokit-utils/types/transaction';
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk';

export const APP_SPEC: Arc56Contract = {
  name: 'BiatecPoolProvider',
  desc: '',
  methods: [
    {
      name: 'bootstrap',
      desc: 'Biatec deploys single pool provider smart contract',
      args: [{ name: 'appBiatecConfigProvider', type: 'uint64', desc: 'Biatec amm provider' }],
      returns: { type: 'void' },
      actions: { create: [], call: ['NoOp'] },
    },
    {
      name: 'getCurrentStatus',
      desc: 'Returns current status',
      readonly: true,
      args: [{ name: 'appPoolId', type: 'uint64', desc: 'Pool id to retrieve the stats' }],
      returns: {
        type: '(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)',
        desc: 'Pool info statistics',
        struct: 'AppPoolInfo',
      },
      actions: { create: [], call: ['NoOp'] },
    },
    {
      name: 'createApplication',
      desc: 'Initial setup',
      args: [],
      returns: { type: 'void' },
      actions: { create: ['NoOp'], call: [] },
    },
    {
      name: 'updateApplication',
      desc: 'addressUdpater from global biatec configuration is allowed to update application',
      args: [
        { name: 'appBiatecConfigProvider', type: 'uint64' },
        { name: 'newVersion', type: 'byte[]' },
      ],
      returns: { type: 'void' },
      actions: { create: [], call: ['UpdateApplication'] },
    },
    {
      name: 'loadCLAMMContractData',
      args: [
        { name: 'appBiatecConfigProvider', type: 'uint64' },
        { name: 'approvalProgramSize', type: 'uint64' },
        { name: 'offset', type: 'uint64' },
        { name: 'data', type: 'byte[]' },
      ],
      returns: { type: 'void' },
      actions: { create: [], call: ['NoOp'] },
    },
    {
      name: 'noop',
      desc: 'No op tx to increase the app call and box size limits',
      args: [{ name: 'i', type: 'uint64' }],
      returns: { type: 'void' },
      actions: { create: [], call: ['NoOp'] },
    },
    {
      name: 'deployPool',
      desc: 'Anybody can call this method to bootstrap new clamm pool',
      args: [
        { name: 'assetA', type: 'uint64', desc: 'Asset A ID must be lower then Asset B ID' },
        { name: 'assetB', type: 'uint64', desc: 'Asset B' },
        { name: 'appBiatecConfigProvider', type: 'uint64', desc: 'Biatec amm provider' },
        { name: 'appBiatecPoolProvider', type: 'uint64', desc: 'Pool provider' },
        { name: 'txSeed', type: 'pay', desc: 'Seed transaction so that smart contract can opt in to the assets' },
        {
          name: 'fee',
          type: 'uint64',
          desc: 'Fee in base level (9 decimals). value 1_000_000_000 = 1 = 100%. 10_000_000 = 1%. 1_000_000 = 0.1%',
        },
        { name: 'priceMin', type: 'uint64', desc: 'Min price range. At this point all assets are in asset A.' },
        { name: 'priceMax', type: 'uint64', desc: 'Max price range. At this point all assets are in asset B.' },
        { name: 'currentPrice', type: 'uint64', desc: 'Deployer can specify the current price for easier deployemnt.' },
        {
          name: 'verificationClass',
          type: 'uint64',
          desc: 'Minimum verification level from the biatec identity. Level 0 means no kyc.',
        },
      ],
      returns: { type: 'uint64', desc: 'LP token ID' },
      actions: { create: [], call: ['NoOp'] },
    },
    {
      name: 'registerPool',
      desc: 'This method is called by constructor of the luquidity pool',
      args: [],
      returns: { type: 'void' },
      actions: { create: [], call: ['NoOp'] },
    },
    {
      name: 'registerTrade',
      desc: 'This metod registers the trade and calculates and store the trade statistics',
      args: [
        { name: 'appPoolId', type: 'uint64', desc: 'Liqudity pool smart contract' },
        { name: 'assetA', type: 'uint64', desc: 'Asset A' },
        { name: 'assetB', type: 'uint64', desc: 'Asset B' },
        { name: 'priceFrom', type: 'uint64', desc: 'The original price' },
        { name: 'priceTo', type: 'uint64', desc: 'The new price' },
        { name: 'amountA', type: 'uint64', desc: 'Asset A amount spent or received' },
        { name: 'amountB', type: 'uint64', desc: 'Asset B amount spent or received' },
        { name: 'feeAmountA', type: 'uint64', desc: 'Fees paid in asset A if any' },
        { name: 'feeAmountB', type: 'uint64', desc: 'Fees paid in asset B if any' },
        { name: 's', type: 'uint64', desc: 'Scale multiplier' },
      ],
      returns: { type: 'void' },
      actions: { create: [], call: ['NoOp'] },
    },
    {
      name: 'sendOnlineKeyRegistration',
      desc: 'addressExecutiveFee can perfom key registration for this LP pool\n\n\nOnly addressExecutiveFee is allowed to execute this method.',
      args: [
        { name: 'appBiatecConfigProvider', type: 'uint64' },
        { name: 'votePK', type: 'byte[]' },
        { name: 'selectionPK', type: 'byte[]' },
        { name: 'stateProofPK', type: 'byte[]' },
        { name: 'voteFirst', type: 'uint64' },
        { name: 'voteLast', type: 'uint64' },
        { name: 'voteKeyDilution', type: 'uint64' },
      ],
      returns: { type: 'void' },
      actions: { create: [], call: ['NoOp'] },
    },
    {
      name: 'withdrawExcessAssets',
      desc: 'If someone deposits excess assets to this smart contract biatec can use them.\n\n\nOnly addressExecutiveFee is allowed to execute this method.',
      args: [
        {
          name: 'appBiatecConfigProvider',
          type: 'uint64',
          desc: 'Biatec config app. Only addressExecutiveFee is allowed to execute this method.',
        },
        { name: 'asset', type: 'uint64', desc: 'Asset to withdraw. If native token, then zero' },
        { name: 'amount', type: 'uint64', desc: 'Amount of the asset to be withdrawn' },
      ],
      returns: { type: 'uint64' },
      actions: { create: [], call: ['NoOp'] },
    },
  ],
  arcs: [4, 56],
  structs: {
    AppPoolInfo: [
      { name: 'assetA', type: 'uint64' },
      { name: 'assetB', type: 'uint64' },
      { name: 'verificationClass', type: 'uint64' },
      { name: 'latestPrice', type: 'uint64' },
      { name: 'period1Duration', type: 'uint64' },
      { name: 'period1NowVolumeA', type: 'uint64' },
      { name: 'period1NowVolumeB', type: 'uint64' },
      { name: 'period1NowFeeA', type: 'uint64' },
      { name: 'period1NowFeeB', type: 'uint64' },
      { name: 'period1NowVwap', type: 'uint64' },
      { name: 'period1NowTime', type: 'uint64' },
      { name: 'period1PrevVolumeA', type: 'uint64' },
      { name: 'period1PrevVolumeB', type: 'uint64' },
      { name: 'period1PrevFeeA', type: 'uint64' },
      { name: 'period1PrevFeeB', type: 'uint64' },
      { name: 'period1PrevVwap', type: 'uint64' },
      { name: 'period1PrevTime', type: 'uint64' },
      { name: 'period2Duration', type: 'uint64' },
      { name: 'period2NowVolumeA', type: 'uint64' },
      { name: 'period2NowVolumeB', type: 'uint64' },
      { name: 'period2NowFeeA', type: 'uint64' },
      { name: 'period2NowFeeB', type: 'uint64' },
      { name: 'period2NowVwap', type: 'uint64' },
      { name: 'period2NowTime', type: 'uint64' },
      { name: 'period2PrevVolumeA', type: 'uint64' },
      { name: 'period2PrevVolumeB', type: 'uint64' },
      { name: 'period2PrevFeeA', type: 'uint64' },
      { name: 'period2PrevFeeB', type: 'uint64' },
      { name: 'period2PrevVwap', type: 'uint64' },
      { name: 'period2PrevTime', type: 'uint64' },
      { name: 'period3Duration', type: 'uint64' },
      { name: 'period3NowVolumeA', type: 'uint64' },
      { name: 'period3NowVolumeB', type: 'uint64' },
      { name: 'period3NowFeeA', type: 'uint64' },
      { name: 'period3NowFeeB', type: 'uint64' },
      { name: 'period3NowVwap', type: 'uint64' },
      { name: 'period3NowTime', type: 'uint64' },
      { name: 'period3PrevVolumeA', type: 'uint64' },
      { name: 'period3PrevVolumeB', type: 'uint64' },
      { name: 'period3PrevFeeA', type: 'uint64' },
      { name: 'period3PrevFeeB', type: 'uint64' },
      { name: 'period3PrevVwap', type: 'uint64' },
      { name: 'period3PrevTime', type: 'uint64' },
      { name: 'period4Duration', type: 'uint64' },
      { name: 'period4NowVolumeA', type: 'uint64' },
      { name: 'period4NowVolumeB', type: 'uint64' },
      { name: 'period4NowFeeA', type: 'uint64' },
      { name: 'period4NowFeeB', type: 'uint64' },
      { name: 'period4NowVwap', type: 'uint64' },
      { name: 'period4NowTime', type: 'uint64' },
      { name: 'period4PrevVolumeA', type: 'uint64' },
      { name: 'period4PrevVolumeB', type: 'uint64' },
      { name: 'period4PrevFeeA', type: 'uint64' },
      { name: 'period4PrevFeeB', type: 'uint64' },
      { name: 'period4PrevVwap', type: 'uint64' },
      { name: 'period4PrevTime', type: 'uint64' },
    ],
    PoolConfig: [
      { name: 'assetA', type: 'uint64' },
      { name: 'assetB', type: 'uint64' },
      { name: 'min', type: 'uint64' },
      { name: 'max', type: 'uint64' },
      { name: 'fee', type: 'uint64' },
      { name: 'verificationClass', type: 'uint64' },
    ],
    FullConfig: [
      { name: 'appId', type: 'uint64' },
      { name: 'assetA', type: 'uint64' },
      { name: 'assetB', type: 'uint64' },
      { name: 'min', type: 'uint64' },
      { name: 'max', type: 'uint64' },
      { name: 'fee', type: 'uint64' },
      { name: 'lpTokenId', type: 'uint64' },
      { name: 'verificationClass', type: 'uint8' },
    ],
    AssetsCombined: [
      { name: 'assetA', type: 'uint64' },
      { name: 'assetB', type: 'uint64' },
    ],
  },
  state: {
    schema: { global: { bytes: 1, ints: 16 }, local: { bytes: 0, ints: 0 } },
    keys: {
      global: {
        period1: { key: 'cDE=', keyType: 'AVMBytes', valueType: 'uint64' },
        period2: { key: 'cDI=', keyType: 'AVMBytes', valueType: 'uint64' },
        period3: { key: 'cDM=', keyType: 'AVMBytes', valueType: 'uint64' },
        period4: { key: 'cDQ=', keyType: 'AVMBytes', valueType: 'uint64' },
        recentPools1: { key: 'cnAx', keyType: 'AVMBytes', valueType: 'uint64' },
        recentPools2: { key: 'cnAy', keyType: 'AVMBytes', valueType: 'uint64' },
        recentPools3: { key: 'cnAz', keyType: 'AVMBytes', valueType: 'uint64' },
        recentPools4: { key: 'cnA0', keyType: 'AVMBytes', valueType: 'uint64' },
        recentPools5: { key: 'cnA1', keyType: 'AVMBytes', valueType: 'uint64' },
        recentPools6: { key: 'cnA2', keyType: 'AVMBytes', valueType: 'uint64' },
        recentPools7: { key: 'cnA3', keyType: 'AVMBytes', valueType: 'uint64' },
        recentPools8: { key: 'cnA4', keyType: 'AVMBytes', valueType: 'uint64' },
        recentPools9: { key: 'cnA5', keyType: 'AVMBytes', valueType: 'uint64' },
        recentPools10: { key: 'cnAxMA==', keyType: 'AVMBytes', valueType: 'uint64' },
        recentPoolsIndex: { key: 'cnBp', keyType: 'AVMBytes', valueType: 'uint64' },
        appBiatecConfigProvider: { key: 'Qg==', keyType: 'AVMBytes', valueType: 'uint64' },
        version: { key: 'c2N2ZXI=', keyType: 'AVMBytes', valueType: 'AVMBytes' },
      },
      local: {},
      box: {
        clammApprovalProgram1: { key: 'Y2FwYjE=', keyType: 'AVMBytes', valueType: 'AVMBytes' },
        clammApprovalProgram2: { key: 'Y2FwYjI=', keyType: 'AVMBytes', valueType: 'AVMBytes' },
        clammApprovalProgram3: { key: 'Y2FwYjM=', keyType: 'AVMBytes', valueType: 'AVMBytes' },
      },
    },
    maps: {
      global: {},
      local: {},
      box: {
        pools: { keyType: 'uint64', valueType: 'AppPoolInfo', prefix: 'cA==' },
        poolsByConfig: { keyType: 'PoolConfig', valueType: 'uint64', prefix: 'cGM=' },
        fullConfigs: { keyType: 'FullConfig', valueType: 'uint64', prefix: 'ZmM=' },
        poolsAggregated: { keyType: 'AssetsCombined', valueType: 'AppPoolInfo', prefix: 'cw==' },
      },
    },
  },
  bareActions: { create: [], call: [] },
  sourceInfo: {
    approval: {
      sourceInfo: [
        { teal: 1, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [0] },
        {
          teal: 2,
          source: 'contracts\\BiatecPoolProvider.algo.ts:139',
          pc: [
            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
            30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
            57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
            84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
          ],
        },
        {
          teal: 3,
          source: 'contracts\\BiatecPoolProvider.algo.ts:139',
          pc: [
            105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
            126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
            147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
            168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
            189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
            210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
          ],
        },
        { teal: 15, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [229, 230] },
        { teal: 16, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [231] },
        { teal: 17, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [232, 233] },
        { teal: 18, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [234] },
        { teal: 19, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [235, 236] },
        { teal: 20, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [237] },
        {
          teal: 21,
          source: 'contracts\\BiatecPoolProvider.algo.ts:139',
          pc: [
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
            259, 260, 261, 262, 263,
          ],
        },
        {
          teal: 25,
          source: 'contracts\\BiatecPoolProvider.algo.ts:139',
          errorMessage:
            'The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?',
          pc: [264],
        },
        { teal: 30, source: 'contracts\\BiatecPoolProvider.algo.ts:197', pc: [265, 266, 267] },
        { teal: 31, source: 'contracts\\BiatecPoolProvider.algo.ts:197', pc: [268] },
        { teal: 34, source: 'contracts\\BiatecPoolProvider.algo.ts:197', pc: [269, 270, 271] },
        { teal: 35, source: 'contracts\\BiatecPoolProvider.algo.ts:197', pc: [272] },
        { teal: 36, source: 'contracts\\BiatecPoolProvider.algo.ts:197', pc: [273] },
        { teal: 43, source: 'contracts\\BiatecPoolProvider.algo.ts:197', pc: [274, 275, 276] },
        { teal: 46, source: 'contracts\\BiatecPoolProvider.algo.ts:197', pc: [277] },
        { teal: 50, source: 'contracts\\BiatecPoolProvider.algo.ts:198', pc: [278, 279] },
        { teal: 51, source: 'contracts\\BiatecPoolProvider.algo.ts:198', pc: [280, 281, 282] },
        { teal: 52, source: 'contracts\\BiatecPoolProvider.algo.ts:198', pc: [283, 284] },
        { teal: 53, source: 'contracts\\BiatecPoolProvider.algo.ts:198', pc: [285] },
        { teal: 54, source: 'contracts\\BiatecPoolProvider.algo.ts:198', pc: [286] },
        {
          teal: 57,
          source: 'contracts\\BiatecPoolProvider.algo.ts:198',
          errorMessage: 'Only creator of the app can set it up',
          pc: [287],
        },
        { teal: 61, source: 'contracts\\BiatecPoolProvider.algo.ts:199', pc: [288, 289] },
        { teal: 62, source: 'contracts\\BiatecPoolProvider.algo.ts:199', pc: [290, 291] },
        { teal: 63, source: 'contracts\\BiatecPoolProvider.algo.ts:199', pc: [292] },
        { teal: 67, source: 'contracts\\BiatecPoolProvider.algo.ts:200', pc: [293, 294] },
        { teal: 68, source: 'contracts\\BiatecPoolProvider.algo.ts:200', pc: [295] },
        { teal: 69, source: 'contracts\\BiatecPoolProvider.algo.ts:200', pc: [296] },
        {
          teal: 72,
          source: 'contracts\\BiatecPoolProvider.algo.ts:200',
          errorMessage: "global state value does not exist: appBiatecConfigProvider.globalState('s')",
          pc: [297],
        },
        { teal: 73, source: 'contracts\\BiatecPoolProvider.algo.ts:200', pc: [298, 299] },
        { teal: 77, source: 'contracts\\BiatecPoolProvider.algo.ts:201', pc: [300, 301] },
        { teal: 78, source: 'contracts\\BiatecPoolProvider.algo.ts:201', pc: [302] },
        { teal: 79, source: 'contracts\\BiatecPoolProvider.algo.ts:201', pc: [303] },
        { teal: 82, source: 'contracts\\BiatecPoolProvider.algo.ts:201', errorMessage: 'ERR_PAUSED', pc: [304] },
        { teal: 83, source: 'contracts\\BiatecPoolProvider.algo.ts:197', pc: [305] },
        { teal: 88, source: 'contracts\\BiatecPoolProvider.algo.ts:210', pc: [306, 307] },
        { teal: 91, source: 'contracts\\BiatecPoolProvider.algo.ts:211', pc: [308, 309, 310] },
        { teal: 92, source: 'contracts\\BiatecPoolProvider.algo.ts:211', pc: [311] },
        { teal: 95, source: 'contracts\\BiatecPoolProvider.algo.ts:210', pc: [312, 313, 314] },
        { teal: 96, source: 'contracts\\BiatecPoolProvider.algo.ts:210', pc: [315] },
        { teal: 97, source: 'contracts\\BiatecPoolProvider.algo.ts:210', pc: [316] },
        { teal: 98, source: 'contracts\\BiatecPoolProvider.algo.ts:210', pc: [317] },
        { teal: 99, source: 'contracts\\BiatecPoolProvider.algo.ts:210', pc: [318] },
        { teal: 108, source: 'contracts\\BiatecPoolProvider.algo.ts:210', pc: [319, 320, 321] },
        { teal: 112, source: 'contracts\\BiatecPoolProvider.algo.ts:212', pc: [322] },
        { teal: 113, source: 'contracts\\BiatecPoolProvider.algo.ts:212', pc: [323, 324] },
        { teal: 114, source: 'contracts\\BiatecPoolProvider.algo.ts:212', pc: [325] },
        { teal: 115, source: 'contracts\\BiatecPoolProvider.algo.ts:212', pc: [326] },
        { teal: 116, source: 'contracts\\BiatecPoolProvider.algo.ts:212', pc: [327] },
        {
          teal: 119,
          source: 'contracts\\BiatecPoolProvider.algo.ts:212',
          errorMessage: 'box value does not exist: this.pools(appPoolId.id).value',
          pc: [328],
        },
        { teal: 120, source: 'contracts\\BiatecPoolProvider.algo.ts:210', pc: [329] },
        { teal: 125, source: 'contracts\\BiatecPoolProvider.algo.ts:218', pc: [330, 331, 332] },
        { teal: 126, source: 'contracts\\BiatecPoolProvider.algo.ts:218', pc: [333] },
        { teal: 127, source: 'contracts\\BiatecPoolProvider.algo.ts:218', pc: [334] },
        { teal: 133, source: 'contracts\\BiatecPoolProvider.algo.ts:218', pc: [335, 336, 337] },
        {
          teal: 137,
          source: 'contracts\\BiatecPoolProvider.algo.ts:219',
          pc: [338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357],
        },
        { teal: 138, source: 'contracts\\BiatecPoolProvider.algo.ts:219', pc: [358] },
        { teal: 142, source: 'contracts\\BiatecPoolProvider.algo.ts:220', pc: [359, 360] },
        { teal: 143, source: 'contracts\\BiatecPoolProvider.algo.ts:220', pc: [361, 362] },
        { teal: 144, source: 'contracts\\BiatecPoolProvider.algo.ts:220', pc: [363] },
        { teal: 148, source: 'contracts\\BiatecPoolProvider.algo.ts:222', pc: [364, 365] },
        { teal: 149, source: 'contracts\\BiatecPoolProvider.algo.ts:222', pc: [366, 367, 368, 369] },
        { teal: 150, source: 'contracts\\BiatecPoolProvider.algo.ts:222', pc: [370] },
        { teal: 154, source: 'contracts\\BiatecPoolProvider.algo.ts:223', pc: [371, 372] },
        { teal: 155, source: 'contracts\\BiatecPoolProvider.algo.ts:223', pc: [373, 374, 375, 376] },
        { teal: 156, source: 'contracts\\BiatecPoolProvider.algo.ts:223', pc: [377] },
        { teal: 160, source: 'contracts\\BiatecPoolProvider.algo.ts:225', pc: [378, 379] },
        { teal: 161, source: 'contracts\\BiatecPoolProvider.algo.ts:225', pc: [380, 381, 382, 383, 384] },
        { teal: 162, source: 'contracts\\BiatecPoolProvider.algo.ts:225', pc: [385] },
        { teal: 166, source: 'contracts\\BiatecPoolProvider.algo.ts:226', pc: [386, 387] },
        { teal: 167, source: 'contracts\\BiatecPoolProvider.algo.ts:226', pc: [388] },
        { teal: 168, source: 'contracts\\BiatecPoolProvider.algo.ts:226', pc: [389] },
        { teal: 172, source: 'contracts\\BiatecPoolProvider.algo.ts:227', pc: [390, 391] },
        { teal: 173, source: 'contracts\\BiatecPoolProvider.algo.ts:227', pc: [392] },
        { teal: 174, source: 'contracts\\BiatecPoolProvider.algo.ts:227', pc: [393] },
        { teal: 178, source: 'contracts\\BiatecPoolProvider.algo.ts:228', pc: [394, 395] },
        { teal: 179, source: 'contracts\\BiatecPoolProvider.algo.ts:228', pc: [396] },
        { teal: 180, source: 'contracts\\BiatecPoolProvider.algo.ts:228', pc: [397] },
        { teal: 184, source: 'contracts\\BiatecPoolProvider.algo.ts:229', pc: [398, 399] },
        { teal: 185, source: 'contracts\\BiatecPoolProvider.algo.ts:229', pc: [400] },
        { teal: 186, source: 'contracts\\BiatecPoolProvider.algo.ts:229', pc: [401] },
        { teal: 190, source: 'contracts\\BiatecPoolProvider.algo.ts:230', pc: [402, 403] },
        { teal: 191, source: 'contracts\\BiatecPoolProvider.algo.ts:230', pc: [404] },
        { teal: 192, source: 'contracts\\BiatecPoolProvider.algo.ts:230', pc: [405] },
        { teal: 196, source: 'contracts\\BiatecPoolProvider.algo.ts:231', pc: [406, 407] },
        { teal: 197, source: 'contracts\\BiatecPoolProvider.algo.ts:231', pc: [408] },
        { teal: 198, source: 'contracts\\BiatecPoolProvider.algo.ts:231', pc: [409] },
        { teal: 202, source: 'contracts\\BiatecPoolProvider.algo.ts:232', pc: [410, 411] },
        { teal: 203, source: 'contracts\\BiatecPoolProvider.algo.ts:232', pc: [412] },
        { teal: 204, source: 'contracts\\BiatecPoolProvider.algo.ts:232', pc: [413] },
        { teal: 208, source: 'contracts\\BiatecPoolProvider.algo.ts:233', pc: [414, 415] },
        { teal: 209, source: 'contracts\\BiatecPoolProvider.algo.ts:233', pc: [416] },
        { teal: 210, source: 'contracts\\BiatecPoolProvider.algo.ts:233', pc: [417] },
        { teal: 214, source: 'contracts\\BiatecPoolProvider.algo.ts:234', pc: [418, 419] },
        { teal: 215, source: 'contracts\\BiatecPoolProvider.algo.ts:234', pc: [420] },
        { teal: 216, source: 'contracts\\BiatecPoolProvider.algo.ts:234', pc: [421] },
        { teal: 220, source: 'contracts\\BiatecPoolProvider.algo.ts:235', pc: [422, 423] },
        { teal: 221, source: 'contracts\\BiatecPoolProvider.algo.ts:235', pc: [424] },
        { teal: 222, source: 'contracts\\BiatecPoolProvider.algo.ts:235', pc: [425] },
        { teal: 226, source: 'contracts\\BiatecPoolProvider.algo.ts:236', pc: [426, 427] },
        { teal: 227, source: 'contracts\\BiatecPoolProvider.algo.ts:236', pc: [428] },
        { teal: 228, source: 'contracts\\BiatecPoolProvider.algo.ts:236', pc: [429] },
        { teal: 229, source: 'contracts\\BiatecPoolProvider.algo.ts:218', pc: [430] },
        { teal: 234, source: 'contracts\\BiatecPoolProvider.algo.ts:242', pc: [431, 432, 433] },
        { teal: 235, source: 'contracts\\BiatecPoolProvider.algo.ts:242', pc: [434, 435, 436] },
        { teal: 238, source: 'contracts\\BiatecPoolProvider.algo.ts:242', pc: [437, 438, 439] },
        { teal: 239, source: 'contracts\\BiatecPoolProvider.algo.ts:242', pc: [440] },
        { teal: 242, source: 'contracts\\BiatecPoolProvider.algo.ts:242', pc: [441, 442, 443] },
        { teal: 243, source: 'contracts\\BiatecPoolProvider.algo.ts:242', pc: [444] },
        { teal: 244, source: 'contracts\\BiatecPoolProvider.algo.ts:242', pc: [445] },
        { teal: 250, source: 'contracts\\BiatecPoolProvider.algo.ts:242', pc: [446, 447, 448] },
        { teal: 253, source: 'contracts\\BiatecPoolProvider.algo.ts:242', pc: [449] },
        { teal: 254, source: 'contracts\\BiatecPoolProvider.algo.ts:242', pc: [450] },
        { teal: 258, source: 'contracts\\BiatecPoolProvider.algo.ts:243', pc: [451, 452] },
        { teal: 259, source: 'contracts\\BiatecPoolProvider.algo.ts:243', pc: [453, 454] },
        { teal: 260, source: 'contracts\\BiatecPoolProvider.algo.ts:243', pc: [455] },
        { teal: 261, source: 'contracts\\BiatecPoolProvider.algo.ts:243', pc: [456] },
        {
          teal: 264,
          source: 'contracts\\BiatecPoolProvider.algo.ts:243',
          errorMessage: 'Configuration app does not match',
          pc: [457],
        },
        { teal: 268, source: 'contracts\\BiatecPoolProvider.algo.ts:244', pc: [458, 459] },
        { teal: 269, source: 'contracts\\BiatecPoolProvider.algo.ts:244', pc: [460, 461] },
        { teal: 270, source: 'contracts\\BiatecPoolProvider.algo.ts:244', pc: [462] },
        {
          teal: 273,
          source: 'contracts\\BiatecPoolProvider.algo.ts:244',
          errorMessage: "global state value does not exist: appBiatecConfigProvider.globalState('u')",
          pc: [463],
        },
        { teal: 274, source: 'contracts\\BiatecPoolProvider.algo.ts:244', pc: [464, 465] },
        { teal: 278, source: 'contracts\\BiatecPoolProvider.algo.ts:245', pc: [466, 467] },
        { teal: 279, source: 'contracts\\BiatecPoolProvider.algo.ts:245', pc: [468, 469] },
        { teal: 280, source: 'contracts\\BiatecPoolProvider.algo.ts:245', pc: [470] },
        {
          teal: 283,
          source: 'contracts\\BiatecPoolProvider.algo.ts:245',
          errorMessage: 'Only addressUdpater setup in the config can update application',
          pc: [471],
        },
        { teal: 287, source: 'contracts\\BiatecPoolProvider.algo.ts:246', pc: [472, 473] },
        { teal: 288, source: 'contracts\\BiatecPoolProvider.algo.ts:246', pc: [474] },
        { teal: 289, source: 'contracts\\BiatecPoolProvider.algo.ts:246', pc: [475] },
        {
          teal: 292,
          source: 'contracts\\BiatecPoolProvider.algo.ts:246',
          errorMessage: "global state value does not exist: appBiatecConfigProvider.globalState('s')",
          pc: [476],
        },
        { teal: 293, source: 'contracts\\BiatecPoolProvider.algo.ts:246', pc: [477, 478] },
        { teal: 297, source: 'contracts\\BiatecPoolProvider.algo.ts:247', pc: [479, 480] },
        { teal: 298, source: 'contracts\\BiatecPoolProvider.algo.ts:247', pc: [481] },
        { teal: 299, source: 'contracts\\BiatecPoolProvider.algo.ts:247', pc: [482] },
        { teal: 302, source: 'contracts\\BiatecPoolProvider.algo.ts:247', errorMessage: 'ERR_PAUSED', pc: [483] },
        { teal: 306, source: 'contracts\\BiatecPoolProvider.algo.ts:248', pc: [484, 485, 486, 487, 488, 489, 490] },
        { teal: 307, source: 'contracts\\BiatecPoolProvider.algo.ts:248', pc: [491, 492] },
        { teal: 308, source: 'contracts\\BiatecPoolProvider.algo.ts:248', pc: [493] },
        { teal: 309, source: 'contracts\\BiatecPoolProvider.algo.ts:242', pc: [494] },
        { teal: 314, source: 'contracts\\BiatecPoolProvider.algo.ts:255', pc: [495, 496, 497] },
        { teal: 315, source: 'contracts\\BiatecPoolProvider.algo.ts:255', pc: [498, 499, 500] },
        { teal: 318, source: 'contracts\\BiatecPoolProvider.algo.ts:254', pc: [501, 502, 503] },
        { teal: 319, source: 'contracts\\BiatecPoolProvider.algo.ts:254', pc: [504] },
        { teal: 322, source: 'contracts\\BiatecPoolProvider.algo.ts:253', pc: [505, 506, 507] },
        { teal: 323, source: 'contracts\\BiatecPoolProvider.algo.ts:253', pc: [508] },
        { teal: 326, source: 'contracts\\BiatecPoolProvider.algo.ts:252', pc: [509, 510, 511] },
        { teal: 327, source: 'contracts\\BiatecPoolProvider.algo.ts:252', pc: [512] },
        { teal: 330, source: 'contracts\\BiatecPoolProvider.algo.ts:251', pc: [513, 514, 515] },
        { teal: 331, source: 'contracts\\BiatecPoolProvider.algo.ts:251', pc: [516] },
        { teal: 332, source: 'contracts\\BiatecPoolProvider.algo.ts:251', pc: [517] },
        { teal: 336, source: 'contracts\\BiatecPoolProvider.algo.ts:251', pc: [518, 519, 520] },
        { teal: 339, source: 'contracts\\BiatecPoolProvider.algo.ts:251', pc: [521] },
        { teal: 343, source: 'contracts\\BiatecPoolProvider.algo.ts:257', pc: [522, 523] },
        { teal: 344, source: 'contracts\\BiatecPoolProvider.algo.ts:257', pc: [524, 525] },
        { teal: 345, source: 'contracts\\BiatecPoolProvider.algo.ts:257', pc: [526] },
        { teal: 346, source: 'contracts\\BiatecPoolProvider.algo.ts:257', pc: [527] },
        {
          teal: 349,
          source: 'contracts\\BiatecPoolProvider.algo.ts:257',
          errorMessage: 'Configuration app does not match',
          pc: [528],
        },
        { teal: 353, source: 'contracts\\BiatecPoolProvider.algo.ts:258', pc: [529, 530] },
        { teal: 354, source: 'contracts\\BiatecPoolProvider.algo.ts:258', pc: [531, 532] },
        { teal: 355, source: 'contracts\\BiatecPoolProvider.algo.ts:258', pc: [533] },
        {
          teal: 358,
          source: 'contracts\\BiatecPoolProvider.algo.ts:258',
          errorMessage: "global state value does not exist: appBiatecConfigProvider.globalState('u')",
          pc: [534],
        },
        { teal: 359, source: 'contracts\\BiatecPoolProvider.algo.ts:258', pc: [535, 536] },
        { teal: 366, source: 'contracts\\BiatecPoolProvider.algo.ts:260', pc: [537, 538] },
        { teal: 367, source: 'contracts\\BiatecPoolProvider.algo.ts:260', pc: [539, 540] },
        { teal: 368, source: 'contracts\\BiatecPoolProvider.algo.ts:260', pc: [541] },
        {
          teal: 371,
          source: 'contracts\\BiatecPoolProvider.algo.ts:259',
          errorMessage: 'Only addressUdpater setup in the config can update the AMM application',
          pc: [542],
        },
        { teal: 376, source: 'contracts\\BiatecPoolProvider.algo.ts:263', pc: [543, 544] },
        { teal: 377, source: 'contracts\\BiatecPoolProvider.algo.ts:263', pc: [545] },
        { teal: 378, source: 'contracts\\BiatecPoolProvider.algo.ts:263', pc: [546] },
        { teal: 379, source: 'contracts\\BiatecPoolProvider.algo.ts:263', pc: [547] },
        { teal: 380, source: 'contracts\\BiatecPoolProvider.algo.ts:263', pc: [548] },
        { teal: 381, source: 'contracts\\BiatecPoolProvider.algo.ts:263', pc: [549, 550, 551] },
        { teal: 382, source: 'contracts\\BiatecPoolProvider.algo.ts:263', pc: [552, 553] },
        { teal: 383, source: 'contracts\\BiatecPoolProvider.algo.ts:263', pc: [554] },
        { teal: 384, source: 'contracts\\BiatecPoolProvider.algo.ts:263', pc: [555] },
        { teal: 385, source: 'contracts\\BiatecPoolProvider.algo.ts:263', pc: [556] },
        { teal: 388, source: 'contracts\\BiatecPoolProvider.algo.ts:263', pc: [557, 558, 559] },
        { teal: 393, source: 'contracts\\BiatecPoolProvider.algo.ts:264', pc: [560, 561] },
        { teal: 394, source: 'contracts\\BiatecPoolProvider.algo.ts:264', pc: [562] },
        { teal: 398, source: 'contracts\\BiatecPoolProvider.algo.ts:265', pc: [563, 564] },
        { teal: 399, source: 'contracts\\BiatecPoolProvider.algo.ts:265', pc: [565] },
        { teal: 403, source: 'contracts\\BiatecPoolProvider.algo.ts:266', pc: [566, 567] },
        { teal: 404, source: 'contracts\\BiatecPoolProvider.algo.ts:266', pc: [568] },
        { teal: 410, source: 'contracts\\BiatecPoolProvider.algo.ts:269', pc: [569, 570] },
        { teal: 411, source: 'contracts\\BiatecPoolProvider.algo.ts:269', pc: [571] },
        { teal: 412, source: 'contracts\\BiatecPoolProvider.algo.ts:269', pc: [572] },
        { teal: 413, source: 'contracts\\BiatecPoolProvider.algo.ts:269', pc: [573] },
        { teal: 414, source: 'contracts\\BiatecPoolProvider.algo.ts:269', pc: [574] },
        { teal: 415, source: 'contracts\\BiatecPoolProvider.algo.ts:269', pc: [575, 576, 577] },
        { teal: 420, source: 'contracts\\BiatecPoolProvider.algo.ts:270', pc: [578, 579] },
        { teal: 421, source: 'contracts\\BiatecPoolProvider.algo.ts:270', pc: [580, 581] },
        { teal: 422, source: 'contracts\\BiatecPoolProvider.algo.ts:270', pc: [582, 583] },
        { teal: 423, source: 'contracts\\BiatecPoolProvider.algo.ts:270', pc: [584] },
        { teal: 424, source: 'contracts\\BiatecPoolProvider.algo.ts:270', pc: [585, 586, 587] },
        { teal: 425, source: 'contracts\\BiatecPoolProvider.algo.ts:270', pc: [588, 589] },
        { teal: 426, source: 'contracts\\BiatecPoolProvider.algo.ts:270', pc: [590, 591, 592] },
        { teal: 429, source: 'contracts\\BiatecPoolProvider.algo.ts:270', pc: [593, 594] },
        { teal: 432, source: 'contracts\\BiatecPoolProvider.algo.ts:270', pc: [595] },
        { teal: 433, source: 'contracts\\BiatecPoolProvider.algo.ts:270', pc: [596] },
        { teal: 439, source: 'contracts\\BiatecPoolProvider.algo.ts:271', pc: [597, 598] },
        { teal: 440, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [599, 600] },
        { teal: 441, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [601, 602] },
        { teal: 442, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [603] },
        { teal: 443, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [604, 605, 606] },
        { teal: 444, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [607] },
        { teal: 445, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [608, 609, 610] },
        { teal: 448, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [611, 612] },
        { teal: 449, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [613, 614] },
        { teal: 450, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [615] },
        { teal: 451, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [616, 617, 618] },
        { teal: 452, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [619, 620] },
        { teal: 453, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [621, 622] },
        { teal: 454, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [623] },
        { teal: 455, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [624, 625, 626] },
        { teal: 458, source: 'contracts\\BiatecPoolProvider.algo.ts:272', pc: [627, 628] },
        { teal: 463, source: 'contracts\\BiatecPoolProvider.algo.ts:271', pc: [629] },
        { teal: 464, source: 'contracts\\BiatecPoolProvider.algo.ts:271', pc: [630] },
        { teal: 470, source: 'contracts\\BiatecPoolProvider.algo.ts:274', pc: [631, 632] },
        { teal: 471, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [633, 634] },
        { teal: 472, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [635, 636] },
        { teal: 473, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [637] },
        { teal: 474, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [638, 639, 640] },
        { teal: 475, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [641] },
        { teal: 476, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [642, 643, 644] },
        { teal: 479, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [645, 646] },
        { teal: 480, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [647, 648] },
        { teal: 481, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [649] },
        { teal: 482, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [650, 651, 652] },
        { teal: 483, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [653, 654] },
        { teal: 484, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [655, 656] },
        { teal: 485, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [657] },
        { teal: 486, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [658, 659, 660] },
        { teal: 489, source: 'contracts\\BiatecPoolProvider.algo.ts:275', pc: [661, 662] },
        { teal: 494, source: 'contracts\\BiatecPoolProvider.algo.ts:274', pc: [663] },
        { teal: 495, source: 'contracts\\BiatecPoolProvider.algo.ts:274', pc: [664] },
        { teal: 501, source: 'contracts\\BiatecPoolProvider.algo.ts:279', pc: [665, 666] },
        { teal: 502, source: 'contracts\\BiatecPoolProvider.algo.ts:279', pc: [667, 668] },
        { teal: 503, source: 'contracts\\BiatecPoolProvider.algo.ts:279', pc: [669] },
        { teal: 504, source: 'contracts\\BiatecPoolProvider.algo.ts:279', pc: [670, 671, 672] },
        { teal: 509, source: 'contracts\\BiatecPoolProvider.algo.ts:280', pc: [673, 674] },
        { teal: 510, source: 'contracts\\BiatecPoolProvider.algo.ts:280', pc: [675, 676] },
        { teal: 511, source: 'contracts\\BiatecPoolProvider.algo.ts:280', pc: [677, 678] },
        { teal: 512, source: 'contracts\\BiatecPoolProvider.algo.ts:280', pc: [679] },
        { teal: 513, source: 'contracts\\BiatecPoolProvider.algo.ts:279', pc: [680, 681, 682] },
        { teal: 518, source: 'contracts\\BiatecPoolProvider.algo.ts:281', pc: [683, 684] },
        { teal: 519, source: 'contracts\\BiatecPoolProvider.algo.ts:281', pc: [685, 686] },
        { teal: 520, source: 'contracts\\BiatecPoolProvider.algo.ts:281', pc: [687] },
        { teal: 521, source: 'contracts\\BiatecPoolProvider.algo.ts:281', pc: [688, 689, 690] },
        { teal: 526, source: 'contracts\\BiatecPoolProvider.algo.ts:282', pc: [691, 692] },
        { teal: 527, source: 'contracts\\BiatecPoolProvider.algo.ts:282', pc: [693, 694] },
        { teal: 528, source: 'contracts\\BiatecPoolProvider.algo.ts:282', pc: [695, 696] },
        { teal: 529, source: 'contracts\\BiatecPoolProvider.algo.ts:282', pc: [697] },
        { teal: 530, source: 'contracts\\BiatecPoolProvider.algo.ts:282', pc: [698, 699] },
        { teal: 531, source: 'contracts\\BiatecPoolProvider.algo.ts:282', pc: [700] },
        { teal: 532, source: 'contracts\\BiatecPoolProvider.algo.ts:281', pc: [701, 702, 703] },
        { teal: 537, source: 'contracts\\BiatecPoolProvider.algo.ts:283', pc: [704, 705] },
        { teal: 538, source: 'contracts\\BiatecPoolProvider.algo.ts:283', pc: [706, 707] },
        { teal: 539, source: 'contracts\\BiatecPoolProvider.algo.ts:283', pc: [708] },
        { teal: 540, source: 'contracts\\BiatecPoolProvider.algo.ts:283', pc: [709, 710, 711] },
        { teal: 545, source: 'contracts\\BiatecPoolProvider.algo.ts:284', pc: [712, 713] },
        { teal: 546, source: 'contracts\\BiatecPoolProvider.algo.ts:284', pc: [714, 715] },
        { teal: 547, source: 'contracts\\BiatecPoolProvider.algo.ts:284', pc: [716, 717] },
        { teal: 548, source: 'contracts\\BiatecPoolProvider.algo.ts:284', pc: [718] },
        { teal: 549, source: 'contracts\\BiatecPoolProvider.algo.ts:284', pc: [719, 720] },
        { teal: 550, source: 'contracts\\BiatecPoolProvider.algo.ts:284', pc: [721] },
        { teal: 553, source: 'contracts\\BiatecPoolProvider.algo.ts:251', pc: [722] },
        { teal: 558, source: 'contracts\\BiatecPoolProvider.algo.ts:293', pc: [723, 724, 725] },
        { teal: 559, source: 'contracts\\BiatecPoolProvider.algo.ts:293', pc: [726] },
        { teal: 562, source: 'contracts\\BiatecPoolProvider.algo.ts:293', pc: [727, 728, 729] },
        { teal: 563, source: 'contracts\\BiatecPoolProvider.algo.ts:293', pc: [730] },
        { teal: 564, source: 'contracts\\BiatecPoolProvider.algo.ts:293', pc: [731] },
        { teal: 570, source: 'contracts\\BiatecPoolProvider.algo.ts:293', pc: [732, 733, 734] },
        { teal: 571, source: 'contracts\\BiatecPoolProvider.algo.ts:293', pc: [735] },
        { teal: 576, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [736, 737] },
        { teal: 579, source: 'contracts\\BiatecPoolProvider.algo.ts:319', pc: [738, 739, 740] },
        { teal: 580, source: 'contracts\\BiatecPoolProvider.algo.ts:319', pc: [741] },
        { teal: 583, source: 'contracts\\BiatecPoolProvider.algo.ts:318', pc: [742, 743, 744] },
        { teal: 584, source: 'contracts\\BiatecPoolProvider.algo.ts:318', pc: [745] },
        { teal: 587, source: 'contracts\\BiatecPoolProvider.algo.ts:317', pc: [746, 747, 748] },
        { teal: 588, source: 'contracts\\BiatecPoolProvider.algo.ts:317', pc: [749] },
        { teal: 591, source: 'contracts\\BiatecPoolProvider.algo.ts:316', pc: [750, 751, 752] },
        { teal: 592, source: 'contracts\\BiatecPoolProvider.algo.ts:316', pc: [753] },
        { teal: 595, source: 'contracts\\BiatecPoolProvider.algo.ts:315', pc: [754, 755, 756] },
        { teal: 596, source: 'contracts\\BiatecPoolProvider.algo.ts:315', pc: [757] },
        { teal: 599, source: 'contracts\\BiatecPoolProvider.algo.ts:314', pc: [758, 759] },
        { teal: 600, source: 'contracts\\BiatecPoolProvider.algo.ts:314', pc: [760] },
        { teal: 601, source: 'contracts\\BiatecPoolProvider.algo.ts:314', pc: [761] },
        { teal: 602, source: 'contracts\\BiatecPoolProvider.algo.ts:314', pc: [762] },
        { teal: 603, source: 'contracts\\BiatecPoolProvider.algo.ts:314', pc: [763, 764] },
        { teal: 604, source: 'contracts\\BiatecPoolProvider.algo.ts:314', pc: [765] },
        { teal: 605, source: 'contracts\\BiatecPoolProvider.algo.ts:314', pc: [766] },
        {
          teal: 608,
          source: 'contracts\\BiatecPoolProvider.algo.ts:314',
          errorMessage: 'argument 5 (txSeed) for deployPool must be a pay transaction',
          pc: [767],
        },
        { teal: 611, source: 'contracts\\BiatecPoolProvider.algo.ts:313', pc: [768, 769, 770] },
        { teal: 612, source: 'contracts\\BiatecPoolProvider.algo.ts:313', pc: [771] },
        { teal: 615, source: 'contracts\\BiatecPoolProvider.algo.ts:312', pc: [772, 773, 774] },
        { teal: 616, source: 'contracts\\BiatecPoolProvider.algo.ts:312', pc: [775] },
        { teal: 619, source: 'contracts\\BiatecPoolProvider.algo.ts:311', pc: [776, 777, 778] },
        { teal: 620, source: 'contracts\\BiatecPoolProvider.algo.ts:311', pc: [779] },
        { teal: 623, source: 'contracts\\BiatecPoolProvider.algo.ts:310', pc: [780, 781, 782] },
        { teal: 624, source: 'contracts\\BiatecPoolProvider.algo.ts:310', pc: [783] },
        { teal: 627, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [784, 785, 786] },
        { teal: 628, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [787] },
        { teal: 629, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [788] },
        { teal: 630, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [789] },
        { teal: 631, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [790] },
        { teal: 632, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [791] },
        { teal: 650, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [792, 793, 794] },
        { teal: 653, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [795] },
        { teal: 654, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [796] },
        { teal: 659, source: 'contracts\\BiatecPoolProvider.algo.ts:321', pc: [797, 798] },
        { teal: 660, source: 'contracts\\BiatecPoolProvider.algo.ts:321', pc: [799, 800] },
        { teal: 661, source: 'contracts\\BiatecPoolProvider.algo.ts:321', pc: [801, 802] },
        { teal: 662, source: 'contracts\\BiatecPoolProvider.algo.ts:321', pc: [803] },
        {
          teal: 665,
          source: 'contracts\\BiatecPoolProvider.algo.ts:321',
          errorMessage:
            'transaction verification failed: {"txn":"txSeed","field":"receiver","expected":"this.app.address"}',
          pc: [804],
        },
        { teal: 668, source: 'contracts\\BiatecPoolProvider.algo.ts:321', pc: [805, 806] },
        { teal: 669, source: 'contracts\\BiatecPoolProvider.algo.ts:321', pc: [807, 808] },
        { teal: 670, source: 'contracts\\BiatecPoolProvider.algo.ts:321', pc: [809, 810, 811, 812] },
        { teal: 671, source: 'contracts\\BiatecPoolProvider.algo.ts:321', pc: [813] },
        {
          teal: 674,
          source: 'contracts\\BiatecPoolProvider.algo.ts:321',
          errorMessage:
            'transaction verification failed: {"txn":"txSeed","field":"amount","condition":"greaterThanEqualTo","expected":">=1_000_000"}',
          pc: [814],
        },
        { teal: 678, source: 'contracts\\BiatecPoolProvider.algo.ts:322', pc: [815, 816] },
        { teal: 679, source: 'contracts\\BiatecPoolProvider.algo.ts:322', pc: [817, 818] },
        { teal: 680, source: 'contracts\\BiatecPoolProvider.algo.ts:322', pc: [819] },
        { teal: 681, source: 'contracts\\BiatecPoolProvider.algo.ts:322', pc: [820] },
        { teal: 702, source: 'contracts\\BiatecPoolProvider.algo.ts:325', pc: [821] },
        { teal: 703, source: 'contracts\\BiatecPoolProvider.algo.ts:325', pc: [822, 823] },
        { teal: 704, source: 'contracts\\BiatecPoolProvider.algo.ts:325', pc: [824, 825] },
        { teal: 708, source: 'contracts\\BiatecPoolProvider.algo.ts:326', pc: [826] },
        { teal: 709, source: 'contracts\\BiatecPoolProvider.algo.ts:326', pc: [827, 828] },
        { teal: 718, source: 'contracts\\BiatecPoolProvider.algo.ts:328', pc: [829, 830] },
        { teal: 719, source: 'contracts\\BiatecPoolProvider.algo.ts:328', pc: [831] },
        {
          teal: 722,
          source: 'contracts\\BiatecPoolProvider.algo.ts:328',
          errorMessage: 'box value does not exist: this.clammApprovalProgram1.value',
          pc: [832],
        },
        { teal: 723, source: 'contracts\\BiatecPoolProvider.algo.ts:328', pc: [833, 834] },
        { teal: 724, source: 'contracts\\BiatecPoolProvider.algo.ts:329', pc: [835, 836] },
        { teal: 725, source: 'contracts\\BiatecPoolProvider.algo.ts:329', pc: [837] },
        {
          teal: 728,
          source: 'contracts\\BiatecPoolProvider.algo.ts:329',
          errorMessage: 'box value does not exist: this.clammApprovalProgram2.value',
          pc: [838],
        },
        { teal: 729, source: 'contracts\\BiatecPoolProvider.algo.ts:329', pc: [839, 840] },
        { teal: 733, source: 'contracts\\BiatecPoolProvider.algo.ts:333', pc: [841, 842, 843] },
        { teal: 734, source: 'contracts\\BiatecPoolProvider.algo.ts:333', pc: [844, 845] },
        { teal: 738, source: 'contracts\\BiatecPoolProvider.algo.ts:334', pc: [846, 847] },
        { teal: 739, source: 'contracts\\BiatecPoolProvider.algo.ts:334', pc: [848, 849] },
        { teal: 743, source: 'contracts\\BiatecPoolProvider.algo.ts:335', pc: [850, 851] },
        { teal: 744, source: 'contracts\\BiatecPoolProvider.algo.ts:335', pc: [852, 853] },
        { teal: 748, source: 'contracts\\BiatecPoolProvider.algo.ts:336', pc: [854, 855] },
        { teal: 749, source: 'contracts\\BiatecPoolProvider.algo.ts:336', pc: [856, 857] },
        { teal: 756, source: 'contracts\\BiatecPoolProvider.algo.ts:339', pc: [858, 859] },
        { teal: 757, source: 'contracts\\BiatecPoolProvider.algo.ts:339', pc: [860, 861] },
        { teal: 760, source: 'contracts\\BiatecPoolProvider.algo.ts:325', pc: [862] },
        { teal: 761, source: 'contracts\\BiatecPoolProvider.algo.ts:325', pc: [863, 864] },
        { teal: 765, source: 'contracts\\BiatecPoolProvider.algo.ts:344', pc: [865] },
        { teal: 769, source: 'contracts\\BiatecPoolProvider.algo.ts:345', pc: [866, 867] },
        { teal: 770, source: 'contracts\\BiatecPoolProvider.algo.ts:345', pc: [868, 869] },
        { teal: 779, source: 'contracts\\BiatecPoolProvider.algo.ts:346', pc: [870] },
        { teal: 780, source: 'contracts\\BiatecPoolProvider.algo.ts:346', pc: [871] },
        { teal: 781, source: 'contracts\\BiatecPoolProvider.algo.ts:346', pc: [872, 873] },
        { teal: 785, source: 'contracts\\BiatecPoolProvider.algo.ts:347', pc: [874, 875] },
        { teal: 786, source: 'contracts\\BiatecPoolProvider.algo.ts:347', pc: [876, 877] },
        { teal: 787, source: 'contracts\\BiatecPoolProvider.algo.ts:347', pc: [878] },
        { teal: 788, source: 'contracts\\BiatecPoolProvider.algo.ts:347', pc: [879, 880] },
        { teal: 792, source: 'contracts\\BiatecPoolProvider.algo.ts:348', pc: [881, 882, 883, 884] },
        { teal: 793, source: 'contracts\\BiatecPoolProvider.algo.ts:348', pc: [885, 886] },
        { teal: 797, source: 'contracts\\BiatecPoolProvider.algo.ts:349', pc: [887] },
        { teal: 798, source: 'contracts\\BiatecPoolProvider.algo.ts:349', pc: [888, 889] },
        { teal: 820, source: 'contracts\\BiatecPoolProvider.algo.ts:353', pc: [890] },
        { teal: 821, source: 'contracts\\BiatecPoolProvider.algo.ts:353', pc: [891, 892] },
        { teal: 822, source: 'contracts\\BiatecPoolProvider.algo.ts:353', pc: [893, 894] },
        { teal: 826, source: 'contracts\\BiatecPoolProvider.algo.ts:354', pc: [895, 896] },
        { teal: 827, source: 'contracts\\BiatecPoolProvider.algo.ts:354', pc: [897, 898] },
        { teal: 843, source: 'contracts\\BiatecPoolProvider.algo.ts:357', pc: [899, 900, 901, 902, 903, 904] },
        { teal: 844, source: 'contracts\\BiatecPoolProvider.algo.ts:357', pc: [905, 906] },
        { teal: 845, source: 'contracts\\BiatecPoolProvider.algo.ts:358', pc: [907, 908] },
        { teal: 846, source: 'contracts\\BiatecPoolProvider.algo.ts:358', pc: [909] },
        { teal: 847, source: 'contracts\\BiatecPoolProvider.algo.ts:358', pc: [910, 911] },
        { teal: 848, source: 'contracts\\BiatecPoolProvider.algo.ts:359', pc: [912, 913] },
        { teal: 849, source: 'contracts\\BiatecPoolProvider.algo.ts:359', pc: [914] },
        { teal: 850, source: 'contracts\\BiatecPoolProvider.algo.ts:359', pc: [915, 916] },
        { teal: 851, source: 'contracts\\BiatecPoolProvider.algo.ts:360', pc: [917, 918] },
        { teal: 852, source: 'contracts\\BiatecPoolProvider.algo.ts:360', pc: [919] },
        { teal: 853, source: 'contracts\\BiatecPoolProvider.algo.ts:360', pc: [920, 921] },
        { teal: 854, source: 'contracts\\BiatecPoolProvider.algo.ts:361', pc: [922, 923] },
        { teal: 855, source: 'contracts\\BiatecPoolProvider.algo.ts:361', pc: [924] },
        { teal: 856, source: 'contracts\\BiatecPoolProvider.algo.ts:361', pc: [925, 926] },
        { teal: 857, source: 'contracts\\BiatecPoolProvider.algo.ts:362', pc: [927, 928] },
        { teal: 858, source: 'contracts\\BiatecPoolProvider.algo.ts:362', pc: [929] },
        { teal: 859, source: 'contracts\\BiatecPoolProvider.algo.ts:362', pc: [930, 931] },
        { teal: 860, source: 'contracts\\BiatecPoolProvider.algo.ts:363', pc: [932, 933] },
        { teal: 861, source: 'contracts\\BiatecPoolProvider.algo.ts:363', pc: [934] },
        { teal: 862, source: 'contracts\\BiatecPoolProvider.algo.ts:363', pc: [935, 936] },
        { teal: 863, source: 'contracts\\BiatecPoolProvider.algo.ts:364', pc: [937, 938] },
        { teal: 864, source: 'contracts\\BiatecPoolProvider.algo.ts:364', pc: [939] },
        { teal: 865, source: 'contracts\\BiatecPoolProvider.algo.ts:364', pc: [940, 941] },
        { teal: 866, source: 'contracts\\BiatecPoolProvider.algo.ts:365', pc: [942, 943] },
        { teal: 867, source: 'contracts\\BiatecPoolProvider.algo.ts:365', pc: [944] },
        { teal: 868, source: 'contracts\\BiatecPoolProvider.algo.ts:365', pc: [945, 946] },
        { teal: 869, source: 'contracts\\BiatecPoolProvider.algo.ts:366', pc: [947, 948] },
        { teal: 870, source: 'contracts\\BiatecPoolProvider.algo.ts:366', pc: [949] },
        { teal: 871, source: 'contracts\\BiatecPoolProvider.algo.ts:366', pc: [950, 951] },
        { teal: 875, source: 'contracts\\BiatecPoolProvider.algo.ts:368', pc: [952, 953] },
        { teal: 876, source: 'contracts\\BiatecPoolProvider.algo.ts:368', pc: [954, 955] },
        { teal: 877, source: 'contracts\\BiatecPoolProvider.algo.ts:368', pc: [956, 957] },
        { teal: 878, source: 'contracts\\BiatecPoolProvider.algo.ts:368', pc: [958, 959] },
        { teal: 882, source: 'contracts\\BiatecPoolProvider.algo.ts:369', pc: [960, 961] },
        { teal: 883, source: 'contracts\\BiatecPoolProvider.algo.ts:369', pc: [962, 963] },
        { teal: 884, source: 'contracts\\BiatecPoolProvider.algo.ts:369', pc: [964, 965] },
        { teal: 885, source: 'contracts\\BiatecPoolProvider.algo.ts:369', pc: [966, 967] },
        { teal: 889, source: 'contracts\\BiatecPoolProvider.algo.ts:370', pc: [968] },
        { teal: 890, source: 'contracts\\BiatecPoolProvider.algo.ts:370', pc: [969, 970] },
        { teal: 894, source: 'contracts\\BiatecPoolProvider.algo.ts:372', pc: [971] },
        { teal: 898, source: 'contracts\\BiatecPoolProvider.algo.ts:375', pc: [972, 973] },
        { teal: 899, source: 'contracts\\BiatecPoolProvider.algo.ts:375', pc: [974] },
        { teal: 900, source: 'contracts\\BiatecPoolProvider.algo.ts:375', pc: [975] },
        { teal: 901, source: 'contracts\\BiatecPoolProvider.algo.ts:375', pc: [976] },
        { teal: 902, source: 'contracts\\BiatecPoolProvider.algo.ts:375', pc: [977] },
        { teal: 903, source: 'contracts\\BiatecPoolProvider.algo.ts:375', pc: [978] },
        { teal: 908, source: 'contracts\\BiatecPoolProvider.algo.ts:376', pc: [979, 980] },
        { teal: 909, source: 'contracts\\BiatecPoolProvider.algo.ts:376', pc: [981] },
        { teal: 910, source: 'contracts\\BiatecPoolProvider.algo.ts:376', pc: [982, 983] },
        { teal: 911, source: 'contracts\\BiatecPoolProvider.algo.ts:376', pc: [984] },
        { teal: 912, source: 'contracts\\BiatecPoolProvider.algo.ts:376', pc: [985, 986, 987] },
        { teal: 917, source: 'contracts\\BiatecPoolProvider.algo.ts:376', pc: [988, 989] },
        { teal: 918, source: 'contracts\\BiatecPoolProvider.algo.ts:376', pc: [990] },
        { teal: 919, source: 'contracts\\BiatecPoolProvider.algo.ts:376', pc: [991] },
        { teal: 924, source: 'contracts\\BiatecPoolProvider.algo.ts:377', pc: [992, 993] },
        { teal: 925, source: 'contracts\\BiatecPoolProvider.algo.ts:377', pc: [994] },
        { teal: 926, source: 'contracts\\BiatecPoolProvider.algo.ts:377', pc: [995, 996] },
        { teal: 931, source: 'contracts\\BiatecPoolProvider.algo.ts:378', pc: [997, 998] },
        { teal: 932, source: 'contracts\\BiatecPoolProvider.algo.ts:378', pc: [999] },
        { teal: 933, source: 'contracts\\BiatecPoolProvider.algo.ts:378', pc: [1000] },
        { teal: 934, source: 'contracts\\BiatecPoolProvider.algo.ts:378', pc: [1001, 1002, 1003] },
        { teal: 939, source: 'contracts\\BiatecPoolProvider.algo.ts:379', pc: [1004, 1005] },
        { teal: 940, source: 'contracts\\BiatecPoolProvider.algo.ts:379', pc: [1006, 1007] },
        { teal: 941, source: 'contracts\\BiatecPoolProvider.algo.ts:379', pc: [1008] },
        { teal: 942, source: 'contracts\\BiatecPoolProvider.algo.ts:378', pc: [1009, 1010, 1011] },
        { teal: 947, source: 'contracts\\BiatecPoolProvider.algo.ts:380', pc: [1012, 1013] },
        { teal: 948, source: 'contracts\\BiatecPoolProvider.algo.ts:380', pc: [1014, 1015] },
        { teal: 949, source: 'contracts\\BiatecPoolProvider.algo.ts:380', pc: [1016] },
        { teal: 950, source: 'contracts\\BiatecPoolProvider.algo.ts:380', pc: [1017, 1018, 1019] },
        { teal: 955, source: 'contracts\\BiatecPoolProvider.algo.ts:381', pc: [1020, 1021] },
        { teal: 956, source: 'contracts\\BiatecPoolProvider.algo.ts:381', pc: [1022, 1023] },
        { teal: 957, source: 'contracts\\BiatecPoolProvider.algo.ts:381', pc: [1024] },
        { teal: 958, source: 'contracts\\BiatecPoolProvider.algo.ts:380', pc: [1025, 1026, 1027] },
        { teal: 963, source: 'contracts\\BiatecPoolProvider.algo.ts:382', pc: [1028, 1029] },
        { teal: 964, source: 'contracts\\BiatecPoolProvider.algo.ts:382', pc: [1030, 1031] },
        { teal: 965, source: 'contracts\\BiatecPoolProvider.algo.ts:382', pc: [1032] },
        { teal: 966, source: 'contracts\\BiatecPoolProvider.algo.ts:382', pc: [1033, 1034, 1035] },
        { teal: 971, source: 'contracts\\BiatecPoolProvider.algo.ts:383', pc: [1036, 1037] },
        { teal: 972, source: 'contracts\\BiatecPoolProvider.algo.ts:383', pc: [1038, 1039] },
        { teal: 973, source: 'contracts\\BiatecPoolProvider.algo.ts:383', pc: [1040] },
        { teal: 974, source: 'contracts\\BiatecPoolProvider.algo.ts:382', pc: [1041, 1042, 1043] },
        { teal: 979, source: 'contracts\\BiatecPoolProvider.algo.ts:384', pc: [1044, 1045] },
        { teal: 980, source: 'contracts\\BiatecPoolProvider.algo.ts:384', pc: [1046, 1047] },
        { teal: 981, source: 'contracts\\BiatecPoolProvider.algo.ts:384', pc: [1048] },
        { teal: 982, source: 'contracts\\BiatecPoolProvider.algo.ts:384', pc: [1049, 1050, 1051] },
        { teal: 987, source: 'contracts\\BiatecPoolProvider.algo.ts:385', pc: [1052, 1053] },
        { teal: 988, source: 'contracts\\BiatecPoolProvider.algo.ts:385', pc: [1054, 1055] },
        { teal: 989, source: 'contracts\\BiatecPoolProvider.algo.ts:385', pc: [1056] },
        { teal: 990, source: 'contracts\\BiatecPoolProvider.algo.ts:384', pc: [1057, 1058, 1059] },
        { teal: 995, source: 'contracts\\BiatecPoolProvider.algo.ts:386', pc: [1060, 1061] },
        { teal: 996, source: 'contracts\\BiatecPoolProvider.algo.ts:386', pc: [1062, 1063] },
        { teal: 997, source: 'contracts\\BiatecPoolProvider.algo.ts:386', pc: [1064] },
        { teal: 998, source: 'contracts\\BiatecPoolProvider.algo.ts:386', pc: [1065, 1066, 1067] },
        { teal: 1003, source: 'contracts\\BiatecPoolProvider.algo.ts:387', pc: [1068, 1069] },
        { teal: 1004, source: 'contracts\\BiatecPoolProvider.algo.ts:387', pc: [1070, 1071] },
        { teal: 1005, source: 'contracts\\BiatecPoolProvider.algo.ts:387', pc: [1072] },
        { teal: 1006, source: 'contracts\\BiatecPoolProvider.algo.ts:386', pc: [1073, 1074, 1075] },
        { teal: 1011, source: 'contracts\\BiatecPoolProvider.algo.ts:388', pc: [1076, 1077] },
        { teal: 1012, source: 'contracts\\BiatecPoolProvider.algo.ts:388', pc: [1078, 1079] },
        { teal: 1013, source: 'contracts\\BiatecPoolProvider.algo.ts:388', pc: [1080] },
        { teal: 1014, source: 'contracts\\BiatecPoolProvider.algo.ts:388', pc: [1081, 1082, 1083] },
        { teal: 1019, source: 'contracts\\BiatecPoolProvider.algo.ts:389', pc: [1084, 1085] },
        { teal: 1020, source: 'contracts\\BiatecPoolProvider.algo.ts:389', pc: [1086, 1087] },
        { teal: 1021, source: 'contracts\\BiatecPoolProvider.algo.ts:389', pc: [1088] },
        { teal: 1022, source: 'contracts\\BiatecPoolProvider.algo.ts:388', pc: [1089, 1090, 1091] },
        { teal: 1027, source: 'contracts\\BiatecPoolProvider.algo.ts:390', pc: [1092, 1093] },
        { teal: 1028, source: 'contracts\\BiatecPoolProvider.algo.ts:390', pc: [1094, 1095] },
        { teal: 1029, source: 'contracts\\BiatecPoolProvider.algo.ts:390', pc: [1096] },
        { teal: 1030, source: 'contracts\\BiatecPoolProvider.algo.ts:390', pc: [1097, 1098, 1099] },
        { teal: 1035, source: 'contracts\\BiatecPoolProvider.algo.ts:391', pc: [1100, 1101] },
        { teal: 1036, source: 'contracts\\BiatecPoolProvider.algo.ts:391', pc: [1102, 1103] },
        { teal: 1037, source: 'contracts\\BiatecPoolProvider.algo.ts:391', pc: [1104] },
        { teal: 1038, source: 'contracts\\BiatecPoolProvider.algo.ts:390', pc: [1105, 1106, 1107] },
        { teal: 1043, source: 'contracts\\BiatecPoolProvider.algo.ts:392', pc: [1108, 1109] },
        { teal: 1044, source: 'contracts\\BiatecPoolProvider.algo.ts:392', pc: [1110] },
        { teal: 1045, source: 'contracts\\BiatecPoolProvider.algo.ts:392', pc: [1111] },
        { teal: 1046, source: 'contracts\\BiatecPoolProvider.algo.ts:392', pc: [1112, 1113, 1114] },
        { teal: 1051, source: 'contracts\\BiatecPoolProvider.algo.ts:393', pc: [1115, 1116] },
        { teal: 1052, source: 'contracts\\BiatecPoolProvider.algo.ts:393', pc: [1117, 1118] },
        { teal: 1053, source: 'contracts\\BiatecPoolProvider.algo.ts:393', pc: [1119] },
        { teal: 1054, source: 'contracts\\BiatecPoolProvider.algo.ts:392', pc: [1120, 1121, 1122] },
        { teal: 1059, source: 'contracts\\BiatecPoolProvider.algo.ts:394', pc: [1123, 1124] },
        { teal: 1060, source: 'contracts\\BiatecPoolProvider.algo.ts:394', pc: [1125, 1126] },
        { teal: 1061, source: 'contracts\\BiatecPoolProvider.algo.ts:394', pc: [1127] },
        { teal: 1062, source: 'contracts\\BiatecPoolProvider.algo.ts:394', pc: [1128, 1129, 1130] },
        { teal: 1067, source: 'contracts\\BiatecPoolProvider.algo.ts:395', pc: [1131, 1132] },
        { teal: 1068, source: 'contracts\\BiatecPoolProvider.algo.ts:395', pc: [1133, 1134] },
        { teal: 1069, source: 'contracts\\BiatecPoolProvider.algo.ts:395', pc: [1135] },
        { teal: 1070, source: 'contracts\\BiatecPoolProvider.algo.ts:394', pc: [1136, 1137, 1138] },
        { teal: 1075, source: 'contracts\\BiatecPoolProvider.algo.ts:396', pc: [1139, 1140] },
        { teal: 1076, source: 'contracts\\BiatecPoolProvider.algo.ts:396', pc: [1141, 1142] },
        { teal: 1077, source: 'contracts\\BiatecPoolProvider.algo.ts:396', pc: [1143] },
        { teal: 1078, source: 'contracts\\BiatecPoolProvider.algo.ts:396', pc: [1144, 1145, 1146] },
        { teal: 1083, source: 'contracts\\BiatecPoolProvider.algo.ts:397', pc: [1147, 1148] },
        { teal: 1084, source: 'contracts\\BiatecPoolProvider.algo.ts:397', pc: [1149, 1150] },
        { teal: 1085, source: 'contracts\\BiatecPoolProvider.algo.ts:397', pc: [1151] },
        { teal: 1090, source: 'contracts\\BiatecPoolProvider.algo.ts:399', pc: [1152, 1153] },
        { teal: 1093, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [1154, 1155] },
        { teal: 1096, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [1156, 1157] },
        { teal: 1097, source: 'contracts\\BiatecPoolProvider.algo.ts:309', pc: [1158] },
        { teal: 1102, source: 'contracts\\BiatecPoolProvider.algo.ts:409', pc: [1159, 1160, 1161] },
        { teal: 1103, source: 'contracts\\BiatecPoolProvider.algo.ts:409', pc: [1162] },
        { teal: 1104, source: 'contracts\\BiatecPoolProvider.algo.ts:409', pc: [1163] },
        { teal: 1115, source: 'contracts\\BiatecPoolProvider.algo.ts:409', pc: [1164, 1165, 1166] },
        { teal: 1118, source: 'contracts\\BiatecPoolProvider.algo.ts:409', pc: [1167] },
        { teal: 1119, source: 'contracts\\BiatecPoolProvider.algo.ts:409', pc: [1168, 1169] },
        { teal: 1123, source: 'contracts\\BiatecPoolProvider.algo.ts:410', pc: [1170, 1171] },
        { teal: 1124, source: 'contracts\\BiatecPoolProvider.algo.ts:410', pc: [1172, 1173] },
        { teal: 1128, source: 'contracts\\BiatecPoolProvider.algo.ts:411', pc: [1174, 1175] },
        { teal: 1129, source: 'contracts\\BiatecPoolProvider.algo.ts:411', pc: [1176, 1177, 1178] },
        { teal: 1130, source: 'contracts\\BiatecPoolProvider.algo.ts:411', pc: [1179] },
        {
          teal: 1133,
          source: 'contracts\\BiatecPoolProvider.algo.ts:411',
          errorMessage: "global state value does not exist: appClammPool.globalState('a')",
          pc: [1180],
        },
        { teal: 1134, source: 'contracts\\BiatecPoolProvider.algo.ts:411', pc: [1181, 1182] },
        { teal: 1138, source: 'contracts\\BiatecPoolProvider.algo.ts:412', pc: [1183, 1184] },
        { teal: 1139, source: 'contracts\\BiatecPoolProvider.algo.ts:412', pc: [1185, 1186, 1187] },
        { teal: 1140, source: 'contracts\\BiatecPoolProvider.algo.ts:412', pc: [1188] },
        {
          teal: 1143,
          source: 'contracts\\BiatecPoolProvider.algo.ts:412',
          errorMessage: "global state value does not exist: appClammPool.globalState('b')",
          pc: [1189],
        },
        { teal: 1144, source: 'contracts\\BiatecPoolProvider.algo.ts:412', pc: [1190, 1191] },
        { teal: 1148, source: 'contracts\\BiatecPoolProvider.algo.ts:413', pc: [1192, 1193] },
        { teal: 1149, source: 'contracts\\BiatecPoolProvider.algo.ts:413', pc: [1194, 1195, 1196] },
        { teal: 1150, source: 'contracts\\BiatecPoolProvider.algo.ts:413', pc: [1197] },
        {
          teal: 1153,
          source: 'contracts\\BiatecPoolProvider.algo.ts:413',
          errorMessage: "global state value does not exist: appClammPool.globalState('c')",
          pc: [1198],
        },
        { teal: 1154, source: 'contracts\\BiatecPoolProvider.algo.ts:413', pc: [1199, 1200] },
        { teal: 1158, source: 'contracts\\BiatecPoolProvider.algo.ts:414', pc: [1201, 1202] },
        { teal: 1159, source: 'contracts\\BiatecPoolProvider.algo.ts:414', pc: [1203, 1204, 1205, 1206, 1207, 1208] },
        { teal: 1160, source: 'contracts\\BiatecPoolProvider.algo.ts:414', pc: [1209] },
        {
          teal: 1163,
          source: 'contracts\\BiatecPoolProvider.algo.ts:414',
          errorMessage: "global state value does not exist: appClammPool.globalState('pMin')",
          pc: [1210],
        },
        { teal: 1164, source: 'contracts\\BiatecPoolProvider.algo.ts:414', pc: [1211, 1212] },
        { teal: 1168, source: 'contracts\\BiatecPoolProvider.algo.ts:415', pc: [1213, 1214] },
        { teal: 1169, source: 'contracts\\BiatecPoolProvider.algo.ts:415', pc: [1215, 1216, 1217, 1218, 1219, 1220] },
        { teal: 1170, source: 'contracts\\BiatecPoolProvider.algo.ts:415', pc: [1221] },
        {
          teal: 1173,
          source: 'contracts\\BiatecPoolProvider.algo.ts:415',
          errorMessage: "global state value does not exist: appClammPool.globalState('pMax')",
          pc: [1222],
        },
        { teal: 1174, source: 'contracts\\BiatecPoolProvider.algo.ts:415', pc: [1223, 1224] },
        { teal: 1178, source: 'contracts\\BiatecPoolProvider.algo.ts:416', pc: [1225, 1226] },
        { teal: 1179, source: 'contracts\\BiatecPoolProvider.algo.ts:416', pc: [1227, 1228, 1229] },
        { teal: 1180, source: 'contracts\\BiatecPoolProvider.algo.ts:416', pc: [1230] },
        {
          teal: 1183,
          source: 'contracts\\BiatecPoolProvider.algo.ts:416',
          errorMessage: "global state value does not exist: appClammPool.globalState('f')",
          pc: [1231],
        },
        { teal: 1184, source: 'contracts\\BiatecPoolProvider.algo.ts:416', pc: [1232, 1233] },
        { teal: 1188, source: 'contracts\\BiatecPoolProvider.algo.ts:417', pc: [1234, 1235] },
        { teal: 1189, source: 'contracts\\BiatecPoolProvider.algo.ts:417', pc: [1236, 1237, 1238, 1239] },
        { teal: 1190, source: 'contracts\\BiatecPoolProvider.algo.ts:417', pc: [1240] },
        {
          teal: 1193,
          source: 'contracts\\BiatecPoolProvider.algo.ts:417',
          errorMessage: "global state value does not exist: appClammPool.globalState('lp')",
          pc: [1241],
        },
        { teal: 1194, source: 'contracts\\BiatecPoolProvider.algo.ts:417', pc: [1242, 1243] },
        { teal: 1198, source: 'contracts\\BiatecPoolProvider.algo.ts:418', pc: [1244] },
        { teal: 1199, source: 'contracts\\BiatecPoolProvider.algo.ts:418', pc: [1245, 1246] },
        { teal: 1200, source: 'contracts\\BiatecPoolProvider.algo.ts:418', pc: [1247] },
        { teal: 1201, source: 'contracts\\BiatecPoolProvider.algo.ts:418', pc: [1248] },
        { teal: 1202, source: 'contracts\\BiatecPoolProvider.algo.ts:418', pc: [1249] },
        { teal: 1203, source: 'contracts\\BiatecPoolProvider.algo.ts:418', pc: [1250] },
        { teal: 1204, source: 'contracts\\BiatecPoolProvider.algo.ts:418', pc: [1251] },
        { teal: 1205, source: 'contracts\\BiatecPoolProvider.algo.ts:418', pc: [1252] },
        { teal: 1206, source: 'contracts\\BiatecPoolProvider.algo.ts:418', pc: [1253] },
        { teal: 1217, source: 'contracts\\BiatecPoolProvider.algo.ts:420', pc: [1254, 1255] },
        { teal: 1218, source: 'contracts\\BiatecPoolProvider.algo.ts:420', pc: [1256] },
        { teal: 1219, source: 'contracts\\BiatecPoolProvider.algo.ts:421', pc: [1257, 1258] },
        { teal: 1220, source: 'contracts\\BiatecPoolProvider.algo.ts:421', pc: [1259] },
        { teal: 1221, source: 'contracts\\BiatecPoolProvider.algo.ts:421', pc: [1260] },
        { teal: 1222, source: 'contracts\\BiatecPoolProvider.algo.ts:422', pc: [1261, 1262] },
        { teal: 1223, source: 'contracts\\BiatecPoolProvider.algo.ts:422', pc: [1263] },
        { teal: 1224, source: 'contracts\\BiatecPoolProvider.algo.ts:422', pc: [1264] },
        { teal: 1225, source: 'contracts\\BiatecPoolProvider.algo.ts:423', pc: [1265, 1266] },
        { teal: 1226, source: 'contracts\\BiatecPoolProvider.algo.ts:423', pc: [1267] },
        { teal: 1227, source: 'contracts\\BiatecPoolProvider.algo.ts:423', pc: [1268] },
        { teal: 1228, source: 'contracts\\BiatecPoolProvider.algo.ts:424', pc: [1269, 1270] },
        { teal: 1229, source: 'contracts\\BiatecPoolProvider.algo.ts:424', pc: [1271] },
        { teal: 1230, source: 'contracts\\BiatecPoolProvider.algo.ts:424', pc: [1272] },
        { teal: 1231, source: 'contracts\\BiatecPoolProvider.algo.ts:425', pc: [1273, 1274] },
        { teal: 1232, source: 'contracts\\BiatecPoolProvider.algo.ts:425', pc: [1275] },
        { teal: 1233, source: 'contracts\\BiatecPoolProvider.algo.ts:425', pc: [1276] },
        { teal: 1234, source: 'contracts\\BiatecPoolProvider.algo.ts:419', pc: [1277, 1278] },
        { teal: 1238, source: 'contracts\\BiatecPoolProvider.algo.ts:427', pc: [1279, 1280] },
        { teal: 1239, source: 'contracts\\BiatecPoolProvider.algo.ts:427', pc: [1281, 1282] },
        { teal: 1240, source: 'contracts\\BiatecPoolProvider.algo.ts:427', pc: [1283] },
        { teal: 1241, source: 'contracts\\BiatecPoolProvider.algo.ts:427', pc: [1284] },
        { teal: 1242, source: 'contracts\\BiatecPoolProvider.algo.ts:427', pc: [1285] },
        { teal: 1243, source: 'contracts\\BiatecPoolProvider.algo.ts:427', pc: [1286] },
        { teal: 1244, source: 'contracts\\BiatecPoolProvider.algo.ts:427', pc: [1287] },
        {
          teal: 1247,
          source: 'contracts\\BiatecPoolProvider.algo.ts:427',
          errorMessage: 'Pool with the same configuration is already registered',
          pc: [1288],
        },
        { teal: 1251, source: 'contracts\\BiatecPoolProvider.algo.ts:428', pc: [1289, 1290] },
        { teal: 1252, source: 'contracts\\BiatecPoolProvider.algo.ts:428', pc: [1291, 1292] },
        { teal: 1253, source: 'contracts\\BiatecPoolProvider.algo.ts:428', pc: [1293] },
        { teal: 1254, source: 'contracts\\BiatecPoolProvider.algo.ts:428', pc: [1294, 1295] },
        { teal: 1255, source: 'contracts\\BiatecPoolProvider.algo.ts:428', pc: [1296] },
        { teal: 1256, source: 'contracts\\BiatecPoolProvider.algo.ts:428', pc: [1297] },
        { teal: 1269, source: 'contracts\\BiatecPoolProvider.algo.ts:431', pc: [1298, 1299] },
        { teal: 1270, source: 'contracts\\BiatecPoolProvider.algo.ts:431', pc: [1300] },
        { teal: 1271, source: 'contracts\\BiatecPoolProvider.algo.ts:432', pc: [1301, 1302] },
        { teal: 1272, source: 'contracts\\BiatecPoolProvider.algo.ts:432', pc: [1303] },
        { teal: 1273, source: 'contracts\\BiatecPoolProvider.algo.ts:432', pc: [1304] },
        { teal: 1274, source: 'contracts\\BiatecPoolProvider.algo.ts:433', pc: [1305, 1306] },
        { teal: 1275, source: 'contracts\\BiatecPoolProvider.algo.ts:433', pc: [1307] },
        { teal: 1276, source: 'contracts\\BiatecPoolProvider.algo.ts:433', pc: [1308] },
        { teal: 1277, source: 'contracts\\BiatecPoolProvider.algo.ts:435', pc: [1309, 1310] },
        { teal: 1278, source: 'contracts\\BiatecPoolProvider.algo.ts:435', pc: [1311] },
        { teal: 1279, source: 'contracts\\BiatecPoolProvider.algo.ts:435', pc: [1312] },
        { teal: 1280, source: 'contracts\\BiatecPoolProvider.algo.ts:436', pc: [1313, 1314] },
        { teal: 1281, source: 'contracts\\BiatecPoolProvider.algo.ts:436', pc: [1315] },
        { teal: 1282, source: 'contracts\\BiatecPoolProvider.algo.ts:436', pc: [1316] },
        { teal: 1283, source: 'contracts\\BiatecPoolProvider.algo.ts:437', pc: [1317, 1318] },
        { teal: 1284, source: 'contracts\\BiatecPoolProvider.algo.ts:437', pc: [1319] },
        { teal: 1285, source: 'contracts\\BiatecPoolProvider.algo.ts:437', pc: [1320] },
        { teal: 1286, source: 'contracts\\BiatecPoolProvider.algo.ts:434', pc: [1321, 1322] },
        { teal: 1287, source: 'contracts\\BiatecPoolProvider.algo.ts:434', pc: [1323] },
        { teal: 1288, source: 'contracts\\BiatecPoolProvider.algo.ts:434', pc: [1324] },
        { teal: 1289, source: 'contracts\\BiatecPoolProvider.algo.ts:438', pc: [1325, 1326] },
        { teal: 1290, source: 'contracts\\BiatecPoolProvider.algo.ts:438', pc: [1327] },
        { teal: 1291, source: 'contracts\\BiatecPoolProvider.algo.ts:438', pc: [1328] },
        { teal: 1292, source: 'contracts\\BiatecPoolProvider.algo.ts:438', pc: [1329] },
        { teal: 1293, source: 'contracts\\BiatecPoolProvider.algo.ts:438', pc: [1330] },
        { teal: 1294, source: 'contracts\\BiatecPoolProvider.algo.ts:438', pc: [1331] },
        {
          teal: 1297,
          source: 'contracts\\BiatecPoolProvider.algo.ts:438',
          errorMessage: 'verificationClass as uint8 overflowed 8 bits',
          pc: [1332],
        },
        { teal: 1298, source: 'contracts\\BiatecPoolProvider.algo.ts:438', pc: [1333, 1334, 1335] },
        { teal: 1299, source: 'contracts\\BiatecPoolProvider.algo.ts:438', pc: [1336] },
        { teal: 1300, source: 'contracts\\BiatecPoolProvider.algo.ts:430', pc: [1337, 1338] },
        { teal: 1304, source: 'contracts\\BiatecPoolProvider.algo.ts:440', pc: [1339, 1340, 1341, 1342] },
        { teal: 1305, source: 'contracts\\BiatecPoolProvider.algo.ts:440', pc: [1343, 1344] },
        { teal: 1306, source: 'contracts\\BiatecPoolProvider.algo.ts:440', pc: [1345] },
        { teal: 1307, source: 'contracts\\BiatecPoolProvider.algo.ts:440', pc: [1346, 1347] },
        { teal: 1308, source: 'contracts\\BiatecPoolProvider.algo.ts:440', pc: [1348] },
        { teal: 1309, source: 'contracts\\BiatecPoolProvider.algo.ts:440', pc: [1349] },
        { teal: 1313, source: 'contracts\\BiatecPoolProvider.algo.ts:442', pc: [1350, 1351] },
        { teal: 1314, source: 'contracts\\BiatecPoolProvider.algo.ts:442', pc: [1352, 1353] },
        { teal: 1328, source: 'contracts\\BiatecPoolProvider.algo.ts:444', pc: [1354, 1355] },
        { teal: 1329, source: 'contracts\\BiatecPoolProvider.algo.ts:444', pc: [1356, 1357] },
        { teal: 1330, source: 'contracts\\BiatecPoolProvider.algo.ts:444', pc: [1358] },
        { teal: 1331, source: 'contracts\\BiatecPoolProvider.algo.ts:444', pc: [1359] },
        { teal: 1332, source: 'contracts\\BiatecPoolProvider.algo.ts:444', pc: [1360] },
        { teal: 1333, source: 'contracts\\BiatecPoolProvider.algo.ts:444', pc: [1361, 1362, 1363] },
        { teal: 1334, source: 'contracts\\BiatecPoolProvider.algo.ts:445', pc: [1364, 1365] },
        { teal: 1335, source: 'contracts\\BiatecPoolProvider.algo.ts:445', pc: [1366, 1367] },
        { teal: 1336, source: 'contracts\\BiatecPoolProvider.algo.ts:445', pc: [1368] },
        { teal: 1337, source: 'contracts\\BiatecPoolProvider.algo.ts:445', pc: [1369] },
        { teal: 1338, source: 'contracts\\BiatecPoolProvider.algo.ts:444', pc: [1370] },
        { teal: 1341, source: 'contracts\\BiatecPoolProvider.algo.ts:445', pc: [1371] },
        { teal: 1342, source: 'contracts\\BiatecPoolProvider.algo.ts:445', pc: [1372, 1373, 1374] },
        { teal: 1343, source: 'contracts\\BiatecPoolProvider.algo.ts:446', pc: [1375, 1376] },
        { teal: 1344, source: 'contracts\\BiatecPoolProvider.algo.ts:446', pc: [1377, 1378] },
        { teal: 1345, source: 'contracts\\BiatecPoolProvider.algo.ts:446', pc: [1379] },
        { teal: 1346, source: 'contracts\\BiatecPoolProvider.algo.ts:446', pc: [1380] },
        { teal: 1347, source: 'contracts\\BiatecPoolProvider.algo.ts:445', pc: [1381] },
        { teal: 1350, source: 'contracts\\BiatecPoolProvider.algo.ts:446', pc: [1382] },
        { teal: 1351, source: 'contracts\\BiatecPoolProvider.algo.ts:446', pc: [1383, 1384, 1385] },
        { teal: 1352, source: 'contracts\\BiatecPoolProvider.algo.ts:447', pc: [1386, 1387] },
        { teal: 1353, source: 'contracts\\BiatecPoolProvider.algo.ts:447', pc: [1388, 1389] },
        { teal: 1354, source: 'contracts\\BiatecPoolProvider.algo.ts:447', pc: [1390] },
        { teal: 1355, source: 'contracts\\BiatecPoolProvider.algo.ts:447', pc: [1391] },
        { teal: 1356, source: 'contracts\\BiatecPoolProvider.algo.ts:446', pc: [1392] },
        { teal: 1359, source: 'contracts\\BiatecPoolProvider.algo.ts:447', pc: [1393] },
        { teal: 1360, source: 'contracts\\BiatecPoolProvider.algo.ts:447', pc: [1394, 1395, 1396] },
        { teal: 1361, source: 'contracts\\BiatecPoolProvider.algo.ts:448', pc: [1397, 1398] },
        { teal: 1362, source: 'contracts\\BiatecPoolProvider.algo.ts:448', pc: [1399, 1400] },
        { teal: 1363, source: 'contracts\\BiatecPoolProvider.algo.ts:448', pc: [1401] },
        { teal: 1364, source: 'contracts\\BiatecPoolProvider.algo.ts:448', pc: [1402] },
        { teal: 1365, source: 'contracts\\BiatecPoolProvider.algo.ts:447', pc: [1403] },
        { teal: 1368, source: 'contracts\\BiatecPoolProvider.algo.ts:448', pc: [1404] },
        { teal: 1369, source: 'contracts\\BiatecPoolProvider.algo.ts:448', pc: [1405, 1406, 1407] },
        { teal: 1370, source: 'contracts\\BiatecPoolProvider.algo.ts:449', pc: [1408, 1409] },
        { teal: 1371, source: 'contracts\\BiatecPoolProvider.algo.ts:449', pc: [1410, 1411] },
        { teal: 1372, source: 'contracts\\BiatecPoolProvider.algo.ts:449', pc: [1412] },
        { teal: 1373, source: 'contracts\\BiatecPoolProvider.algo.ts:449', pc: [1413] },
        { teal: 1374, source: 'contracts\\BiatecPoolProvider.algo.ts:448', pc: [1414] },
        { teal: 1377, source: 'contracts\\BiatecPoolProvider.algo.ts:449', pc: [1415] },
        { teal: 1378, source: 'contracts\\BiatecPoolProvider.algo.ts:449', pc: [1416, 1417, 1418] },
        { teal: 1379, source: 'contracts\\BiatecPoolProvider.algo.ts:450', pc: [1419, 1420] },
        { teal: 1380, source: 'contracts\\BiatecPoolProvider.algo.ts:450', pc: [1421, 1422] },
        { teal: 1381, source: 'contracts\\BiatecPoolProvider.algo.ts:450', pc: [1423] },
        { teal: 1382, source: 'contracts\\BiatecPoolProvider.algo.ts:450', pc: [1424] },
        { teal: 1383, source: 'contracts\\BiatecPoolProvider.algo.ts:449', pc: [1425] },
        { teal: 1386, source: 'contracts\\BiatecPoolProvider.algo.ts:450', pc: [1426] },
        { teal: 1387, source: 'contracts\\BiatecPoolProvider.algo.ts:450', pc: [1427, 1428, 1429] },
        { teal: 1388, source: 'contracts\\BiatecPoolProvider.algo.ts:451', pc: [1430, 1431] },
        { teal: 1389, source: 'contracts\\BiatecPoolProvider.algo.ts:451', pc: [1432, 1433] },
        { teal: 1390, source: 'contracts\\BiatecPoolProvider.algo.ts:451', pc: [1434] },
        { teal: 1391, source: 'contracts\\BiatecPoolProvider.algo.ts:451', pc: [1435] },
        { teal: 1392, source: 'contracts\\BiatecPoolProvider.algo.ts:450', pc: [1436] },
        { teal: 1395, source: 'contracts\\BiatecPoolProvider.algo.ts:451', pc: [1437] },
        { teal: 1396, source: 'contracts\\BiatecPoolProvider.algo.ts:451', pc: [1438, 1439, 1440] },
        { teal: 1397, source: 'contracts\\BiatecPoolProvider.algo.ts:452', pc: [1441, 1442] },
        { teal: 1398, source: 'contracts\\BiatecPoolProvider.algo.ts:452', pc: [1443, 1444] },
        { teal: 1399, source: 'contracts\\BiatecPoolProvider.algo.ts:452', pc: [1445] },
        { teal: 1400, source: 'contracts\\BiatecPoolProvider.algo.ts:452', pc: [1446] },
        { teal: 1401, source: 'contracts\\BiatecPoolProvider.algo.ts:451', pc: [1447] },
        { teal: 1404, source: 'contracts\\BiatecPoolProvider.algo.ts:452', pc: [1448] },
        { teal: 1405, source: 'contracts\\BiatecPoolProvider.algo.ts:452', pc: [1449, 1450, 1451] },
        { teal: 1406, source: 'contracts\\BiatecPoolProvider.algo.ts:453', pc: [1452, 1453] },
        { teal: 1407, source: 'contracts\\BiatecPoolProvider.algo.ts:453', pc: [1454, 1455] },
        { teal: 1408, source: 'contracts\\BiatecPoolProvider.algo.ts:453', pc: [1456] },
        { teal: 1409, source: 'contracts\\BiatecPoolProvider.algo.ts:453', pc: [1457] },
        { teal: 1410, source: 'contracts\\BiatecPoolProvider.algo.ts:452', pc: [1458] },
        { teal: 1413, source: 'contracts\\BiatecPoolProvider.algo.ts:443', pc: [1459, 1460, 1461] },
        { teal: 1418, source: 'contracts\\BiatecPoolProvider.algo.ts:455', pc: [1462] },
        {
          teal: 1421,
          source: 'contracts\\BiatecPoolProvider.algo.ts:455',
          errorMessage: 'App not in recently created apps',
          pc: [1463],
        },
        { teal: 1522, source: 'contracts\\BiatecPoolProvider.algo.ts:459', pc: [1464, 1465] },
        { teal: 1523, source: 'contracts\\BiatecPoolProvider.algo.ts:459', pc: [1466] },
        { teal: 1524, source: 'contracts\\BiatecPoolProvider.algo.ts:460', pc: [1467, 1468] },
        { teal: 1525, source: 'contracts\\BiatecPoolProvider.algo.ts:460', pc: [1469] },
        { teal: 1526, source: 'contracts\\BiatecPoolProvider.algo.ts:460', pc: [1470] },
        { teal: 1527, source: 'contracts\\BiatecPoolProvider.algo.ts:461', pc: [1471, 1472] },
        { teal: 1528, source: 'contracts\\BiatecPoolProvider.algo.ts:461', pc: [1473] },
        { teal: 1529, source: 'contracts\\BiatecPoolProvider.algo.ts:461', pc: [1474] },
        { teal: 1530, source: 'contracts\\BiatecPoolProvider.algo.ts:463', pc: [1475] },
        { teal: 1531, source: 'contracts\\BiatecPoolProvider.algo.ts:463', pc: [1476] },
        { teal: 1532, source: 'contracts\\BiatecPoolProvider.algo.ts:465', pc: [1477, 1478] },
        { teal: 1533, source: 'contracts\\BiatecPoolProvider.algo.ts:465', pc: [1479] },
        { teal: 1534, source: 'contracts\\BiatecPoolProvider.algo.ts:465', pc: [1480] },
        { teal: 1535, source: 'contracts\\BiatecPoolProvider.algo.ts:465', pc: [1481] },
        { teal: 1536, source: 'contracts\\BiatecPoolProvider.algo.ts:470', pc: [1482] },
        { teal: 1537, source: 'contracts\\BiatecPoolProvider.algo.ts:470', pc: [1483] },
        { teal: 1538, source: 'contracts\\BiatecPoolProvider.algo.ts:471', pc: [1484] },
        { teal: 1539, source: 'contracts\\BiatecPoolProvider.algo.ts:471', pc: [1485] },
        { teal: 1540, source: 'contracts\\BiatecPoolProvider.algo.ts:467', pc: [1486] },
        { teal: 1541, source: 'contracts\\BiatecPoolProvider.algo.ts:467', pc: [1487] },
        { teal: 1542, source: 'contracts\\BiatecPoolProvider.algo.ts:468', pc: [1488] },
        { teal: 1543, source: 'contracts\\BiatecPoolProvider.algo.ts:468', pc: [1489] },
        { teal: 1544, source: 'contracts\\BiatecPoolProvider.algo.ts:472', pc: [1490] },
        { teal: 1545, source: 'contracts\\BiatecPoolProvider.algo.ts:472', pc: [1491] },
        { teal: 1546, source: 'contracts\\BiatecPoolProvider.algo.ts:469', pc: [1492] },
        { teal: 1547, source: 'contracts\\BiatecPoolProvider.algo.ts:469', pc: [1493] },
        { teal: 1548, source: 'contracts\\BiatecPoolProvider.algo.ts:476', pc: [1494] },
        { teal: 1549, source: 'contracts\\BiatecPoolProvider.algo.ts:476', pc: [1495] },
        { teal: 1550, source: 'contracts\\BiatecPoolProvider.algo.ts:477', pc: [1496] },
        { teal: 1551, source: 'contracts\\BiatecPoolProvider.algo.ts:477', pc: [1497] },
        { teal: 1552, source: 'contracts\\BiatecPoolProvider.algo.ts:473', pc: [1498] },
        { teal: 1553, source: 'contracts\\BiatecPoolProvider.algo.ts:473', pc: [1499] },
        { teal: 1554, source: 'contracts\\BiatecPoolProvider.algo.ts:474', pc: [1500] },
        { teal: 1555, source: 'contracts\\BiatecPoolProvider.algo.ts:474', pc: [1501] },
        { teal: 1556, source: 'contracts\\BiatecPoolProvider.algo.ts:478', pc: [1502] },
        { teal: 1557, source: 'contracts\\BiatecPoolProvider.algo.ts:478', pc: [1503] },
        { teal: 1558, source: 'contracts\\BiatecPoolProvider.algo.ts:475', pc: [1504] },
        { teal: 1559, source: 'contracts\\BiatecPoolProvider.algo.ts:475', pc: [1505] },
        { teal: 1560, source: 'contracts\\BiatecPoolProvider.algo.ts:480', pc: [1506, 1507] },
        { teal: 1561, source: 'contracts\\BiatecPoolProvider.algo.ts:480', pc: [1508] },
        { teal: 1562, source: 'contracts\\BiatecPoolProvider.algo.ts:480', pc: [1509] },
        { teal: 1563, source: 'contracts\\BiatecPoolProvider.algo.ts:480', pc: [1510] },
        { teal: 1564, source: 'contracts\\BiatecPoolProvider.algo.ts:485', pc: [1511] },
        { teal: 1565, source: 'contracts\\BiatecPoolProvider.algo.ts:485', pc: [1512] },
        { teal: 1566, source: 'contracts\\BiatecPoolProvider.algo.ts:486', pc: [1513] },
        { teal: 1567, source: 'contracts\\BiatecPoolProvider.algo.ts:486', pc: [1514] },
        { teal: 1568, source: 'contracts\\BiatecPoolProvider.algo.ts:482', pc: [1515] },
        { teal: 1569, source: 'contracts\\BiatecPoolProvider.algo.ts:482', pc: [1516] },
        { teal: 1570, source: 'contracts\\BiatecPoolProvider.algo.ts:483', pc: [1517] },
        { teal: 1571, source: 'contracts\\BiatecPoolProvider.algo.ts:483', pc: [1518] },
        { teal: 1572, source: 'contracts\\BiatecPoolProvider.algo.ts:487', pc: [1519] },
        { teal: 1573, source: 'contracts\\BiatecPoolProvider.algo.ts:487', pc: [1520] },
        { teal: 1574, source: 'contracts\\BiatecPoolProvider.algo.ts:484', pc: [1521] },
        { teal: 1575, source: 'contracts\\BiatecPoolProvider.algo.ts:484', pc: [1522] },
        { teal: 1576, source: 'contracts\\BiatecPoolProvider.algo.ts:491', pc: [1523] },
        { teal: 1577, source: 'contracts\\BiatecPoolProvider.algo.ts:491', pc: [1524] },
        { teal: 1578, source: 'contracts\\BiatecPoolProvider.algo.ts:492', pc: [1525] },
        { teal: 1579, source: 'contracts\\BiatecPoolProvider.algo.ts:492', pc: [1526] },
        { teal: 1580, source: 'contracts\\BiatecPoolProvider.algo.ts:488', pc: [1527] },
        { teal: 1581, source: 'contracts\\BiatecPoolProvider.algo.ts:488', pc: [1528] },
        { teal: 1582, source: 'contracts\\BiatecPoolProvider.algo.ts:489', pc: [1529] },
        { teal: 1583, source: 'contracts\\BiatecPoolProvider.algo.ts:489', pc: [1530] },
        { teal: 1584, source: 'contracts\\BiatecPoolProvider.algo.ts:493', pc: [1531] },
        { teal: 1585, source: 'contracts\\BiatecPoolProvider.algo.ts:493', pc: [1532] },
        { teal: 1586, source: 'contracts\\BiatecPoolProvider.algo.ts:490', pc: [1533] },
        { teal: 1587, source: 'contracts\\BiatecPoolProvider.algo.ts:490', pc: [1534] },
        { teal: 1588, source: 'contracts\\BiatecPoolProvider.algo.ts:495', pc: [1535, 1536] },
        { teal: 1589, source: 'contracts\\BiatecPoolProvider.algo.ts:495', pc: [1537] },
        { teal: 1590, source: 'contracts\\BiatecPoolProvider.algo.ts:495', pc: [1538] },
        { teal: 1591, source: 'contracts\\BiatecPoolProvider.algo.ts:495', pc: [1539] },
        { teal: 1592, source: 'contracts\\BiatecPoolProvider.algo.ts:500', pc: [1540] },
        { teal: 1593, source: 'contracts\\BiatecPoolProvider.algo.ts:500', pc: [1541] },
        { teal: 1594, source: 'contracts\\BiatecPoolProvider.algo.ts:501', pc: [1542] },
        { teal: 1595, source: 'contracts\\BiatecPoolProvider.algo.ts:501', pc: [1543] },
        { teal: 1596, source: 'contracts\\BiatecPoolProvider.algo.ts:497', pc: [1544] },
        { teal: 1597, source: 'contracts\\BiatecPoolProvider.algo.ts:497', pc: [1545] },
        { teal: 1598, source: 'contracts\\BiatecPoolProvider.algo.ts:498', pc: [1546] },
        { teal: 1599, source: 'contracts\\BiatecPoolProvider.algo.ts:498', pc: [1547] },
        { teal: 1600, source: 'contracts\\BiatecPoolProvider.algo.ts:502', pc: [1548] },
        { teal: 1601, source: 'contracts\\BiatecPoolProvider.algo.ts:502', pc: [1549] },
        { teal: 1602, source: 'contracts\\BiatecPoolProvider.algo.ts:499', pc: [1550] },
        { teal: 1603, source: 'contracts\\BiatecPoolProvider.algo.ts:499', pc: [1551] },
        { teal: 1604, source: 'contracts\\BiatecPoolProvider.algo.ts:506', pc: [1552] },
        { teal: 1605, source: 'contracts\\BiatecPoolProvider.algo.ts:506', pc: [1553] },
        { teal: 1606, source: 'contracts\\BiatecPoolProvider.algo.ts:507', pc: [1554] },
        { teal: 1607, source: 'contracts\\BiatecPoolProvider.algo.ts:507', pc: [1555] },
        { teal: 1608, source: 'contracts\\BiatecPoolProvider.algo.ts:503', pc: [1556] },
        { teal: 1609, source: 'contracts\\BiatecPoolProvider.algo.ts:503', pc: [1557] },
        { teal: 1610, source: 'contracts\\BiatecPoolProvider.algo.ts:504', pc: [1558] },
        { teal: 1611, source: 'contracts\\BiatecPoolProvider.algo.ts:504', pc: [1559] },
        { teal: 1612, source: 'contracts\\BiatecPoolProvider.algo.ts:508', pc: [1560] },
        { teal: 1613, source: 'contracts\\BiatecPoolProvider.algo.ts:508', pc: [1561] },
        { teal: 1614, source: 'contracts\\BiatecPoolProvider.algo.ts:505', pc: [1562] },
        { teal: 1615, source: 'contracts\\BiatecPoolProvider.algo.ts:505', pc: [1563] },
        { teal: 1616, source: 'contracts\\BiatecPoolProvider.algo.ts:510', pc: [1564, 1565] },
        { teal: 1617, source: 'contracts\\BiatecPoolProvider.algo.ts:510', pc: [1566] },
        { teal: 1618, source: 'contracts\\BiatecPoolProvider.algo.ts:510', pc: [1567] },
        { teal: 1619, source: 'contracts\\BiatecPoolProvider.algo.ts:510', pc: [1568] },
        { teal: 1620, source: 'contracts\\BiatecPoolProvider.algo.ts:515', pc: [1569] },
        { teal: 1621, source: 'contracts\\BiatecPoolProvider.algo.ts:515', pc: [1570] },
        { teal: 1622, source: 'contracts\\BiatecPoolProvider.algo.ts:516', pc: [1571] },
        { teal: 1623, source: 'contracts\\BiatecPoolProvider.algo.ts:516', pc: [1572] },
        { teal: 1624, source: 'contracts\\BiatecPoolProvider.algo.ts:512', pc: [1573] },
        { teal: 1625, source: 'contracts\\BiatecPoolProvider.algo.ts:512', pc: [1574] },
        { teal: 1626, source: 'contracts\\BiatecPoolProvider.algo.ts:513', pc: [1575] },
        { teal: 1627, source: 'contracts\\BiatecPoolProvider.algo.ts:513', pc: [1576] },
        { teal: 1628, source: 'contracts\\BiatecPoolProvider.algo.ts:517', pc: [1577] },
        { teal: 1629, source: 'contracts\\BiatecPoolProvider.algo.ts:517', pc: [1578] },
        { teal: 1630, source: 'contracts\\BiatecPoolProvider.algo.ts:514', pc: [1579] },
        { teal: 1631, source: 'contracts\\BiatecPoolProvider.algo.ts:514', pc: [1580] },
        { teal: 1632, source: 'contracts\\BiatecPoolProvider.algo.ts:521', pc: [1581] },
        { teal: 1633, source: 'contracts\\BiatecPoolProvider.algo.ts:521', pc: [1582] },
        { teal: 1634, source: 'contracts\\BiatecPoolProvider.algo.ts:522', pc: [1583] },
        { teal: 1635, source: 'contracts\\BiatecPoolProvider.algo.ts:522', pc: [1584] },
        { teal: 1636, source: 'contracts\\BiatecPoolProvider.algo.ts:518', pc: [1585] },
        { teal: 1637, source: 'contracts\\BiatecPoolProvider.algo.ts:518', pc: [1586] },
        { teal: 1638, source: 'contracts\\BiatecPoolProvider.algo.ts:519', pc: [1587] },
        { teal: 1639, source: 'contracts\\BiatecPoolProvider.algo.ts:519', pc: [1588] },
        { teal: 1640, source: 'contracts\\BiatecPoolProvider.algo.ts:523', pc: [1589] },
        { teal: 1641, source: 'contracts\\BiatecPoolProvider.algo.ts:523', pc: [1590] },
        { teal: 1642, source: 'contracts\\BiatecPoolProvider.algo.ts:520', pc: [1591] },
        { teal: 1643, source: 'contracts\\BiatecPoolProvider.algo.ts:520', pc: [1592] },
        { teal: 1644, source: 'contracts\\BiatecPoolProvider.algo.ts:458', pc: [1593, 1594] },
        { teal: 1648, source: 'contracts\\BiatecPoolProvider.algo.ts:555', pc: [1595] },
        { teal: 1649, source: 'contracts\\BiatecPoolProvider.algo.ts:555', pc: [1596, 1597] },
        { teal: 1650, source: 'contracts\\BiatecPoolProvider.algo.ts:555', pc: [1598] },
        { teal: 1651, source: 'contracts\\BiatecPoolProvider.algo.ts:555', pc: [1599] },
        { teal: 1652, source: 'contracts\\BiatecPoolProvider.algo.ts:555', pc: [1600, 1601] },
        { teal: 1653, source: 'contracts\\BiatecPoolProvider.algo.ts:555', pc: [1602] },
        { teal: 1660, source: 'contracts\\BiatecPoolProvider.algo.ts:557', pc: [1603, 1604] },
        { teal: 1661, source: 'contracts\\BiatecPoolProvider.algo.ts:557', pc: [1605] },
        { teal: 1662, source: 'contracts\\BiatecPoolProvider.algo.ts:558', pc: [1606, 1607] },
        { teal: 1663, source: 'contracts\\BiatecPoolProvider.algo.ts:558', pc: [1608] },
        { teal: 1664, source: 'contracts\\BiatecPoolProvider.algo.ts:558', pc: [1609] },
        { teal: 1665, source: 'contracts\\BiatecPoolProvider.algo.ts:556', pc: [1610, 1611] },
        { teal: 1670, source: 'contracts\\BiatecPoolProvider.algo.ts:560', pc: [1612] },
        { teal: 1671, source: 'contracts\\BiatecPoolProvider.algo.ts:560', pc: [1613, 1614] },
        { teal: 1672, source: 'contracts\\BiatecPoolProvider.algo.ts:560', pc: [1615] },
        { teal: 1673, source: 'contracts\\BiatecPoolProvider.algo.ts:560', pc: [1616] },
        { teal: 1674, source: 'contracts\\BiatecPoolProvider.algo.ts:560', pc: [1617] },
        { teal: 1675, source: 'contracts\\BiatecPoolProvider.algo.ts:560', pc: [1618] },
        { teal: 1676, source: 'contracts\\BiatecPoolProvider.algo.ts:560', pc: [1619] },
        { teal: 1677, source: 'contracts\\BiatecPoolProvider.algo.ts:560', pc: [1620, 1621, 1622] },
        { teal: 1682, source: 'contracts\\BiatecPoolProvider.algo.ts:561', pc: [1623] },
        { teal: 1683, source: 'contracts\\BiatecPoolProvider.algo.ts:561', pc: [1624, 1625] },
        { teal: 1684, source: 'contracts\\BiatecPoolProvider.algo.ts:561', pc: [1626] },
        { teal: 1685, source: 'contracts\\BiatecPoolProvider.algo.ts:561', pc: [1627, 1628] },
        { teal: 1686, source: 'contracts\\BiatecPoolProvider.algo.ts:561', pc: [1629] },
        { teal: 1689, source: 'contracts\\BiatecPoolProvider.algo.ts:409', pc: [1630] },
        { teal: 1693, source: 'contracts\\BiatecPoolProvider.algo.ts:565', pc: [1631, 1632, 1633] },
        { teal: 1696, source: 'contracts\\BiatecPoolProvider.algo.ts:565', pc: [1634] },
        { teal: 1697, source: 'contracts\\BiatecPoolProvider.algo.ts:565', pc: [1635, 1636] },
        { teal: 1701, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1637] },
        { teal: 1702, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1638, 1639] },
        { teal: 1703, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1640] },
        { teal: 1704, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1641] },
        { teal: 1705, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1642, 1643] },
        { teal: 1709, source: 'contracts\\BiatecPoolProvider.algo.ts:577', pc: [1644, 1645] },
        { teal: 1710, source: 'contracts\\BiatecPoolProvider.algo.ts:577', pc: [1646] },
        { teal: 1711, source: 'contracts\\BiatecPoolProvider.algo.ts:577', pc: [1647] },
        { teal: 1712, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1648] },
        { teal: 1716, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1649, 1650] },
        { teal: 1717, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1651] },
        { teal: 1718, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1652] },
        { teal: 1719, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1653, 1654] },
        { teal: 1720, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1655] },
        { teal: 1721, source: 'contracts\\BiatecPoolProvider.algo.ts:577', pc: [1656] },
        { teal: 1722, source: 'contracts\\BiatecPoolProvider.algo.ts:577', pc: [1657] },
        { teal: 1723, source: 'contracts\\BiatecPoolProvider.algo.ts:577', pc: [1658] },
        { teal: 1727, source: 'contracts\\BiatecPoolProvider.algo.ts:578', pc: [1659, 1660] },
        { teal: 1728, source: 'contracts\\BiatecPoolProvider.algo.ts:578', pc: [1661] },
        { teal: 1729, source: 'contracts\\BiatecPoolProvider.algo.ts:578', pc: [1662] },
        { teal: 1730, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1663] },
        { teal: 1734, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1664, 1665] },
        { teal: 1735, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1666] },
        { teal: 1736, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1667] },
        { teal: 1737, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1668, 1669] },
        { teal: 1738, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1670] },
        { teal: 1739, source: 'contracts\\BiatecPoolProvider.algo.ts:578', pc: [1671] },
        { teal: 1740, source: 'contracts\\BiatecPoolProvider.algo.ts:578', pc: [1672] },
        { teal: 1741, source: 'contracts\\BiatecPoolProvider.algo.ts:578', pc: [1673] },
        { teal: 1745, source: 'contracts\\BiatecPoolProvider.algo.ts:579', pc: [1674, 1675] },
        { teal: 1746, source: 'contracts\\BiatecPoolProvider.algo.ts:579', pc: [1676] },
        { teal: 1747, source: 'contracts\\BiatecPoolProvider.algo.ts:579', pc: [1677] },
        { teal: 1748, source: 'contracts\\BiatecPoolProvider.algo.ts:579', pc: [1678] },
        { teal: 1749, source: 'contracts\\BiatecPoolProvider.algo.ts:579', pc: [1679, 1680, 1681] },
        { teal: 1750, source: 'contracts\\BiatecPoolProvider.algo.ts:579', pc: [1682, 1683] },
        { teal: 1751, source: 'contracts\\BiatecPoolProvider.algo.ts:579', pc: [1684] },
        { teal: 1752, source: 'contracts\\BiatecPoolProvider.algo.ts:579', pc: [1685] },
        { teal: 1753, source: 'contracts\\BiatecPoolProvider.algo.ts:579', pc: [1686] },
        { teal: 1756, source: 'contracts\\BiatecPoolProvider.algo.ts:579', pc: [1687] },
        { teal: 1760, source: 'contracts\\BiatecPoolProvider.algo.ts:581', pc: [1688, 1689] },
        { teal: 1761, source: 'contracts\\BiatecPoolProvider.algo.ts:581', pc: [1690, 1691] },
        { teal: 1762, source: 'contracts\\BiatecPoolProvider.algo.ts:581', pc: [1692] },
        { teal: 1763, source: 'contracts\\BiatecPoolProvider.algo.ts:581', pc: [1693, 1694] },
        { teal: 1767, source: 'contracts\\BiatecPoolProvider.algo.ts:582', pc: [1695, 1696] },
        { teal: 1768, source: 'contracts\\BiatecPoolProvider.algo.ts:582', pc: [1697, 1698] },
        { teal: 1769, source: 'contracts\\BiatecPoolProvider.algo.ts:582', pc: [1699] },
        { teal: 1770, source: 'contracts\\BiatecPoolProvider.algo.ts:582', pc: [1700, 1701] },
        { teal: 1774, source: 'contracts\\BiatecPoolProvider.algo.ts:584', pc: [1702, 1703] },
        { teal: 1775, source: 'contracts\\BiatecPoolProvider.algo.ts:584', pc: [1704, 1705] },
        { teal: 1776, source: 'contracts\\BiatecPoolProvider.algo.ts:584', pc: [1706] },
        { teal: 1777, source: 'contracts\\BiatecPoolProvider.algo.ts:584', pc: [1707, 1708] },
        { teal: 1778, source: 'contracts\\BiatecPoolProvider.algo.ts:584', pc: [1709] },
        { teal: 1779, source: 'contracts\\BiatecPoolProvider.algo.ts:584', pc: [1710, 1711] },
        { teal: 1783, source: 'contracts\\BiatecPoolProvider.algo.ts:585', pc: [1712, 1713] },
        { teal: 1784, source: 'contracts\\BiatecPoolProvider.algo.ts:585', pc: [1714] },
        { teal: 1785, source: 'contracts\\BiatecPoolProvider.algo.ts:585', pc: [1715, 1716] },
        { teal: 1789, source: 'contracts\\BiatecPoolProvider.algo.ts:586', pc: [1717, 1718] },
        { teal: 1790, source: 'contracts\\BiatecPoolProvider.algo.ts:586', pc: [1719] },
        { teal: 1791, source: 'contracts\\BiatecPoolProvider.algo.ts:586', pc: [1720, 1721] },
        { teal: 1795, source: 'contracts\\BiatecPoolProvider.algo.ts:587', pc: [1722, 1723] },
        { teal: 1796, source: 'contracts\\BiatecPoolProvider.algo.ts:587', pc: [1724, 1725] },
        { teal: 1797, source: 'contracts\\BiatecPoolProvider.algo.ts:587', pc: [1726] },
        { teal: 1798, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1727, 1728] },
        { teal: 1799, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1729, 1730] },
        { teal: 1800, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1731] },
        { teal: 1804, source: 'contracts\\BiatecPoolProvider.algo.ts:588', pc: [1732, 1733] },
        { teal: 1805, source: 'contracts\\BiatecPoolProvider.algo.ts:588', pc: [1734] },
        { teal: 1806, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1735] },
        { teal: 1810, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1736, 1737] },
        { teal: 1811, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1738] },
        { teal: 1812, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1739] },
        { teal: 1813, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1740, 1741] },
        { teal: 1814, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1742] },
        { teal: 1815, source: 'contracts\\BiatecPoolProvider.algo.ts:588', pc: [1743] },
        { teal: 1819, source: 'contracts\\BiatecPoolProvider.algo.ts:588', pc: [1744, 1745] },
        { teal: 1820, source: 'contracts\\BiatecPoolProvider.algo.ts:588', pc: [1746] },
        { teal: 1821, source: 'contracts\\BiatecPoolProvider.algo.ts:588', pc: [1747] },
        { teal: 1822, source: 'contracts\\BiatecPoolProvider.algo.ts:588', pc: [1748, 1749] },
        { teal: 1826, source: 'contracts\\BiatecPoolProvider.algo.ts:589', pc: [1750, 1751] },
        { teal: 1827, source: 'contracts\\BiatecPoolProvider.algo.ts:589', pc: [1752, 1753] },
        { teal: 1828, source: 'contracts\\BiatecPoolProvider.algo.ts:589', pc: [1754] },
        { teal: 1829, source: 'contracts\\BiatecPoolProvider.algo.ts:589', pc: [1755] },
        { teal: 1830, source: 'contracts\\BiatecPoolProvider.algo.ts:589', pc: [1756, 1757] },
        { teal: 1835, source: 'contracts\\BiatecPoolProvider.algo.ts:592', pc: [1758, 1759] },
        { teal: 1836, source: 'contracts\\BiatecPoolProvider.algo.ts:592', pc: [1760, 1761] },
        { teal: 1837, source: 'contracts\\BiatecPoolProvider.algo.ts:592', pc: [1762] },
        { teal: 1838, source: 'contracts\\BiatecPoolProvider.algo.ts:592', pc: [1763, 1764, 1765] },
        { teal: 1843, source: 'contracts\\BiatecPoolProvider.algo.ts:594', pc: [1766, 1767] },
        { teal: 1844, source: 'contracts\\BiatecPoolProvider.algo.ts:594', pc: [1768, 1769] },
        { teal: 1845, source: 'contracts\\BiatecPoolProvider.algo.ts:594', pc: [1770] },
        { teal: 1846, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1771] },
        { teal: 1850, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1772, 1773] },
        { teal: 1851, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1774] },
        { teal: 1852, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1775] },
        { teal: 1853, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1776, 1777] },
        { teal: 1854, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1778] },
        { teal: 1855, source: 'contracts\\BiatecPoolProvider.algo.ts:594', pc: [1779] },
        { teal: 1856, source: 'contracts\\BiatecPoolProvider.algo.ts:594', pc: [1780] },
        { teal: 1857, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1781, 1782] },
        { teal: 1858, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1783, 1784] },
        { teal: 1859, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1785] },
        { teal: 1863, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1786, 1787] },
        { teal: 1864, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1788, 1789] },
        { teal: 1865, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1790] },
        { teal: 1866, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1791] },
        { teal: 1870, source: 'contracts\\BiatecPoolProvider.algo.ts:596', pc: [1792, 1793] },
        { teal: 1871, source: 'contracts\\BiatecPoolProvider.algo.ts:596', pc: [1794] },
        { teal: 1872, source: 'contracts\\BiatecPoolProvider.algo.ts:596', pc: [1795] },
        { teal: 1873, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1796] },
        { teal: 1877, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1797, 1798] },
        { teal: 1878, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1799] },
        { teal: 1879, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1800] },
        { teal: 1880, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1801, 1802] },
        { teal: 1881, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1803] },
        { teal: 1882, source: 'contracts\\BiatecPoolProvider.algo.ts:596', pc: [1804] },
        { teal: 1883, source: 'contracts\\BiatecPoolProvider.algo.ts:596', pc: [1805] },
        { teal: 1884, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1806, 1807] },
        { teal: 1885, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1808, 1809] },
        { teal: 1886, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1810] },
        { teal: 1890, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1811, 1812] },
        { teal: 1891, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1813] },
        { teal: 1892, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1814] },
        { teal: 1893, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1815] },
        { teal: 1897, source: 'contracts\\BiatecPoolProvider.algo.ts:598', pc: [1816, 1817] },
        { teal: 1898, source: 'contracts\\BiatecPoolProvider.algo.ts:598', pc: [1818, 1819] },
        { teal: 1899, source: 'contracts\\BiatecPoolProvider.algo.ts:598', pc: [1820] },
        { teal: 1900, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1821] },
        { teal: 1904, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1822, 1823] },
        { teal: 1905, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1824] },
        { teal: 1906, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1825] },
        { teal: 1907, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1826, 1827] },
        { teal: 1908, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1828] },
        { teal: 1909, source: 'contracts\\BiatecPoolProvider.algo.ts:598', pc: [1829] },
        { teal: 1910, source: 'contracts\\BiatecPoolProvider.algo.ts:598', pc: [1830] },
        { teal: 1911, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1831, 1832] },
        { teal: 1912, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1833, 1834] },
        { teal: 1913, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1835] },
        { teal: 1917, source: 'contracts\\BiatecPoolProvider.algo.ts:599', pc: [1836, 1837] },
        { teal: 1918, source: 'contracts\\BiatecPoolProvider.algo.ts:599', pc: [1838, 1839] },
        { teal: 1919, source: 'contracts\\BiatecPoolProvider.algo.ts:599', pc: [1840] },
        { teal: 1920, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1841] },
        { teal: 1924, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1842, 1843] },
        { teal: 1925, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1844] },
        { teal: 1926, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1845] },
        { teal: 1927, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1846, 1847] },
        { teal: 1928, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1848] },
        { teal: 1929, source: 'contracts\\BiatecPoolProvider.algo.ts:599', pc: [1849] },
        { teal: 1930, source: 'contracts\\BiatecPoolProvider.algo.ts:599', pc: [1850] },
        { teal: 1931, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1851, 1852] },
        { teal: 1932, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1853, 1854] },
        { teal: 1933, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1855] },
        { teal: 1937, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1856, 1857] },
        { teal: 1938, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1858, 1859] },
        { teal: 1939, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1860] },
        { teal: 1940, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1861] },
        { teal: 1944, source: 'contracts\\BiatecPoolProvider.algo.ts:601', pc: [1862, 1863] },
        { teal: 1945, source: 'contracts\\BiatecPoolProvider.algo.ts:601', pc: [1864, 1865] },
        { teal: 1946, source: 'contracts\\BiatecPoolProvider.algo.ts:601', pc: [1866] },
        { teal: 1947, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1867] },
        { teal: 1951, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1868, 1869] },
        { teal: 1952, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1870] },
        { teal: 1953, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1871] },
        { teal: 1954, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1872, 1873] },
        { teal: 1955, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1874] },
        { teal: 1956, source: 'contracts\\BiatecPoolProvider.algo.ts:601', pc: [1875] },
        { teal: 1957, source: 'contracts\\BiatecPoolProvider.algo.ts:601', pc: [1876] },
        { teal: 1958, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1877, 1878] },
        { teal: 1959, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1879, 1880] },
        { teal: 1960, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1881] },
        { teal: 1964, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1882, 1883] },
        { teal: 1965, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1884, 1885] },
        { teal: 1966, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1886] },
        { teal: 1967, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1887] },
        { teal: 1971, source: 'contracts\\BiatecPoolProvider.algo.ts:603', pc: [1888, 1889] },
        { teal: 1972, source: 'contracts\\BiatecPoolProvider.algo.ts:603', pc: [1890, 1891] },
        { teal: 1973, source: 'contracts\\BiatecPoolProvider.algo.ts:603', pc: [1892] },
        { teal: 1974, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1893] },
        { teal: 1978, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1894, 1895] },
        { teal: 1979, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1896] },
        { teal: 1980, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1897] },
        { teal: 1981, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1898, 1899] },
        { teal: 1982, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1900] },
        { teal: 1983, source: 'contracts\\BiatecPoolProvider.algo.ts:603', pc: [1901] },
        { teal: 1984, source: 'contracts\\BiatecPoolProvider.algo.ts:603', pc: [1902] },
        { teal: 1985, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1903, 1904] },
        { teal: 1986, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1905, 1906] },
        { teal: 1987, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1907] },
        { teal: 1992, source: 'contracts\\BiatecPoolProvider.algo.ts:604', pc: [1908, 1909] },
        { teal: 1993, source: 'contracts\\BiatecPoolProvider.algo.ts:604', pc: [1910] },
        { teal: 1994, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1911] },
        { teal: 1998, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1912, 1913] },
        { teal: 1999, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1914] },
        { teal: 2000, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1915] },
        { teal: 2001, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1916, 1917] },
        { teal: 2002, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1918] },
        { teal: 2003, source: 'contracts\\BiatecPoolProvider.algo.ts:604', pc: [1919] },
        { teal: 2004, source: 'contracts\\BiatecPoolProvider.algo.ts:604', pc: [1920] },
        { teal: 2005, source: 'contracts\\BiatecPoolProvider.algo.ts:604', pc: [1921] },
        { teal: 2006, source: 'contracts\\BiatecPoolProvider.algo.ts:604', pc: [1922, 1923, 1924] },
        { teal: 2011, source: 'contracts\\BiatecPoolProvider.algo.ts:605', pc: [1925, 1926] },
        { teal: 2012, source: 'contracts\\BiatecPoolProvider.algo.ts:605', pc: [1927, 1928] },
        { teal: 2013, source: 'contracts\\BiatecPoolProvider.algo.ts:605', pc: [1929] },
        { teal: 2014, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1930, 1931] },
        { teal: 2015, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1932, 1933] },
        { teal: 2016, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1934] },
        { teal: 2017, source: 'contracts\\BiatecPoolProvider.algo.ts:604', pc: [1935, 1936, 1937] },
        { teal: 2022, source: 'contracts\\BiatecPoolProvider.algo.ts:607', pc: [1938, 1939] },
        { teal: 2023, source: 'contracts\\BiatecPoolProvider.algo.ts:607', pc: [1940, 1941] },
        { teal: 2024, source: 'contracts\\BiatecPoolProvider.algo.ts:607', pc: [1942, 1943] },
        { teal: 2025, source: 'contracts\\BiatecPoolProvider.algo.ts:607', pc: [1944] },
        { teal: 2026, source: 'contracts\\BiatecPoolProvider.algo.ts:607', pc: [1945] },
        { teal: 2027, source: 'contracts\\BiatecPoolProvider.algo.ts:607', pc: [1946] },
        { teal: 2028, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1947, 1948] },
        { teal: 2029, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1949, 1950] },
        { teal: 2030, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1951] },
        { teal: 2037, source: 'contracts\\BiatecPoolProvider.algo.ts:611', pc: [1952, 1953] },
        { teal: 2038, source: 'contracts\\BiatecPoolProvider.algo.ts:611', pc: [1954] },
        { teal: 2039, source: 'contracts\\BiatecPoolProvider.algo.ts:611', pc: [1955] },
        { teal: 2040, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1956] },
        { teal: 2044, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1957, 1958] },
        { teal: 2045, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1959] },
        { teal: 2046, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1960] },
        { teal: 2047, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1961, 1962] },
        { teal: 2048, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1963] },
        { teal: 2049, source: 'contracts\\BiatecPoolProvider.algo.ts:611', pc: [1964] },
        { teal: 2050, source: 'contracts\\BiatecPoolProvider.algo.ts:611', pc: [1965, 1966] },
        { teal: 2051, source: 'contracts\\BiatecPoolProvider.algo.ts:611', pc: [1967] },
        { teal: 2052, source: 'contracts\\BiatecPoolProvider.algo.ts:611', pc: [1968] },
        { teal: 2053, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1969, 1970] },
        { teal: 2054, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1971, 1972] },
        { teal: 2055, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1973] },
        { teal: 2059, source: 'contracts\\BiatecPoolProvider.algo.ts:612', pc: [1974] },
        { teal: 2060, source: 'contracts\\BiatecPoolProvider.algo.ts:612', pc: [1975] },
        { teal: 2061, source: 'contracts\\BiatecPoolProvider.algo.ts:612', pc: [1976] },
        { teal: 2062, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1977] },
        { teal: 2066, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1978, 1979] },
        { teal: 2067, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1980] },
        { teal: 2068, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1981] },
        { teal: 2069, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1982, 1983] },
        { teal: 2070, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1984] },
        { teal: 2071, source: 'contracts\\BiatecPoolProvider.algo.ts:612', pc: [1985] },
        { teal: 2072, source: 'contracts\\BiatecPoolProvider.algo.ts:612', pc: [1986, 1987] },
        { teal: 2073, source: 'contracts\\BiatecPoolProvider.algo.ts:612', pc: [1988] },
        { teal: 2074, source: 'contracts\\BiatecPoolProvider.algo.ts:612', pc: [1989] },
        { teal: 2075, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1990, 1991] },
        { teal: 2076, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1992, 1993] },
        { teal: 2077, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1994] },
        { teal: 2081, source: 'contracts\\BiatecPoolProvider.algo.ts:613', pc: [1995, 1996] },
        { teal: 2082, source: 'contracts\\BiatecPoolProvider.algo.ts:613', pc: [1997] },
        { teal: 2083, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1998] },
        { teal: 2087, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [1999, 2000] },
        { teal: 2088, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2001] },
        { teal: 2089, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2002] },
        { teal: 2090, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2003, 2004] },
        { teal: 2091, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2005] },
        { teal: 2092, source: 'contracts\\BiatecPoolProvider.algo.ts:613', pc: [2006] },
        { teal: 2093, source: 'contracts\\BiatecPoolProvider.algo.ts:613', pc: [2007] },
        { teal: 2094, source: 'contracts\\BiatecPoolProvider.algo.ts:613', pc: [2008, 2009] },
        { teal: 2098, source: 'contracts\\BiatecPoolProvider.algo.ts:614', pc: [2010, 2011] },
        { teal: 2099, source: 'contracts\\BiatecPoolProvider.algo.ts:614', pc: [2012] },
        { teal: 2100, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2013] },
        { teal: 2104, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2014, 2015] },
        { teal: 2105, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2016] },
        { teal: 2106, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2017] },
        { teal: 2107, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2018, 2019] },
        { teal: 2108, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2020] },
        { teal: 2109, source: 'contracts\\BiatecPoolProvider.algo.ts:614', pc: [2021] },
        { teal: 2110, source: 'contracts\\BiatecPoolProvider.algo.ts:614', pc: [2022] },
        { teal: 2111, source: 'contracts\\BiatecPoolProvider.algo.ts:614', pc: [2023, 2024] },
        { teal: 2116, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2025, 2026] },
        { teal: 2117, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2027, 2028] },
        { teal: 2118, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2029, 2030] },
        { teal: 2119, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2031] },
        { teal: 2120, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2032, 2033] },
        { teal: 2121, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2034, 2035] },
        { teal: 2122, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2036] },
        { teal: 2123, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2037] },
        { teal: 2124, source: 'contracts\\BiatecPoolProvider.algo.ts:616', pc: [2038, 2039] },
        { teal: 2125, source: 'contracts\\BiatecPoolProvider.algo.ts:616', pc: [2040, 2041] },
        { teal: 2126, source: 'contracts\\BiatecPoolProvider.algo.ts:616', pc: [2042] },
        { teal: 2127, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2043] },
        { teal: 2128, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2044] },
        { teal: 2129, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2045] },
        { teal: 2130, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2046] },
        { teal: 2131, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2047] },
        {
          teal: 2134,
          source: 'contracts\\BiatecPoolProvider.algo.ts:615',
          errorMessage:
            '((period1NowVolumeBUint256 * period1NowVWAPUint256 + amountBUint256 * priceUint256) /\r\\n      (period1NowVolumeBUint256 + amountBUint256)) as uint64 overflowed 64 bits',
          pc: [2048],
        },
        { teal: 2135, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2049, 2050] },
        { teal: 2136, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2051] },
        { teal: 2137, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2052] },
        { teal: 2138, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2053] },
        { teal: 2139, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2054] },
        { teal: 2140, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2055] },
        { teal: 2141, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2056] },
        { teal: 2142, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2057] },
        { teal: 2143, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2058] },
        { teal: 2144, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2059] },
        { teal: 2145, source: 'contracts\\BiatecPoolProvider.algo.ts:615', pc: [2060] },
        { teal: 2146, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2061, 2062] },
        { teal: 2147, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2063, 2064] },
        { teal: 2148, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2065] },
        { teal: 2152, source: 'contracts\\BiatecPoolProvider.algo.ts:617', pc: [2066, 2067] },
        { teal: 2153, source: 'contracts\\BiatecPoolProvider.algo.ts:617', pc: [2068] },
        { teal: 2154, source: 'contracts\\BiatecPoolProvider.algo.ts:617', pc: [2069] },
        { teal: 2155, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2070] },
        { teal: 2159, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2071, 2072] },
        { teal: 2160, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2073] },
        { teal: 2161, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2074] },
        { teal: 2162, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2075, 2076] },
        { teal: 2163, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2077] },
        { teal: 2164, source: 'contracts\\BiatecPoolProvider.algo.ts:617', pc: [2078] },
        { teal: 2165, source: 'contracts\\BiatecPoolProvider.algo.ts:617', pc: [2079, 2080] },
        { teal: 2166, source: 'contracts\\BiatecPoolProvider.algo.ts:617', pc: [2081] },
        { teal: 2167, source: 'contracts\\BiatecPoolProvider.algo.ts:617', pc: [2082] },
        { teal: 2168, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2083, 2084] },
        { teal: 2169, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2085, 2086] },
        { teal: 2170, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2087] },
        { teal: 2174, source: 'contracts\\BiatecPoolProvider.algo.ts:618', pc: [2088, 2089] },
        { teal: 2175, source: 'contracts\\BiatecPoolProvider.algo.ts:618', pc: [2090] },
        { teal: 2176, source: 'contracts\\BiatecPoolProvider.algo.ts:618', pc: [2091] },
        { teal: 2177, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2092] },
        { teal: 2181, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2093, 2094] },
        { teal: 2182, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2095] },
        { teal: 2183, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2096] },
        { teal: 2184, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2097, 2098] },
        { teal: 2185, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2099] },
        { teal: 2186, source: 'contracts\\BiatecPoolProvider.algo.ts:618', pc: [2100] },
        { teal: 2187, source: 'contracts\\BiatecPoolProvider.algo.ts:618', pc: [2101, 2102] },
        { teal: 2188, source: 'contracts\\BiatecPoolProvider.algo.ts:618', pc: [2103] },
        { teal: 2189, source: 'contracts\\BiatecPoolProvider.algo.ts:618', pc: [2104] },
        { teal: 2190, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2105, 2106] },
        { teal: 2191, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2107, 2108] },
        { teal: 2192, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2109] },
        { teal: 2196, source: 'contracts\\BiatecPoolProvider.algo.ts:621', pc: [2110, 2111] },
        { teal: 2197, source: 'contracts\\BiatecPoolProvider.algo.ts:621', pc: [2112] },
        { teal: 2198, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2113] },
        { teal: 2202, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2114, 2115] },
        { teal: 2203, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2116] },
        { teal: 2204, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2117] },
        { teal: 2205, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2118, 2119] },
        { teal: 2206, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2120] },
        { teal: 2207, source: 'contracts\\BiatecPoolProvider.algo.ts:621', pc: [2121] },
        { teal: 2211, source: 'contracts\\BiatecPoolProvider.algo.ts:621', pc: [2122, 2123] },
        { teal: 2212, source: 'contracts\\BiatecPoolProvider.algo.ts:621', pc: [2124] },
        { teal: 2213, source: 'contracts\\BiatecPoolProvider.algo.ts:621', pc: [2125] },
        { teal: 2214, source: 'contracts\\BiatecPoolProvider.algo.ts:621', pc: [2126, 2127] },
        { teal: 2218, source: 'contracts\\BiatecPoolProvider.algo.ts:622', pc: [2128, 2129] },
        { teal: 2219, source: 'contracts\\BiatecPoolProvider.algo.ts:622', pc: [2130, 2131] },
        { teal: 2220, source: 'contracts\\BiatecPoolProvider.algo.ts:622', pc: [2132] },
        { teal: 2221, source: 'contracts\\BiatecPoolProvider.algo.ts:622', pc: [2133] },
        { teal: 2222, source: 'contracts\\BiatecPoolProvider.algo.ts:622', pc: [2134, 2135] },
        { teal: 2227, source: 'contracts\\BiatecPoolProvider.algo.ts:625', pc: [2136, 2137] },
        { teal: 2228, source: 'contracts\\BiatecPoolProvider.algo.ts:625', pc: [2138, 2139] },
        { teal: 2229, source: 'contracts\\BiatecPoolProvider.algo.ts:625', pc: [2140] },
        { teal: 2230, source: 'contracts\\BiatecPoolProvider.algo.ts:625', pc: [2141, 2142, 2143] },
        { teal: 2235, source: 'contracts\\BiatecPoolProvider.algo.ts:627', pc: [2144, 2145] },
        { teal: 2236, source: 'contracts\\BiatecPoolProvider.algo.ts:627', pc: [2146, 2147] },
        { teal: 2237, source: 'contracts\\BiatecPoolProvider.algo.ts:627', pc: [2148] },
        { teal: 2238, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2149] },
        { teal: 2242, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2150, 2151] },
        { teal: 2243, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2152] },
        { teal: 2244, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2153] },
        { teal: 2245, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2154, 2155] },
        { teal: 2246, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2156] },
        { teal: 2247, source: 'contracts\\BiatecPoolProvider.algo.ts:627', pc: [2157] },
        { teal: 2248, source: 'contracts\\BiatecPoolProvider.algo.ts:627', pc: [2158] },
        { teal: 2249, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2159, 2160] },
        { teal: 2250, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2161, 2162] },
        { teal: 2251, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2163] },
        { teal: 2255, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2164, 2165] },
        { teal: 2256, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2166, 2167] },
        { teal: 2257, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2168] },
        { teal: 2258, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2169] },
        { teal: 2262, source: 'contracts\\BiatecPoolProvider.algo.ts:629', pc: [2170, 2171] },
        { teal: 2263, source: 'contracts\\BiatecPoolProvider.algo.ts:629', pc: [2172, 2173] },
        { teal: 2264, source: 'contracts\\BiatecPoolProvider.algo.ts:629', pc: [2174] },
        { teal: 2265, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2175] },
        { teal: 2269, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2176, 2177] },
        { teal: 2270, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2178] },
        { teal: 2271, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2179] },
        { teal: 2272, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2180, 2181] },
        { teal: 2273, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2182] },
        { teal: 2274, source: 'contracts\\BiatecPoolProvider.algo.ts:629', pc: [2183] },
        { teal: 2275, source: 'contracts\\BiatecPoolProvider.algo.ts:629', pc: [2184] },
        { teal: 2276, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2185, 2186] },
        { teal: 2277, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2187, 2188] },
        { teal: 2278, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2189] },
        { teal: 2282, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2190, 2191] },
        { teal: 2283, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2192, 2193] },
        { teal: 2284, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2194] },
        { teal: 2285, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2195] },
        { teal: 2289, source: 'contracts\\BiatecPoolProvider.algo.ts:631', pc: [2196, 2197] },
        { teal: 2290, source: 'contracts\\BiatecPoolProvider.algo.ts:631', pc: [2198, 2199] },
        { teal: 2291, source: 'contracts\\BiatecPoolProvider.algo.ts:631', pc: [2200] },
        { teal: 2292, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2201] },
        { teal: 2296, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2202, 2203] },
        { teal: 2297, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2204] },
        { teal: 2298, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2205] },
        { teal: 2299, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2206, 2207] },
        { teal: 2300, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2208] },
        { teal: 2301, source: 'contracts\\BiatecPoolProvider.algo.ts:631', pc: [2209] },
        { teal: 2302, source: 'contracts\\BiatecPoolProvider.algo.ts:631', pc: [2210] },
        { teal: 2303, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2211, 2212] },
        { teal: 2304, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2213, 2214] },
        { teal: 2305, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2215] },
        { teal: 2309, source: 'contracts\\BiatecPoolProvider.algo.ts:632', pc: [2216, 2217] },
        { teal: 2310, source: 'contracts\\BiatecPoolProvider.algo.ts:632', pc: [2218, 2219] },
        { teal: 2311, source: 'contracts\\BiatecPoolProvider.algo.ts:632', pc: [2220] },
        { teal: 2312, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2221] },
        { teal: 2316, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2222, 2223] },
        { teal: 2317, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2224] },
        { teal: 2318, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2225] },
        { teal: 2319, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2226, 2227] },
        { teal: 2320, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2228] },
        { teal: 2321, source: 'contracts\\BiatecPoolProvider.algo.ts:632', pc: [2229] },
        { teal: 2322, source: 'contracts\\BiatecPoolProvider.algo.ts:632', pc: [2230] },
        { teal: 2323, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2231, 2232] },
        { teal: 2324, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2233, 2234] },
        { teal: 2325, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2235] },
        { teal: 2329, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2236, 2237] },
        { teal: 2330, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2238, 2239] },
        { teal: 2331, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2240] },
        { teal: 2332, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2241] },
        { teal: 2336, source: 'contracts\\BiatecPoolProvider.algo.ts:634', pc: [2242, 2243] },
        { teal: 2337, source: 'contracts\\BiatecPoolProvider.algo.ts:634', pc: [2244, 2245] },
        { teal: 2338, source: 'contracts\\BiatecPoolProvider.algo.ts:634', pc: [2246] },
        { teal: 2339, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2247] },
        { teal: 2343, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2248, 2249] },
        { teal: 2344, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2250] },
        { teal: 2345, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2251] },
        { teal: 2346, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2252, 2253] },
        { teal: 2347, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2254] },
        { teal: 2348, source: 'contracts\\BiatecPoolProvider.algo.ts:634', pc: [2255] },
        { teal: 2349, source: 'contracts\\BiatecPoolProvider.algo.ts:634', pc: [2256] },
        { teal: 2350, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2257, 2258] },
        { teal: 2351, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2259, 2260] },
        { teal: 2352, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2261] },
        { teal: 2356, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2262, 2263] },
        { teal: 2357, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2264, 2265] },
        { teal: 2358, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2266] },
        { teal: 2359, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2267] },
        { teal: 2363, source: 'contracts\\BiatecPoolProvider.algo.ts:636', pc: [2268, 2269] },
        { teal: 2364, source: 'contracts\\BiatecPoolProvider.algo.ts:636', pc: [2270, 2271] },
        { teal: 2365, source: 'contracts\\BiatecPoolProvider.algo.ts:636', pc: [2272] },
        { teal: 2366, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2273] },
        { teal: 2370, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2274, 2275] },
        { teal: 2371, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2276] },
        { teal: 2372, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2277] },
        { teal: 2373, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2278, 2279] },
        { teal: 2374, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2280] },
        { teal: 2375, source: 'contracts\\BiatecPoolProvider.algo.ts:636', pc: [2281] },
        { teal: 2376, source: 'contracts\\BiatecPoolProvider.algo.ts:636', pc: [2282] },
        { teal: 2377, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2283, 2284] },
        { teal: 2378, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2285, 2286] },
        { teal: 2379, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2287] },
        { teal: 2384, source: 'contracts\\BiatecPoolProvider.algo.ts:637', pc: [2288, 2289] },
        { teal: 2385, source: 'contracts\\BiatecPoolProvider.algo.ts:637', pc: [2290] },
        { teal: 2386, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2291] },
        { teal: 2390, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2292, 2293] },
        { teal: 2391, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2294] },
        { teal: 2392, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2295] },
        { teal: 2393, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2296, 2297] },
        { teal: 2394, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2298] },
        { teal: 2395, source: 'contracts\\BiatecPoolProvider.algo.ts:637', pc: [2299] },
        { teal: 2396, source: 'contracts\\BiatecPoolProvider.algo.ts:637', pc: [2300] },
        { teal: 2397, source: 'contracts\\BiatecPoolProvider.algo.ts:637', pc: [2301] },
        { teal: 2398, source: 'contracts\\BiatecPoolProvider.algo.ts:637', pc: [2302, 2303, 2304] },
        { teal: 2403, source: 'contracts\\BiatecPoolProvider.algo.ts:638', pc: [2305, 2306] },
        { teal: 2404, source: 'contracts\\BiatecPoolProvider.algo.ts:638', pc: [2307, 2308] },
        { teal: 2405, source: 'contracts\\BiatecPoolProvider.algo.ts:638', pc: [2309] },
        { teal: 2406, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2310, 2311] },
        { teal: 2407, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2312, 2313] },
        { teal: 2408, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2314] },
        { teal: 2409, source: 'contracts\\BiatecPoolProvider.algo.ts:637', pc: [2315, 2316, 2317] },
        { teal: 2414, source: 'contracts\\BiatecPoolProvider.algo.ts:640', pc: [2318, 2319] },
        { teal: 2415, source: 'contracts\\BiatecPoolProvider.algo.ts:640', pc: [2320, 2321] },
        { teal: 2416, source: 'contracts\\BiatecPoolProvider.algo.ts:640', pc: [2322, 2323] },
        { teal: 2417, source: 'contracts\\BiatecPoolProvider.algo.ts:640', pc: [2324] },
        { teal: 2418, source: 'contracts\\BiatecPoolProvider.algo.ts:640', pc: [2325] },
        { teal: 2419, source: 'contracts\\BiatecPoolProvider.algo.ts:640', pc: [2326] },
        { teal: 2420, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2327, 2328] },
        { teal: 2421, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2329, 2330] },
        { teal: 2422, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2331] },
        { teal: 2429, source: 'contracts\\BiatecPoolProvider.algo.ts:644', pc: [2332, 2333] },
        { teal: 2430, source: 'contracts\\BiatecPoolProvider.algo.ts:644', pc: [2334] },
        { teal: 2431, source: 'contracts\\BiatecPoolProvider.algo.ts:644', pc: [2335] },
        { teal: 2432, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2336] },
        { teal: 2436, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2337, 2338] },
        { teal: 2437, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2339] },
        { teal: 2438, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2340] },
        { teal: 2439, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2341, 2342] },
        { teal: 2440, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2343] },
        { teal: 2441, source: 'contracts\\BiatecPoolProvider.algo.ts:644', pc: [2344] },
        { teal: 2442, source: 'contracts\\BiatecPoolProvider.algo.ts:644', pc: [2345, 2346] },
        { teal: 2443, source: 'contracts\\BiatecPoolProvider.algo.ts:644', pc: [2347] },
        { teal: 2444, source: 'contracts\\BiatecPoolProvider.algo.ts:644', pc: [2348] },
        { teal: 2445, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2349, 2350] },
        { teal: 2446, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2351, 2352] },
        { teal: 2447, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2353] },
        { teal: 2451, source: 'contracts\\BiatecPoolProvider.algo.ts:645', pc: [2354, 2355] },
        { teal: 2452, source: 'contracts\\BiatecPoolProvider.algo.ts:645', pc: [2356] },
        { teal: 2453, source: 'contracts\\BiatecPoolProvider.algo.ts:645', pc: [2357] },
        { teal: 2454, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2358] },
        { teal: 2458, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2359, 2360] },
        { teal: 2459, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2361] },
        { teal: 2460, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2362] },
        { teal: 2461, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2363, 2364] },
        { teal: 2462, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2365] },
        { teal: 2463, source: 'contracts\\BiatecPoolProvider.algo.ts:645', pc: [2366] },
        { teal: 2464, source: 'contracts\\BiatecPoolProvider.algo.ts:645', pc: [2367, 2368] },
        { teal: 2465, source: 'contracts\\BiatecPoolProvider.algo.ts:645', pc: [2369] },
        { teal: 2466, source: 'contracts\\BiatecPoolProvider.algo.ts:645', pc: [2370] },
        { teal: 2467, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2371, 2372] },
        { teal: 2468, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2373, 2374] },
        { teal: 2469, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2375] },
        { teal: 2473, source: 'contracts\\BiatecPoolProvider.algo.ts:646', pc: [2376, 2377] },
        { teal: 2474, source: 'contracts\\BiatecPoolProvider.algo.ts:646', pc: [2378] },
        { teal: 2475, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2379] },
        { teal: 2479, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2380, 2381] },
        { teal: 2480, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2382] },
        { teal: 2481, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2383] },
        { teal: 2482, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2384, 2385] },
        { teal: 2483, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2386] },
        { teal: 2484, source: 'contracts\\BiatecPoolProvider.algo.ts:646', pc: [2387] },
        { teal: 2485, source: 'contracts\\BiatecPoolProvider.algo.ts:646', pc: [2388] },
        { teal: 2486, source: 'contracts\\BiatecPoolProvider.algo.ts:646', pc: [2389, 2390] },
        { teal: 2490, source: 'contracts\\BiatecPoolProvider.algo.ts:647', pc: [2391, 2392] },
        { teal: 2491, source: 'contracts\\BiatecPoolProvider.algo.ts:647', pc: [2393] },
        { teal: 2492, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2394] },
        { teal: 2496, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2395, 2396] },
        { teal: 2497, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2397] },
        { teal: 2498, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2398] },
        { teal: 2499, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2399, 2400] },
        { teal: 2500, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2401] },
        { teal: 2501, source: 'contracts\\BiatecPoolProvider.algo.ts:647', pc: [2402] },
        { teal: 2502, source: 'contracts\\BiatecPoolProvider.algo.ts:647', pc: [2403] },
        { teal: 2503, source: 'contracts\\BiatecPoolProvider.algo.ts:647', pc: [2404, 2405] },
        { teal: 2508, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2406, 2407] },
        { teal: 2509, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2408, 2409] },
        { teal: 2510, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2410, 2411] },
        { teal: 2511, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2412] },
        { teal: 2512, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2413, 2414] },
        { teal: 2513, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2415, 2416] },
        { teal: 2514, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2417] },
        { teal: 2515, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2418] },
        { teal: 2516, source: 'contracts\\BiatecPoolProvider.algo.ts:649', pc: [2419, 2420] },
        { teal: 2517, source: 'contracts\\BiatecPoolProvider.algo.ts:649', pc: [2421, 2422] },
        { teal: 2518, source: 'contracts\\BiatecPoolProvider.algo.ts:649', pc: [2423] },
        { teal: 2519, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2424] },
        { teal: 2520, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2425] },
        { teal: 2521, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2426] },
        { teal: 2522, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2427] },
        { teal: 2523, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2428] },
        {
          teal: 2526,
          source: 'contracts\\BiatecPoolProvider.algo.ts:648',
          errorMessage:
            '((period2NowVolumeBUint256 * period2NowVWAPUint256 + amountBUint256 * priceUint256) /\r\\n      (period2NowVolumeBUint256 + amountBUint256)) as uint64 overflowed 64 bits',
          pc: [2429],
        },
        { teal: 2527, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2430, 2431] },
        { teal: 2528, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2432] },
        { teal: 2529, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2433] },
        { teal: 2530, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2434] },
        { teal: 2531, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2435] },
        { teal: 2532, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2436] },
        { teal: 2533, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2437] },
        { teal: 2534, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2438] },
        { teal: 2535, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2439] },
        { teal: 2536, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2440] },
        { teal: 2537, source: 'contracts\\BiatecPoolProvider.algo.ts:648', pc: [2441] },
        { teal: 2538, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2442, 2443] },
        { teal: 2539, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2444, 2445] },
        { teal: 2540, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2446] },
        { teal: 2544, source: 'contracts\\BiatecPoolProvider.algo.ts:650', pc: [2447, 2448] },
        { teal: 2545, source: 'contracts\\BiatecPoolProvider.algo.ts:650', pc: [2449] },
        { teal: 2546, source: 'contracts\\BiatecPoolProvider.algo.ts:650', pc: [2450] },
        { teal: 2547, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2451] },
        { teal: 2551, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2452, 2453] },
        { teal: 2552, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2454] },
        { teal: 2553, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2455] },
        { teal: 2554, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2456, 2457] },
        { teal: 2555, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2458] },
        { teal: 2556, source: 'contracts\\BiatecPoolProvider.algo.ts:650', pc: [2459] },
        { teal: 2557, source: 'contracts\\BiatecPoolProvider.algo.ts:650', pc: [2460, 2461] },
        { teal: 2558, source: 'contracts\\BiatecPoolProvider.algo.ts:650', pc: [2462] },
        { teal: 2559, source: 'contracts\\BiatecPoolProvider.algo.ts:650', pc: [2463] },
        { teal: 2560, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2464, 2465] },
        { teal: 2561, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2466, 2467] },
        { teal: 2562, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2468] },
        { teal: 2566, source: 'contracts\\BiatecPoolProvider.algo.ts:651', pc: [2469, 2470] },
        { teal: 2567, source: 'contracts\\BiatecPoolProvider.algo.ts:651', pc: [2471] },
        { teal: 2568, source: 'contracts\\BiatecPoolProvider.algo.ts:651', pc: [2472] },
        { teal: 2569, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2473] },
        { teal: 2573, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2474, 2475] },
        { teal: 2574, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2476] },
        { teal: 2575, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2477] },
        { teal: 2576, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2478, 2479] },
        { teal: 2577, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2480] },
        { teal: 2578, source: 'contracts\\BiatecPoolProvider.algo.ts:651', pc: [2481] },
        { teal: 2579, source: 'contracts\\BiatecPoolProvider.algo.ts:651', pc: [2482, 2483] },
        { teal: 2580, source: 'contracts\\BiatecPoolProvider.algo.ts:651', pc: [2484] },
        { teal: 2581, source: 'contracts\\BiatecPoolProvider.algo.ts:651', pc: [2485] },
        { teal: 2582, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2486, 2487] },
        { teal: 2583, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2488, 2489] },
        { teal: 2584, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2490] },
        { teal: 2588, source: 'contracts\\BiatecPoolProvider.algo.ts:654', pc: [2491, 2492] },
        { teal: 2589, source: 'contracts\\BiatecPoolProvider.algo.ts:654', pc: [2493] },
        { teal: 2590, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2494] },
        { teal: 2594, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2495, 2496] },
        { teal: 2595, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2497] },
        { teal: 2596, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2498] },
        { teal: 2597, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2499, 2500] },
        { teal: 2598, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2501] },
        { teal: 2599, source: 'contracts\\BiatecPoolProvider.algo.ts:654', pc: [2502] },
        { teal: 2603, source: 'contracts\\BiatecPoolProvider.algo.ts:654', pc: [2503, 2504] },
        { teal: 2604, source: 'contracts\\BiatecPoolProvider.algo.ts:654', pc: [2505] },
        { teal: 2605, source: 'contracts\\BiatecPoolProvider.algo.ts:654', pc: [2506] },
        { teal: 2606, source: 'contracts\\BiatecPoolProvider.algo.ts:654', pc: [2507, 2508] },
        { teal: 2610, source: 'contracts\\BiatecPoolProvider.algo.ts:655', pc: [2509, 2510] },
        { teal: 2611, source: 'contracts\\BiatecPoolProvider.algo.ts:655', pc: [2511, 2512] },
        { teal: 2612, source: 'contracts\\BiatecPoolProvider.algo.ts:655', pc: [2513] },
        { teal: 2613, source: 'contracts\\BiatecPoolProvider.algo.ts:655', pc: [2514] },
        { teal: 2614, source: 'contracts\\BiatecPoolProvider.algo.ts:655', pc: [2515, 2516] },
        { teal: 2619, source: 'contracts\\BiatecPoolProvider.algo.ts:658', pc: [2517, 2518] },
        { teal: 2620, source: 'contracts\\BiatecPoolProvider.algo.ts:658', pc: [2519, 2520] },
        { teal: 2621, source: 'contracts\\BiatecPoolProvider.algo.ts:658', pc: [2521] },
        { teal: 2622, source: 'contracts\\BiatecPoolProvider.algo.ts:658', pc: [2522, 2523, 2524] },
        { teal: 2627, source: 'contracts\\BiatecPoolProvider.algo.ts:660', pc: [2525, 2526] },
        { teal: 2628, source: 'contracts\\BiatecPoolProvider.algo.ts:660', pc: [2527, 2528] },
        { teal: 2629, source: 'contracts\\BiatecPoolProvider.algo.ts:660', pc: [2529] },
        { teal: 2630, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2530] },
        { teal: 2634, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2531, 2532] },
        { teal: 2635, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2533] },
        { teal: 2636, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2534] },
        { teal: 2637, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2535, 2536] },
        { teal: 2638, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2537] },
        { teal: 2639, source: 'contracts\\BiatecPoolProvider.algo.ts:660', pc: [2538] },
        { teal: 2640, source: 'contracts\\BiatecPoolProvider.algo.ts:660', pc: [2539] },
        { teal: 2641, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2540, 2541] },
        { teal: 2642, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2542, 2543] },
        { teal: 2643, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2544] },
        { teal: 2647, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2545, 2546] },
        { teal: 2648, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2547, 2548] },
        { teal: 2649, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2549] },
        { teal: 2650, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2550] },
        { teal: 2654, source: 'contracts\\BiatecPoolProvider.algo.ts:662', pc: [2551, 2552] },
        { teal: 2655, source: 'contracts\\BiatecPoolProvider.algo.ts:662', pc: [2553, 2554] },
        { teal: 2656, source: 'contracts\\BiatecPoolProvider.algo.ts:662', pc: [2555] },
        { teal: 2657, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2556] },
        { teal: 2661, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2557, 2558] },
        { teal: 2662, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2559] },
        { teal: 2663, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2560] },
        { teal: 2664, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2561, 2562] },
        { teal: 2665, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2563] },
        { teal: 2666, source: 'contracts\\BiatecPoolProvider.algo.ts:662', pc: [2564] },
        { teal: 2667, source: 'contracts\\BiatecPoolProvider.algo.ts:662', pc: [2565] },
        { teal: 2668, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2566, 2567] },
        { teal: 2669, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2568, 2569] },
        { teal: 2670, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2570] },
        { teal: 2674, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2571, 2572] },
        { teal: 2675, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2573, 2574] },
        { teal: 2676, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2575] },
        { teal: 2677, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2576] },
        { teal: 2681, source: 'contracts\\BiatecPoolProvider.algo.ts:664', pc: [2577, 2578] },
        { teal: 2682, source: 'contracts\\BiatecPoolProvider.algo.ts:664', pc: [2579, 2580] },
        { teal: 2683, source: 'contracts\\BiatecPoolProvider.algo.ts:664', pc: [2581] },
        { teal: 2684, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2582] },
        { teal: 2688, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2583, 2584] },
        { teal: 2689, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2585] },
        { teal: 2690, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2586] },
        { teal: 2691, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2587, 2588] },
        { teal: 2692, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2589] },
        { teal: 2693, source: 'contracts\\BiatecPoolProvider.algo.ts:664', pc: [2590] },
        { teal: 2694, source: 'contracts\\BiatecPoolProvider.algo.ts:664', pc: [2591] },
        { teal: 2695, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2592, 2593] },
        { teal: 2696, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2594, 2595] },
        { teal: 2697, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2596] },
        { teal: 2701, source: 'contracts\\BiatecPoolProvider.algo.ts:665', pc: [2597, 2598] },
        { teal: 2702, source: 'contracts\\BiatecPoolProvider.algo.ts:665', pc: [2599, 2600] },
        { teal: 2703, source: 'contracts\\BiatecPoolProvider.algo.ts:665', pc: [2601] },
        { teal: 2704, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2602] },
        { teal: 2708, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2603, 2604] },
        { teal: 2709, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2605] },
        { teal: 2710, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2606] },
        { teal: 2711, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2607, 2608] },
        { teal: 2712, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2609] },
        { teal: 2713, source: 'contracts\\BiatecPoolProvider.algo.ts:665', pc: [2610] },
        { teal: 2714, source: 'contracts\\BiatecPoolProvider.algo.ts:665', pc: [2611] },
        { teal: 2715, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2612, 2613] },
        { teal: 2716, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2614, 2615] },
        { teal: 2717, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2616] },
        { teal: 2721, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2617, 2618] },
        { teal: 2722, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2619, 2620] },
        { teal: 2723, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2621] },
        { teal: 2724, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2622] },
        { teal: 2728, source: 'contracts\\BiatecPoolProvider.algo.ts:667', pc: [2623, 2624] },
        { teal: 2729, source: 'contracts\\BiatecPoolProvider.algo.ts:667', pc: [2625, 2626] },
        { teal: 2730, source: 'contracts\\BiatecPoolProvider.algo.ts:667', pc: [2627] },
        { teal: 2731, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2628] },
        { teal: 2735, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2629, 2630] },
        { teal: 2736, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2631] },
        { teal: 2737, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2632] },
        { teal: 2738, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2633, 2634] },
        { teal: 2739, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2635] },
        { teal: 2740, source: 'contracts\\BiatecPoolProvider.algo.ts:667', pc: [2636] },
        { teal: 2741, source: 'contracts\\BiatecPoolProvider.algo.ts:667', pc: [2637] },
        { teal: 2742, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2638, 2639] },
        { teal: 2743, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2640, 2641] },
        { teal: 2744, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2642] },
        { teal: 2748, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2643, 2644] },
        { teal: 2749, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2645, 2646] },
        { teal: 2750, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2647] },
        { teal: 2751, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2648] },
        { teal: 2755, source: 'contracts\\BiatecPoolProvider.algo.ts:669', pc: [2649, 2650] },
        { teal: 2756, source: 'contracts\\BiatecPoolProvider.algo.ts:669', pc: [2651, 2652] },
        { teal: 2757, source: 'contracts\\BiatecPoolProvider.algo.ts:669', pc: [2653] },
        { teal: 2758, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2654] },
        { teal: 2762, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2655, 2656] },
        { teal: 2763, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2657] },
        { teal: 2764, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2658] },
        { teal: 2765, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2659, 2660] },
        { teal: 2766, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2661] },
        { teal: 2767, source: 'contracts\\BiatecPoolProvider.algo.ts:669', pc: [2662] },
        { teal: 2768, source: 'contracts\\BiatecPoolProvider.algo.ts:669', pc: [2663] },
        { teal: 2769, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2664, 2665] },
        { teal: 2770, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2666, 2667] },
        { teal: 2771, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2668] },
        { teal: 2776, source: 'contracts\\BiatecPoolProvider.algo.ts:670', pc: [2669, 2670] },
        { teal: 2777, source: 'contracts\\BiatecPoolProvider.algo.ts:670', pc: [2671] },
        { teal: 2778, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2672] },
        { teal: 2782, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2673, 2674] },
        { teal: 2783, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2675] },
        { teal: 2784, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2676] },
        { teal: 2785, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2677, 2678] },
        { teal: 2786, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2679] },
        { teal: 2787, source: 'contracts\\BiatecPoolProvider.algo.ts:670', pc: [2680] },
        { teal: 2788, source: 'contracts\\BiatecPoolProvider.algo.ts:670', pc: [2681] },
        { teal: 2789, source: 'contracts\\BiatecPoolProvider.algo.ts:670', pc: [2682] },
        { teal: 2790, source: 'contracts\\BiatecPoolProvider.algo.ts:670', pc: [2683, 2684, 2685] },
        { teal: 2795, source: 'contracts\\BiatecPoolProvider.algo.ts:671', pc: [2686, 2687] },
        { teal: 2796, source: 'contracts\\BiatecPoolProvider.algo.ts:671', pc: [2688, 2689] },
        { teal: 2797, source: 'contracts\\BiatecPoolProvider.algo.ts:671', pc: [2690] },
        { teal: 2798, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2691, 2692] },
        { teal: 2799, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2693, 2694] },
        { teal: 2800, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2695] },
        { teal: 2801, source: 'contracts\\BiatecPoolProvider.algo.ts:670', pc: [2696, 2697, 2698] },
        { teal: 2806, source: 'contracts\\BiatecPoolProvider.algo.ts:673', pc: [2699, 2700] },
        { teal: 2807, source: 'contracts\\BiatecPoolProvider.algo.ts:673', pc: [2701, 2702] },
        { teal: 2808, source: 'contracts\\BiatecPoolProvider.algo.ts:673', pc: [2703, 2704] },
        { teal: 2809, source: 'contracts\\BiatecPoolProvider.algo.ts:673', pc: [2705] },
        { teal: 2810, source: 'contracts\\BiatecPoolProvider.algo.ts:673', pc: [2706] },
        { teal: 2811, source: 'contracts\\BiatecPoolProvider.algo.ts:673', pc: [2707] },
        { teal: 2812, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2708, 2709] },
        { teal: 2813, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2710, 2711] },
        { teal: 2814, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2712] },
        { teal: 2821, source: 'contracts\\BiatecPoolProvider.algo.ts:677', pc: [2713, 2714] },
        { teal: 2822, source: 'contracts\\BiatecPoolProvider.algo.ts:677', pc: [2715] },
        { teal: 2823, source: 'contracts\\BiatecPoolProvider.algo.ts:677', pc: [2716] },
        { teal: 2824, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2717] },
        { teal: 2828, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2718, 2719] },
        { teal: 2829, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2720] },
        { teal: 2830, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2721] },
        { teal: 2831, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2722, 2723] },
        { teal: 2832, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2724] },
        { teal: 2833, source: 'contracts\\BiatecPoolProvider.algo.ts:677', pc: [2725] },
        { teal: 2834, source: 'contracts\\BiatecPoolProvider.algo.ts:677', pc: [2726, 2727] },
        { teal: 2835, source: 'contracts\\BiatecPoolProvider.algo.ts:677', pc: [2728] },
        { teal: 2836, source: 'contracts\\BiatecPoolProvider.algo.ts:677', pc: [2729] },
        { teal: 2837, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2730, 2731] },
        { teal: 2838, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2732, 2733] },
        { teal: 2839, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2734] },
        { teal: 2843, source: 'contracts\\BiatecPoolProvider.algo.ts:678', pc: [2735, 2736] },
        { teal: 2844, source: 'contracts\\BiatecPoolProvider.algo.ts:678', pc: [2737] },
        { teal: 2845, source: 'contracts\\BiatecPoolProvider.algo.ts:678', pc: [2738] },
        { teal: 2846, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2739] },
        { teal: 2850, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2740, 2741] },
        { teal: 2851, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2742] },
        { teal: 2852, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2743] },
        { teal: 2853, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2744, 2745] },
        { teal: 2854, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2746] },
        { teal: 2855, source: 'contracts\\BiatecPoolProvider.algo.ts:678', pc: [2747] },
        { teal: 2856, source: 'contracts\\BiatecPoolProvider.algo.ts:678', pc: [2748, 2749] },
        { teal: 2857, source: 'contracts\\BiatecPoolProvider.algo.ts:678', pc: [2750] },
        { teal: 2858, source: 'contracts\\BiatecPoolProvider.algo.ts:678', pc: [2751] },
        { teal: 2859, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2752, 2753] },
        { teal: 2860, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2754, 2755] },
        { teal: 2861, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2756] },
        { teal: 2865, source: 'contracts\\BiatecPoolProvider.algo.ts:679', pc: [2757, 2758] },
        { teal: 2866, source: 'contracts\\BiatecPoolProvider.algo.ts:679', pc: [2759] },
        { teal: 2867, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2760] },
        { teal: 2871, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2761, 2762] },
        { teal: 2872, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2763] },
        { teal: 2873, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2764] },
        { teal: 2874, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2765, 2766] },
        { teal: 2875, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2767] },
        { teal: 2876, source: 'contracts\\BiatecPoolProvider.algo.ts:679', pc: [2768] },
        { teal: 2877, source: 'contracts\\BiatecPoolProvider.algo.ts:679', pc: [2769] },
        { teal: 2878, source: 'contracts\\BiatecPoolProvider.algo.ts:679', pc: [2770, 2771] },
        { teal: 2882, source: 'contracts\\BiatecPoolProvider.algo.ts:680', pc: [2772, 2773] },
        { teal: 2883, source: 'contracts\\BiatecPoolProvider.algo.ts:680', pc: [2774] },
        { teal: 2884, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2775] },
        { teal: 2888, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2776, 2777] },
        { teal: 2889, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2778] },
        { teal: 2890, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2779] },
        { teal: 2891, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2780, 2781] },
        { teal: 2892, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2782] },
        { teal: 2893, source: 'contracts\\BiatecPoolProvider.algo.ts:680', pc: [2783] },
        { teal: 2894, source: 'contracts\\BiatecPoolProvider.algo.ts:680', pc: [2784] },
        { teal: 2895, source: 'contracts\\BiatecPoolProvider.algo.ts:680', pc: [2785, 2786] },
        { teal: 2900, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2787, 2788] },
        { teal: 2901, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2789, 2790] },
        { teal: 2902, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2791, 2792] },
        { teal: 2903, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2793] },
        { teal: 2904, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2794, 2795] },
        { teal: 2905, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2796, 2797] },
        { teal: 2906, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2798] },
        { teal: 2907, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2799] },
        { teal: 2908, source: 'contracts\\BiatecPoolProvider.algo.ts:682', pc: [2800, 2801] },
        { teal: 2909, source: 'contracts\\BiatecPoolProvider.algo.ts:682', pc: [2802, 2803] },
        { teal: 2910, source: 'contracts\\BiatecPoolProvider.algo.ts:682', pc: [2804] },
        { teal: 2911, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2805] },
        { teal: 2912, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2806] },
        { teal: 2913, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2807] },
        { teal: 2914, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2808] },
        { teal: 2915, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2809] },
        {
          teal: 2918,
          source: 'contracts\\BiatecPoolProvider.algo.ts:681',
          errorMessage:
            '((period3NowVolumeBUint256 * period3NowVWAPUint256 + amountBUint256 * priceUint256) /\r\\n      (period3NowVolumeBUint256 + amountBUint256)) as uint64 overflowed 64 bits',
          pc: [2810],
        },
        { teal: 2919, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2811, 2812] },
        { teal: 2920, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2813] },
        { teal: 2921, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2814] },
        { teal: 2922, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2815] },
        { teal: 2923, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2816] },
        { teal: 2924, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2817] },
        { teal: 2925, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2818] },
        { teal: 2926, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2819] },
        { teal: 2927, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2820] },
        { teal: 2928, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2821] },
        { teal: 2929, source: 'contracts\\BiatecPoolProvider.algo.ts:681', pc: [2822] },
        { teal: 2930, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2823, 2824] },
        { teal: 2931, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2825, 2826] },
        { teal: 2932, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2827] },
        { teal: 2936, source: 'contracts\\BiatecPoolProvider.algo.ts:683', pc: [2828, 2829] },
        { teal: 2937, source: 'contracts\\BiatecPoolProvider.algo.ts:683', pc: [2830] },
        { teal: 2938, source: 'contracts\\BiatecPoolProvider.algo.ts:683', pc: [2831] },
        { teal: 2939, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2832] },
        { teal: 2943, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2833, 2834] },
        { teal: 2944, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2835] },
        { teal: 2945, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2836] },
        { teal: 2946, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2837, 2838] },
        { teal: 2947, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2839] },
        { teal: 2948, source: 'contracts\\BiatecPoolProvider.algo.ts:683', pc: [2840] },
        { teal: 2949, source: 'contracts\\BiatecPoolProvider.algo.ts:683', pc: [2841, 2842] },
        { teal: 2950, source: 'contracts\\BiatecPoolProvider.algo.ts:683', pc: [2843] },
        { teal: 2951, source: 'contracts\\BiatecPoolProvider.algo.ts:683', pc: [2844] },
        { teal: 2952, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2845, 2846] },
        { teal: 2953, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2847, 2848] },
        { teal: 2954, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2849] },
        { teal: 2958, source: 'contracts\\BiatecPoolProvider.algo.ts:684', pc: [2850, 2851] },
        { teal: 2959, source: 'contracts\\BiatecPoolProvider.algo.ts:684', pc: [2852] },
        { teal: 2960, source: 'contracts\\BiatecPoolProvider.algo.ts:684', pc: [2853] },
        { teal: 2961, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2854] },
        { teal: 2965, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2855, 2856] },
        { teal: 2966, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2857] },
        { teal: 2967, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2858] },
        { teal: 2968, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2859, 2860] },
        { teal: 2969, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2861] },
        { teal: 2970, source: 'contracts\\BiatecPoolProvider.algo.ts:684', pc: [2862] },
        { teal: 2971, source: 'contracts\\BiatecPoolProvider.algo.ts:684', pc: [2863, 2864] },
        { teal: 2972, source: 'contracts\\BiatecPoolProvider.algo.ts:684', pc: [2865] },
        { teal: 2973, source: 'contracts\\BiatecPoolProvider.algo.ts:684', pc: [2866] },
        { teal: 2974, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2867, 2868] },
        { teal: 2975, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2869, 2870] },
        { teal: 2976, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2871] },
        { teal: 2980, source: 'contracts\\BiatecPoolProvider.algo.ts:686', pc: [2872, 2873] },
        { teal: 2981, source: 'contracts\\BiatecPoolProvider.algo.ts:686', pc: [2874] },
        { teal: 2982, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2875] },
        { teal: 2986, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2876, 2877] },
        { teal: 2987, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2878] },
        { teal: 2988, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2879] },
        { teal: 2989, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2880, 2881] },
        { teal: 2990, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2882] },
        { teal: 2991, source: 'contracts\\BiatecPoolProvider.algo.ts:686', pc: [2883] },
        { teal: 2995, source: 'contracts\\BiatecPoolProvider.algo.ts:686', pc: [2884, 2885] },
        { teal: 2996, source: 'contracts\\BiatecPoolProvider.algo.ts:686', pc: [2886] },
        { teal: 2997, source: 'contracts\\BiatecPoolProvider.algo.ts:686', pc: [2887] },
        { teal: 2998, source: 'contracts\\BiatecPoolProvider.algo.ts:686', pc: [2888, 2889] },
        { teal: 3002, source: 'contracts\\BiatecPoolProvider.algo.ts:687', pc: [2890, 2891] },
        { teal: 3003, source: 'contracts\\BiatecPoolProvider.algo.ts:687', pc: [2892, 2893] },
        { teal: 3004, source: 'contracts\\BiatecPoolProvider.algo.ts:687', pc: [2894] },
        { teal: 3005, source: 'contracts\\BiatecPoolProvider.algo.ts:687', pc: [2895] },
        { teal: 3006, source: 'contracts\\BiatecPoolProvider.algo.ts:687', pc: [2896, 2897] },
        { teal: 3011, source: 'contracts\\BiatecPoolProvider.algo.ts:690', pc: [2898, 2899] },
        { teal: 3012, source: 'contracts\\BiatecPoolProvider.algo.ts:690', pc: [2900, 2901] },
        { teal: 3013, source: 'contracts\\BiatecPoolProvider.algo.ts:690', pc: [2902] },
        { teal: 3014, source: 'contracts\\BiatecPoolProvider.algo.ts:690', pc: [2903, 2904, 2905] },
        { teal: 3019, source: 'contracts\\BiatecPoolProvider.algo.ts:692', pc: [2906, 2907] },
        { teal: 3020, source: 'contracts\\BiatecPoolProvider.algo.ts:692', pc: [2908, 2909] },
        { teal: 3021, source: 'contracts\\BiatecPoolProvider.algo.ts:692', pc: [2910] },
        { teal: 3022, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2911] },
        { teal: 3026, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2912, 2913] },
        { teal: 3027, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2914] },
        { teal: 3028, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2915] },
        { teal: 3029, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2916, 2917] },
        { teal: 3030, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2918] },
        { teal: 3031, source: 'contracts\\BiatecPoolProvider.algo.ts:692', pc: [2919] },
        { teal: 3032, source: 'contracts\\BiatecPoolProvider.algo.ts:692', pc: [2920] },
        { teal: 3033, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2921, 2922] },
        { teal: 3034, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2923, 2924] },
        { teal: 3035, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2925] },
        { teal: 3039, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2926, 2927] },
        { teal: 3040, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2928, 2929] },
        { teal: 3041, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2930] },
        { teal: 3042, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2931] },
        { teal: 3046, source: 'contracts\\BiatecPoolProvider.algo.ts:694', pc: [2932, 2933] },
        { teal: 3047, source: 'contracts\\BiatecPoolProvider.algo.ts:694', pc: [2934, 2935] },
        { teal: 3048, source: 'contracts\\BiatecPoolProvider.algo.ts:694', pc: [2936] },
        { teal: 3049, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2937] },
        { teal: 3053, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2938, 2939] },
        { teal: 3054, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2940] },
        { teal: 3055, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2941] },
        { teal: 3056, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2942, 2943] },
        { teal: 3057, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2944] },
        { teal: 3058, source: 'contracts\\BiatecPoolProvider.algo.ts:694', pc: [2945] },
        { teal: 3059, source: 'contracts\\BiatecPoolProvider.algo.ts:694', pc: [2946] },
        { teal: 3060, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2947, 2948] },
        { teal: 3061, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2949, 2950] },
        { teal: 3062, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2951] },
        { teal: 3066, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2952, 2953] },
        { teal: 3067, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2954, 2955] },
        { teal: 3068, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2956] },
        { teal: 3069, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2957] },
        { teal: 3073, source: 'contracts\\BiatecPoolProvider.algo.ts:696', pc: [2958, 2959] },
        { teal: 3074, source: 'contracts\\BiatecPoolProvider.algo.ts:696', pc: [2960, 2961] },
        { teal: 3075, source: 'contracts\\BiatecPoolProvider.algo.ts:696', pc: [2962] },
        { teal: 3076, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2963] },
        { teal: 3080, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2964, 2965] },
        { teal: 3081, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2966] },
        { teal: 3082, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2967] },
        { teal: 3083, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2968, 2969] },
        { teal: 3084, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2970] },
        { teal: 3085, source: 'contracts\\BiatecPoolProvider.algo.ts:696', pc: [2971] },
        { teal: 3086, source: 'contracts\\BiatecPoolProvider.algo.ts:696', pc: [2972] },
        { teal: 3087, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2973, 2974] },
        { teal: 3088, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2975, 2976] },
        { teal: 3089, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2977] },
        { teal: 3093, source: 'contracts\\BiatecPoolProvider.algo.ts:697', pc: [2978, 2979] },
        { teal: 3094, source: 'contracts\\BiatecPoolProvider.algo.ts:697', pc: [2980, 2981] },
        { teal: 3095, source: 'contracts\\BiatecPoolProvider.algo.ts:697', pc: [2982] },
        { teal: 3096, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2983] },
        { teal: 3100, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2984, 2985] },
        { teal: 3101, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2986] },
        { teal: 3102, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2987] },
        { teal: 3103, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2988, 2989] },
        { teal: 3104, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2990] },
        { teal: 3105, source: 'contracts\\BiatecPoolProvider.algo.ts:697', pc: [2991] },
        { teal: 3106, source: 'contracts\\BiatecPoolProvider.algo.ts:697', pc: [2992] },
        { teal: 3107, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2993, 2994] },
        { teal: 3108, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2995, 2996] },
        { teal: 3109, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2997] },
        { teal: 3113, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [2998, 2999] },
        { teal: 3114, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3000, 3001] },
        { teal: 3115, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3002] },
        { teal: 3116, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3003] },
        { teal: 3120, source: 'contracts\\BiatecPoolProvider.algo.ts:699', pc: [3004, 3005] },
        { teal: 3121, source: 'contracts\\BiatecPoolProvider.algo.ts:699', pc: [3006, 3007] },
        { teal: 3122, source: 'contracts\\BiatecPoolProvider.algo.ts:699', pc: [3008] },
        { teal: 3123, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3009] },
        { teal: 3127, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3010, 3011] },
        { teal: 3128, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3012] },
        { teal: 3129, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3013] },
        { teal: 3130, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3014, 3015] },
        { teal: 3131, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3016] },
        { teal: 3132, source: 'contracts\\BiatecPoolProvider.algo.ts:699', pc: [3017] },
        { teal: 3133, source: 'contracts\\BiatecPoolProvider.algo.ts:699', pc: [3018] },
        { teal: 3134, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3019, 3020] },
        { teal: 3135, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3021, 3022] },
        { teal: 3136, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3023] },
        { teal: 3140, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3024, 3025] },
        { teal: 3141, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3026, 3027] },
        { teal: 3142, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3028] },
        { teal: 3143, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3029] },
        { teal: 3147, source: 'contracts\\BiatecPoolProvider.algo.ts:701', pc: [3030, 3031] },
        { teal: 3148, source: 'contracts\\BiatecPoolProvider.algo.ts:701', pc: [3032, 3033] },
        { teal: 3149, source: 'contracts\\BiatecPoolProvider.algo.ts:701', pc: [3034] },
        { teal: 3150, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3035] },
        { teal: 3154, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3036, 3037] },
        { teal: 3155, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3038] },
        { teal: 3156, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3039] },
        { teal: 3157, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3040, 3041] },
        { teal: 3158, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3042] },
        { teal: 3159, source: 'contracts\\BiatecPoolProvider.algo.ts:701', pc: [3043] },
        { teal: 3160, source: 'contracts\\BiatecPoolProvider.algo.ts:701', pc: [3044] },
        { teal: 3161, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3045, 3046] },
        { teal: 3162, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3047, 3048] },
        { teal: 3163, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3049] },
        { teal: 3168, source: 'contracts\\BiatecPoolProvider.algo.ts:702', pc: [3050, 3051] },
        { teal: 3169, source: 'contracts\\BiatecPoolProvider.algo.ts:702', pc: [3052] },
        { teal: 3170, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3053] },
        { teal: 3174, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3054, 3055] },
        { teal: 3175, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3056] },
        { teal: 3176, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3057] },
        { teal: 3177, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3058, 3059] },
        { teal: 3178, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3060] },
        { teal: 3179, source: 'contracts\\BiatecPoolProvider.algo.ts:702', pc: [3061] },
        { teal: 3180, source: 'contracts\\BiatecPoolProvider.algo.ts:702', pc: [3062] },
        { teal: 3181, source: 'contracts\\BiatecPoolProvider.algo.ts:702', pc: [3063] },
        { teal: 3182, source: 'contracts\\BiatecPoolProvider.algo.ts:702', pc: [3064, 3065, 3066] },
        { teal: 3187, source: 'contracts\\BiatecPoolProvider.algo.ts:703', pc: [3067, 3068] },
        { teal: 3188, source: 'contracts\\BiatecPoolProvider.algo.ts:703', pc: [3069, 3070] },
        { teal: 3189, source: 'contracts\\BiatecPoolProvider.algo.ts:703', pc: [3071] },
        { teal: 3190, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3072, 3073] },
        { teal: 3191, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3074, 3075] },
        { teal: 3192, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3076] },
        { teal: 3193, source: 'contracts\\BiatecPoolProvider.algo.ts:702', pc: [3077, 3078, 3079] },
        { teal: 3198, source: 'contracts\\BiatecPoolProvider.algo.ts:705', pc: [3080, 3081] },
        { teal: 3199, source: 'contracts\\BiatecPoolProvider.algo.ts:705', pc: [3082, 3083] },
        { teal: 3200, source: 'contracts\\BiatecPoolProvider.algo.ts:705', pc: [3084, 3085] },
        { teal: 3201, source: 'contracts\\BiatecPoolProvider.algo.ts:705', pc: [3086] },
        { teal: 3202, source: 'contracts\\BiatecPoolProvider.algo.ts:705', pc: [3087] },
        { teal: 3203, source: 'contracts\\BiatecPoolProvider.algo.ts:705', pc: [3088] },
        { teal: 3204, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3089, 3090] },
        { teal: 3205, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3091, 3092] },
        { teal: 3206, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3093] },
        { teal: 3213, source: 'contracts\\BiatecPoolProvider.algo.ts:709', pc: [3094, 3095] },
        { teal: 3214, source: 'contracts\\BiatecPoolProvider.algo.ts:709', pc: [3096] },
        { teal: 3215, source: 'contracts\\BiatecPoolProvider.algo.ts:709', pc: [3097] },
        { teal: 3216, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3098] },
        { teal: 3220, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3099, 3100] },
        { teal: 3221, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3101] },
        { teal: 3222, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3102] },
        { teal: 3223, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3103, 3104] },
        { teal: 3224, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3105] },
        { teal: 3225, source: 'contracts\\BiatecPoolProvider.algo.ts:709', pc: [3106] },
        { teal: 3226, source: 'contracts\\BiatecPoolProvider.algo.ts:709', pc: [3107, 3108] },
        { teal: 3227, source: 'contracts\\BiatecPoolProvider.algo.ts:709', pc: [3109] },
        { teal: 3228, source: 'contracts\\BiatecPoolProvider.algo.ts:709', pc: [3110] },
        { teal: 3229, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3111, 3112] },
        { teal: 3230, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3113, 3114] },
        { teal: 3231, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3115] },
        { teal: 3235, source: 'contracts\\BiatecPoolProvider.algo.ts:710', pc: [3116, 3117] },
        { teal: 3236, source: 'contracts\\BiatecPoolProvider.algo.ts:710', pc: [3118] },
        { teal: 3237, source: 'contracts\\BiatecPoolProvider.algo.ts:710', pc: [3119] },
        { teal: 3238, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3120] },
        { teal: 3242, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3121, 3122] },
        { teal: 3243, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3123] },
        { teal: 3244, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3124] },
        { teal: 3245, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3125, 3126] },
        { teal: 3246, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3127] },
        { teal: 3247, source: 'contracts\\BiatecPoolProvider.algo.ts:710', pc: [3128] },
        { teal: 3248, source: 'contracts\\BiatecPoolProvider.algo.ts:710', pc: [3129, 3130] },
        { teal: 3249, source: 'contracts\\BiatecPoolProvider.algo.ts:710', pc: [3131] },
        { teal: 3250, source: 'contracts\\BiatecPoolProvider.algo.ts:710', pc: [3132] },
        { teal: 3251, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3133, 3134] },
        { teal: 3252, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3135, 3136] },
        { teal: 3253, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3137] },
        { teal: 3257, source: 'contracts\\BiatecPoolProvider.algo.ts:711', pc: [3138, 3139] },
        { teal: 3258, source: 'contracts\\BiatecPoolProvider.algo.ts:711', pc: [3140] },
        { teal: 3259, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3141] },
        { teal: 3263, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3142, 3143] },
        { teal: 3264, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3144] },
        { teal: 3265, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3145] },
        { teal: 3266, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3146, 3147] },
        { teal: 3267, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3148] },
        { teal: 3268, source: 'contracts\\BiatecPoolProvider.algo.ts:711', pc: [3149] },
        { teal: 3269, source: 'contracts\\BiatecPoolProvider.algo.ts:711', pc: [3150] },
        { teal: 3270, source: 'contracts\\BiatecPoolProvider.algo.ts:711', pc: [3151, 3152] },
        { teal: 3274, source: 'contracts\\BiatecPoolProvider.algo.ts:712', pc: [3153, 3154] },
        { teal: 3275, source: 'contracts\\BiatecPoolProvider.algo.ts:712', pc: [3155] },
        { teal: 3276, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3156] },
        { teal: 3280, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3157, 3158] },
        { teal: 3281, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3159] },
        { teal: 3282, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3160] },
        { teal: 3283, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3161, 3162] },
        { teal: 3284, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3163] },
        { teal: 3285, source: 'contracts\\BiatecPoolProvider.algo.ts:712', pc: [3164] },
        { teal: 3286, source: 'contracts\\BiatecPoolProvider.algo.ts:712', pc: [3165] },
        { teal: 3287, source: 'contracts\\BiatecPoolProvider.algo.ts:712', pc: [3166, 3167] },
        { teal: 3292, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3168, 3169] },
        { teal: 3293, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3170, 3171] },
        { teal: 3294, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3172, 3173] },
        { teal: 3295, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3174] },
        { teal: 3296, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3175, 3176] },
        { teal: 3297, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3177, 3178] },
        { teal: 3298, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3179] },
        { teal: 3299, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3180] },
        { teal: 3300, source: 'contracts\\BiatecPoolProvider.algo.ts:714', pc: [3181, 3182] },
        { teal: 3301, source: 'contracts\\BiatecPoolProvider.algo.ts:714', pc: [3183, 3184] },
        { teal: 3302, source: 'contracts\\BiatecPoolProvider.algo.ts:714', pc: [3185] },
        { teal: 3303, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3186] },
        { teal: 3304, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3187] },
        { teal: 3305, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3188] },
        { teal: 3306, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3189] },
        { teal: 3307, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3190] },
        {
          teal: 3310,
          source: 'contracts\\BiatecPoolProvider.algo.ts:713',
          errorMessage:
            '((period4NowVolumeBUint256 * period4NowVWAPUint256 + amountBUint256 * priceUint256) /\r\\n      (period4NowVolumeBUint256 + amountBUint256)) as uint64 overflowed 64 bits',
          pc: [3191],
        },
        { teal: 3311, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3192, 3193] },
        { teal: 3312, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3194] },
        { teal: 3313, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3195] },
        { teal: 3314, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3196] },
        { teal: 3315, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3197] },
        { teal: 3316, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3198] },
        { teal: 3317, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3199] },
        { teal: 3318, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3200] },
        { teal: 3319, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3201] },
        { teal: 3320, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3202] },
        { teal: 3321, source: 'contracts\\BiatecPoolProvider.algo.ts:713', pc: [3203] },
        { teal: 3322, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3204, 3205] },
        { teal: 3323, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3206, 3207] },
        { teal: 3324, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3208] },
        { teal: 3328, source: 'contracts\\BiatecPoolProvider.algo.ts:715', pc: [3209, 3210] },
        { teal: 3329, source: 'contracts\\BiatecPoolProvider.algo.ts:715', pc: [3211] },
        { teal: 3330, source: 'contracts\\BiatecPoolProvider.algo.ts:715', pc: [3212] },
        { teal: 3331, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3213] },
        { teal: 3335, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3214, 3215] },
        { teal: 3336, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3216] },
        { teal: 3337, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3217] },
        { teal: 3338, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3218, 3219] },
        { teal: 3339, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3220] },
        { teal: 3340, source: 'contracts\\BiatecPoolProvider.algo.ts:715', pc: [3221] },
        { teal: 3341, source: 'contracts\\BiatecPoolProvider.algo.ts:715', pc: [3222, 3223] },
        { teal: 3342, source: 'contracts\\BiatecPoolProvider.algo.ts:715', pc: [3224] },
        { teal: 3343, source: 'contracts\\BiatecPoolProvider.algo.ts:715', pc: [3225] },
        { teal: 3344, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3226, 3227] },
        { teal: 3345, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3228, 3229] },
        { teal: 3346, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3230] },
        { teal: 3350, source: 'contracts\\BiatecPoolProvider.algo.ts:716', pc: [3231, 3232] },
        { teal: 3351, source: 'contracts\\BiatecPoolProvider.algo.ts:716', pc: [3233] },
        { teal: 3352, source: 'contracts\\BiatecPoolProvider.algo.ts:716', pc: [3234] },
        { teal: 3353, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3235] },
        { teal: 3357, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3236, 3237] },
        { teal: 3358, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3238] },
        { teal: 3359, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3239] },
        { teal: 3360, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3240, 3241] },
        { teal: 3361, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3242] },
        { teal: 3362, source: 'contracts\\BiatecPoolProvider.algo.ts:716', pc: [3243] },
        { teal: 3363, source: 'contracts\\BiatecPoolProvider.algo.ts:716', pc: [3244, 3245] },
        { teal: 3364, source: 'contracts\\BiatecPoolProvider.algo.ts:716', pc: [3246] },
        { teal: 3365, source: 'contracts\\BiatecPoolProvider.algo.ts:716', pc: [3247] },
        { teal: 3366, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3248, 3249] },
        { teal: 3367, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3250, 3251] },
        { teal: 3368, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3252] },
        { teal: 3372, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3253, 3254] },
        { teal: 3373, source: 'contracts\\BiatecPoolProvider.algo.ts:576', pc: [3255] },
        {
          teal: 3376,
          source: 'contracts\\BiatecPoolProvider.algo.ts:576',
          errorMessage: 'box value does not exist: this.pools(appPoolId.id).value',
          pc: [3256],
        },
        { teal: 3379, source: 'contracts\\BiatecPoolProvider.algo.ts:565', pc: [3257, 3258] },
        { teal: 3382, source: 'contracts\\BiatecPoolProvider.algo.ts:565', pc: [3259, 3260] },
        { teal: 3383, source: 'contracts\\BiatecPoolProvider.algo.ts:565', pc: [3261] },
        { teal: 3387, source: 'contracts\\BiatecPoolProvider.algo.ts:784', pc: [3262, 3263, 3264] },
        { teal: 3390, source: 'contracts\\BiatecPoolProvider.algo.ts:784', pc: [3265] },
        { teal: 3391, source: 'contracts\\BiatecPoolProvider.algo.ts:784', pc: [3266, 3267] },
        { teal: 3395, source: 'contracts\\BiatecPoolProvider.algo.ts:794', pc: [3268, 3269] },
        { teal: 3396, source: 'contracts\\BiatecPoolProvider.algo.ts:794', pc: [3270] },
        { teal: 3397, source: 'contracts\\BiatecPoolProvider.algo.ts:794', pc: [3271, 3272] },
        { teal: 3398, source: 'contracts\\BiatecPoolProvider.algo.ts:794', pc: [3273] },
        { teal: 3399, source: 'contracts\\BiatecPoolProvider.algo.ts:794', pc: [3274] },
        { teal: 3400, source: 'contracts\\BiatecPoolProvider.algo.ts:794', pc: [3275, 3276] },
        { teal: 3404, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3277] },
        { teal: 3405, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3278, 3279] },
        { teal: 3406, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3280] },
        { teal: 3407, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3281, 3282] },
        { teal: 3411, source: 'contracts\\BiatecPoolProvider.algo.ts:796', pc: [3283, 3284] },
        { teal: 3412, source: 'contracts\\BiatecPoolProvider.algo.ts:796', pc: [3285] },
        { teal: 3413, source: 'contracts\\BiatecPoolProvider.algo.ts:796', pc: [3286] },
        { teal: 3414, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3287] },
        { teal: 3415, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3288, 3289] },
        { teal: 3416, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3290] },
        { teal: 3417, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3291, 3292] },
        { teal: 3418, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3293] },
        { teal: 3419, source: 'contracts\\BiatecPoolProvider.algo.ts:796', pc: [3294] },
        { teal: 3420, source: 'contracts\\BiatecPoolProvider.algo.ts:796', pc: [3295] },
        { teal: 3421, source: 'contracts\\BiatecPoolProvider.algo.ts:796', pc: [3296] },
        { teal: 3425, source: 'contracts\\BiatecPoolProvider.algo.ts:797', pc: [3297, 3298] },
        { teal: 3426, source: 'contracts\\BiatecPoolProvider.algo.ts:797', pc: [3299] },
        { teal: 3427, source: 'contracts\\BiatecPoolProvider.algo.ts:797', pc: [3300] },
        { teal: 3428, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3301] },
        { teal: 3429, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3302, 3303] },
        { teal: 3430, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3304] },
        { teal: 3431, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3305, 3306] },
        { teal: 3432, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3307] },
        { teal: 3433, source: 'contracts\\BiatecPoolProvider.algo.ts:797', pc: [3308] },
        { teal: 3434, source: 'contracts\\BiatecPoolProvider.algo.ts:797', pc: [3309] },
        { teal: 3435, source: 'contracts\\BiatecPoolProvider.algo.ts:797', pc: [3310] },
        { teal: 3439, source: 'contracts\\BiatecPoolProvider.algo.ts:798', pc: [3311, 3312] },
        { teal: 3440, source: 'contracts\\BiatecPoolProvider.algo.ts:798', pc: [3313] },
        { teal: 3441, source: 'contracts\\BiatecPoolProvider.algo.ts:798', pc: [3314] },
        { teal: 3442, source: 'contracts\\BiatecPoolProvider.algo.ts:798', pc: [3315] },
        { teal: 3443, source: 'contracts\\BiatecPoolProvider.algo.ts:798', pc: [3316, 3317, 3318] },
        { teal: 3444, source: 'contracts\\BiatecPoolProvider.algo.ts:798', pc: [3319, 3320] },
        { teal: 3445, source: 'contracts\\BiatecPoolProvider.algo.ts:798', pc: [3321] },
        { teal: 3446, source: 'contracts\\BiatecPoolProvider.algo.ts:798', pc: [3322] },
        { teal: 3447, source: 'contracts\\BiatecPoolProvider.algo.ts:798', pc: [3323] },
        { teal: 3450, source: 'contracts\\BiatecPoolProvider.algo.ts:798', pc: [3324] },
        { teal: 3454, source: 'contracts\\BiatecPoolProvider.algo.ts:800', pc: [3325, 3326] },
        { teal: 3455, source: 'contracts\\BiatecPoolProvider.algo.ts:800', pc: [3327, 3328] },
        { teal: 3456, source: 'contracts\\BiatecPoolProvider.algo.ts:800', pc: [3329] },
        { teal: 3457, source: 'contracts\\BiatecPoolProvider.algo.ts:800', pc: [3330, 3331] },
        { teal: 3461, source: 'contracts\\BiatecPoolProvider.algo.ts:801', pc: [3332, 3333] },
        { teal: 3462, source: 'contracts\\BiatecPoolProvider.algo.ts:801', pc: [3334, 3335] },
        { teal: 3463, source: 'contracts\\BiatecPoolProvider.algo.ts:801', pc: [3336] },
        { teal: 3464, source: 'contracts\\BiatecPoolProvider.algo.ts:801', pc: [3337, 3338] },
        { teal: 3468, source: 'contracts\\BiatecPoolProvider.algo.ts:803', pc: [3339, 3340] },
        { teal: 3469, source: 'contracts\\BiatecPoolProvider.algo.ts:803', pc: [3341, 3342] },
        { teal: 3470, source: 'contracts\\BiatecPoolProvider.algo.ts:803', pc: [3343] },
        { teal: 3471, source: 'contracts\\BiatecPoolProvider.algo.ts:803', pc: [3344, 3345] },
        { teal: 3472, source: 'contracts\\BiatecPoolProvider.algo.ts:803', pc: [3346] },
        { teal: 3473, source: 'contracts\\BiatecPoolProvider.algo.ts:803', pc: [3347, 3348] },
        { teal: 3477, source: 'contracts\\BiatecPoolProvider.algo.ts:804', pc: [3349, 3350] },
        { teal: 3478, source: 'contracts\\BiatecPoolProvider.algo.ts:804', pc: [3351] },
        { teal: 3479, source: 'contracts\\BiatecPoolProvider.algo.ts:804', pc: [3352, 3353] },
        { teal: 3483, source: 'contracts\\BiatecPoolProvider.algo.ts:805', pc: [3354, 3355] },
        { teal: 3484, source: 'contracts\\BiatecPoolProvider.algo.ts:805', pc: [3356] },
        { teal: 3485, source: 'contracts\\BiatecPoolProvider.algo.ts:805', pc: [3357, 3358] },
        { teal: 3489, source: 'contracts\\BiatecPoolProvider.algo.ts:806', pc: [3359, 3360] },
        { teal: 3490, source: 'contracts\\BiatecPoolProvider.algo.ts:806', pc: [3361, 3362] },
        { teal: 3491, source: 'contracts\\BiatecPoolProvider.algo.ts:806', pc: [3363] },
        { teal: 3492, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3364, 3365] },
        { teal: 3493, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3366, 3367] },
        { teal: 3494, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3368] },
        { teal: 3498, source: 'contracts\\BiatecPoolProvider.algo.ts:807', pc: [3369, 3370] },
        { teal: 3499, source: 'contracts\\BiatecPoolProvider.algo.ts:807', pc: [3371] },
        { teal: 3500, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3372] },
        { teal: 3501, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3373, 3374] },
        { teal: 3502, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3375] },
        { teal: 3503, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3376, 3377] },
        { teal: 3504, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3378] },
        { teal: 3505, source: 'contracts\\BiatecPoolProvider.algo.ts:807', pc: [3379] },
        { teal: 3506, source: 'contracts\\BiatecPoolProvider.algo.ts:807', pc: [3380, 3381] },
        { teal: 3507, source: 'contracts\\BiatecPoolProvider.algo.ts:807', pc: [3382] },
        { teal: 3508, source: 'contracts\\BiatecPoolProvider.algo.ts:807', pc: [3383] },
        { teal: 3509, source: 'contracts\\BiatecPoolProvider.algo.ts:807', pc: [3384, 3385] },
        { teal: 3513, source: 'contracts\\BiatecPoolProvider.algo.ts:808', pc: [3386, 3387] },
        { teal: 3514, source: 'contracts\\BiatecPoolProvider.algo.ts:808', pc: [3388, 3389] },
        { teal: 3515, source: 'contracts\\BiatecPoolProvider.algo.ts:808', pc: [3390] },
        { teal: 3516, source: 'contracts\\BiatecPoolProvider.algo.ts:808', pc: [3391] },
        { teal: 3517, source: 'contracts\\BiatecPoolProvider.algo.ts:808', pc: [3392, 3393] },
        { teal: 3522, source: 'contracts\\BiatecPoolProvider.algo.ts:811', pc: [3394, 3395] },
        { teal: 3523, source: 'contracts\\BiatecPoolProvider.algo.ts:811', pc: [3396, 3397] },
        { teal: 3524, source: 'contracts\\BiatecPoolProvider.algo.ts:811', pc: [3398] },
        { teal: 3525, source: 'contracts\\BiatecPoolProvider.algo.ts:811', pc: [3399, 3400, 3401] },
        { teal: 3530, source: 'contracts\\BiatecPoolProvider.algo.ts:813', pc: [3402, 3403] },
        { teal: 3531, source: 'contracts\\BiatecPoolProvider.algo.ts:813', pc: [3404, 3405] },
        { teal: 3532, source: 'contracts\\BiatecPoolProvider.algo.ts:813', pc: [3406] },
        { teal: 3533, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3407] },
        { teal: 3534, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3408, 3409] },
        { teal: 3535, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3410] },
        { teal: 3536, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3411, 3412] },
        { teal: 3537, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3413] },
        { teal: 3538, source: 'contracts\\BiatecPoolProvider.algo.ts:813', pc: [3414] },
        { teal: 3539, source: 'contracts\\BiatecPoolProvider.algo.ts:813', pc: [3415] },
        { teal: 3540, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3416, 3417] },
        { teal: 3541, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3418, 3419] },
        { teal: 3542, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3420] },
        { teal: 3546, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3421, 3422] },
        { teal: 3547, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3423, 3424] },
        { teal: 3548, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3425] },
        { teal: 3549, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3426] },
        { teal: 3553, source: 'contracts\\BiatecPoolProvider.algo.ts:815', pc: [3427, 3428] },
        { teal: 3554, source: 'contracts\\BiatecPoolProvider.algo.ts:815', pc: [3429] },
        { teal: 3555, source: 'contracts\\BiatecPoolProvider.algo.ts:815', pc: [3430] },
        { teal: 3556, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3431] },
        { teal: 3557, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3432, 3433] },
        { teal: 3558, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3434] },
        { teal: 3559, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3435, 3436] },
        { teal: 3560, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3437] },
        { teal: 3561, source: 'contracts\\BiatecPoolProvider.algo.ts:815', pc: [3438] },
        { teal: 3562, source: 'contracts\\BiatecPoolProvider.algo.ts:815', pc: [3439] },
        { teal: 3563, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3440, 3441] },
        { teal: 3564, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3442, 3443] },
        { teal: 3565, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3444] },
        { teal: 3569, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3445, 3446] },
        { teal: 3570, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3447] },
        { teal: 3571, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3448] },
        { teal: 3572, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3449] },
        { teal: 3576, source: 'contracts\\BiatecPoolProvider.algo.ts:817', pc: [3450, 3451] },
        { teal: 3577, source: 'contracts\\BiatecPoolProvider.algo.ts:817', pc: [3452, 3453] },
        { teal: 3578, source: 'contracts\\BiatecPoolProvider.algo.ts:817', pc: [3454] },
        { teal: 3579, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3455] },
        { teal: 3580, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3456, 3457] },
        { teal: 3581, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3458] },
        { teal: 3582, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3459, 3460] },
        { teal: 3583, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3461] },
        { teal: 3584, source: 'contracts\\BiatecPoolProvider.algo.ts:817', pc: [3462] },
        { teal: 3585, source: 'contracts\\BiatecPoolProvider.algo.ts:817', pc: [3463] },
        { teal: 3586, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3464, 3465] },
        { teal: 3587, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3466, 3467] },
        { teal: 3588, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3468] },
        { teal: 3592, source: 'contracts\\BiatecPoolProvider.algo.ts:818', pc: [3469, 3470] },
        { teal: 3593, source: 'contracts\\BiatecPoolProvider.algo.ts:818', pc: [3471, 3472] },
        { teal: 3594, source: 'contracts\\BiatecPoolProvider.algo.ts:818', pc: [3473] },
        { teal: 3595, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3474] },
        { teal: 3596, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3475, 3476] },
        { teal: 3597, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3477] },
        { teal: 3598, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3478, 3479] },
        { teal: 3599, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3480] },
        { teal: 3600, source: 'contracts\\BiatecPoolProvider.algo.ts:818', pc: [3481] },
        { teal: 3601, source: 'contracts\\BiatecPoolProvider.algo.ts:818', pc: [3482] },
        { teal: 3602, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3483, 3484] },
        { teal: 3603, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3485, 3486] },
        { teal: 3604, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3487] },
        { teal: 3608, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3488, 3489] },
        { teal: 3609, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3490, 3491] },
        { teal: 3610, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3492] },
        { teal: 3611, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3493] },
        { teal: 3615, source: 'contracts\\BiatecPoolProvider.algo.ts:820', pc: [3494, 3495] },
        { teal: 3616, source: 'contracts\\BiatecPoolProvider.algo.ts:820', pc: [3496, 3497] },
        { teal: 3617, source: 'contracts\\BiatecPoolProvider.algo.ts:820', pc: [3498] },
        { teal: 3618, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3499] },
        { teal: 3619, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3500, 3501] },
        { teal: 3620, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3502] },
        { teal: 3621, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3503, 3504] },
        { teal: 3622, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3505] },
        { teal: 3623, source: 'contracts\\BiatecPoolProvider.algo.ts:820', pc: [3506] },
        { teal: 3624, source: 'contracts\\BiatecPoolProvider.algo.ts:820', pc: [3507] },
        { teal: 3625, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3508, 3509] },
        { teal: 3626, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3510, 3511] },
        { teal: 3627, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3512] },
        { teal: 3631, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3513, 3514] },
        { teal: 3632, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3515, 3516] },
        { teal: 3633, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3517] },
        { teal: 3634, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3518] },
        { teal: 3638, source: 'contracts\\BiatecPoolProvider.algo.ts:822', pc: [3519, 3520] },
        { teal: 3639, source: 'contracts\\BiatecPoolProvider.algo.ts:822', pc: [3521, 3522] },
        { teal: 3640, source: 'contracts\\BiatecPoolProvider.algo.ts:822', pc: [3523] },
        { teal: 3641, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3524] },
        { teal: 3642, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3525, 3526] },
        { teal: 3643, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3527] },
        { teal: 3644, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3528, 3529] },
        { teal: 3645, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3530] },
        { teal: 3646, source: 'contracts\\BiatecPoolProvider.algo.ts:822', pc: [3531] },
        { teal: 3647, source: 'contracts\\BiatecPoolProvider.algo.ts:822', pc: [3532] },
        { teal: 3648, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3533, 3534] },
        { teal: 3649, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3535, 3536] },
        { teal: 3650, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3537] },
        { teal: 3655, source: 'contracts\\BiatecPoolProvider.algo.ts:823', pc: [3538, 3539] },
        { teal: 3656, source: 'contracts\\BiatecPoolProvider.algo.ts:823', pc: [3540] },
        { teal: 3657, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3541] },
        { teal: 3658, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3542, 3543] },
        { teal: 3659, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3544] },
        { teal: 3660, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3545, 3546] },
        { teal: 3661, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3547] },
        { teal: 3662, source: 'contracts\\BiatecPoolProvider.algo.ts:823', pc: [3548] },
        { teal: 3663, source: 'contracts\\BiatecPoolProvider.algo.ts:823', pc: [3549] },
        { teal: 3664, source: 'contracts\\BiatecPoolProvider.algo.ts:823', pc: [3550] },
        { teal: 3665, source: 'contracts\\BiatecPoolProvider.algo.ts:823', pc: [3551, 3552, 3553] },
        { teal: 3670, source: 'contracts\\BiatecPoolProvider.algo.ts:824', pc: [3554, 3555] },
        { teal: 3671, source: 'contracts\\BiatecPoolProvider.algo.ts:824', pc: [3556, 3557] },
        { teal: 3672, source: 'contracts\\BiatecPoolProvider.algo.ts:824', pc: [3558] },
        { teal: 3673, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3559, 3560] },
        { teal: 3674, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3561, 3562] },
        { teal: 3675, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3563] },
        { teal: 3676, source: 'contracts\\BiatecPoolProvider.algo.ts:823', pc: [3564, 3565, 3566] },
        { teal: 3681, source: 'contracts\\BiatecPoolProvider.algo.ts:826', pc: [3567, 3568] },
        { teal: 3682, source: 'contracts\\BiatecPoolProvider.algo.ts:826', pc: [3569, 3570] },
        { teal: 3683, source: 'contracts\\BiatecPoolProvider.algo.ts:826', pc: [3571, 3572] },
        { teal: 3684, source: 'contracts\\BiatecPoolProvider.algo.ts:826', pc: [3573] },
        { teal: 3685, source: 'contracts\\BiatecPoolProvider.algo.ts:826', pc: [3574] },
        { teal: 3686, source: 'contracts\\BiatecPoolProvider.algo.ts:826', pc: [3575] },
        { teal: 3687, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3576, 3577] },
        { teal: 3688, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3578, 3579] },
        { teal: 3689, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3580] },
        { teal: 3696, source: 'contracts\\BiatecPoolProvider.algo.ts:830', pc: [3581, 3582] },
        { teal: 3697, source: 'contracts\\BiatecPoolProvider.algo.ts:830', pc: [3583] },
        { teal: 3698, source: 'contracts\\BiatecPoolProvider.algo.ts:830', pc: [3584] },
        { teal: 3699, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3585] },
        { teal: 3700, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3586, 3587] },
        { teal: 3701, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3588] },
        { teal: 3702, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3589, 3590] },
        { teal: 3703, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3591] },
        { teal: 3704, source: 'contracts\\BiatecPoolProvider.algo.ts:830', pc: [3592] },
        { teal: 3705, source: 'contracts\\BiatecPoolProvider.algo.ts:830', pc: [3593, 3594] },
        { teal: 3706, source: 'contracts\\BiatecPoolProvider.algo.ts:830', pc: [3595] },
        { teal: 3707, source: 'contracts\\BiatecPoolProvider.algo.ts:830', pc: [3596] },
        { teal: 3708, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3597, 3598] },
        { teal: 3709, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3599, 3600] },
        { teal: 3710, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3601] },
        { teal: 3714, source: 'contracts\\BiatecPoolProvider.algo.ts:831', pc: [3602] },
        { teal: 3715, source: 'contracts\\BiatecPoolProvider.algo.ts:831', pc: [3603] },
        { teal: 3716, source: 'contracts\\BiatecPoolProvider.algo.ts:831', pc: [3604] },
        { teal: 3717, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3605] },
        { teal: 3718, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3606, 3607] },
        { teal: 3719, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3608] },
        { teal: 3720, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3609, 3610] },
        { teal: 3721, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3611] },
        { teal: 3722, source: 'contracts\\BiatecPoolProvider.algo.ts:831', pc: [3612] },
        { teal: 3723, source: 'contracts\\BiatecPoolProvider.algo.ts:831', pc: [3613, 3614] },
        { teal: 3724, source: 'contracts\\BiatecPoolProvider.algo.ts:831', pc: [3615] },
        { teal: 3725, source: 'contracts\\BiatecPoolProvider.algo.ts:831', pc: [3616] },
        { teal: 3726, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3617, 3618] },
        { teal: 3727, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3619, 3620] },
        { teal: 3728, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3621] },
        { teal: 3732, source: 'contracts\\BiatecPoolProvider.algo.ts:832', pc: [3622, 3623] },
        { teal: 3733, source: 'contracts\\BiatecPoolProvider.algo.ts:832', pc: [3624] },
        { teal: 3734, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3625] },
        { teal: 3735, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3626, 3627] },
        { teal: 3736, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3628] },
        { teal: 3737, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3629, 3630] },
        { teal: 3738, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3631] },
        { teal: 3739, source: 'contracts\\BiatecPoolProvider.algo.ts:832', pc: [3632] },
        { teal: 3740, source: 'contracts\\BiatecPoolProvider.algo.ts:832', pc: [3633] },
        { teal: 3741, source: 'contracts\\BiatecPoolProvider.algo.ts:832', pc: [3634, 3635] },
        { teal: 3745, source: 'contracts\\BiatecPoolProvider.algo.ts:833', pc: [3636, 3637] },
        { teal: 3746, source: 'contracts\\BiatecPoolProvider.algo.ts:833', pc: [3638] },
        { teal: 3747, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3639] },
        { teal: 3748, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3640, 3641] },
        { teal: 3749, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3642] },
        { teal: 3750, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3643, 3644] },
        { teal: 3751, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3645] },
        { teal: 3752, source: 'contracts\\BiatecPoolProvider.algo.ts:833', pc: [3646] },
        { teal: 3753, source: 'contracts\\BiatecPoolProvider.algo.ts:833', pc: [3647] },
        { teal: 3754, source: 'contracts\\BiatecPoolProvider.algo.ts:833', pc: [3648, 3649] },
        { teal: 3759, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3650, 3651] },
        { teal: 3760, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3652, 3653] },
        { teal: 3761, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3654, 3655] },
        { teal: 3762, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3656] },
        { teal: 3763, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3657, 3658] },
        { teal: 3764, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3659, 3660] },
        { teal: 3765, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3661] },
        { teal: 3766, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3662] },
        { teal: 3767, source: 'contracts\\BiatecPoolProvider.algo.ts:835', pc: [3663, 3664] },
        { teal: 3768, source: 'contracts\\BiatecPoolProvider.algo.ts:835', pc: [3665, 3666] },
        { teal: 3769, source: 'contracts\\BiatecPoolProvider.algo.ts:835', pc: [3667] },
        { teal: 3770, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3668] },
        { teal: 3771, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3669] },
        { teal: 3772, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3670] },
        { teal: 3773, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3671] },
        { teal: 3774, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3672] },
        {
          teal: 3777,
          source: 'contracts\\BiatecPoolProvider.algo.ts:834',
          errorMessage:
            '((period1NowVolumeBUint256 * period1NowVWAPUint256 + amountBUint256 * priceUint256) /\r\\n      (period1NowVolumeBUint256 + amountBUint256)) as uint64 overflowed 64 bits',
          pc: [3673],
        },
        { teal: 3778, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3674, 3675] },
        { teal: 3779, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3676] },
        { teal: 3780, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3677] },
        { teal: 3781, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3678] },
        { teal: 3782, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3679] },
        { teal: 3783, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3680] },
        { teal: 3784, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3681] },
        { teal: 3785, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3682] },
        { teal: 3786, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3683] },
        { teal: 3787, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3684] },
        { teal: 3788, source: 'contracts\\BiatecPoolProvider.algo.ts:834', pc: [3685] },
        { teal: 3789, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3686, 3687] },
        { teal: 3790, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3688, 3689] },
        { teal: 3791, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3690] },
        { teal: 3795, source: 'contracts\\BiatecPoolProvider.algo.ts:836', pc: [3691, 3692] },
        { teal: 3796, source: 'contracts\\BiatecPoolProvider.algo.ts:836', pc: [3693] },
        { teal: 3797, source: 'contracts\\BiatecPoolProvider.algo.ts:836', pc: [3694] },
        { teal: 3798, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3695] },
        { teal: 3799, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3696, 3697] },
        { teal: 3800, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3698] },
        { teal: 3801, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3699, 3700] },
        { teal: 3802, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3701] },
        { teal: 3803, source: 'contracts\\BiatecPoolProvider.algo.ts:836', pc: [3702] },
        { teal: 3804, source: 'contracts\\BiatecPoolProvider.algo.ts:836', pc: [3703, 3704] },
        { teal: 3805, source: 'contracts\\BiatecPoolProvider.algo.ts:836', pc: [3705] },
        { teal: 3806, source: 'contracts\\BiatecPoolProvider.algo.ts:836', pc: [3706] },
        { teal: 3807, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3707, 3708] },
        { teal: 3808, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3709, 3710] },
        { teal: 3809, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3711] },
        { teal: 3813, source: 'contracts\\BiatecPoolProvider.algo.ts:837', pc: [3712, 3713] },
        { teal: 3814, source: 'contracts\\BiatecPoolProvider.algo.ts:837', pc: [3714] },
        { teal: 3815, source: 'contracts\\BiatecPoolProvider.algo.ts:837', pc: [3715] },
        { teal: 3816, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3716] },
        { teal: 3817, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3717, 3718] },
        { teal: 3818, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3719] },
        { teal: 3819, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3720, 3721] },
        { teal: 3820, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3722] },
        { teal: 3821, source: 'contracts\\BiatecPoolProvider.algo.ts:837', pc: [3723] },
        { teal: 3822, source: 'contracts\\BiatecPoolProvider.algo.ts:837', pc: [3724, 3725] },
        { teal: 3823, source: 'contracts\\BiatecPoolProvider.algo.ts:837', pc: [3726] },
        { teal: 3824, source: 'contracts\\BiatecPoolProvider.algo.ts:837', pc: [3727] },
        { teal: 3825, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3728, 3729] },
        { teal: 3826, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3730, 3731] },
        { teal: 3827, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3732] },
        { teal: 3831, source: 'contracts\\BiatecPoolProvider.algo.ts:840', pc: [3733, 3734] },
        { teal: 3832, source: 'contracts\\BiatecPoolProvider.algo.ts:840', pc: [3735] },
        { teal: 3833, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3736] },
        { teal: 3834, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3737, 3738] },
        { teal: 3835, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3739] },
        { teal: 3836, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3740, 3741] },
        { teal: 3837, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3742] },
        { teal: 3838, source: 'contracts\\BiatecPoolProvider.algo.ts:840', pc: [3743] },
        { teal: 3839, source: 'contracts\\BiatecPoolProvider.algo.ts:840', pc: [3744, 3745] },
        { teal: 3840, source: 'contracts\\BiatecPoolProvider.algo.ts:840', pc: [3746] },
        { teal: 3841, source: 'contracts\\BiatecPoolProvider.algo.ts:840', pc: [3747] },
        { teal: 3842, source: 'contracts\\BiatecPoolProvider.algo.ts:840', pc: [3748, 3749] },
        { teal: 3846, source: 'contracts\\BiatecPoolProvider.algo.ts:841', pc: [3750, 3751] },
        { teal: 3847, source: 'contracts\\BiatecPoolProvider.algo.ts:841', pc: [3752, 3753] },
        { teal: 3848, source: 'contracts\\BiatecPoolProvider.algo.ts:841', pc: [3754] },
        { teal: 3849, source: 'contracts\\BiatecPoolProvider.algo.ts:841', pc: [3755] },
        { teal: 3850, source: 'contracts\\BiatecPoolProvider.algo.ts:841', pc: [3756, 3757] },
        { teal: 3855, source: 'contracts\\BiatecPoolProvider.algo.ts:844', pc: [3758, 3759] },
        { teal: 3856, source: 'contracts\\BiatecPoolProvider.algo.ts:844', pc: [3760, 3761] },
        { teal: 3857, source: 'contracts\\BiatecPoolProvider.algo.ts:844', pc: [3762] },
        { teal: 3858, source: 'contracts\\BiatecPoolProvider.algo.ts:844', pc: [3763, 3764, 3765] },
        { teal: 3863, source: 'contracts\\BiatecPoolProvider.algo.ts:846', pc: [3766, 3767] },
        { teal: 3864, source: 'contracts\\BiatecPoolProvider.algo.ts:846', pc: [3768, 3769] },
        { teal: 3865, source: 'contracts\\BiatecPoolProvider.algo.ts:846', pc: [3770] },
        { teal: 3866, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3771] },
        { teal: 3867, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3772, 3773] },
        { teal: 3868, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3774] },
        { teal: 3869, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3775, 3776] },
        { teal: 3870, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3777] },
        { teal: 3871, source: 'contracts\\BiatecPoolProvider.algo.ts:846', pc: [3778] },
        { teal: 3872, source: 'contracts\\BiatecPoolProvider.algo.ts:846', pc: [3779] },
        { teal: 3873, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3780, 3781] },
        { teal: 3874, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3782, 3783] },
        { teal: 3875, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3784] },
        { teal: 3879, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3785, 3786] },
        { teal: 3880, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3787, 3788] },
        { teal: 3881, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3789] },
        { teal: 3882, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3790] },
        { teal: 3886, source: 'contracts\\BiatecPoolProvider.algo.ts:848', pc: [3791, 3792] },
        { teal: 3887, source: 'contracts\\BiatecPoolProvider.algo.ts:848', pc: [3793, 3794] },
        { teal: 3888, source: 'contracts\\BiatecPoolProvider.algo.ts:848', pc: [3795] },
        { teal: 3889, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3796] },
        { teal: 3890, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3797, 3798] },
        { teal: 3891, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3799] },
        { teal: 3892, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3800, 3801] },
        { teal: 3893, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3802] },
        { teal: 3894, source: 'contracts\\BiatecPoolProvider.algo.ts:848', pc: [3803] },
        { teal: 3895, source: 'contracts\\BiatecPoolProvider.algo.ts:848', pc: [3804] },
        { teal: 3896, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3805, 3806] },
        { teal: 3897, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3807, 3808] },
        { teal: 3898, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3809] },
        { teal: 3902, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3810, 3811] },
        { teal: 3903, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3812, 3813] },
        { teal: 3904, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3814] },
        { teal: 3905, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3815] },
        { teal: 3909, source: 'contracts\\BiatecPoolProvider.algo.ts:850', pc: [3816, 3817] },
        { teal: 3910, source: 'contracts\\BiatecPoolProvider.algo.ts:850', pc: [3818, 3819] },
        { teal: 3911, source: 'contracts\\BiatecPoolProvider.algo.ts:850', pc: [3820] },
        { teal: 3912, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3821] },
        { teal: 3913, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3822, 3823] },
        { teal: 3914, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3824] },
        { teal: 3915, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3825, 3826] },
        { teal: 3916, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3827] },
        { teal: 3917, source: 'contracts\\BiatecPoolProvider.algo.ts:850', pc: [3828] },
        { teal: 3918, source: 'contracts\\BiatecPoolProvider.algo.ts:850', pc: [3829] },
        { teal: 3919, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3830, 3831] },
        { teal: 3920, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3832, 3833] },
        { teal: 3921, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3834] },
        { teal: 3925, source: 'contracts\\BiatecPoolProvider.algo.ts:851', pc: [3835, 3836] },
        { teal: 3926, source: 'contracts\\BiatecPoolProvider.algo.ts:851', pc: [3837, 3838] },
        { teal: 3927, source: 'contracts\\BiatecPoolProvider.algo.ts:851', pc: [3839] },
        { teal: 3928, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3840] },
        { teal: 3929, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3841, 3842] },
        { teal: 3930, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3843] },
        { teal: 3931, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3844, 3845] },
        { teal: 3932, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3846] },
        { teal: 3933, source: 'contracts\\BiatecPoolProvider.algo.ts:851', pc: [3847] },
        { teal: 3934, source: 'contracts\\BiatecPoolProvider.algo.ts:851', pc: [3848] },
        { teal: 3935, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3849, 3850] },
        { teal: 3936, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3851, 3852] },
        { teal: 3937, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3853] },
        { teal: 3941, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3854, 3855] },
        { teal: 3942, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3856, 3857] },
        { teal: 3943, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3858] },
        { teal: 3944, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3859] },
        { teal: 3948, source: 'contracts\\BiatecPoolProvider.algo.ts:853', pc: [3860, 3861] },
        { teal: 3949, source: 'contracts\\BiatecPoolProvider.algo.ts:853', pc: [3862, 3863] },
        { teal: 3950, source: 'contracts\\BiatecPoolProvider.algo.ts:853', pc: [3864] },
        { teal: 3951, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3865] },
        { teal: 3952, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3866, 3867] },
        { teal: 3953, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3868] },
        { teal: 3954, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3869, 3870] },
        { teal: 3955, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3871] },
        { teal: 3956, source: 'contracts\\BiatecPoolProvider.algo.ts:853', pc: [3872] },
        { teal: 3957, source: 'contracts\\BiatecPoolProvider.algo.ts:853', pc: [3873] },
        { teal: 3958, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3874, 3875] },
        { teal: 3959, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3876, 3877] },
        { teal: 3960, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3878] },
        { teal: 3964, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3879, 3880] },
        { teal: 3965, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3881, 3882] },
        { teal: 3966, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3883] },
        { teal: 3967, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3884] },
        { teal: 3971, source: 'contracts\\BiatecPoolProvider.algo.ts:855', pc: [3885, 3886] },
        { teal: 3972, source: 'contracts\\BiatecPoolProvider.algo.ts:855', pc: [3887, 3888] },
        { teal: 3973, source: 'contracts\\BiatecPoolProvider.algo.ts:855', pc: [3889] },
        { teal: 3974, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3890] },
        { teal: 3975, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3891, 3892] },
        { teal: 3976, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3893] },
        { teal: 3977, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3894, 3895] },
        { teal: 3978, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3896] },
        { teal: 3979, source: 'contracts\\BiatecPoolProvider.algo.ts:855', pc: [3897] },
        { teal: 3980, source: 'contracts\\BiatecPoolProvider.algo.ts:855', pc: [3898] },
        { teal: 3981, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3899, 3900] },
        { teal: 3982, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3901, 3902] },
        { teal: 3983, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3903] },
        { teal: 3988, source: 'contracts\\BiatecPoolProvider.algo.ts:856', pc: [3904, 3905] },
        { teal: 3989, source: 'contracts\\BiatecPoolProvider.algo.ts:856', pc: [3906] },
        { teal: 3990, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3907] },
        { teal: 3991, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3908, 3909] },
        { teal: 3992, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3910] },
        { teal: 3993, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3911, 3912] },
        { teal: 3994, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3913] },
        { teal: 3995, source: 'contracts\\BiatecPoolProvider.algo.ts:856', pc: [3914] },
        { teal: 3996, source: 'contracts\\BiatecPoolProvider.algo.ts:856', pc: [3915] },
        { teal: 3997, source: 'contracts\\BiatecPoolProvider.algo.ts:856', pc: [3916] },
        { teal: 3998, source: 'contracts\\BiatecPoolProvider.algo.ts:856', pc: [3917, 3918, 3919] },
        { teal: 4003, source: 'contracts\\BiatecPoolProvider.algo.ts:857', pc: [3920, 3921] },
        { teal: 4004, source: 'contracts\\BiatecPoolProvider.algo.ts:857', pc: [3922, 3923] },
        { teal: 4005, source: 'contracts\\BiatecPoolProvider.algo.ts:857', pc: [3924] },
        { teal: 4006, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3925, 3926] },
        { teal: 4007, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3927, 3928] },
        { teal: 4008, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3929] },
        { teal: 4009, source: 'contracts\\BiatecPoolProvider.algo.ts:856', pc: [3930, 3931, 3932] },
        { teal: 4014, source: 'contracts\\BiatecPoolProvider.algo.ts:859', pc: [3933, 3934] },
        { teal: 4015, source: 'contracts\\BiatecPoolProvider.algo.ts:859', pc: [3935, 3936] },
        { teal: 4016, source: 'contracts\\BiatecPoolProvider.algo.ts:859', pc: [3937, 3938] },
        { teal: 4017, source: 'contracts\\BiatecPoolProvider.algo.ts:859', pc: [3939] },
        { teal: 4018, source: 'contracts\\BiatecPoolProvider.algo.ts:859', pc: [3940] },
        { teal: 4019, source: 'contracts\\BiatecPoolProvider.algo.ts:859', pc: [3941] },
        { teal: 4020, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3942, 3943] },
        { teal: 4021, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3944, 3945] },
        { teal: 4022, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3946] },
        { teal: 4029, source: 'contracts\\BiatecPoolProvider.algo.ts:863', pc: [3947, 3948] },
        { teal: 4030, source: 'contracts\\BiatecPoolProvider.algo.ts:863', pc: [3949] },
        { teal: 4031, source: 'contracts\\BiatecPoolProvider.algo.ts:863', pc: [3950] },
        { teal: 4032, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3951] },
        { teal: 4033, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3952, 3953] },
        { teal: 4034, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3954] },
        { teal: 4035, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3955, 3956] },
        { teal: 4036, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3957] },
        { teal: 4037, source: 'contracts\\BiatecPoolProvider.algo.ts:863', pc: [3958] },
        { teal: 4038, source: 'contracts\\BiatecPoolProvider.algo.ts:863', pc: [3959, 3960] },
        { teal: 4039, source: 'contracts\\BiatecPoolProvider.algo.ts:863', pc: [3961] },
        { teal: 4040, source: 'contracts\\BiatecPoolProvider.algo.ts:863', pc: [3962] },
        { teal: 4041, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3963, 3964] },
        { teal: 4042, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3965, 3966] },
        { teal: 4043, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3967] },
        { teal: 4047, source: 'contracts\\BiatecPoolProvider.algo.ts:864', pc: [3968, 3969] },
        { teal: 4048, source: 'contracts\\BiatecPoolProvider.algo.ts:864', pc: [3970] },
        { teal: 4049, source: 'contracts\\BiatecPoolProvider.algo.ts:864', pc: [3971] },
        { teal: 4050, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3972] },
        { teal: 4051, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3973, 3974] },
        { teal: 4052, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3975] },
        { teal: 4053, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3976, 3977] },
        { teal: 4054, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3978] },
        { teal: 4055, source: 'contracts\\BiatecPoolProvider.algo.ts:864', pc: [3979] },
        { teal: 4056, source: 'contracts\\BiatecPoolProvider.algo.ts:864', pc: [3980, 3981] },
        { teal: 4057, source: 'contracts\\BiatecPoolProvider.algo.ts:864', pc: [3982] },
        { teal: 4058, source: 'contracts\\BiatecPoolProvider.algo.ts:864', pc: [3983] },
        { teal: 4059, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3984, 3985] },
        { teal: 4060, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3986, 3987] },
        { teal: 4061, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3988] },
        { teal: 4065, source: 'contracts\\BiatecPoolProvider.algo.ts:865', pc: [3989, 3990] },
        { teal: 4066, source: 'contracts\\BiatecPoolProvider.algo.ts:865', pc: [3991] },
        { teal: 4067, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3992] },
        { teal: 4068, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3993, 3994] },
        { teal: 4069, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3995] },
        { teal: 4070, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3996, 3997] },
        { teal: 4071, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [3998] },
        { teal: 4072, source: 'contracts\\BiatecPoolProvider.algo.ts:865', pc: [3999] },
        { teal: 4073, source: 'contracts\\BiatecPoolProvider.algo.ts:865', pc: [4000] },
        { teal: 4074, source: 'contracts\\BiatecPoolProvider.algo.ts:865', pc: [4001, 4002] },
        { teal: 4078, source: 'contracts\\BiatecPoolProvider.algo.ts:866', pc: [4003, 4004] },
        { teal: 4079, source: 'contracts\\BiatecPoolProvider.algo.ts:866', pc: [4005] },
        { teal: 4080, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4006] },
        { teal: 4081, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4007, 4008] },
        { teal: 4082, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4009] },
        { teal: 4083, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4010, 4011] },
        { teal: 4084, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4012] },
        { teal: 4085, source: 'contracts\\BiatecPoolProvider.algo.ts:866', pc: [4013] },
        { teal: 4086, source: 'contracts\\BiatecPoolProvider.algo.ts:866', pc: [4014] },
        { teal: 4087, source: 'contracts\\BiatecPoolProvider.algo.ts:866', pc: [4015, 4016] },
        { teal: 4092, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4017, 4018] },
        { teal: 4093, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4019, 4020] },
        { teal: 4094, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4021, 4022] },
        { teal: 4095, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4023] },
        { teal: 4096, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4024, 4025] },
        { teal: 4097, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4026, 4027] },
        { teal: 4098, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4028] },
        { teal: 4099, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4029] },
        { teal: 4100, source: 'contracts\\BiatecPoolProvider.algo.ts:868', pc: [4030, 4031] },
        { teal: 4101, source: 'contracts\\BiatecPoolProvider.algo.ts:868', pc: [4032, 4033] },
        { teal: 4102, source: 'contracts\\BiatecPoolProvider.algo.ts:868', pc: [4034] },
        { teal: 4103, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4035] },
        { teal: 4104, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4036] },
        { teal: 4105, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4037] },
        { teal: 4106, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4038] },
        { teal: 4107, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4039] },
        {
          teal: 4110,
          source: 'contracts\\BiatecPoolProvider.algo.ts:867',
          errorMessage:
            '((period2NowVolumeBUint256 * period2NowVWAPUint256 + amountBUint256 * priceUint256) /\r\\n      (period2NowVolumeBUint256 + amountBUint256)) as uint64 overflowed 64 bits',
          pc: [4040],
        },
        { teal: 4111, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4041, 4042] },
        { teal: 4112, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4043] },
        { teal: 4113, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4044] },
        { teal: 4114, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4045] },
        { teal: 4115, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4046] },
        { teal: 4116, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4047] },
        { teal: 4117, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4048] },
        { teal: 4118, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4049] },
        { teal: 4119, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4050] },
        { teal: 4120, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4051] },
        { teal: 4121, source: 'contracts\\BiatecPoolProvider.algo.ts:867', pc: [4052] },
        { teal: 4122, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4053, 4054] },
        { teal: 4123, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4055, 4056] },
        { teal: 4124, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4057] },
        { teal: 4128, source: 'contracts\\BiatecPoolProvider.algo.ts:869', pc: [4058, 4059] },
        { teal: 4129, source: 'contracts\\BiatecPoolProvider.algo.ts:869', pc: [4060] },
        { teal: 4130, source: 'contracts\\BiatecPoolProvider.algo.ts:869', pc: [4061] },
        { teal: 4131, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4062] },
        { teal: 4132, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4063, 4064] },
        { teal: 4133, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4065] },
        { teal: 4134, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4066, 4067] },
        { teal: 4135, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4068] },
        { teal: 4136, source: 'contracts\\BiatecPoolProvider.algo.ts:869', pc: [4069] },
        { teal: 4137, source: 'contracts\\BiatecPoolProvider.algo.ts:869', pc: [4070, 4071] },
        { teal: 4138, source: 'contracts\\BiatecPoolProvider.algo.ts:869', pc: [4072] },
        { teal: 4139, source: 'contracts\\BiatecPoolProvider.algo.ts:869', pc: [4073] },
        { teal: 4140, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4074, 4075] },
        { teal: 4141, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4076, 4077] },
        { teal: 4142, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4078] },
        { teal: 4146, source: 'contracts\\BiatecPoolProvider.algo.ts:870', pc: [4079, 4080] },
        { teal: 4147, source: 'contracts\\BiatecPoolProvider.algo.ts:870', pc: [4081] },
        { teal: 4148, source: 'contracts\\BiatecPoolProvider.algo.ts:870', pc: [4082] },
        { teal: 4149, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4083] },
        { teal: 4150, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4084, 4085] },
        { teal: 4151, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4086] },
        { teal: 4152, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4087, 4088] },
        { teal: 4153, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4089] },
        { teal: 4154, source: 'contracts\\BiatecPoolProvider.algo.ts:870', pc: [4090] },
        { teal: 4155, source: 'contracts\\BiatecPoolProvider.algo.ts:870', pc: [4091, 4092] },
        { teal: 4156, source: 'contracts\\BiatecPoolProvider.algo.ts:870', pc: [4093] },
        { teal: 4157, source: 'contracts\\BiatecPoolProvider.algo.ts:870', pc: [4094] },
        { teal: 4158, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4095, 4096] },
        { teal: 4159, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4097, 4098] },
        { teal: 4160, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4099] },
        { teal: 4164, source: 'contracts\\BiatecPoolProvider.algo.ts:873', pc: [4100, 4101] },
        { teal: 4165, source: 'contracts\\BiatecPoolProvider.algo.ts:873', pc: [4102] },
        { teal: 4166, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4103] },
        { teal: 4167, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4104, 4105] },
        { teal: 4168, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4106] },
        { teal: 4169, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4107, 4108] },
        { teal: 4170, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4109] },
        { teal: 4171, source: 'contracts\\BiatecPoolProvider.algo.ts:873', pc: [4110] },
        { teal: 4172, source: 'contracts\\BiatecPoolProvider.algo.ts:873', pc: [4111, 4112] },
        { teal: 4173, source: 'contracts\\BiatecPoolProvider.algo.ts:873', pc: [4113] },
        { teal: 4174, source: 'contracts\\BiatecPoolProvider.algo.ts:873', pc: [4114] },
        { teal: 4175, source: 'contracts\\BiatecPoolProvider.algo.ts:873', pc: [4115, 4116] },
        { teal: 4179, source: 'contracts\\BiatecPoolProvider.algo.ts:874', pc: [4117, 4118] },
        { teal: 4180, source: 'contracts\\BiatecPoolProvider.algo.ts:874', pc: [4119, 4120] },
        { teal: 4181, source: 'contracts\\BiatecPoolProvider.algo.ts:874', pc: [4121] },
        { teal: 4182, source: 'contracts\\BiatecPoolProvider.algo.ts:874', pc: [4122] },
        { teal: 4183, source: 'contracts\\BiatecPoolProvider.algo.ts:874', pc: [4123, 4124] },
        { teal: 4188, source: 'contracts\\BiatecPoolProvider.algo.ts:877', pc: [4125, 4126] },
        { teal: 4189, source: 'contracts\\BiatecPoolProvider.algo.ts:877', pc: [4127, 4128] },
        { teal: 4190, source: 'contracts\\BiatecPoolProvider.algo.ts:877', pc: [4129] },
        { teal: 4191, source: 'contracts\\BiatecPoolProvider.algo.ts:877', pc: [4130, 4131, 4132] },
        { teal: 4196, source: 'contracts\\BiatecPoolProvider.algo.ts:879', pc: [4133, 4134] },
        { teal: 4197, source: 'contracts\\BiatecPoolProvider.algo.ts:879', pc: [4135, 4136] },
        { teal: 4198, source: 'contracts\\BiatecPoolProvider.algo.ts:879', pc: [4137] },
        { teal: 4199, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4138] },
        { teal: 4200, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4139, 4140] },
        { teal: 4201, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4141] },
        { teal: 4202, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4142, 4143] },
        { teal: 4203, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4144] },
        { teal: 4204, source: 'contracts\\BiatecPoolProvider.algo.ts:879', pc: [4145] },
        { teal: 4205, source: 'contracts\\BiatecPoolProvider.algo.ts:879', pc: [4146] },
        { teal: 4206, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4147, 4148] },
        { teal: 4207, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4149, 4150] },
        { teal: 4208, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4151] },
        { teal: 4212, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4152, 4153] },
        { teal: 4213, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4154, 4155] },
        { teal: 4214, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4156] },
        { teal: 4215, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4157] },
        { teal: 4219, source: 'contracts\\BiatecPoolProvider.algo.ts:881', pc: [4158, 4159] },
        { teal: 4220, source: 'contracts\\BiatecPoolProvider.algo.ts:881', pc: [4160, 4161] },
        { teal: 4221, source: 'contracts\\BiatecPoolProvider.algo.ts:881', pc: [4162] },
        { teal: 4222, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4163] },
        { teal: 4223, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4164, 4165] },
        { teal: 4224, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4166] },
        { teal: 4225, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4167, 4168] },
        { teal: 4226, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4169] },
        { teal: 4227, source: 'contracts\\BiatecPoolProvider.algo.ts:881', pc: [4170] },
        { teal: 4228, source: 'contracts\\BiatecPoolProvider.algo.ts:881', pc: [4171] },
        { teal: 4229, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4172, 4173] },
        { teal: 4230, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4174, 4175] },
        { teal: 4231, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4176] },
        { teal: 4235, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4177, 4178] },
        { teal: 4236, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4179, 4180] },
        { teal: 4237, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4181] },
        { teal: 4238, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4182] },
        { teal: 4242, source: 'contracts\\BiatecPoolProvider.algo.ts:883', pc: [4183, 4184] },
        { teal: 4243, source: 'contracts\\BiatecPoolProvider.algo.ts:883', pc: [4185, 4186] },
        { teal: 4244, source: 'contracts\\BiatecPoolProvider.algo.ts:883', pc: [4187] },
        { teal: 4245, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4188] },
        { teal: 4246, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4189, 4190] },
        { teal: 4247, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4191] },
        { teal: 4248, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4192, 4193] },
        { teal: 4249, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4194] },
        { teal: 4250, source: 'contracts\\BiatecPoolProvider.algo.ts:883', pc: [4195] },
        { teal: 4251, source: 'contracts\\BiatecPoolProvider.algo.ts:883', pc: [4196] },
        { teal: 4252, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4197, 4198] },
        { teal: 4253, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4199, 4200] },
        { teal: 4254, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4201] },
        { teal: 4258, source: 'contracts\\BiatecPoolProvider.algo.ts:884', pc: [4202, 4203] },
        { teal: 4259, source: 'contracts\\BiatecPoolProvider.algo.ts:884', pc: [4204, 4205] },
        { teal: 4260, source: 'contracts\\BiatecPoolProvider.algo.ts:884', pc: [4206] },
        { teal: 4261, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4207] },
        { teal: 4262, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4208, 4209] },
        { teal: 4263, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4210] },
        { teal: 4264, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4211, 4212] },
        { teal: 4265, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4213] },
        { teal: 4266, source: 'contracts\\BiatecPoolProvider.algo.ts:884', pc: [4214] },
        { teal: 4267, source: 'contracts\\BiatecPoolProvider.algo.ts:884', pc: [4215] },
        { teal: 4268, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4216, 4217] },
        { teal: 4269, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4218, 4219] },
        { teal: 4270, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4220] },
        { teal: 4274, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4221, 4222] },
        { teal: 4275, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4223, 4224] },
        { teal: 4276, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4225] },
        { teal: 4277, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4226] },
        { teal: 4281, source: 'contracts\\BiatecPoolProvider.algo.ts:886', pc: [4227, 4228] },
        { teal: 4282, source: 'contracts\\BiatecPoolProvider.algo.ts:886', pc: [4229, 4230] },
        { teal: 4283, source: 'contracts\\BiatecPoolProvider.algo.ts:886', pc: [4231] },
        { teal: 4284, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4232] },
        { teal: 4285, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4233, 4234] },
        { teal: 4286, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4235] },
        { teal: 4287, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4236, 4237] },
        { teal: 4288, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4238] },
        { teal: 4289, source: 'contracts\\BiatecPoolProvider.algo.ts:886', pc: [4239] },
        { teal: 4290, source: 'contracts\\BiatecPoolProvider.algo.ts:886', pc: [4240] },
        { teal: 4291, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4241, 4242] },
        { teal: 4292, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4243, 4244] },
        { teal: 4293, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4245] },
        { teal: 4297, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4246, 4247] },
        { teal: 4298, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4248, 4249] },
        { teal: 4299, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4250] },
        { teal: 4300, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4251] },
        { teal: 4304, source: 'contracts\\BiatecPoolProvider.algo.ts:888', pc: [4252, 4253] },
        { teal: 4305, source: 'contracts\\BiatecPoolProvider.algo.ts:888', pc: [4254, 4255] },
        { teal: 4306, source: 'contracts\\BiatecPoolProvider.algo.ts:888', pc: [4256] },
        { teal: 4307, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4257] },
        { teal: 4308, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4258, 4259] },
        { teal: 4309, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4260] },
        { teal: 4310, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4261, 4262] },
        { teal: 4311, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4263] },
        { teal: 4312, source: 'contracts\\BiatecPoolProvider.algo.ts:888', pc: [4264] },
        { teal: 4313, source: 'contracts\\BiatecPoolProvider.algo.ts:888', pc: [4265] },
        { teal: 4314, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4266, 4267] },
        { teal: 4315, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4268, 4269] },
        { teal: 4316, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4270] },
        { teal: 4321, source: 'contracts\\BiatecPoolProvider.algo.ts:889', pc: [4271, 4272] },
        { teal: 4322, source: 'contracts\\BiatecPoolProvider.algo.ts:889', pc: [4273] },
        { teal: 4323, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4274] },
        { teal: 4324, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4275, 4276] },
        { teal: 4325, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4277] },
        { teal: 4326, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4278, 4279] },
        { teal: 4327, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4280] },
        { teal: 4328, source: 'contracts\\BiatecPoolProvider.algo.ts:889', pc: [4281] },
        { teal: 4329, source: 'contracts\\BiatecPoolProvider.algo.ts:889', pc: [4282] },
        { teal: 4330, source: 'contracts\\BiatecPoolProvider.algo.ts:889', pc: [4283] },
        { teal: 4331, source: 'contracts\\BiatecPoolProvider.algo.ts:889', pc: [4284, 4285, 4286] },
        { teal: 4336, source: 'contracts\\BiatecPoolProvider.algo.ts:890', pc: [4287, 4288] },
        { teal: 4337, source: 'contracts\\BiatecPoolProvider.algo.ts:890', pc: [4289, 4290] },
        { teal: 4338, source: 'contracts\\BiatecPoolProvider.algo.ts:890', pc: [4291] },
        { teal: 4339, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4292, 4293] },
        { teal: 4340, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4294, 4295] },
        { teal: 4341, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4296] },
        { teal: 4342, source: 'contracts\\BiatecPoolProvider.algo.ts:889', pc: [4297, 4298, 4299] },
        { teal: 4347, source: 'contracts\\BiatecPoolProvider.algo.ts:892', pc: [4300, 4301] },
        { teal: 4348, source: 'contracts\\BiatecPoolProvider.algo.ts:892', pc: [4302, 4303] },
        { teal: 4349, source: 'contracts\\BiatecPoolProvider.algo.ts:892', pc: [4304, 4305] },
        { teal: 4350, source: 'contracts\\BiatecPoolProvider.algo.ts:892', pc: [4306] },
        { teal: 4351, source: 'contracts\\BiatecPoolProvider.algo.ts:892', pc: [4307] },
        { teal: 4352, source: 'contracts\\BiatecPoolProvider.algo.ts:892', pc: [4308] },
        { teal: 4353, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4309, 4310] },
        { teal: 4354, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4311, 4312] },
        { teal: 4355, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4313] },
        { teal: 4362, source: 'contracts\\BiatecPoolProvider.algo.ts:896', pc: [4314, 4315] },
        { teal: 4363, source: 'contracts\\BiatecPoolProvider.algo.ts:896', pc: [4316] },
        { teal: 4364, source: 'contracts\\BiatecPoolProvider.algo.ts:896', pc: [4317] },
        { teal: 4365, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4318] },
        { teal: 4366, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4319, 4320] },
        { teal: 4367, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4321] },
        { teal: 4368, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4322, 4323] },
        { teal: 4369, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4324] },
        { teal: 4370, source: 'contracts\\BiatecPoolProvider.algo.ts:896', pc: [4325] },
        { teal: 4371, source: 'contracts\\BiatecPoolProvider.algo.ts:896', pc: [4326, 4327] },
        { teal: 4372, source: 'contracts\\BiatecPoolProvider.algo.ts:896', pc: [4328] },
        { teal: 4373, source: 'contracts\\BiatecPoolProvider.algo.ts:896', pc: [4329] },
        { teal: 4374, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4330, 4331] },
        { teal: 4375, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4332, 4333] },
        { teal: 4376, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4334] },
        { teal: 4380, source: 'contracts\\BiatecPoolProvider.algo.ts:897', pc: [4335, 4336] },
        { teal: 4381, source: 'contracts\\BiatecPoolProvider.algo.ts:897', pc: [4337] },
        { teal: 4382, source: 'contracts\\BiatecPoolProvider.algo.ts:897', pc: [4338] },
        { teal: 4383, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4339] },
        { teal: 4384, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4340, 4341] },
        { teal: 4385, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4342] },
        { teal: 4386, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4343, 4344] },
        { teal: 4387, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4345] },
        { teal: 4388, source: 'contracts\\BiatecPoolProvider.algo.ts:897', pc: [4346] },
        { teal: 4389, source: 'contracts\\BiatecPoolProvider.algo.ts:897', pc: [4347, 4348] },
        { teal: 4390, source: 'contracts\\BiatecPoolProvider.algo.ts:897', pc: [4349] },
        { teal: 4391, source: 'contracts\\BiatecPoolProvider.algo.ts:897', pc: [4350] },
        { teal: 4392, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4351, 4352] },
        { teal: 4393, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4353, 4354] },
        { teal: 4394, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4355] },
        { teal: 4398, source: 'contracts\\BiatecPoolProvider.algo.ts:898', pc: [4356, 4357] },
        { teal: 4399, source: 'contracts\\BiatecPoolProvider.algo.ts:898', pc: [4358] },
        { teal: 4400, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4359] },
        { teal: 4401, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4360, 4361] },
        { teal: 4402, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4362] },
        { teal: 4403, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4363, 4364] },
        { teal: 4404, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4365] },
        { teal: 4405, source: 'contracts\\BiatecPoolProvider.algo.ts:898', pc: [4366] },
        { teal: 4406, source: 'contracts\\BiatecPoolProvider.algo.ts:898', pc: [4367] },
        { teal: 4407, source: 'contracts\\BiatecPoolProvider.algo.ts:898', pc: [4368, 4369] },
        { teal: 4411, source: 'contracts\\BiatecPoolProvider.algo.ts:899', pc: [4370, 4371] },
        { teal: 4412, source: 'contracts\\BiatecPoolProvider.algo.ts:899', pc: [4372] },
        { teal: 4413, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4373] },
        { teal: 4414, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4374, 4375] },
        { teal: 4415, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4376] },
        { teal: 4416, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4377, 4378] },
        { teal: 4417, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4379] },
        { teal: 4418, source: 'contracts\\BiatecPoolProvider.algo.ts:899', pc: [4380] },
        { teal: 4419, source: 'contracts\\BiatecPoolProvider.algo.ts:899', pc: [4381] },
        { teal: 4420, source: 'contracts\\BiatecPoolProvider.algo.ts:899', pc: [4382, 4383] },
        { teal: 4425, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4384, 4385] },
        { teal: 4426, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4386, 4387] },
        { teal: 4427, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4388, 4389] },
        { teal: 4428, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4390] },
        { teal: 4429, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4391, 4392] },
        { teal: 4430, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4393, 4394] },
        { teal: 4431, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4395] },
        { teal: 4432, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4396] },
        { teal: 4433, source: 'contracts\\BiatecPoolProvider.algo.ts:901', pc: [4397, 4398] },
        { teal: 4434, source: 'contracts\\BiatecPoolProvider.algo.ts:901', pc: [4399, 4400] },
        { teal: 4435, source: 'contracts\\BiatecPoolProvider.algo.ts:901', pc: [4401] },
        { teal: 4436, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4402] },
        { teal: 4437, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4403] },
        { teal: 4438, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4404] },
        { teal: 4439, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4405] },
        { teal: 4440, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4406] },
        {
          teal: 4443,
          source: 'contracts\\BiatecPoolProvider.algo.ts:900',
          errorMessage:
            '((period3NowVolumeBUint256 * period3NowVWAPUint256 + amountBUint256 * priceUint256) /\r\\n      (period3NowVolumeBUint256 + amountBUint256)) as uint64 overflowed 64 bits',
          pc: [4407],
        },
        { teal: 4444, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4408, 4409] },
        { teal: 4445, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4410] },
        { teal: 4446, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4411] },
        { teal: 4447, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4412] },
        { teal: 4448, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4413] },
        { teal: 4449, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4414] },
        { teal: 4450, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4415] },
        { teal: 4451, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4416] },
        { teal: 4452, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4417] },
        { teal: 4453, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4418] },
        { teal: 4454, source: 'contracts\\BiatecPoolProvider.algo.ts:900', pc: [4419] },
        { teal: 4455, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4420, 4421] },
        { teal: 4456, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4422, 4423] },
        { teal: 4457, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4424] },
        { teal: 4461, source: 'contracts\\BiatecPoolProvider.algo.ts:902', pc: [4425, 4426] },
        { teal: 4462, source: 'contracts\\BiatecPoolProvider.algo.ts:902', pc: [4427] },
        { teal: 4463, source: 'contracts\\BiatecPoolProvider.algo.ts:902', pc: [4428] },
        { teal: 4464, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4429] },
        { teal: 4465, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4430, 4431] },
        { teal: 4466, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4432] },
        { teal: 4467, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4433, 4434] },
        { teal: 4468, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4435] },
        { teal: 4469, source: 'contracts\\BiatecPoolProvider.algo.ts:902', pc: [4436] },
        { teal: 4470, source: 'contracts\\BiatecPoolProvider.algo.ts:902', pc: [4437, 4438] },
        { teal: 4471, source: 'contracts\\BiatecPoolProvider.algo.ts:902', pc: [4439] },
        { teal: 4472, source: 'contracts\\BiatecPoolProvider.algo.ts:902', pc: [4440] },
        { teal: 4473, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4441, 4442] },
        { teal: 4474, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4443, 4444] },
        { teal: 4475, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4445] },
        { teal: 4479, source: 'contracts\\BiatecPoolProvider.algo.ts:903', pc: [4446, 4447] },
        { teal: 4480, source: 'contracts\\BiatecPoolProvider.algo.ts:903', pc: [4448] },
        { teal: 4481, source: 'contracts\\BiatecPoolProvider.algo.ts:903', pc: [4449] },
        { teal: 4482, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4450] },
        { teal: 4483, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4451, 4452] },
        { teal: 4484, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4453] },
        { teal: 4485, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4454, 4455] },
        { teal: 4486, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4456] },
        { teal: 4487, source: 'contracts\\BiatecPoolProvider.algo.ts:903', pc: [4457] },
        { teal: 4488, source: 'contracts\\BiatecPoolProvider.algo.ts:903', pc: [4458, 4459] },
        { teal: 4489, source: 'contracts\\BiatecPoolProvider.algo.ts:903', pc: [4460] },
        { teal: 4490, source: 'contracts\\BiatecPoolProvider.algo.ts:903', pc: [4461] },
        { teal: 4491, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4462, 4463] },
        { teal: 4492, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4464, 4465] },
        { teal: 4493, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4466] },
        { teal: 4497, source: 'contracts\\BiatecPoolProvider.algo.ts:905', pc: [4467, 4468] },
        { teal: 4498, source: 'contracts\\BiatecPoolProvider.algo.ts:905', pc: [4469] },
        { teal: 4499, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4470] },
        { teal: 4500, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4471, 4472] },
        { teal: 4501, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4473] },
        { teal: 4502, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4474, 4475] },
        { teal: 4503, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4476] },
        { teal: 4504, source: 'contracts\\BiatecPoolProvider.algo.ts:905', pc: [4477] },
        { teal: 4505, source: 'contracts\\BiatecPoolProvider.algo.ts:905', pc: [4478, 4479] },
        { teal: 4506, source: 'contracts\\BiatecPoolProvider.algo.ts:905', pc: [4480] },
        { teal: 4507, source: 'contracts\\BiatecPoolProvider.algo.ts:905', pc: [4481] },
        { teal: 4508, source: 'contracts\\BiatecPoolProvider.algo.ts:905', pc: [4482, 4483] },
        { teal: 4512, source: 'contracts\\BiatecPoolProvider.algo.ts:906', pc: [4484, 4485] },
        { teal: 4513, source: 'contracts\\BiatecPoolProvider.algo.ts:906', pc: [4486, 4487] },
        { teal: 4514, source: 'contracts\\BiatecPoolProvider.algo.ts:906', pc: [4488] },
        { teal: 4515, source: 'contracts\\BiatecPoolProvider.algo.ts:906', pc: [4489] },
        { teal: 4516, source: 'contracts\\BiatecPoolProvider.algo.ts:906', pc: [4490, 4491] },
        { teal: 4521, source: 'contracts\\BiatecPoolProvider.algo.ts:909', pc: [4492, 4493] },
        { teal: 4522, source: 'contracts\\BiatecPoolProvider.algo.ts:909', pc: [4494, 4495] },
        { teal: 4523, source: 'contracts\\BiatecPoolProvider.algo.ts:909', pc: [4496] },
        { teal: 4524, source: 'contracts\\BiatecPoolProvider.algo.ts:909', pc: [4497, 4498, 4499] },
        { teal: 4529, source: 'contracts\\BiatecPoolProvider.algo.ts:911', pc: [4500, 4501] },
        { teal: 4530, source: 'contracts\\BiatecPoolProvider.algo.ts:911', pc: [4502, 4503] },
        { teal: 4531, source: 'contracts\\BiatecPoolProvider.algo.ts:911', pc: [4504] },
        { teal: 4532, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4505] },
        { teal: 4533, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4506, 4507] },
        { teal: 4534, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4508] },
        { teal: 4535, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4509, 4510] },
        { teal: 4536, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4511] },
        { teal: 4537, source: 'contracts\\BiatecPoolProvider.algo.ts:911', pc: [4512] },
        { teal: 4538, source: 'contracts\\BiatecPoolProvider.algo.ts:911', pc: [4513] },
        { teal: 4539, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4514, 4515] },
        { teal: 4540, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4516, 4517] },
        { teal: 4541, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4518] },
        { teal: 4545, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4519, 4520] },
        { teal: 4546, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4521, 4522] },
        { teal: 4547, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4523] },
        { teal: 4548, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4524] },
        { teal: 4552, source: 'contracts\\BiatecPoolProvider.algo.ts:913', pc: [4525, 4526] },
        { teal: 4553, source: 'contracts\\BiatecPoolProvider.algo.ts:913', pc: [4527, 4528] },
        { teal: 4554, source: 'contracts\\BiatecPoolProvider.algo.ts:913', pc: [4529] },
        { teal: 4555, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4530] },
        { teal: 4556, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4531, 4532] },
        { teal: 4557, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4533] },
        { teal: 4558, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4534, 4535] },
        { teal: 4559, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4536] },
        { teal: 4560, source: 'contracts\\BiatecPoolProvider.algo.ts:913', pc: [4537] },
        { teal: 4561, source: 'contracts\\BiatecPoolProvider.algo.ts:913', pc: [4538] },
        { teal: 4562, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4539, 4540] },
        { teal: 4563, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4541, 4542] },
        { teal: 4564, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4543] },
        { teal: 4568, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4544, 4545] },
        { teal: 4569, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4546, 4547] },
        { teal: 4570, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4548] },
        { teal: 4571, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4549] },
        { teal: 4575, source: 'contracts\\BiatecPoolProvider.algo.ts:915', pc: [4550, 4551] },
        { teal: 4576, source: 'contracts\\BiatecPoolProvider.algo.ts:915', pc: [4552, 4553] },
        { teal: 4577, source: 'contracts\\BiatecPoolProvider.algo.ts:915', pc: [4554] },
        { teal: 4578, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4555] },
        { teal: 4579, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4556, 4557] },
        { teal: 4580, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4558] },
        { teal: 4581, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4559, 4560] },
        { teal: 4582, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4561] },
        { teal: 4583, source: 'contracts\\BiatecPoolProvider.algo.ts:915', pc: [4562] },
        { teal: 4584, source: 'contracts\\BiatecPoolProvider.algo.ts:915', pc: [4563] },
        { teal: 4585, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4564, 4565] },
        { teal: 4586, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4566, 4567] },
        { teal: 4587, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4568] },
        { teal: 4591, source: 'contracts\\BiatecPoolProvider.algo.ts:916', pc: [4569, 4570] },
        { teal: 4592, source: 'contracts\\BiatecPoolProvider.algo.ts:916', pc: [4571, 4572] },
        { teal: 4593, source: 'contracts\\BiatecPoolProvider.algo.ts:916', pc: [4573] },
        { teal: 4594, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4574] },
        { teal: 4595, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4575, 4576] },
        { teal: 4596, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4577] },
        { teal: 4597, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4578, 4579] },
        { teal: 4598, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4580] },
        { teal: 4599, source: 'contracts\\BiatecPoolProvider.algo.ts:916', pc: [4581] },
        { teal: 4600, source: 'contracts\\BiatecPoolProvider.algo.ts:916', pc: [4582] },
        { teal: 4601, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4583, 4584] },
        { teal: 4602, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4585, 4586] },
        { teal: 4603, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4587] },
        { teal: 4607, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4588, 4589] },
        { teal: 4608, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4590, 4591] },
        { teal: 4609, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4592] },
        { teal: 4610, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4593] },
        { teal: 4614, source: 'contracts\\BiatecPoolProvider.algo.ts:918', pc: [4594, 4595] },
        { teal: 4615, source: 'contracts\\BiatecPoolProvider.algo.ts:918', pc: [4596, 4597] },
        { teal: 4616, source: 'contracts\\BiatecPoolProvider.algo.ts:918', pc: [4598] },
        { teal: 4617, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4599] },
        { teal: 4618, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4600, 4601] },
        { teal: 4619, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4602] },
        { teal: 4620, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4603, 4604] },
        { teal: 4621, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4605] },
        { teal: 4622, source: 'contracts\\BiatecPoolProvider.algo.ts:918', pc: [4606] },
        { teal: 4623, source: 'contracts\\BiatecPoolProvider.algo.ts:918', pc: [4607] },
        { teal: 4624, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4608, 4609] },
        { teal: 4625, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4610, 4611] },
        { teal: 4626, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4612] },
        { teal: 4630, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4613, 4614] },
        { teal: 4631, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4615, 4616] },
        { teal: 4632, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4617] },
        { teal: 4633, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4618] },
        { teal: 4637, source: 'contracts\\BiatecPoolProvider.algo.ts:920', pc: [4619, 4620] },
        { teal: 4638, source: 'contracts\\BiatecPoolProvider.algo.ts:920', pc: [4621, 4622] },
        { teal: 4639, source: 'contracts\\BiatecPoolProvider.algo.ts:920', pc: [4623] },
        { teal: 4640, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4624] },
        { teal: 4641, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4625, 4626] },
        { teal: 4642, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4627] },
        { teal: 4643, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4628, 4629] },
        { teal: 4644, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4630] },
        { teal: 4645, source: 'contracts\\BiatecPoolProvider.algo.ts:920', pc: [4631] },
        { teal: 4646, source: 'contracts\\BiatecPoolProvider.algo.ts:920', pc: [4632] },
        { teal: 4647, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4633, 4634] },
        { teal: 4648, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4635, 4636] },
        { teal: 4649, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4637] },
        { teal: 4654, source: 'contracts\\BiatecPoolProvider.algo.ts:921', pc: [4638, 4639] },
        { teal: 4655, source: 'contracts\\BiatecPoolProvider.algo.ts:921', pc: [4640] },
        { teal: 4656, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4641] },
        { teal: 4657, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4642, 4643] },
        { teal: 4658, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4644] },
        { teal: 4659, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4645, 4646] },
        { teal: 4660, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4647] },
        { teal: 4661, source: 'contracts\\BiatecPoolProvider.algo.ts:921', pc: [4648] },
        { teal: 4662, source: 'contracts\\BiatecPoolProvider.algo.ts:921', pc: [4649] },
        { teal: 4663, source: 'contracts\\BiatecPoolProvider.algo.ts:921', pc: [4650] },
        { teal: 4664, source: 'contracts\\BiatecPoolProvider.algo.ts:921', pc: [4651, 4652, 4653] },
        { teal: 4669, source: 'contracts\\BiatecPoolProvider.algo.ts:922', pc: [4654, 4655] },
        { teal: 4670, source: 'contracts\\BiatecPoolProvider.algo.ts:922', pc: [4656, 4657] },
        { teal: 4671, source: 'contracts\\BiatecPoolProvider.algo.ts:922', pc: [4658] },
        { teal: 4672, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4659, 4660] },
        { teal: 4673, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4661, 4662] },
        { teal: 4674, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4663] },
        { teal: 4675, source: 'contracts\\BiatecPoolProvider.algo.ts:921', pc: [4664, 4665, 4666] },
        { teal: 4680, source: 'contracts\\BiatecPoolProvider.algo.ts:924', pc: [4667, 4668] },
        { teal: 4681, source: 'contracts\\BiatecPoolProvider.algo.ts:924', pc: [4669, 4670] },
        { teal: 4682, source: 'contracts\\BiatecPoolProvider.algo.ts:924', pc: [4671, 4672] },
        { teal: 4683, source: 'contracts\\BiatecPoolProvider.algo.ts:924', pc: [4673] },
        { teal: 4684, source: 'contracts\\BiatecPoolProvider.algo.ts:924', pc: [4674] },
        { teal: 4685, source: 'contracts\\BiatecPoolProvider.algo.ts:924', pc: [4675] },
        { teal: 4686, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4676, 4677] },
        { teal: 4687, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4678, 4679] },
        { teal: 4688, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4680] },
        { teal: 4695, source: 'contracts\\BiatecPoolProvider.algo.ts:928', pc: [4681, 4682] },
        { teal: 4696, source: 'contracts\\BiatecPoolProvider.algo.ts:928', pc: [4683] },
        { teal: 4697, source: 'contracts\\BiatecPoolProvider.algo.ts:928', pc: [4684] },
        { teal: 4698, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4685] },
        { teal: 4699, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4686, 4687] },
        { teal: 4700, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4688] },
        { teal: 4701, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4689, 4690] },
        { teal: 4702, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4691] },
        { teal: 4703, source: 'contracts\\BiatecPoolProvider.algo.ts:928', pc: [4692] },
        { teal: 4704, source: 'contracts\\BiatecPoolProvider.algo.ts:928', pc: [4693, 4694] },
        { teal: 4705, source: 'contracts\\BiatecPoolProvider.algo.ts:928', pc: [4695] },
        { teal: 4706, source: 'contracts\\BiatecPoolProvider.algo.ts:928', pc: [4696] },
        { teal: 4707, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4697, 4698] },
        { teal: 4708, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4699, 4700] },
        { teal: 4709, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4701] },
        { teal: 4713, source: 'contracts\\BiatecPoolProvider.algo.ts:929', pc: [4702, 4703] },
        { teal: 4714, source: 'contracts\\BiatecPoolProvider.algo.ts:929', pc: [4704] },
        { teal: 4715, source: 'contracts\\BiatecPoolProvider.algo.ts:929', pc: [4705] },
        { teal: 4716, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4706] },
        { teal: 4717, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4707, 4708] },
        { teal: 4718, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4709] },
        { teal: 4719, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4710, 4711] },
        { teal: 4720, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4712] },
        { teal: 4721, source: 'contracts\\BiatecPoolProvider.algo.ts:929', pc: [4713] },
        { teal: 4722, source: 'contracts\\BiatecPoolProvider.algo.ts:929', pc: [4714, 4715] },
        { teal: 4723, source: 'contracts\\BiatecPoolProvider.algo.ts:929', pc: [4716] },
        { teal: 4724, source: 'contracts\\BiatecPoolProvider.algo.ts:929', pc: [4717] },
        { teal: 4725, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4718, 4719] },
        { teal: 4726, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4720, 4721] },
        { teal: 4727, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4722] },
        { teal: 4731, source: 'contracts\\BiatecPoolProvider.algo.ts:930', pc: [4723, 4724] },
        { teal: 4732, source: 'contracts\\BiatecPoolProvider.algo.ts:930', pc: [4725] },
        { teal: 4733, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4726] },
        { teal: 4734, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4727, 4728] },
        { teal: 4735, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4729] },
        { teal: 4736, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4730, 4731] },
        { teal: 4737, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4732] },
        { teal: 4738, source: 'contracts\\BiatecPoolProvider.algo.ts:930', pc: [4733] },
        { teal: 4739, source: 'contracts\\BiatecPoolProvider.algo.ts:930', pc: [4734] },
        { teal: 4740, source: 'contracts\\BiatecPoolProvider.algo.ts:930', pc: [4735, 4736] },
        { teal: 4744, source: 'contracts\\BiatecPoolProvider.algo.ts:931', pc: [4737, 4738] },
        { teal: 4745, source: 'contracts\\BiatecPoolProvider.algo.ts:931', pc: [4739] },
        { teal: 4746, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4740] },
        { teal: 4747, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4741, 4742] },
        { teal: 4748, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4743] },
        { teal: 4749, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4744, 4745] },
        { teal: 4750, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4746] },
        { teal: 4751, source: 'contracts\\BiatecPoolProvider.algo.ts:931', pc: [4747] },
        { teal: 4752, source: 'contracts\\BiatecPoolProvider.algo.ts:931', pc: [4748] },
        { teal: 4753, source: 'contracts\\BiatecPoolProvider.algo.ts:931', pc: [4749, 4750] },
        { teal: 4758, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4751, 4752] },
        { teal: 4759, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4753, 4754] },
        { teal: 4760, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4755, 4756] },
        { teal: 4761, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4757] },
        { teal: 4762, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4758, 4759] },
        { teal: 4763, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4760, 4761] },
        { teal: 4764, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4762] },
        { teal: 4765, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4763] },
        { teal: 4766, source: 'contracts\\BiatecPoolProvider.algo.ts:933', pc: [4764, 4765] },
        { teal: 4767, source: 'contracts\\BiatecPoolProvider.algo.ts:933', pc: [4766, 4767] },
        { teal: 4768, source: 'contracts\\BiatecPoolProvider.algo.ts:933', pc: [4768] },
        { teal: 4769, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4769] },
        { teal: 4770, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4770] },
        { teal: 4771, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4771] },
        { teal: 4772, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4772] },
        { teal: 4773, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4773] },
        {
          teal: 4776,
          source: 'contracts\\BiatecPoolProvider.algo.ts:932',
          errorMessage:
            '((period4NowVolumeBUint256 * period4NowVWAPUint256 + amountBUint256 * priceUint256) /\r\\n      (period4NowVolumeBUint256 + amountBUint256)) as uint64 overflowed 64 bits',
          pc: [4774],
        },
        { teal: 4777, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4775, 4776] },
        { teal: 4778, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4777] },
        { teal: 4779, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4778] },
        { teal: 4780, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4779] },
        { teal: 4781, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4780] },
        { teal: 4782, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4781] },
        { teal: 4783, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4782] },
        { teal: 4784, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4783] },
        { teal: 4785, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4784] },
        { teal: 4786, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4785] },
        { teal: 4787, source: 'contracts\\BiatecPoolProvider.algo.ts:932', pc: [4786] },
        { teal: 4788, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4787, 4788] },
        { teal: 4789, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4789, 4790] },
        { teal: 4790, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4791] },
        { teal: 4794, source: 'contracts\\BiatecPoolProvider.algo.ts:934', pc: [4792, 4793] },
        { teal: 4795, source: 'contracts\\BiatecPoolProvider.algo.ts:934', pc: [4794] },
        { teal: 4796, source: 'contracts\\BiatecPoolProvider.algo.ts:934', pc: [4795] },
        { teal: 4797, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4796] },
        { teal: 4798, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4797, 4798] },
        { teal: 4799, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4799] },
        { teal: 4800, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4800, 4801] },
        { teal: 4801, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4802] },
        { teal: 4802, source: 'contracts\\BiatecPoolProvider.algo.ts:934', pc: [4803] },
        { teal: 4803, source: 'contracts\\BiatecPoolProvider.algo.ts:934', pc: [4804, 4805] },
        { teal: 4804, source: 'contracts\\BiatecPoolProvider.algo.ts:934', pc: [4806] },
        { teal: 4805, source: 'contracts\\BiatecPoolProvider.algo.ts:934', pc: [4807] },
        { teal: 4806, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4808, 4809] },
        { teal: 4807, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4810, 4811] },
        { teal: 4808, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4812] },
        { teal: 4812, source: 'contracts\\BiatecPoolProvider.algo.ts:935', pc: [4813, 4814] },
        { teal: 4813, source: 'contracts\\BiatecPoolProvider.algo.ts:935', pc: [4815] },
        { teal: 4814, source: 'contracts\\BiatecPoolProvider.algo.ts:935', pc: [4816] },
        { teal: 4815, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4817] },
        { teal: 4816, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4818, 4819] },
        { teal: 4817, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4820] },
        { teal: 4818, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4821, 4822] },
        { teal: 4819, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4823] },
        { teal: 4820, source: 'contracts\\BiatecPoolProvider.algo.ts:935', pc: [4824] },
        { teal: 4821, source: 'contracts\\BiatecPoolProvider.algo.ts:935', pc: [4825, 4826] },
        { teal: 4822, source: 'contracts\\BiatecPoolProvider.algo.ts:935', pc: [4827] },
        { teal: 4823, source: 'contracts\\BiatecPoolProvider.algo.ts:935', pc: [4828] },
        { teal: 4824, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4829, 4830] },
        { teal: 4825, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4831, 4832] },
        { teal: 4826, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4833] },
        { teal: 4830, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4834, 4835] },
        { teal: 4831, source: 'contracts\\BiatecPoolProvider.algo.ts:795', pc: [4836] },
        {
          teal: 4834,
          source: 'contracts\\BiatecPoolProvider.algo.ts:795',
          errorMessage: 'box value does not exist: this.poolsAggregated(aggregatedIndex).value',
          pc: [4837],
        },
        { teal: 4837, source: 'contracts\\BiatecPoolProvider.algo.ts:784', pc: [4838, 4839] },
        { teal: 4840, source: 'contracts\\BiatecPoolProvider.algo.ts:784', pc: [4840, 4841] },
        { teal: 4841, source: 'contracts\\BiatecPoolProvider.algo.ts:784', pc: [4842] },
        { teal: 4846, source: 'contracts\\BiatecPoolProvider.algo.ts:1027', pc: [4843, 4844, 4845] },
        { teal: 4847, source: 'contracts\\BiatecPoolProvider.algo.ts:1027', pc: [4846] },
        { teal: 4850, source: 'contracts\\BiatecPoolProvider.algo.ts:1026', pc: [4847, 4848, 4849] },
        { teal: 4851, source: 'contracts\\BiatecPoolProvider.algo.ts:1026', pc: [4850] },
        { teal: 4854, source: 'contracts\\BiatecPoolProvider.algo.ts:1025', pc: [4851, 4852, 4853] },
        { teal: 4855, source: 'contracts\\BiatecPoolProvider.algo.ts:1025', pc: [4854] },
        { teal: 4858, source: 'contracts\\BiatecPoolProvider.algo.ts:1024', pc: [4855, 4856, 4857] },
        { teal: 4859, source: 'contracts\\BiatecPoolProvider.algo.ts:1024', pc: [4858] },
        { teal: 4862, source: 'contracts\\BiatecPoolProvider.algo.ts:1023', pc: [4859, 4860, 4861] },
        { teal: 4863, source: 'contracts\\BiatecPoolProvider.algo.ts:1023', pc: [4862] },
        { teal: 4866, source: 'contracts\\BiatecPoolProvider.algo.ts:1022', pc: [4863, 4864, 4865] },
        { teal: 4867, source: 'contracts\\BiatecPoolProvider.algo.ts:1022', pc: [4866] },
        { teal: 4870, source: 'contracts\\BiatecPoolProvider.algo.ts:1021', pc: [4867, 4868, 4869] },
        { teal: 4871, source: 'contracts\\BiatecPoolProvider.algo.ts:1021', pc: [4870] },
        { teal: 4874, source: 'contracts\\BiatecPoolProvider.algo.ts:1020', pc: [4871, 4872, 4873] },
        { teal: 4875, source: 'contracts\\BiatecPoolProvider.algo.ts:1020', pc: [4874] },
        { teal: 4878, source: 'contracts\\BiatecPoolProvider.algo.ts:1019', pc: [4875, 4876, 4877] },
        { teal: 4879, source: 'contracts\\BiatecPoolProvider.algo.ts:1019', pc: [4878] },
        { teal: 4882, source: 'contracts\\BiatecPoolProvider.algo.ts:1018', pc: [4879, 4880, 4881] },
        { teal: 4883, source: 'contracts\\BiatecPoolProvider.algo.ts:1018', pc: [4882] },
        { teal: 4886, source: 'contracts\\BiatecPoolProvider.algo.ts:1017', pc: [4883, 4884, 4885] },
        { teal: 4887, source: 'contracts\\BiatecPoolProvider.algo.ts:1017', pc: [4886] },
        { teal: 4888, source: 'contracts\\BiatecPoolProvider.algo.ts:1017', pc: [4887] },
        { teal: 4905, source: 'contracts\\BiatecPoolProvider.algo.ts:1017', pc: [4888, 4889, 4890] },
        { teal: 4909, source: 'contracts\\BiatecPoolProvider.algo.ts:1032', pc: [4891] },
        { teal: 4910, source: 'contracts\\BiatecPoolProvider.algo.ts:1032', pc: [4892, 4893] },
        { teal: 4911, source: 'contracts\\BiatecPoolProvider.algo.ts:1032', pc: [4894, 4895] },
        { teal: 4912, source: 'contracts\\BiatecPoolProvider.algo.ts:1032', pc: [4896] },
        { teal: 4913, source: 'contracts\\BiatecPoolProvider.algo.ts:1032', pc: [4897, 4898] },
        { teal: 4914, source: 'contracts\\BiatecPoolProvider.algo.ts:1032', pc: [4899, 4900] },
        { teal: 4915, source: 'contracts\\BiatecPoolProvider.algo.ts:1032', pc: [4901] },
        { teal: 4916, source: 'contracts\\BiatecPoolProvider.algo.ts:1032', pc: [4902, 4903] },
        { teal: 4917, source: 'contracts\\BiatecPoolProvider.algo.ts:1032', pc: [4904, 4905] },
        { teal: 4918, source: 'contracts\\BiatecPoolProvider.algo.ts:1032', pc: [4906, 4907] },
        { teal: 4919, source: 'contracts\\BiatecPoolProvider.algo.ts:1032', pc: [4908, 4909] },
        { teal: 4920, source: 'contracts\\BiatecPoolProvider.algo.ts:1032', pc: [4910] },
        { teal: 4924, source: 'contracts\\BiatecPoolProvider.algo.ts:1033', pc: [4911] },
        { teal: 4925, source: 'contracts\\BiatecPoolProvider.algo.ts:1033', pc: [4912, 4913] },
        { teal: 4926, source: 'contracts\\BiatecPoolProvider.algo.ts:1033', pc: [4914, 4915] },
        { teal: 4927, source: 'contracts\\BiatecPoolProvider.algo.ts:1033', pc: [4916] },
        { teal: 4928, source: 'contracts\\BiatecPoolProvider.algo.ts:1033', pc: [4917, 4918] },
        { teal: 4929, source: 'contracts\\BiatecPoolProvider.algo.ts:1033', pc: [4919, 4920] },
        { teal: 4930, source: 'contracts\\BiatecPoolProvider.algo.ts:1033', pc: [4921] },
        { teal: 4931, source: 'contracts\\BiatecPoolProvider.algo.ts:1033', pc: [4922, 4923] },
        { teal: 4932, source: 'contracts\\BiatecPoolProvider.algo.ts:1033', pc: [4924, 4925] },
        { teal: 4933, source: 'contracts\\BiatecPoolProvider.algo.ts:1033', pc: [4926, 4927] },
        { teal: 4934, source: 'contracts\\BiatecPoolProvider.algo.ts:1033', pc: [4928, 4929] },
        { teal: 4935, source: 'contracts\\BiatecPoolProvider.algo.ts:1033', pc: [4930] },
        { teal: 4939, source: 'contracts\\BiatecPoolProvider.algo.ts:1034', pc: [4931, 4932] },
        { teal: 4940, source: 'contracts\\BiatecPoolProvider.algo.ts:1034', pc: [4933, 4934] },
        { teal: 4941, source: 'contracts\\BiatecPoolProvider.algo.ts:1034', pc: [4935] },
        { teal: 4942, source: 'contracts\\BiatecPoolProvider.algo.ts:1034', pc: [4936] },
        { teal: 4946, source: 'contracts\\BiatecPoolProvider.algo.ts:1035', pc: [4937, 4938] },
        { teal: 4947, source: 'contracts\\BiatecPoolProvider.algo.ts:1035', pc: [4939, 4940, 4941, 4942, 4943, 4944] },
        { teal: 4948, source: 'contracts\\BiatecPoolProvider.algo.ts:1035', pc: [4945] },
        { teal: 4949, source: 'contracts\\BiatecPoolProvider.algo.ts:1035', pc: [4946] },
        { teal: 4953, source: 'contracts\\BiatecPoolProvider.algo.ts:1037', pc: [4947, 4948] },
        { teal: 4954, source: 'contracts\\BiatecPoolProvider.algo.ts:1037', pc: [4949, 4950] },
        { teal: 4955, source: 'contracts\\BiatecPoolProvider.algo.ts:1037', pc: [4951, 4952] },
        { teal: 4956, source: 'contracts\\BiatecPoolProvider.algo.ts:1037', pc: [4953, 4954] },
        { teal: 4957, source: 'contracts\\BiatecPoolProvider.algo.ts:1037', pc: [4955, 4956] },
        { teal: 4958, source: 'contracts\\BiatecPoolProvider.algo.ts:1037', pc: [4957, 4958] },
        { teal: 4959, source: 'contracts\\BiatecPoolProvider.algo.ts:1037', pc: [4959, 4960] },
        { teal: 4960, source: 'contracts\\BiatecPoolProvider.algo.ts:1037', pc: [4961, 4962] },
        { teal: 4961, source: 'contracts\\BiatecPoolProvider.algo.ts:1037', pc: [4963, 4964] },
        { teal: 4962, source: 'contracts\\BiatecPoolProvider.algo.ts:1037', pc: [4965, 4966, 4967] },
        { teal: 4966, source: 'contracts\\BiatecPoolProvider.algo.ts:1038', pc: [4968, 4969] },
        { teal: 4967, source: 'contracts\\BiatecPoolProvider.algo.ts:1038', pc: [4970, 4971] },
        { teal: 4968, source: 'contracts\\BiatecPoolProvider.algo.ts:1038', pc: [4972, 4973] },
        { teal: 4969, source: 'contracts\\BiatecPoolProvider.algo.ts:1038', pc: [4974, 4975] },
        { teal: 4970, source: 'contracts\\BiatecPoolProvider.algo.ts:1038', pc: [4976, 4977] },
        { teal: 4971, source: 'contracts\\BiatecPoolProvider.algo.ts:1038', pc: [4978, 4979] },
        { teal: 4972, source: 'contracts\\BiatecPoolProvider.algo.ts:1038', pc: [4980, 4981] },
        { teal: 4973, source: 'contracts\\BiatecPoolProvider.algo.ts:1038', pc: [4982, 4983] },
        { teal: 4974, source: 'contracts\\BiatecPoolProvider.algo.ts:1038', pc: [4984, 4985, 4986] },
        { teal: 4975, source: 'contracts\\BiatecPoolProvider.algo.ts:1017', pc: [4987] },
        { teal: 4980, source: 'contracts\\BiatecPoolProvider.algo.ts:1053', pc: [4988, 4989, 4990] },
        { teal: 4981, source: 'contracts\\BiatecPoolProvider.algo.ts:1053', pc: [4991] },
        { teal: 4984, source: 'contracts\\BiatecPoolProvider.algo.ts:1052', pc: [4992, 4993, 4994] },
        { teal: 4985, source: 'contracts\\BiatecPoolProvider.algo.ts:1052', pc: [4995] },
        { teal: 4988, source: 'contracts\\BiatecPoolProvider.algo.ts:1051', pc: [4996, 4997, 4998] },
        { teal: 4989, source: 'contracts\\BiatecPoolProvider.algo.ts:1051', pc: [4999] },
        { teal: 4992, source: 'contracts\\BiatecPoolProvider.algo.ts:1050', pc: [5000, 5001, 5002] },
        { teal: 4993, source: 'contracts\\BiatecPoolProvider.algo.ts:1050', pc: [5003, 5004, 5005] },
        { teal: 4996, source: 'contracts\\BiatecPoolProvider.algo.ts:1049', pc: [5006, 5007, 5008] },
        { teal: 4997, source: 'contracts\\BiatecPoolProvider.algo.ts:1049', pc: [5009, 5010, 5011] },
        { teal: 5000, source: 'contracts\\BiatecPoolProvider.algo.ts:1048', pc: [5012, 5013, 5014] },
        { teal: 5001, source: 'contracts\\BiatecPoolProvider.algo.ts:1048', pc: [5015, 5016, 5017] },
        { teal: 5004, source: 'contracts\\BiatecPoolProvider.algo.ts:1047', pc: [5018, 5019, 5020] },
        { teal: 5005, source: 'contracts\\BiatecPoolProvider.algo.ts:1047', pc: [5021] },
        { teal: 5008, source: 'contracts\\BiatecPoolProvider.algo.ts:1046', pc: [5022, 5023, 5024] },
        { teal: 5009, source: 'contracts\\BiatecPoolProvider.algo.ts:1046', pc: [5025] },
        { teal: 5010, source: 'contracts\\BiatecPoolProvider.algo.ts:1046', pc: [5026] },
        { teal: 5018, source: 'contracts\\BiatecPoolProvider.algo.ts:1046', pc: [5027, 5028, 5029] },
        { teal: 5021, source: 'contracts\\BiatecPoolProvider.algo.ts:1046', pc: [5030] },
        { teal: 5022, source: 'contracts\\BiatecPoolProvider.algo.ts:1046', pc: [5031] },
        { teal: 5026, source: 'contracts\\BiatecPoolProvider.algo.ts:1055', pc: [5032, 5033] },
        { teal: 5027, source: 'contracts\\BiatecPoolProvider.algo.ts:1055', pc: [5034, 5035] },
        { teal: 5028, source: 'contracts\\BiatecPoolProvider.algo.ts:1055', pc: [5036] },
        { teal: 5029, source: 'contracts\\BiatecPoolProvider.algo.ts:1055', pc: [5037] },
        {
          teal: 5032,
          source: 'contracts\\BiatecPoolProvider.algo.ts:1055',
          errorMessage: 'Configuration app does not match',
          pc: [5038],
        },
        { teal: 5036, source: 'contracts\\BiatecPoolProvider.algo.ts:1056', pc: [5039, 5040] },
        { teal: 5037, source: 'contracts\\BiatecPoolProvider.algo.ts:1056', pc: [5041, 5042] },
        { teal: 5038, source: 'contracts\\BiatecPoolProvider.algo.ts:1056', pc: [5043] },
        {
          teal: 5041,
          source: 'contracts\\BiatecPoolProvider.algo.ts:1056',
          errorMessage: "global state value does not exist: appBiatecConfigProvider.globalState('ef')",
          pc: [5044],
        },
        { teal: 5042, source: 'contracts\\BiatecPoolProvider.algo.ts:1056', pc: [5045, 5046] },
        { teal: 5046, source: 'contracts\\BiatecPoolProvider.algo.ts:1057', pc: [5047, 5048] },
        { teal: 5047, source: 'contracts\\BiatecPoolProvider.algo.ts:1057', pc: [5049] },
        { teal: 5048, source: 'contracts\\BiatecPoolProvider.algo.ts:1057', pc: [5050] },
        {
          teal: 5051,
          source: 'contracts\\BiatecPoolProvider.algo.ts:1057',
          errorMessage: "global state value does not exist: appBiatecConfigProvider.globalState('s')",
          pc: [5051],
        },
        { teal: 5052, source: 'contracts\\BiatecPoolProvider.algo.ts:1057', pc: [5052, 5053] },
        { teal: 5056, source: 'contracts\\BiatecPoolProvider.algo.ts:1058', pc: [5054, 5055] },
        { teal: 5057, source: 'contracts\\BiatecPoolProvider.algo.ts:1058', pc: [5056] },
        { teal: 5058, source: 'contracts\\BiatecPoolProvider.algo.ts:1058', pc: [5057] },
        { teal: 5061, source: 'contracts\\BiatecPoolProvider.algo.ts:1058', errorMessage: 'ERR_PAUSED', pc: [5058] },
        { teal: 5068, source: 'contracts\\BiatecPoolProvider.algo.ts:1060', pc: [5059, 5060] },
        { teal: 5069, source: 'contracts\\BiatecPoolProvider.algo.ts:1060', pc: [5061, 5062] },
        { teal: 5070, source: 'contracts\\BiatecPoolProvider.algo.ts:1060', pc: [5063] },
        {
          teal: 5073,
          source: 'contracts\\BiatecPoolProvider.algo.ts:1059',
          errorMessage: 'Only fee executor setup in the config can take the collected fees',
          pc: [5064],
        },
        { teal: 5085, source: 'contracts\\BiatecPoolProvider.algo.ts:1063', pc: [5065] },
        { teal: 5086, source: 'contracts\\BiatecPoolProvider.algo.ts:1063', pc: [5066, 5067] },
        { teal: 5087, source: 'contracts\\BiatecPoolProvider.algo.ts:1063', pc: [5068, 5069] },
        { teal: 5091, source: 'contracts\\BiatecPoolProvider.algo.ts:1064', pc: [5070, 5071] },
        { teal: 5092, source: 'contracts\\BiatecPoolProvider.algo.ts:1064', pc: [5072, 5073] },
        { teal: 5096, source: 'contracts\\BiatecPoolProvider.algo.ts:1065', pc: [5074, 5075] },
        { teal: 5097, source: 'contracts\\BiatecPoolProvider.algo.ts:1065', pc: [5076, 5077] },
        { teal: 5101, source: 'contracts\\BiatecPoolProvider.algo.ts:1066', pc: [5078, 5079] },
        { teal: 5102, source: 'contracts\\BiatecPoolProvider.algo.ts:1066', pc: [5080, 5081] },
        { teal: 5106, source: 'contracts\\BiatecPoolProvider.algo.ts:1067', pc: [5082, 5083] },
        { teal: 5107, source: 'contracts\\BiatecPoolProvider.algo.ts:1067', pc: [5084, 5085] },
        { teal: 5111, source: 'contracts\\BiatecPoolProvider.algo.ts:1068', pc: [5086, 5087] },
        { teal: 5112, source: 'contracts\\BiatecPoolProvider.algo.ts:1068', pc: [5088, 5089] },
        { teal: 5116, source: 'contracts\\BiatecPoolProvider.algo.ts:1069', pc: [5090, 5091] },
        { teal: 5117, source: 'contracts\\BiatecPoolProvider.algo.ts:1069', pc: [5092, 5093] },
        { teal: 5121, source: 'contracts\\BiatecPoolProvider.algo.ts:1070', pc: [5094] },
        { teal: 5122, source: 'contracts\\BiatecPoolProvider.algo.ts:1070', pc: [5095, 5096] },
        { teal: 5125, source: 'contracts\\BiatecPoolProvider.algo.ts:1063', pc: [5097] },
        { teal: 5126, source: 'contracts\\BiatecPoolProvider.algo.ts:1046', pc: [5098] },
        { teal: 5131, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5099, 5100] },
        { teal: 5134, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5101, 5102, 5103] },
        { teal: 5135, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5104] },
        { teal: 5138, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5105, 5106, 5107] },
        { teal: 5139, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5108] },
        { teal: 5142, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5109, 5110, 5111] },
        { teal: 5143, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5112] },
        { teal: 5146, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5113, 5114, 5115] },
        { teal: 5147, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5116] },
        { teal: 5148, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5117] },
        { teal: 5149, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5118] },
        { teal: 5150, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5119] },
        { teal: 5151, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5120] },
        { teal: 5163, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5121, 5122, 5123] },
        { teal: 5166, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5124] },
        { teal: 5167, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5125] },
        { teal: 5171, source: 'contracts\\BiatecPoolProvider.algo.ts:1084', pc: [5126, 5127] },
        { teal: 5172, source: 'contracts\\BiatecPoolProvider.algo.ts:1084', pc: [5128, 5129] },
        { teal: 5173, source: 'contracts\\BiatecPoolProvider.algo.ts:1084', pc: [5130] },
        { teal: 5174, source: 'contracts\\BiatecPoolProvider.algo.ts:1084', pc: [5131] },
        {
          teal: 5177,
          source: 'contracts\\BiatecPoolProvider.algo.ts:1084',
          errorMessage: 'Configuration app does not match',
          pc: [5132],
        },
        { teal: 5181, source: 'contracts\\BiatecPoolProvider.algo.ts:1085', pc: [5133, 5134] },
        { teal: 5182, source: 'contracts\\BiatecPoolProvider.algo.ts:1085', pc: [5135, 5136] },
        { teal: 5183, source: 'contracts\\BiatecPoolProvider.algo.ts:1085', pc: [5137] },
        {
          teal: 5186,
          source: 'contracts\\BiatecPoolProvider.algo.ts:1085',
          errorMessage: "global state value does not exist: appBiatecConfigProvider.globalState('ef')",
          pc: [5138],
        },
        { teal: 5187, source: 'contracts\\BiatecPoolProvider.algo.ts:1085', pc: [5139, 5140] },
        { teal: 5191, source: 'contracts\\BiatecPoolProvider.algo.ts:1086', pc: [5141, 5142] },
        { teal: 5192, source: 'contracts\\BiatecPoolProvider.algo.ts:1086', pc: [5143] },
        { teal: 5193, source: 'contracts\\BiatecPoolProvider.algo.ts:1086', pc: [5144] },
        {
          teal: 5196,
          source: 'contracts\\BiatecPoolProvider.algo.ts:1086',
          errorMessage: "global state value does not exist: appBiatecConfigProvider.globalState('s')",
          pc: [5145],
        },
        { teal: 5197, source: 'contracts\\BiatecPoolProvider.algo.ts:1086', pc: [5146, 5147] },
        { teal: 5201, source: 'contracts\\BiatecPoolProvider.algo.ts:1087', pc: [5148, 5149] },
        { teal: 5202, source: 'contracts\\BiatecPoolProvider.algo.ts:1087', pc: [5150] },
        { teal: 5203, source: 'contracts\\BiatecPoolProvider.algo.ts:1087', pc: [5151] },
        { teal: 5206, source: 'contracts\\BiatecPoolProvider.algo.ts:1087', errorMessage: 'ERR_PAUSED', pc: [5152] },
        { teal: 5213, source: 'contracts\\BiatecPoolProvider.algo.ts:1089', pc: [5153, 5154] },
        { teal: 5214, source: 'contracts\\BiatecPoolProvider.algo.ts:1089', pc: [5155, 5156] },
        { teal: 5215, source: 'contracts\\BiatecPoolProvider.algo.ts:1089', pc: [5157] },
        {
          teal: 5218,
          source: 'contracts\\BiatecPoolProvider.algo.ts:1088',
          errorMessage: 'Only fee executor setup in the config can take the collected fees',
          pc: [5158],
        },
        { teal: 5222, source: 'contracts\\BiatecPoolProvider.algo.ts:1093', pc: [5159, 5160] },
        { teal: 5223, source: 'contracts\\BiatecPoolProvider.algo.ts:1093', pc: [5161, 5162] },
        { teal: 5224, source: 'contracts\\BiatecPoolProvider.algo.ts:1093', pc: [5163, 5164] },
        { teal: 5225, source: 'contracts\\BiatecPoolProvider.algo.ts:1093', pc: [5165, 5166, 5167] },
        { teal: 5229, source: 'contracts\\BiatecPoolProvider.algo.ts:1095', pc: [5168, 5169] },
        { teal: 5232, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5170, 5171] },
        { teal: 5235, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5172, 5173] },
        { teal: 5236, source: 'contracts\\BiatecPoolProvider.algo.ts:1083', pc: [5174] },
        { teal: 5245, source: 'contracts\\BiatecPoolProvider.algo.ts:1104', pc: [5175, 5176, 5177] },
        { teal: 5250, source: 'contracts\\BiatecPoolProvider.algo.ts:1105', pc: [5178, 5179] },
        { teal: 5251, source: 'contracts\\BiatecPoolProvider.algo.ts:1105', pc: [5180] },
        { teal: 5252, source: 'contracts\\BiatecPoolProvider.algo.ts:1105', pc: [5181] },
        { teal: 5253, source: 'contracts\\BiatecPoolProvider.algo.ts:1105', pc: [5182, 5183, 5184] },
        { teal: 5262, source: 'contracts\\BiatecPoolProvider.algo.ts:1106', pc: [5185] },
        { teal: 5263, source: 'contracts\\BiatecPoolProvider.algo.ts:1106', pc: [5186] },
        { teal: 5264, source: 'contracts\\BiatecPoolProvider.algo.ts:1106', pc: [5187, 5188] },
        { teal: 5268, source: 'contracts\\BiatecPoolProvider.algo.ts:1107', pc: [5189, 5190] },
        { teal: 5269, source: 'contracts\\BiatecPoolProvider.algo.ts:1107', pc: [5191, 5192] },
        { teal: 5273, source: 'contracts\\BiatecPoolProvider.algo.ts:1108', pc: [5193, 5194] },
        { teal: 5274, source: 'contracts\\BiatecPoolProvider.algo.ts:1108', pc: [5195, 5196] },
        { teal: 5278, source: 'contracts\\BiatecPoolProvider.algo.ts:1109', pc: [5197] },
        { teal: 5279, source: 'contracts\\BiatecPoolProvider.algo.ts:1109', pc: [5198, 5199] },
        { teal: 5282, source: 'contracts\\BiatecPoolProvider.algo.ts:1106', pc: [5200] },
        { teal: 5283, source: 'contracts\\BiatecPoolProvider.algo.ts:1105', pc: [5201, 5202, 5203] },
        { teal: 5293, source: 'contracts\\BiatecPoolProvider.algo.ts:1112', pc: [5204] },
        { teal: 5294, source: 'contracts\\BiatecPoolProvider.algo.ts:1112', pc: [5205, 5206] },
        { teal: 5295, source: 'contracts\\BiatecPoolProvider.algo.ts:1112', pc: [5207, 5208] },
        { teal: 5299, source: 'contracts\\BiatecPoolProvider.algo.ts:1113', pc: [5209, 5210] },
        { teal: 5300, source: 'contracts\\BiatecPoolProvider.algo.ts:1113', pc: [5211, 5212] },
        { teal: 5304, source: 'contracts\\BiatecPoolProvider.algo.ts:1114', pc: [5213, 5214] },
        { teal: 5305, source: 'contracts\\BiatecPoolProvider.algo.ts:1114', pc: [5215, 5216] },
        { teal: 5309, source: 'contracts\\BiatecPoolProvider.algo.ts:1115', pc: [5217, 5218] },
        { teal: 5310, source: 'contracts\\BiatecPoolProvider.algo.ts:1115', pc: [5219, 5220] },
        { teal: 5314, source: 'contracts\\BiatecPoolProvider.algo.ts:1116', pc: [5221] },
        { teal: 5315, source: 'contracts\\BiatecPoolProvider.algo.ts:1116', pc: [5222, 5223] },
        { teal: 5318, source: 'contracts\\BiatecPoolProvider.algo.ts:1112', pc: [5224] },
        { teal: 5321, source: 'contracts\\BiatecPoolProvider.algo.ts:1104', pc: [5225] },
        { teal: 5324, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5226, 5227] },
        { teal: 5325, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5228, 5229, 5230] },
        { teal: 5326, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5231, 5232, 5233, 5234] },
        {
          teal: 5329,
          source: 'contracts\\BiatecPoolProvider.algo.ts:139',
          errorMessage: 'this contract does not implement the given ABI method for create NoOp',
          pc: [5235],
        },
        { teal: 5332, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5236, 5237, 5238, 5239, 5240, 5241] },
        { teal: 5333, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5242, 5243, 5244, 5245, 5246, 5247] },
        { teal: 5334, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5248, 5249, 5250, 5251, 5252, 5253] },
        { teal: 5335, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5254, 5255, 5256, 5257, 5258, 5259] },
        { teal: 5336, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5260, 5261, 5262, 5263, 5264, 5265] },
        { teal: 5337, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5266, 5267, 5268, 5269, 5270, 5271] },
        { teal: 5338, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5272, 5273, 5274, 5275, 5276, 5277] },
        { teal: 5339, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5278, 5279, 5280, 5281, 5282, 5283] },
        { teal: 5340, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5284, 5285, 5286, 5287, 5288, 5289] },
        { teal: 5341, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5290, 5291, 5292] },
        {
          teal: 5342,
          source: 'contracts\\BiatecPoolProvider.algo.ts:139',
          pc: [
            5293, 5294, 5295, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5306, 5307, 5308, 5309, 5310,
            5311, 5312,
          ],
        },
        {
          teal: 5345,
          source: 'contracts\\BiatecPoolProvider.algo.ts:139',
          errorMessage: 'this contract does not implement the given ABI method for call NoOp',
          pc: [5313],
        },
        { teal: 5348, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5314, 5315, 5316, 5317, 5318, 5319] },
        { teal: 5349, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5320, 5321, 5322] },
        { teal: 5350, source: 'contracts\\BiatecPoolProvider.algo.ts:139', pc: [5323, 5324, 5325, 5326] },
        {
          teal: 5353,
          source: 'contracts\\BiatecPoolProvider.algo.ts:139',
          errorMessage: 'this contract does not implement the given ABI method for call UpdateApplication',
          pc: [5327],
        },
      ],
      pcOffsetMethod: 'none',
    },
    clear: { sourceInfo: [], pcOffsetMethod: 'none' },
  },
  source: {
    approval:
      '',
    clear: 'I3ByYWdtYSB2ZXJzaW9uIDEw',
  },
  byteCode: {
    approval:
      'CiA+CAABQIACoALoAogDMFCYAbgBiAKQAuAC8AL4AoAgKDiQAaABqAH4AZgCgAMGSLABgEACBAUKqAKwArgCwALIAtACkAOYA6ADqAOwA7gDgGADCRhYYGhweIABwAHIAdAB2AHgAegBJh4IAAAAAAAAAAAAAXMBcANycDEI//////////8CcDECcDICcDMCcDQFY2FwYjEDcnBpAUIFY2FwYjIDCoEBBWNhcGIzBBUffHUDcnAyBHJwMTAEuER7NgNycDMDcnA0A3JwNQNycDYDcnA3A3JwOANycDkCcGMCZWYBdTEYFCEaCzEZCI0ME2wAAAAAAAATugAAE2IAAAAAAAAAAAAAADYaAReIAAIkQ4oBACkxADYyAHIHSBJEJwyL/2eL/yplRIwAiwAjEkSJJxA2GgEXiAAEULAkQ4oBASuL/xZQvkSJiAACJEOKAACAEkJJQVRFQy1QUC0wMS0wMy0wMbAnBoE8ZycHgYCjBWcnCIGA9SRnJwmBgOeED2cnCyRnJwQjZycRI2cnFCNnJxUjZycWI2cnFyNnJxgjZycZI2cnGiNnJxIjZ4k2GgJXAgA2GgEXiAACJEOKAgApSYv/JwxkEkSL/ycdZUSMADEAiwASRIv/KmVEjAGLASMSRIAFc2N2ZXKL/meJNhoEVwIANhoDFzYaAhc2GgEXiAACJEOKBAApi/8nDGQSRIv/Jx1lRIwAMQCLABJEJwq9TEhJQQAFi/0jEhBBAAknCrwnDbwnD7wnCr1MSBRBAFcnCov+IREMQQAFi/5CAAIhEblIJw2L/iERDEEABCNCABKL/iEdDEEACIv+IREJQgACIRG5SCcPi/4hHQxBAAQjQgASi/4hLgxBAAiL/iEdCUIAAiERuUiL/SERDEEACicKi/2L/LtCACeL/SEdDEEADScNi/0hEQmL/LtCABKL/SEuDEEACicPi/0hHQmL/LuJNhoBF4gAAiRDigEAiScQNhoJFzYaCBc2GgcXNhoGFzYaBRcxFiQJSTgQJBJENhoEFzYaAxc2GgIXNhoBF4gABRZQsCRDigoBKUmL+zgHMgoSRIv7OAiBwIQ9D0SL9iEfDkSxIRqyECOyGScKvkSyQCcNvkSyQIABCrIfISGyNCEwsjUhL7I4JxOyGiOyAbO0PYwAsSSyEIsAcghIsgeBgLUYsggjsgG2IRqyEIsAshiABCv/+nWyGov/FrIai/4WshqL/RayGov8FrIai/oWshqL+RayGov4FrIai/cWshqL9hayGov/sjCL/rIwi/2yMov8sjIjsgGzJwtJZCQIZycLZCEhDUEABCcLJGcnC2SMAYsBJBJBAAgnBIsAZ0IAjIsBIR4SQQAIJxGLAGdCAHyLASEvEkEACCcEiwBnQgBsiwEhHxJBAAgnBIsAZ0IAXIsBISASQQAIJwSLAGdCAEyLASEaEkEACCcEiwBnQgA8iwGBBxJBAAgnBIsAZ0IALIsBIhJBAAgnBIsAZ0IAHYsBITASQQAIJwSLAGdCAA2LASEhEkEABScEiwBniwCMAEYBiYgAAiRDigAAKUcMMg2MAIsAgAFhZUSMAYsAgAFiZUSMAosAgAFjZUSMA4sAgARwTWluZUSMBIsAgARwTWF4ZUSMBYsAgAFmZUSMBosAgAJscGVEjAcriwAWUL1MSBREiwEWiwIWUIsEFlCLBRZQiwYWUIsDFlCMCCcbiwhQvUxIFEQnG4sIUIsAFr+LABaLARZQiwIWUIsEFlCLBRZQiwYWUIsHFlCLAxZJkyIORFcHAVCMCYACZmOLCVCLABa/iwCMCosKJwRkE0lBAAeLCicRZBMQSUEAB4sKJxRkExBJQQAHiwonFWQTEElBAAeLCicWZBMQSUEAB4sKJxdkExBJQQAHiwonGGQTEElBAAeLCicZZBMQSUEAB4sKJxpkExBJQQAHiwonEmQTEEEAAiNEiwEWiwIWUIsDFlAoUCcGZBZQKFAoUChQKFAoUChQKFAoUChQKFAoUChQJwdkFlAoUChQKFAoUChQKFAoUChQKFAoUChQKFAnCGQWUChQKFAoUChQKFAoUChQKFAoUChQKFAoUCcJZBZQKFAoUChQKFAoUChQKFAoUChQKFAoUChQjAsriwAWUIsLv4sBFosCFlCMDCqLDFC9TEgUQQAHKosMUIsLv4mKCQEpRxUri/8WUIwAi/4jIiuL/xZQTgK6FxJEi/0iIiuL/xZQTgK6FxJEi/ojDUlBAAWL+SMNEESL+ov4CYwBi/mL9wmMAov8i/sIIR4KjAOLAxaMBIsCFowFITGLAxaLAE4CuyEJIiuL/xZQTgK6FycGZAqMBjIHJwZkCowHiwaLBxNBALohNCETIiuL/xZQTgK6FxaLAE4Cu4sAIRMouyE1JSIri/8WUE4CuhcWiwBOAruLACUouyE2IRsiK4v/FlBOAroXFosATgK7ITIhEiIri/8WUE4CuhcWiwBOAruLACESKLshMyEIIiuL/xZQTgK6FxaLAE4Cu4sAIQgouyE3IQkiK4v/FlBOAroXFosATgK7IQkiK4v/FlBOAroXIxJBAA0hCTIHFosATgK7QgAOIQmLBycGZAsWiwBOArshE0kiK4v/FlBOAroXi/gIFosATgK7JUkiK4v/FlBOAroXi/cIFosATgK7IQgiK4v/FlBOAroXFowIIRsiK4v/FlBOAroXFowJIRuLCIsJo4sFiwSjoIsIiwWgokmTJQ5EJwWsSRVJIglMUhcWiwBOArshEkkiK4v/FlBOAroXiwEIFosATgK7IQhJIiuL/xZQTgK6F4sCCBaLAE4CuyELIiuL/xZQTgK6FycHZAqMCjIHJwdkCowLiwqLCxNBALwhOiEVIiuL/xZQTgK6FxaLAE4Cu4sAIRUouyE7IRYiK4v/FlBOAroXFosATgK7iwAhFii7ITwhHCIri/8WUE4CuhcWiwBOArshOCEUIiuL/xZQTgK6FxaLAE4Cu4sAIRQouyE5IQoiK4v/FlBOAroXFosATgK7iwAhCii7IT0hCyIri/8WUE4CuhcWiwBOArshCyIri/8WUE4CuhcjEkEADSELMgcWiwBOArtCAA4hC4sLJwdkCxaLAE4CuyEVSSIri/8WUE4CuheL+AgWiwBOArshFkkiK4v/FlBOAroXi/cIFosATgK7IQoiK4v/FlBOAroXFowMIRwiK4v/FlBOAroXFowNIRyLDIsNo4sFiwSjoIsMiwWgokmTJQ5EJwWsSRVJIglMUhcWiwBOArshFEkiK4v/FlBOAroXiwEIFosATgK7IQpJIiuL/xZQTgK6F4sCCBaLAE4CuyEFIiuL/xZQTgK6FycIZAqMDjIHJwhkCowPiw6LDxNBALwhJCEMIiuL/xZQTgK6FxaLAE4Cu4sAIQwouyElIQ0iK4v/FlBOAroXFosATgK7iwAhDSi7ISYhGCIri/8WUE4CuhcWiwBOArshIiEXIiuL/xZQTgK6FxaLAE4Cu4sAIRcouyEjIQQiK4v/FlBOAroXFosATgK7iwAhBCi7ISchBSIri/8WUE4CuhcWiwBOArshBSIri/8WUE4CuhcjEkEADSEFMgcWiwBOArtCAA4hBYsPJwhkCxaLAE4CuyEMSSIri/8WUE4CuheL+AgWiwBOArshDUkiK4v/FlBOAroXi/cIFosATgK7IQQiK4v/FlBOAroXFowQIRgiK4v/FlBOAroXFowRIRiLEIsRo4sFiwSjoIsQiwWgokmTJQ5EJwWsSRVJIglMUhcWiwBOArshF0kiK4v/FlBOAroXiwEIFosATgK7IQRJIiuL/xZQTgK6F4sCCBaLAE4CuyEHIiuL/xZQTgK6FycJZAqMEjIHJwlkCowTixKLExNBALwhKiEPIiuL/xZQTgK6FxaLAE4Cu4sAIQ8ouyErIRAiK4v/FlBOAroXFosATgK7iwAhECi7ISwhGSIri/8WUE4CuhcWiwBOArshKCEOIiuL/xZQTgK6FxaLAE4Cu4sAIQ4ouyEpIQYiK4v/FlBOAroXFosATgK7iwAhBii7IS0hByIri/8WUE4CuhcWiwBOArshByIri/8WUE4CuhcjEkEADSEHMgcWiwBOArtCAA4hB4sTJwlkCxaLAE4CuyEPSSIri/8WUE4CuheL+AgWiwBOArshEEkiK4v/FlBOAroXi/cIFosATgK7IQYiK4v/FlBOAroXFowUIRkiK4v/FlBOAroXFowVIRmLFIsVo4sFiwSjoIsUiwWgokmTJQ5EJwWsSRVJIglMUhcWiwBOArshDkkiK4v/FlBOAroXiwEIFosATgK7IQZJIiuL/xZQTgK6F4sCCBaLAE4Cu4sAvkSMAEYViYoIASlHFov/Fov+FlCMACqLAFCMAYv/IyIqiwBQTgK6FxJEi/4iIiqLAFBOAroXEkSL+yMNSUEABYv6Iw0QRIv7i/kJjAKL+ov4CYwDi/2L/AghHgqMBIsEFowFiwMWjAYhMYsEFosBTgK7IQkiKosAUE4CuhcnBmQKjAcyBycGZAqMCIsHiwgTQQCzITQhEyIqiwBQTgK6FxaLAU4Cu4sBIRMouyE1JSIqiwBQTgK6FxaLAU4Cu4sBJSi7ITYhGyIqiwBQTgK6FxaLAU4CuyEyIRIiKosAUE4CuhcWiwFOAruLASESKLshMyEIIiqLAFBOAroXFosBTgK7iwEhCCi7ITchCSIqiwBQTgK6FxaLAU4CuyEJIiqLAFBOAroXIxJBAA0hCTIHFosBTgK7QgAOIQmLCCcGZAsWiwFOArshE0kiKosAUE4CuheL+QgWiwFOArslSSIqiwBQTgK6F4v4CBaLAU4CuyEIIiqLAFBOAroXFowJIRsiKosAUE4CuhcWjAohG4sJiwqjiwaLBaOgiwmLBqCiSZMlDkQnBaxJFUkiCUxSFxaLAU4CuyESSSIqiwBQTgK6F4sCCBaLAU4CuyEISSIqiwBQTgK6F4sDCBaLAU4CuyELIiqLAFBOAroXJwdkCowLMgcnB2QKjAyLC4sME0EAtSE6IRUiKosAUE4CuhcWiwFOAruLASEVKLshOyEWIiqLAFBOAroXFosBTgK7iwEhFii7ITwhHCIqiwBQTgK6FxaLAU4CuyE4IRQiKosAUE4CuhcWiwFOAruLASEUKLshOSEKIiqLAFBOAroXFosBTgK7iwEhCii7IT0hCyIqiwBQTgK6FxaLAU4CuyELIiqLAFBOAroXIxJBAA0hCzIHFosBTgK7QgAOIQuLDCcHZAsWiwFOArshFUkiKosAUE4CuheL+QgWiwFOArshFkkiKosAUE4CuheL+AgWiwFOArshCiIqiwBQTgK6FxaMDSEcIiqLAFBOAroXFowOIRyLDYsOo4sGiwWjoIsNiwagokmTJQ5EJwWsSRVJIglMUhcWiwFOArshFEkiKosAUE4CuheLAggWiwFOArshCkkiKosAUE4CuheLAwgWiwFOArshBSIqiwBQTgK6FycIZAqMDzIHJwhkCowQiw+LEBNBALUhJCEMIiqLAFBOAroXFosBTgK7iwEhDCi7ISUhDSIqiwBQTgK6FxaLAU4Cu4sBIQ0ouyEmIRgiKosAUE4CuhcWiwFOArshIiEXIiqLAFBOAroXFosBTgK7iwEhFyi7ISMhBCIqiwBQTgK6FxaLAU4Cu4sBIQQouyEnIQUiKosAUE4CuhcWiwFOArshBSIqiwBQTgK6FyMSQQANIQUyBxaLAU4Cu0IADiEFixAnCGQLFosBTgK7IQxJIiqLAFBOAroXi/kIFosBTgK7IQ1JIiqLAFBOAroXi/gIFosBTgK7IQQiKosAUE4CuhcWjBEhGCIqiwBQTgK6FxaMEiEYixGLEqOLBosFo6CLEYsGoKJJkyUORCcFrEkVSSIJTFIXFosBTgK7IRdJIiqLAFBOAroXiwIIFosBTgK7IQRJIiqLAFBOAroXiwMIFosBTgK7IQciKosAUE4CuhcnCWQKjBMyBycJZAqMFIsTixQTQQC1ISohDyIqiwBQTgK6FxaLAU4Cu4sBIQ8ouyErIRAiKosAUE4CuhcWiwFOAruLASEQKLshLCEZIiqLAFBOAroXFosBTgK7ISghDiIqiwBQTgK6FxaLAU4Cu4sBIQ4ouyEpIQYiKosAUE4CuhcWiwFOAruLASEGKLshLSEHIiqLAFBOAroXFosBTgK7IQciKosAUE4CuhcjEkEADSEHMgcWiwFOArtCAA4hB4sUJwlkCxaLAU4CuyEPSSIqiwBQTgK6F4v5CBaLAU4CuyEQSSIqiwBQTgK6F4v4CBaLAU4CuyEGIiqLAFBOAroXFowVIRkiKosAUE4CuhcWjBYhGYsVixajiwaLBaOgixWLBqCiSZMlDkQnBaxJFUkiCUxSFxaLAU4CuyEOSSIqiwBQTgK6F4sCCBaLAU4CuyEGSSIqiwBQTgK6F4sDCBaLAU4Cu4sBvkSMAEYWiTYaChc2GgkXNhoIFzYaBxc2GgYXNhoFFzYaBBc2GgMXNhoCFzYaAReIAAIkQ4oKALEhGrIQI7IBJw5Jsh6yHyEgshmzsSEashAjsgEnDkmyHrIfISCyGbOL/zINEkSL9oGAlOvcAxJEi/eL+Iv5i/qL+4v8i/2L/ov/iPL3i/eL+Iv5i/qL+4v8i/2L/oj5Q4k2GgcXNhoGFzYaBRc2GgRXAgA2GgNXAgA2GgJXAgA2GgEXiAACJEOKBwApSYv/JwxkEkSL/yccZUSMAIv/KmVEjAGLASMSRDEAiwASRLEhHrIQi/2yC4v8sj+L+7IMi/myDov6sg2L/rIKI7IBs4knEDYaAxc2GgIXNhoBF4gABRZQsCRDigMBKUmL/ycMZBJEi/8nHGVEjACL/yplRIwBiwEjEkQxAIsAEkSL/Yv+MQCIAAeL/YwARgGJigMAi/4jEkEAE7EkshCL/7IHi/2yCCOyAbNCABWxIR+yEIv/shSL/rIRi/2yEiOyAbOJJxM2GgCOAezXAIAEoMrfioAENVdGu4AExLmB14AEG4ypGYAETZ//p4AEQFQO5oAE4T5PWoAEg5JcF4AEy6LpXTYaAI4J7Ejsce0u7hLuH+/G/ir+u/8qAIAEX8iFoDYaAI4B7OAA',
    clear: 'Cg==',
  },
  compilerInfo: { compiler: 'algod', compilerVersion: { major: 4, minor: 1, patch: 2, commitHash: '088f89dd' } },
} as unknown as Arc56Contract;

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined;
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined;
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value;
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined;
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never;

// Type definitions for ARC-56 structs

export type AppPoolInfo = {
  assetA: bigint;
  assetB: bigint;
  verificationClass: bigint;
  latestPrice: bigint;
  period1Duration: bigint;
  period1NowVolumeA: bigint;
  period1NowVolumeB: bigint;
  period1NowFeeA: bigint;
  period1NowFeeB: bigint;
  period1NowVwap: bigint;
  period1NowTime: bigint;
  period1PrevVolumeA: bigint;
  period1PrevVolumeB: bigint;
  period1PrevFeeA: bigint;
  period1PrevFeeB: bigint;
  period1PrevVwap: bigint;
  period1PrevTime: bigint;
  period2Duration: bigint;
  period2NowVolumeA: bigint;
  period2NowVolumeB: bigint;
  period2NowFeeA: bigint;
  period2NowFeeB: bigint;
  period2NowVwap: bigint;
  period2NowTime: bigint;
  period2PrevVolumeA: bigint;
  period2PrevVolumeB: bigint;
  period2PrevFeeA: bigint;
  period2PrevFeeB: bigint;
  period2PrevVwap: bigint;
  period2PrevTime: bigint;
  period3Duration: bigint;
  period3NowVolumeA: bigint;
  period3NowVolumeB: bigint;
  period3NowFeeA: bigint;
  period3NowFeeB: bigint;
  period3NowVwap: bigint;
  period3NowTime: bigint;
  period3PrevVolumeA: bigint;
  period3PrevVolumeB: bigint;
  period3PrevFeeA: bigint;
  period3PrevFeeB: bigint;
  period3PrevVwap: bigint;
  period3PrevTime: bigint;
  period4Duration: bigint;
  period4NowVolumeA: bigint;
  period4NowVolumeB: bigint;
  period4NowFeeA: bigint;
  period4NowFeeB: bigint;
  period4NowVwap: bigint;
  period4NowTime: bigint;
  period4PrevVolumeA: bigint;
  period4PrevVolumeB: bigint;
  period4PrevFeeA: bigint;
  period4PrevFeeB: bigint;
  period4PrevVwap: bigint;
  period4PrevTime: bigint;
};

/**
 * Converts the ABI tuple representation of a AppPoolInfo to the struct representation
 */
export function AppPoolInfoFromTuple(
  abiTuple: [
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
    bigint,
  ]
) {
  return getABIStructFromABITuple(abiTuple, APP_SPEC.structs.AppPoolInfo, APP_SPEC.structs) as AppPoolInfo;
}

export type PoolConfig = {
  assetA: bigint;
  assetB: bigint;
  min: bigint;
  max: bigint;
  fee: bigint;
  verificationClass: bigint;
};

/**
 * Converts the ABI tuple representation of a PoolConfig to the struct representation
 */
export function PoolConfigFromTuple(abiTuple: [bigint, bigint, bigint, bigint, bigint, bigint]) {
  return getABIStructFromABITuple(abiTuple, APP_SPEC.structs.PoolConfig, APP_SPEC.structs) as PoolConfig;
}

export type FullConfig = {
  appId: bigint;
  assetA: bigint;
  assetB: bigint;
  min: bigint;
  max: bigint;
  fee: bigint;
  lpTokenId: bigint;
  verificationClass: number;
};

/**
 * Converts the ABI tuple representation of a FullConfig to the struct representation
 */
export function FullConfigFromTuple(abiTuple: [bigint, bigint, bigint, bigint, bigint, bigint, bigint, number]) {
  return getABIStructFromABITuple(abiTuple, APP_SPEC.structs.FullConfig, APP_SPEC.structs) as FullConfig;
}

export type AssetsCombined = {
  assetA: bigint;
  assetB: bigint;
};

/**
 * Converts the ABI tuple representation of a AssetsCombined to the struct representation
 */
export function AssetsCombinedFromTuple(abiTuple: [bigint, bigint]) {
  return getABIStructFromABITuple(abiTuple, APP_SPEC.structs.AssetsCombined, APP_SPEC.structs) as AssetsCombined;
}

/**
 * The argument types for the BiatecPoolProvider contract
 */
export type BiatecPoolProviderArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'bootstrap(uint64)void': {
      /**
       * Biatec amm provider
       */
      appBiatecConfigProvider: bigint | number;
    };
    'getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)': {
      /**
       * Pool id to retrieve the stats
       */
      appPoolId: bigint | number;
    };
    'createApplication()void': Record<string, never>;
    'updateApplication(uint64,byte[])void': {
      appBiatecConfigProvider: bigint | number;
      newVersion: Uint8Array;
    };
    'loadCLAMMContractData(uint64,uint64,uint64,byte[])void': {
      appBiatecConfigProvider: bigint | number;
      approvalProgramSize: bigint | number;
      offset: bigint | number;
      data: Uint8Array;
    };
    'noop(uint64)void': {
      i: bigint | number;
    };
    'deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64': {
      /**
       * Asset A ID must be lower then Asset B ID
       */
      assetA: bigint | number;
      /**
       * Asset B
       */
      assetB: bigint | number;
      /**
       * Biatec amm provider
       */
      appBiatecConfigProvider: bigint | number;
      /**
       * Pool provider
       */
      appBiatecPoolProvider: bigint | number;
      /**
       * Seed transaction so that smart contract can opt in to the assets
       */
      txSeed: AppMethodCallTransactionArgument;
      /**
       * Fee in base level (9 decimals). value 1_000_000_000 = 1 = 100%. 10_000_000 = 1%. 1_000_000 = 0.1%
       */
      fee: bigint | number;
      /**
       * Min price range. At this point all assets are in asset A.
       */
      priceMin: bigint | number;
      /**
       * Max price range. At this point all assets are in asset B.
       */
      priceMax: bigint | number;
      /**
       * Deployer can specify the current price for easier deployemnt.
       */
      currentPrice: bigint | number;
      /**
       * Minimum verification level from the biatec identity. Level 0 means no kyc.
       */
      verificationClass: bigint | number;
    };
    'registerPool()void': Record<string, never>;
    'registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void': {
      /**
       * Liqudity pool smart contract
       */
      appPoolId: bigint | number;
      /**
       * Asset A
       */
      assetA: bigint | number;
      /**
       * Asset B
       */
      assetB: bigint | number;
      /**
       * The original price
       */
      priceFrom: bigint | number;
      /**
       * The new price
       */
      priceTo: bigint | number;
      /**
       * Asset A amount spent or received
       */
      amountA: bigint | number;
      /**
       * Asset B amount spent or received
       */
      amountB: bigint | number;
      /**
       * Fees paid in asset A if any
       */
      feeAmountA: bigint | number;
      /**
       * Fees paid in asset B if any
       */
      feeAmountB: bigint | number;
      /**
       * Scale multiplier
       */
      s: bigint | number;
    };
    'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void': {
      appBiatecConfigProvider: bigint | number;
      votePk: Uint8Array;
      selectionPk: Uint8Array;
      stateProofPk: Uint8Array;
      voteFirst: bigint | number;
      voteLast: bigint | number;
      voteKeyDilution: bigint | number;
    };
    'withdrawExcessAssets(uint64,uint64,uint64)uint64': {
      /**
       * Biatec config app. Only addressExecutiveFee is allowed to execute this method.
       */
      appBiatecConfigProvider: bigint | number;
      /**
       * Asset to withdraw. If native token, then zero
       */
      asset: bigint | number;
      /**
       * Amount of the asset to be withdrawn
       */
      amount: bigint | number;
    };
  };
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'bootstrap(uint64)void': [appBiatecConfigProvider: bigint | number];
    'getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)': [
      appPoolId: bigint | number,
    ];
    'createApplication()void': [];
    'updateApplication(uint64,byte[])void': [appBiatecConfigProvider: bigint | number, newVersion: Uint8Array];
    'loadCLAMMContractData(uint64,uint64,uint64,byte[])void': [
      appBiatecConfigProvider: bigint | number,
      approvalProgramSize: bigint | number,
      offset: bigint | number,
      data: Uint8Array,
    ];
    'noop(uint64)void': [i: bigint | number];
    'deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64': [
      assetA: bigint | number,
      assetB: bigint | number,
      appBiatecConfigProvider: bigint | number,
      appBiatecPoolProvider: bigint | number,
      txSeed: AppMethodCallTransactionArgument,
      fee: bigint | number,
      priceMin: bigint | number,
      priceMax: bigint | number,
      currentPrice: bigint | number,
      verificationClass: bigint | number,
    ];
    'registerPool()void': [];
    'registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void': [
      appPoolId: bigint | number,
      assetA: bigint | number,
      assetB: bigint | number,
      priceFrom: bigint | number,
      priceTo: bigint | number,
      amountA: bigint | number,
      amountB: bigint | number,
      feeAmountA: bigint | number,
      feeAmountB: bigint | number,
      s: bigint | number,
    ];
    'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void': [
      appBiatecConfigProvider: bigint | number,
      votePk: Uint8Array,
      selectionPk: Uint8Array,
      stateProofPk: Uint8Array,
      voteFirst: bigint | number,
      voteLast: bigint | number,
      voteKeyDilution: bigint | number,
    ];
    'withdrawExcessAssets(uint64,uint64,uint64)uint64': [
      appBiatecConfigProvider: bigint | number,
      asset: bigint | number,
      amount: bigint | number,
    ];
  };
};

/**
 * The return type for each method
 */
export type BiatecPoolProviderReturns = {
  'bootstrap(uint64)void': void;
  'getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)': AppPoolInfo;
  'createApplication()void': void;
  'updateApplication(uint64,byte[])void': void;
  'loadCLAMMContractData(uint64,uint64,uint64,byte[])void': void;
  'noop(uint64)void': void;
  'deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64': bigint;
  'registerPool()void': void;
  'registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void': void;
  'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void': void;
  'withdrawExcessAssets(uint64,uint64,uint64)uint64': bigint;
};

/**
 * Defines the types of available calls and state of the BiatecPoolProvider smart contract.
 */
export type BiatecPoolProviderTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods: Record<
    'bootstrap(uint64)void' | 'bootstrap',
    {
      argsObj: BiatecPoolProviderArgs['obj']['bootstrap(uint64)void'];
      argsTuple: BiatecPoolProviderArgs['tuple']['bootstrap(uint64)void'];
      returns: BiatecPoolProviderReturns['bootstrap(uint64)void'];
    }
  > &
    Record<
      | 'getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'
      | 'getCurrentStatus',
      {
        argsObj: BiatecPoolProviderArgs['obj']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'];
        argsTuple: BiatecPoolProviderArgs['tuple']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'];
        /**
         * Pool info statistics
         */
        returns: BiatecPoolProviderReturns['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'];
      }
    > &
    Record<
      'createApplication()void' | 'createApplication',
      {
        argsObj: BiatecPoolProviderArgs['obj']['createApplication()void'];
        argsTuple: BiatecPoolProviderArgs['tuple']['createApplication()void'];
        returns: BiatecPoolProviderReturns['createApplication()void'];
      }
    > &
    Record<
      'updateApplication(uint64,byte[])void' | 'updateApplication',
      {
        argsObj: BiatecPoolProviderArgs['obj']['updateApplication(uint64,byte[])void'];
        argsTuple: BiatecPoolProviderArgs['tuple']['updateApplication(uint64,byte[])void'];
        returns: BiatecPoolProviderReturns['updateApplication(uint64,byte[])void'];
      }
    > &
    Record<
      'loadCLAMMContractData(uint64,uint64,uint64,byte[])void' | 'loadCLAMMContractData',
      {
        argsObj: BiatecPoolProviderArgs['obj']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void'];
        argsTuple: BiatecPoolProviderArgs['tuple']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void'];
        returns: BiatecPoolProviderReturns['loadCLAMMContractData(uint64,uint64,uint64,byte[])void'];
      }
    > &
    Record<
      'noop(uint64)void' | 'noop',
      {
        argsObj: BiatecPoolProviderArgs['obj']['noop(uint64)void'];
        argsTuple: BiatecPoolProviderArgs['tuple']['noop(uint64)void'];
        returns: BiatecPoolProviderReturns['noop(uint64)void'];
      }
    > &
    Record<
      'deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64' | 'deployPool',
      {
        argsObj: BiatecPoolProviderArgs['obj']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'];
        argsTuple: BiatecPoolProviderArgs['tuple']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'];
        /**
         * LP token ID
         */
        returns: BiatecPoolProviderReturns['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'];
      }
    > &
    Record<
      'registerPool()void' | 'registerPool',
      {
        argsObj: BiatecPoolProviderArgs['obj']['registerPool()void'];
        argsTuple: BiatecPoolProviderArgs['tuple']['registerPool()void'];
        returns: BiatecPoolProviderReturns['registerPool()void'];
      }
    > &
    Record<
      'registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void' | 'registerTrade',
      {
        argsObj: BiatecPoolProviderArgs['obj']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void'];
        argsTuple: BiatecPoolProviderArgs['tuple']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void'];
        returns: BiatecPoolProviderReturns['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void'];
      }
    > &
    Record<
      'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void' | 'sendOnlineKeyRegistration',
      {
        argsObj: BiatecPoolProviderArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void'];
        argsTuple: BiatecPoolProviderArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void'];
        returns: BiatecPoolProviderReturns['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void'];
      }
    > &
    Record<
      'withdrawExcessAssets(uint64,uint64,uint64)uint64' | 'withdrawExcessAssets',
      {
        argsObj: BiatecPoolProviderArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64)uint64'];
        argsTuple: BiatecPoolProviderArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64)uint64'];
        returns: BiatecPoolProviderReturns['withdrawExcessAssets(uint64,uint64,uint64)uint64'];
      }
    >;
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        period1: bigint;
        period2: bigint;
        period3: bigint;
        period4: bigint;
        recentPools1: bigint;
        recentPools2: bigint;
        recentPools3: bigint;
        recentPools4: bigint;
        recentPools5: bigint;
        recentPools6: bigint;
        recentPools7: bigint;
        recentPools8: bigint;
        recentPools9: bigint;
        recentPools10: bigint;
        recentPoolsIndex: bigint;
        appBiatecConfigProvider: bigint;
        version: BinaryState;
      };
      maps: {};
    };
    box: {
      keys: {
        clammApprovalProgram1: BinaryState;
        clammApprovalProgram2: BinaryState;
        clammApprovalProgram3: BinaryState;
      };
      maps: {
        pools: Map<bigint | number, AppPoolInfo>;
        poolsByConfig: Map<PoolConfig, bigint>;
        fullConfigs: Map<FullConfig, bigint>;
        poolsAggregated: Map<AssetsCombined, AppPoolInfo>;
      };
    };
  };
};

/**
 * Defines the possible abi call signatures.
 */
export type BiatecPoolProviderSignatures = keyof BiatecPoolProviderTypes['methods'];
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type BiatecPoolProviderNonVoidMethodSignatures = keyof BiatecPoolProviderTypes['methods'] extends infer T
  ? T extends keyof BiatecPoolProviderTypes['methods']
    ? MethodReturn<T> extends void
      ? never
      : T
    : never
  : never;
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> & {
    /** The args for the ABI method call, either as an ordered array or an object */
    args: Expand<TArgs>;
  }
>;
/**
 * Maps a method signature from the BiatecPoolProvider smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends BiatecPoolProviderSignatures> =
  BiatecPoolProviderTypes['methods'][TSignature]['argsObj' | 'argsTuple'];
/**
 * Maps a method signature from the BiatecPoolProvider smart contract to the method's return type
 */
export type MethodReturn<TSignature extends BiatecPoolProviderSignatures> =
  BiatecPoolProviderTypes['methods'][TSignature]['returns'];

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = BiatecPoolProviderTypes['state']['global']['keys'];

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = BiatecPoolProviderTypes['state']['box']['keys'];

/**
 * Defines supported create method params for this smart contract
 */
export type BiatecPoolProviderCreateCallParams =
  | Expand<
      CallParams<
        | BiatecPoolProviderArgs['obj']['createApplication()void']
        | BiatecPoolProviderArgs['tuple']['createApplication()void']
      > & { method: 'createApplication' } & { onComplete?: OnApplicationComplete.NoOpOC } & CreateSchema
    >
  | Expand<
      CallParams<
        | BiatecPoolProviderArgs['obj']['createApplication()void']
        | BiatecPoolProviderArgs['tuple']['createApplication()void']
      > & { method: 'createApplication()void' } & { onComplete?: OnApplicationComplete.NoOpOC } & CreateSchema
    >;
/**
 * Defines supported update method params for this smart contract
 */
export type BiatecPoolProviderUpdateCallParams =
  | Expand<
      CallParams<
        | BiatecPoolProviderArgs['obj']['updateApplication(uint64,byte[])void']
        | BiatecPoolProviderArgs['tuple']['updateApplication(uint64,byte[])void']
      > & { method: 'updateApplication' }
    >
  | Expand<
      CallParams<
        | BiatecPoolProviderArgs['obj']['updateApplication(uint64,byte[])void']
        | BiatecPoolProviderArgs['tuple']['updateApplication(uint64,byte[])void']
      > & { method: 'updateApplication(uint64,byte[])void' }
    >;
/**
 * Defines arguments required for the deploy method.
 */
export type BiatecPoolProviderDeployParams = Expand<
  Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
    /**
     * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
     */
    createParams?: BiatecPoolProviderCreateCallParams;
    /**
     * Update transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
     */
    updateParams?: BiatecPoolProviderUpdateCallParams;
  }
>;

/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the BiatecPoolProvider smart contract
 */
export abstract class BiatecPoolProviderParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends BiatecPoolProviderCreateCallParams & { method: string }>(params: TParams) {
        switch (params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return BiatecPoolProviderParamsFactory.create.createApplication(params);
        }
      },

      /**
       * Constructs create ABI call params for the BiatecPoolProvider smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['createApplication()void']
          | BiatecPoolProviderArgs['tuple']['createApplication()void']
        > &
          AppClientCompilationParams & { onComplete?: OnApplicationComplete.NoOpOC }
      ): AppClientMethodCallParams & AppClientCompilationParams & { onComplete?: OnApplicationComplete.NoOpOC } {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        };
      },
    };
  }

  /**
   * Gets available update ABI call param factories
   */
  static get update() {
    return {
      _resolveByMethod<TParams extends BiatecPoolProviderUpdateCallParams & { method: string }>(params: TParams) {
        switch (params.method) {
          case 'updateApplication':
          case 'updateApplication(uint64,byte[])void':
            return BiatecPoolProviderParamsFactory.update.updateApplication(params);
        }
      },

      /**
       * Constructs update ABI call params for the BiatecPoolProvider smart contract using the updateApplication(uint64,byte[])void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      updateApplication(
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['updateApplication(uint64,byte[])void']
          | BiatecPoolProviderArgs['tuple']['updateApplication(uint64,byte[])void']
        > &
          AppClientCompilationParams
      ): AppClientMethodCallParams & AppClientCompilationParams {
        return {
          ...params,
          method: 'updateApplication(uint64,byte[])void' as const,
          args: Array.isArray(params.args)
            ? params.args
            : [params.args.appBiatecConfigProvider, params.args.newVersion],
        };
      },
    };
  }

  /**
   * Constructs a no op call for the bootstrap(uint64)void ABI method
   *
   * Biatec deploys single pool provider smart contract
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static bootstrap(
    params: CallParams<
      BiatecPoolProviderArgs['obj']['bootstrap(uint64)void'] | BiatecPoolProviderArgs['tuple']['bootstrap(uint64)void']
    > &
      CallOnComplete
  ): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'bootstrap(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider],
    };
  }
  /**
   * Constructs a no op call for the getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64) ABI method
   *
   * Returns current status
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getCurrentStatus(
    params: CallParams<
      | BiatecPoolProviderArgs['obj']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
      | BiatecPoolProviderArgs['tuple']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
    > &
      CallOnComplete
  ): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method:
        'getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appPoolId],
    };
  }
  /**
   * Constructs a no op call for the loadCLAMMContractData(uint64,uint64,uint64,byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static loadClammContractData(
    params: CallParams<
      | BiatecPoolProviderArgs['obj']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void']
      | BiatecPoolProviderArgs['tuple']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void']
    > &
      CallOnComplete
  ): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'loadCLAMMContractData(uint64,uint64,uint64,byte[])void' as const,
      args: Array.isArray(params.args)
        ? params.args
        : [params.args.appBiatecConfigProvider, params.args.approvalProgramSize, params.args.offset, params.args.data],
    };
  }
  /**
   * Constructs a no op call for the noop(uint64)void ABI method
   *
   * No op tx to increase the app call and box size limits
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static noop(
    params: CallParams<
      BiatecPoolProviderArgs['obj']['noop(uint64)void'] | BiatecPoolProviderArgs['tuple']['noop(uint64)void']
    > &
      CallOnComplete
  ): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'noop(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.i],
    };
  }
  /**
   * Constructs a no op call for the deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64 ABI method
   *
   * Anybody can call this method to bootstrap new clamm pool
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static deployPool(
    params: CallParams<
      | BiatecPoolProviderArgs['obj']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
      | BiatecPoolProviderArgs['tuple']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
    > &
      CallOnComplete
  ): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args)
        ? params.args
        : [
            params.args.assetA,
            params.args.assetB,
            params.args.appBiatecConfigProvider,
            params.args.appBiatecPoolProvider,
            params.args.txSeed,
            params.args.fee,
            params.args.priceMin,
            params.args.priceMax,
            params.args.currentPrice,
            params.args.verificationClass,
          ],
    };
  }
  /**
   * Constructs a no op call for the registerPool()void ABI method
   *
   * This method is called by constructor of the luquidity pool
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static registerPool(
    params: CallParams<
      BiatecPoolProviderArgs['obj']['registerPool()void'] | BiatecPoolProviderArgs['tuple']['registerPool()void']
    > &
      CallOnComplete
  ): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'registerPool()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    };
  }
  /**
   * Constructs a no op call for the registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void ABI method
   *
   * This metod registers the trade and calculates and store the trade statistics
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static registerTrade(
    params: CallParams<
      | BiatecPoolProviderArgs['obj']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
      | BiatecPoolProviderArgs['tuple']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
    > &
      CallOnComplete
  ): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void' as const,
      args: Array.isArray(params.args)
        ? params.args
        : [
            params.args.appPoolId,
            params.args.assetA,
            params.args.assetB,
            params.args.priceFrom,
            params.args.priceTo,
            params.args.amountA,
            params.args.amountB,
            params.args.feeAmountA,
            params.args.feeAmountB,
            params.args.s,
          ],
    };
  }
  /**
   * Constructs a no op call for the sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void ABI method
   *
  * addressExecutiveFee can perfom key registration for this LP pool


  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static sendOnlineKeyRegistration(
    params: CallParams<
      | BiatecPoolProviderArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
      | BiatecPoolProviderArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
    > &
      CallOnComplete
  ): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void' as const,
      args: Array.isArray(params.args)
        ? params.args
        : [
            params.args.appBiatecConfigProvider,
            params.args.votePk,
            params.args.selectionPk,
            params.args.stateProofPk,
            params.args.voteFirst,
            params.args.voteLast,
            params.args.voteKeyDilution,
          ],
    };
  }
  /**
   * Constructs a no op call for the withdrawExcessAssets(uint64,uint64,uint64)uint64 ABI method
   *
  * If someone deposits excess assets to this smart contract biatec can use them.


  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static withdrawExcessAssets(
    params: CallParams<
      | BiatecPoolProviderArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64)uint64']
      | BiatecPoolProviderArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64)uint64']
    > &
      CallOnComplete
  ): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'withdrawExcessAssets(uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args)
        ? params.args
        : [params.args.appBiatecConfigProvider, params.args.asset, params.args.amount],
    };
  }
}

/**
 * A factory to create and deploy one or more instance of the BiatecPoolProvider smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class BiatecPoolProviderFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory;

  /**
   * Creates a new instance of `BiatecPoolProviderFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    });
  }

  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName;
  }

  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC;
  }

  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClient {
    return this.appFactory.algorand;
  }

  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new BiatecPoolProviderClient(this.appFactory.getAppClientById(params));
  }

  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(params: AppFactoryResolveAppClientByCreatorAndNameParams) {
    return new BiatecPoolProviderClient(await this.appFactory.getAppClientByCreatorAndName(params));
  }

  /**
   * Idempotently deploys the BiatecPoolProvider smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: BiatecPoolProviderDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method
        ? BiatecPoolProviderParamsFactory.create._resolveByMethod(params.createParams)
        : params.createParams
          ? (params.createParams as BiatecPoolProviderCreateCallParams & { args: Uint8Array[] })
          : undefined,
      updateParams: params.updateParams?.method
        ? BiatecPoolProviderParamsFactory.update._resolveByMethod(params.updateParams)
        : params.updateParams
          ? (params.updateParams as BiatecPoolProviderUpdateCallParams & { args: Uint8Array[] })
          : undefined,
    });
    return { result: result.result, appClient: new BiatecPoolProviderClient(result.appClient) };
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BiatecPoolProvider smart contract using the createApplication()void ABI method.
       *
       * Initial setup
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['createApplication()void']
          | BiatecPoolProviderArgs['tuple']['createApplication()void']
        > &
          AppClientCompilationParams &
          CreateSchema & { onComplete?: OnApplicationComplete.NoOpOC } = { args: [] }
      ) => {
        return this.appFactory.params.create(BiatecPoolProviderParamsFactory.create.createApplication(params));
      },
    },

    /**
     * Gets available deployUpdate methods
     */
    deployUpdate: {
      /**
       * Updates an existing instance of the BiatecPoolProvider smart contract using the updateApplication(uint64,byte[])void ABI method.
       *
       * addressUdpater from global biatec configuration is allowed to update application
       *
       * @param params The params for the smart contract call
       * @returns The deployUpdate params
       */
      updateApplication: (
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['updateApplication(uint64,byte[])void']
          | BiatecPoolProviderArgs['tuple']['updateApplication(uint64,byte[])void']
        > &
          AppClientCompilationParams
      ) => {
        return this.appFactory.params.deployUpdate(BiatecPoolProviderParamsFactory.update.updateApplication(params));
      },
    },
  };

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BiatecPoolProvider smart contract using the createApplication()void ABI method.
       *
       * Initial setup
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['createApplication()void']
          | BiatecPoolProviderArgs['tuple']['createApplication()void']
        > &
          AppClientCompilationParams &
          CreateSchema & { onComplete?: OnApplicationComplete.NoOpOC } = { args: [] }
      ) => {
        return this.appFactory.createTransaction.create(
          BiatecPoolProviderParamsFactory.create.createApplication(params)
        );
      },
    },
  };

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BiatecPoolProvider smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * Initial setup
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['createApplication()void']
          | BiatecPoolProviderArgs['tuple']['createApplication()void']
        > &
          AppClientCompilationParams &
          CreateSchema &
          SendParams & { onComplete?: OnApplicationComplete.NoOpOC } = { args: [] }
      ) => {
        const result = await this.appFactory.send.create(
          BiatecPoolProviderParamsFactory.create.createApplication(params)
        );
        return {
          result: {
            ...result.result,
            return: result.result.return as unknown as undefined | BiatecPoolProviderReturns['createApplication()void'],
          },
          appClient: new BiatecPoolProviderClient(result.appClient),
        };
      },
    },
  };
}
/**
 * A client to make calls to the BiatecPoolProvider smart contract
 */
export class BiatecPoolProviderClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient;

  /**
   * Creates a new instance of `BiatecPoolProviderClient`
   *
   * @param appClient An `AppClient` instance which has been created with the BiatecPoolProvider app spec
   */
  constructor(appClient: _AppClient);
  /**
   * Creates a new instance of `BiatecPoolProviderClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>);
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient =
      appClientOrParams instanceof _AppClient
        ? appClientOrParams
        : new _AppClient({
            ...appClientOrParams,
            appSpec: APP_SPEC,
          });
  }

  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends BiatecPoolProviderNonVoidMethodSignatures>(
    method: TSignature,
    returnValue: ABIReturn | undefined
  ) {
    return returnValue !== undefined
      ? getArc56ReturnValue<MethodReturn<TSignature>>(
          returnValue,
          this.appClient.getABIMethod(method),
          APP_SPEC.structs
        )
      : undefined;
  }

  /**
   * Returns a new `BiatecPoolProviderClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(
    params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>
  ): Promise<BiatecPoolProviderClient> {
    return new BiatecPoolProviderClient(await _AppClient.fromCreatorAndName({ ...params, appSpec: APP_SPEC }));
  }

  /**
   * Returns an `BiatecPoolProviderClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(params: Omit<ResolveAppClientByNetwork, 'appSpec'>): Promise<BiatecPoolProviderClient> {
    return new BiatecPoolProviderClient(await _AppClient.fromNetwork({ ...params, appSpec: APP_SPEC }));
  }

  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId;
  }

  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress;
  }

  /** The name of the app. */
  public get appName() {
    return this.appClient.appName;
  }

  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec;
  }

  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClient {
    return this.appClient.algorand;
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available update methods
     */
    update: {
      /**
       * Updates an existing instance of the BiatecPoolProvider smart contract using the `updateApplication(uint64,byte[])void` ABI method.
       *
       * addressUdpater from global biatec configuration is allowed to update application
       *
       * @param params The params for the smart contract call
       * @returns The update params
       */
      updateApplication: (
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['updateApplication(uint64,byte[])void']
          | BiatecPoolProviderArgs['tuple']['updateApplication(uint64,byte[])void']
        > &
          AppClientCompilationParams
      ) => {
        return this.appClient.params.update(BiatecPoolProviderParamsFactory.update.updateApplication(params));
      },
    },

    /**
     * Makes a clear_state call to an existing instance of the BiatecPoolProvider smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params);
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `bootstrap(uint64)void` ABI method.
     *
     * Biatec deploys single pool provider smart contract
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    bootstrap: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['bootstrap(uint64)void']
        | BiatecPoolProviderArgs['tuple']['bootstrap(uint64)void']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.params.call(BiatecPoolProviderParamsFactory.bootstrap(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)` ABI method.
     *
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Returns current status
     *
     * @param params The params for the smart contract call
     * @returns The call params: Pool info statistics
     */
    getCurrentStatus: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
        | BiatecPoolProviderArgs['tuple']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.params.call(BiatecPoolProviderParamsFactory.getCurrentStatus(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `loadCLAMMContractData(uint64,uint64,uint64,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    loadClammContractData: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void']
        | BiatecPoolProviderArgs['tuple']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.params.call(BiatecPoolProviderParamsFactory.loadClammContractData(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `noop(uint64)void` ABI method.
     *
     * No op tx to increase the app call and box size limits
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    noop: (
      params: CallParams<
        BiatecPoolProviderArgs['obj']['noop(uint64)void'] | BiatecPoolProviderArgs['tuple']['noop(uint64)void']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.params.call(BiatecPoolProviderParamsFactory.noop(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
     * Anybody can call this method to bootstrap new clamm pool
     *
     * @param params The params for the smart contract call
     * @returns The call params: LP token ID
     */
    deployPool: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
        | BiatecPoolProviderArgs['tuple']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.params.call(BiatecPoolProviderParamsFactory.deployPool(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `registerPool()void` ABI method.
     *
     * This method is called by constructor of the luquidity pool
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    registerPool: (
      params: CallParams<
        BiatecPoolProviderArgs['obj']['registerPool()void'] | BiatecPoolProviderArgs['tuple']['registerPool()void']
      > & { onComplete?: OnApplicationComplete.NoOpOC } = { args: [] }
    ) => {
      return this.appClient.params.call(BiatecPoolProviderParamsFactory.registerPool(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void` ABI method.
     *
     * This metod registers the trade and calculates and store the trade statistics
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    registerTrade: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
        | BiatecPoolProviderArgs['tuple']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.params.call(BiatecPoolProviderParamsFactory.registerTrade(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void` ABI method.
     *
    * addressExecutiveFee can perfom key registration for this LP pool


    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    sendOnlineKeyRegistration: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
        | BiatecPoolProviderArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.params.call(BiatecPoolProviderParamsFactory.sendOnlineKeyRegistration(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `withdrawExcessAssets(uint64,uint64,uint64)uint64` ABI method.
     *
    * If someone deposits excess assets to this smart contract biatec can use them.


    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    withdrawExcessAssets: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64)uint64']
        | BiatecPoolProviderArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64)uint64']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.params.call(BiatecPoolProviderParamsFactory.withdrawExcessAssets(params));
    },
  };

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available update methods
     */
    update: {
      /**
       * Updates an existing instance of the BiatecPoolProvider smart contract using the `updateApplication(uint64,byte[])void` ABI method.
       *
       * addressUdpater from global biatec configuration is allowed to update application
       *
       * @param params The params for the smart contract call
       * @returns The update transaction
       */
      updateApplication: (
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['updateApplication(uint64,byte[])void']
          | BiatecPoolProviderArgs['tuple']['updateApplication(uint64,byte[])void']
        > &
          AppClientCompilationParams
      ) => {
        return this.appClient.createTransaction.update(
          BiatecPoolProviderParamsFactory.update.updateApplication(params)
        );
      },
    },

    /**
     * Makes a clear_state call to an existing instance of the BiatecPoolProvider smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params);
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `bootstrap(uint64)void` ABI method.
     *
     * Biatec deploys single pool provider smart contract
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    bootstrap: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['bootstrap(uint64)void']
        | BiatecPoolProviderArgs['tuple']['bootstrap(uint64)void']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.createTransaction.call(BiatecPoolProviderParamsFactory.bootstrap(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)` ABI method.
     *
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Returns current status
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Pool info statistics
     */
    getCurrentStatus: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
        | BiatecPoolProviderArgs['tuple']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.createTransaction.call(BiatecPoolProviderParamsFactory.getCurrentStatus(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `loadCLAMMContractData(uint64,uint64,uint64,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    loadClammContractData: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void']
        | BiatecPoolProviderArgs['tuple']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.createTransaction.call(BiatecPoolProviderParamsFactory.loadClammContractData(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `noop(uint64)void` ABI method.
     *
     * No op tx to increase the app call and box size limits
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    noop: (
      params: CallParams<
        BiatecPoolProviderArgs['obj']['noop(uint64)void'] | BiatecPoolProviderArgs['tuple']['noop(uint64)void']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.createTransaction.call(BiatecPoolProviderParamsFactory.noop(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
     * Anybody can call this method to bootstrap new clamm pool
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: LP token ID
     */
    deployPool: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
        | BiatecPoolProviderArgs['tuple']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.createTransaction.call(BiatecPoolProviderParamsFactory.deployPool(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `registerPool()void` ABI method.
     *
     * This method is called by constructor of the luquidity pool
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    registerPool: (
      params: CallParams<
        BiatecPoolProviderArgs['obj']['registerPool()void'] | BiatecPoolProviderArgs['tuple']['registerPool()void']
      > & { onComplete?: OnApplicationComplete.NoOpOC } = { args: [] }
    ) => {
      return this.appClient.createTransaction.call(BiatecPoolProviderParamsFactory.registerPool(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void` ABI method.
     *
     * This metod registers the trade and calculates and store the trade statistics
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    registerTrade: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
        | BiatecPoolProviderArgs['tuple']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.createTransaction.call(BiatecPoolProviderParamsFactory.registerTrade(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void` ABI method.
     *
    * addressExecutiveFee can perfom key registration for this LP pool


    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    sendOnlineKeyRegistration: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
        | BiatecPoolProviderArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.createTransaction.call(BiatecPoolProviderParamsFactory.sendOnlineKeyRegistration(params));
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `withdrawExcessAssets(uint64,uint64,uint64)uint64` ABI method.
     *
    * If someone deposits excess assets to this smart contract biatec can use them.


    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    withdrawExcessAssets: (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64)uint64']
        | BiatecPoolProviderArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64)uint64']
      > & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      return this.appClient.createTransaction.call(BiatecPoolProviderParamsFactory.withdrawExcessAssets(params));
    },
  };

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available update methods
     */
    update: {
      /**
       * Updates an existing instance of the BiatecPoolProvider smart contract using the `updateApplication(uint64,byte[])void` ABI method.
       *
       * addressUdpater from global biatec configuration is allowed to update application
       *
       * @param params The params for the smart contract call
       * @returns The update result
       */
      updateApplication: async (
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['updateApplication(uint64,byte[])void']
          | BiatecPoolProviderArgs['tuple']['updateApplication(uint64,byte[])void']
        > &
          AppClientCompilationParams &
          SendParams
      ) => {
        const result = await this.appClient.send.update(
          BiatecPoolProviderParamsFactory.update.updateApplication(params)
        );
        return {
          ...result,
          return: result.return as unknown as
            | undefined
            | BiatecPoolProviderReturns['updateApplication(uint64,byte[])void'],
        };
      },
    },

    /**
     * Makes a clear_state call to an existing instance of the BiatecPoolProvider smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params);
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `bootstrap(uint64)void` ABI method.
     *
     * Biatec deploys single pool provider smart contract
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    bootstrap: async (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['bootstrap(uint64)void']
        | BiatecPoolProviderArgs['tuple']['bootstrap(uint64)void']
      > &
        SendParams & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      const result = await this.appClient.send.call(BiatecPoolProviderParamsFactory.bootstrap(params));
      return {
        ...result,
        return: result.return as unknown as undefined | BiatecPoolProviderReturns['bootstrap(uint64)void'],
      };
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)` ABI method.
     *
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Returns current status
     *
     * @param params The params for the smart contract call
     * @returns The call result: Pool info statistics
     */
    getCurrentStatus: async (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
        | BiatecPoolProviderArgs['tuple']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
      > &
        SendParams & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      const result = await this.appClient.send.call(BiatecPoolProviderParamsFactory.getCurrentStatus(params));
      return {
        ...result,
        return: result.return as unknown as
          | undefined
          | BiatecPoolProviderReturns['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'],
      };
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `loadCLAMMContractData(uint64,uint64,uint64,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    loadClammContractData: async (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void']
        | BiatecPoolProviderArgs['tuple']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void']
      > &
        SendParams & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      const result = await this.appClient.send.call(BiatecPoolProviderParamsFactory.loadClammContractData(params));
      return {
        ...result,
        return: result.return as unknown as
          | undefined
          | BiatecPoolProviderReturns['loadCLAMMContractData(uint64,uint64,uint64,byte[])void'],
      };
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `noop(uint64)void` ABI method.
     *
     * No op tx to increase the app call and box size limits
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    noop: async (
      params: CallParams<
        BiatecPoolProviderArgs['obj']['noop(uint64)void'] | BiatecPoolProviderArgs['tuple']['noop(uint64)void']
      > &
        SendParams & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      const result = await this.appClient.send.call(BiatecPoolProviderParamsFactory.noop(params));
      return {
        ...result,
        return: result.return as unknown as undefined | BiatecPoolProviderReturns['noop(uint64)void'],
      };
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
     * Anybody can call this method to bootstrap new clamm pool
     *
     * @param params The params for the smart contract call
     * @returns The call result: LP token ID
     */
    deployPool: async (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
        | BiatecPoolProviderArgs['tuple']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
      > &
        SendParams & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      const result = await this.appClient.send.call(BiatecPoolProviderParamsFactory.deployPool(params));
      return {
        ...result,
        return: result.return as unknown as
          | undefined
          | BiatecPoolProviderReturns['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'],
      };
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `registerPool()void` ABI method.
     *
     * This method is called by constructor of the luquidity pool
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    registerPool: async (
      params: CallParams<
        BiatecPoolProviderArgs['obj']['registerPool()void'] | BiatecPoolProviderArgs['tuple']['registerPool()void']
      > &
        SendParams & { onComplete?: OnApplicationComplete.NoOpOC } = { args: [] }
    ) => {
      const result = await this.appClient.send.call(BiatecPoolProviderParamsFactory.registerPool(params));
      return {
        ...result,
        return: result.return as unknown as undefined | BiatecPoolProviderReturns['registerPool()void'],
      };
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void` ABI method.
     *
     * This metod registers the trade and calculates and store the trade statistics
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    registerTrade: async (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
        | BiatecPoolProviderArgs['tuple']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
      > &
        SendParams & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      const result = await this.appClient.send.call(BiatecPoolProviderParamsFactory.registerTrade(params));
      return {
        ...result,
        return: result.return as unknown as
          | undefined
          | BiatecPoolProviderReturns['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void'],
      };
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void` ABI method.
     *
    * addressExecutiveFee can perfom key registration for this LP pool


    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    sendOnlineKeyRegistration: async (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
        | BiatecPoolProviderArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
      > &
        SendParams & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      const result = await this.appClient.send.call(BiatecPoolProviderParamsFactory.sendOnlineKeyRegistration(params));
      return {
        ...result,
        return: result.return as unknown as
          | undefined
          | BiatecPoolProviderReturns['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void'],
      };
    },

    /**
     * Makes a call to the BiatecPoolProvider smart contract using the `withdrawExcessAssets(uint64,uint64,uint64)uint64` ABI method.
     *
    * If someone deposits excess assets to this smart contract biatec can use them.


    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    withdrawExcessAssets: async (
      params: CallParams<
        | BiatecPoolProviderArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64)uint64']
        | BiatecPoolProviderArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64)uint64']
      > &
        SendParams & { onComplete?: OnApplicationComplete.NoOpOC }
    ) => {
      const result = await this.appClient.send.call(BiatecPoolProviderParamsFactory.withdrawExcessAssets(params));
      return {
        ...result,
        return: result.return as unknown as
          | undefined
          | BiatecPoolProviderReturns['withdrawExcessAssets(uint64,uint64,uint64)uint64'],
      };
    },
  };

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new BiatecPoolProviderClient(this.appClient.clone(params));
  }

  /**
   * Makes a readonly (simulated) call to the BiatecPoolProvider smart contract using the `getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)` ABI method.
   *
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * Returns current status
   *
   * @param params The params for the smart contract call
   * @returns The call result: Pool info statistics
   */
  async getCurrentStatus(
    params: CallParams<
      | BiatecPoolProviderArgs['obj']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
      | BiatecPoolProviderArgs['tuple']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
    >
  ) {
    const result = await this.appClient.send.call(BiatecPoolProviderParamsFactory.getCurrentStatus(params));
    return result.return as unknown as BiatecPoolProviderReturns['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'];
  }

  /**
   * Methods to access state for the current BiatecPoolProvider app
   */
  state = {
    /**
     * Methods to access global state for the current BiatecPoolProvider app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll();
        return {
          period1: result.period1,
          period2: result.period2,
          period3: result.period3,
          period4: result.period4,
          recentPools1: result.recentPools1,
          recentPools2: result.recentPools2,
          recentPools3: result.recentPools3,
          recentPools4: result.recentPools4,
          recentPools5: result.recentPools5,
          recentPools6: result.recentPools6,
          recentPools7: result.recentPools7,
          recentPools8: result.recentPools8,
          recentPools9: result.recentPools9,
          recentPools10: result.recentPools10,
          recentPoolsIndex: result.recentPoolsIndex,
          appBiatecConfigProvider: result.appBiatecConfigProvider,
          version: new BinaryStateValue(result.version),
        };
      },
      /**
       * Get the current value of the period1 key in global state
       */
      period1: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('period1')) as bigint | undefined;
      },
      /**
       * Get the current value of the period2 key in global state
       */
      period2: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('period2')) as bigint | undefined;
      },
      /**
       * Get the current value of the period3 key in global state
       */
      period3: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('period3')) as bigint | undefined;
      },
      /**
       * Get the current value of the period4 key in global state
       */
      period4: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('period4')) as bigint | undefined;
      },
      /**
       * Get the current value of the recentPools1 key in global state
       */
      recentPools1: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('recentPools1')) as bigint | undefined;
      },
      /**
       * Get the current value of the recentPools2 key in global state
       */
      recentPools2: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('recentPools2')) as bigint | undefined;
      },
      /**
       * Get the current value of the recentPools3 key in global state
       */
      recentPools3: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('recentPools3')) as bigint | undefined;
      },
      /**
       * Get the current value of the recentPools4 key in global state
       */
      recentPools4: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('recentPools4')) as bigint | undefined;
      },
      /**
       * Get the current value of the recentPools5 key in global state
       */
      recentPools5: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('recentPools5')) as bigint | undefined;
      },
      /**
       * Get the current value of the recentPools6 key in global state
       */
      recentPools6: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('recentPools6')) as bigint | undefined;
      },
      /**
       * Get the current value of the recentPools7 key in global state
       */
      recentPools7: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('recentPools7')) as bigint | undefined;
      },
      /**
       * Get the current value of the recentPools8 key in global state
       */
      recentPools8: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('recentPools8')) as bigint | undefined;
      },
      /**
       * Get the current value of the recentPools9 key in global state
       */
      recentPools9: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('recentPools9')) as bigint | undefined;
      },
      /**
       * Get the current value of the recentPools10 key in global state
       */
      recentPools10: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('recentPools10')) as bigint | undefined;
      },
      /**
       * Get the current value of the recentPoolsIndex key in global state
       */
      recentPoolsIndex: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('recentPoolsIndex')) as bigint | undefined;
      },
      /**
       * Get the current value of the appBiatecConfigProvider key in global state
       */
      appBiatecConfigProvider: async (): Promise<bigint | undefined> => {
        return (await this.appClient.state.global.getValue('appBiatecConfigProvider')) as bigint | undefined;
      },
      /**
       * Get the current value of the version key in global state
       */
      version: async (): Promise<BinaryState> => {
        return new BinaryStateValue((await this.appClient.state.global.getValue('version')) as Uint8Array | undefined);
      },
    },
    /**
     * Methods to access box state for the current BiatecPoolProvider app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll();
        return {
          clammApprovalProgram1: new BinaryStateValue(result.clammApprovalProgram1),
          clammApprovalProgram2: new BinaryStateValue(result.clammApprovalProgram2),
          clammApprovalProgram3: new BinaryStateValue(result.clammApprovalProgram3),
        };
      },
      /**
       * Get the current value of the clammApprovalProgram1 key in box state
       */
      clammApprovalProgram1: async (): Promise<BinaryState> => {
        return new BinaryStateValue(
          (await this.appClient.state.box.getValue('clammApprovalProgram1')) as Uint8Array | undefined
        );
      },
      /**
       * Get the current value of the clammApprovalProgram2 key in box state
       */
      clammApprovalProgram2: async (): Promise<BinaryState> => {
        return new BinaryStateValue(
          (await this.appClient.state.box.getValue('clammApprovalProgram2')) as Uint8Array | undefined
        );
      },
      /**
       * Get the current value of the clammApprovalProgram3 key in box state
       */
      clammApprovalProgram3: async (): Promise<BinaryState> => {
        return new BinaryStateValue(
          (await this.appClient.state.box.getValue('clammApprovalProgram3')) as Uint8Array | undefined
        );
      },
      /**
       * Get values from the pools map in box state
       */
      pools: {
        /**
         * Get all current values of the pools map in box state
         */
        getMap: async (): Promise<Map<bigint, AppPoolInfo>> => {
          return (await this.appClient.state.box.getMap('pools')) as Map<bigint, AppPoolInfo>;
        },
        /**
         * Get a current value of the pools map by key from box state
         */
        value: async (key: bigint | number): Promise<AppPoolInfo | undefined> => {
          return (await this.appClient.state.box.getMapValue('pools', key)) as AppPoolInfo | undefined;
        },
      },
      /**
       * Get values from the poolsByConfig map in box state
       */
      poolsByConfig: {
        /**
         * Get all current values of the poolsByConfig map in box state
         */
        getMap: async (): Promise<Map<PoolConfig, bigint>> => {
          return (await this.appClient.state.box.getMap('poolsByConfig')) as Map<PoolConfig, bigint>;
        },
        /**
         * Get a current value of the poolsByConfig map by key from box state
         */
        value: async (key: PoolConfig): Promise<bigint | undefined> => {
          return (await this.appClient.state.box.getMapValue('poolsByConfig', key)) as bigint | undefined;
        },
      },
      /**
       * Get values from the fullConfigs map in box state
       */
      fullConfigs: {
        /**
         * Get all current values of the fullConfigs map in box state
         */
        getMap: async (): Promise<Map<FullConfig, bigint>> => {
          return (await this.appClient.state.box.getMap('fullConfigs')) as Map<FullConfig, bigint>;
        },
        /**
         * Get a current value of the fullConfigs map by key from box state
         */
        value: async (key: FullConfig): Promise<bigint | undefined> => {
          return (await this.appClient.state.box.getMapValue('fullConfigs', key)) as bigint | undefined;
        },
      },
      /**
       * Get values from the poolsAggregated map in box state
       */
      poolsAggregated: {
        /**
         * Get all current values of the poolsAggregated map in box state
         */
        getMap: async (): Promise<Map<AssetsCombined, AppPoolInfo>> => {
          return (await this.appClient.state.box.getMap('poolsAggregated')) as Map<AssetsCombined, AppPoolInfo>;
        },
        /**
         * Get a current value of the poolsAggregated map by key from box state
         */
        value: async (key: AssetsCombined): Promise<AppPoolInfo | undefined> => {
          return (await this.appClient.state.box.getMapValue('poolsAggregated', key)) as AppPoolInfo | undefined;
        },
      },
    },
  };

  public newGroup(): BiatecPoolProviderComposer {
    const client = this;
    const composer = this.algorand.newGroup();
    let promiseChain: Promise<unknown> = Promise.resolve();
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = [];
    return {
      /**
       * Add a bootstrap(uint64)void method call against the BiatecPoolProvider contract
       */
      bootstrap(
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['bootstrap(uint64)void']
          | BiatecPoolProviderArgs['tuple']['bootstrap(uint64)void']
        > & { onComplete?: OnApplicationComplete.NoOpOC }
      ) {
        promiseChain = promiseChain.then(async () =>
          composer.addAppCallMethodCall(await client.params.bootstrap(params))
        );
        resultMappers.push(undefined);
        return this;
      },
      /**
       * Add a getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64) method call against the BiatecPoolProvider contract
       */
      getCurrentStatus(
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
          | BiatecPoolProviderArgs['tuple']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
        > & { onComplete?: OnApplicationComplete.NoOpOC }
      ) {
        promiseChain = promiseChain.then(async () =>
          composer.addAppCallMethodCall(await client.params.getCurrentStatus(params))
        );
        resultMappers.push((v) =>
          client.decodeReturnValue(
            'getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)',
            v
          )
        );
        return this;
      },
      /**
       * Add a loadCLAMMContractData(uint64,uint64,uint64,byte[])void method call against the BiatecPoolProvider contract
       */
      loadClammContractData(
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void']
          | BiatecPoolProviderArgs['tuple']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void']
        > & { onComplete?: OnApplicationComplete.NoOpOC }
      ) {
        promiseChain = promiseChain.then(async () =>
          composer.addAppCallMethodCall(await client.params.loadClammContractData(params))
        );
        resultMappers.push(undefined);
        return this;
      },
      /**
       * Add a noop(uint64)void method call against the BiatecPoolProvider contract
       */
      noop(
        params: CallParams<
          BiatecPoolProviderArgs['obj']['noop(uint64)void'] | BiatecPoolProviderArgs['tuple']['noop(uint64)void']
        > & { onComplete?: OnApplicationComplete.NoOpOC }
      ) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.noop(params)));
        resultMappers.push(undefined);
        return this;
      },
      /**
       * Add a deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64 method call against the BiatecPoolProvider contract
       */
      deployPool(
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
          | BiatecPoolProviderArgs['tuple']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
        > & { onComplete?: OnApplicationComplete.NoOpOC }
      ) {
        promiseChain = promiseChain.then(async () =>
          composer.addAppCallMethodCall(await client.params.deployPool(params))
        );
        resultMappers.push((v) =>
          client.decodeReturnValue(
            'deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64',
            v
          )
        );
        return this;
      },
      /**
       * Add a registerPool()void method call against the BiatecPoolProvider contract
       */
      registerPool(
        params: CallParams<
          BiatecPoolProviderArgs['obj']['registerPool()void'] | BiatecPoolProviderArgs['tuple']['registerPool()void']
        > & { onComplete?: OnApplicationComplete.NoOpOC }
      ) {
        promiseChain = promiseChain.then(async () =>
          composer.addAppCallMethodCall(await client.params.registerPool(params))
        );
        resultMappers.push(undefined);
        return this;
      },
      /**
       * Add a registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void method call against the BiatecPoolProvider contract
       */
      registerTrade(
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
          | BiatecPoolProviderArgs['tuple']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
        > & { onComplete?: OnApplicationComplete.NoOpOC }
      ) {
        promiseChain = promiseChain.then(async () =>
          composer.addAppCallMethodCall(await client.params.registerTrade(params))
        );
        resultMappers.push(undefined);
        return this;
      },
      /**
       * Add a sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void method call against the BiatecPoolProvider contract
       */
      sendOnlineKeyRegistration(
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
          | BiatecPoolProviderArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
        > & { onComplete?: OnApplicationComplete.NoOpOC }
      ) {
        promiseChain = promiseChain.then(async () =>
          composer.addAppCallMethodCall(await client.params.sendOnlineKeyRegistration(params))
        );
        resultMappers.push(undefined);
        return this;
      },
      /**
       * Add a withdrawExcessAssets(uint64,uint64,uint64)uint64 method call against the BiatecPoolProvider contract
       */
      withdrawExcessAssets(
        params: CallParams<
          | BiatecPoolProviderArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64)uint64']
          | BiatecPoolProviderArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64)uint64']
        > & { onComplete?: OnApplicationComplete.NoOpOC }
      ) {
        promiseChain = promiseChain.then(async () =>
          composer.addAppCallMethodCall(await client.params.withdrawExcessAssets(params))
        );
        resultMappers.push((v) => client.decodeReturnValue('withdrawExcessAssets(uint64,uint64,uint64)uint64', v));
        return this;
      },
      get update() {
        return {
          updateApplication: (
            params: CallParams<
              | BiatecPoolProviderArgs['obj']['updateApplication(uint64,byte[])void']
              | BiatecPoolProviderArgs['tuple']['updateApplication(uint64,byte[])void']
            > &
              AppClientCompilationParams
          ) => {
            promiseChain = promiseChain.then(async () =>
              composer.addAppUpdateMethodCall(await client.params.update.updateApplication(params))
            );
            resultMappers.push(undefined);
            return this;
          },
        };
      },
      /**
       * Add a clear state call to the BiatecPoolProvider contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)));
        return this;
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer));
        return this;
      },
      async composer() {
        await promiseChain;
        return composer;
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain;
        const result = await (!options ? composer.simulate() : composer.simulate(options));
        return {
          ...result,
          returns: result.returns?.map((val, i) =>
            resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue
          ),
        };
      },
      async send(params?: SendParams) {
        await promiseChain;
        const result = await composer.send(params);
        return {
          ...result,
          returns: result.returns?.map((val, i) =>
            resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue
          ),
        };
      },
    } as unknown as BiatecPoolProviderComposer;
  }
}
export type BiatecPoolProviderComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the bootstrap(uint64)void ABI method.
   *
   * Biatec deploys single pool provider smart contract
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  bootstrap(
    params?: CallParams<
      BiatecPoolProviderArgs['obj']['bootstrap(uint64)void'] | BiatecPoolProviderArgs['tuple']['bootstrap(uint64)void']
    >
  ): BiatecPoolProviderComposer<[...TReturns, BiatecPoolProviderReturns['bootstrap(uint64)void'] | undefined]>;

  /**
   * Calls the getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64) ABI method.
   *
   * Returns current status
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getCurrentStatus(
    params?: CallParams<
      | BiatecPoolProviderArgs['obj']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
      | BiatecPoolProviderArgs['tuple']['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
    >
  ): BiatecPoolProviderComposer<
    [
      ...TReturns,
      (
        | BiatecPoolProviderReturns['getCurrentStatus(uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
        | undefined
      ),
    ]
  >;

  /**
   * Calls the loadCLAMMContractData(uint64,uint64,uint64,byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  loadClammContractData(
    params?: CallParams<
      | BiatecPoolProviderArgs['obj']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void']
      | BiatecPoolProviderArgs['tuple']['loadCLAMMContractData(uint64,uint64,uint64,byte[])void']
    >
  ): BiatecPoolProviderComposer<
    [...TReturns, BiatecPoolProviderReturns['loadCLAMMContractData(uint64,uint64,uint64,byte[])void'] | undefined]
  >;

  /**
   * Calls the noop(uint64)void ABI method.
   *
   * No op tx to increase the app call and box size limits
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  noop(
    params?: CallParams<
      BiatecPoolProviderArgs['obj']['noop(uint64)void'] | BiatecPoolProviderArgs['tuple']['noop(uint64)void']
    >
  ): BiatecPoolProviderComposer<[...TReturns, BiatecPoolProviderReturns['noop(uint64)void'] | undefined]>;

  /**
   * Calls the deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64 ABI method.
   *
   * Anybody can call this method to bootstrap new clamm pool
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  deployPool(
    params?: CallParams<
      | BiatecPoolProviderArgs['obj']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
      | BiatecPoolProviderArgs['tuple']['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
    >
  ): BiatecPoolProviderComposer<
    [
      ...TReturns,
      (
        | BiatecPoolProviderReturns['deployPool(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
        | undefined
      ),
    ]
  >;

  /**
   * Calls the registerPool()void ABI method.
   *
   * This method is called by constructor of the luquidity pool
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  registerPool(
    params?: CallParams<
      BiatecPoolProviderArgs['obj']['registerPool()void'] | BiatecPoolProviderArgs['tuple']['registerPool()void']
    >
  ): BiatecPoolProviderComposer<[...TReturns, BiatecPoolProviderReturns['registerPool()void'] | undefined]>;

  /**
   * Calls the registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void ABI method.
   *
   * This metod registers the trade and calculates and store the trade statistics
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  registerTrade(
    params?: CallParams<
      | BiatecPoolProviderArgs['obj']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
      | BiatecPoolProviderArgs['tuple']['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
    >
  ): BiatecPoolProviderComposer<
    [
      ...TReturns,
      (
        | BiatecPoolProviderReturns['registerTrade(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void']
        | undefined
      ),
    ]
  >;

  /**
   * Calls the sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void ABI method.
   *
  * addressExecutiveFee can perfom key registration for this LP pool


  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  sendOnlineKeyRegistration(
    params?: CallParams<
      | BiatecPoolProviderArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
      | BiatecPoolProviderArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
    >
  ): BiatecPoolProviderComposer<
    [
      ...TReturns,
      (
        | BiatecPoolProviderReturns['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
        | undefined
      ),
    ]
  >;

  /**
   * Calls the withdrawExcessAssets(uint64,uint64,uint64)uint64 ABI method.
   *
  * If someone deposits excess assets to this smart contract biatec can use them.


  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  withdrawExcessAssets(
    params?: CallParams<
      | BiatecPoolProviderArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64)uint64']
      | BiatecPoolProviderArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64)uint64']
    >
  ): BiatecPoolProviderComposer<
    [...TReturns, BiatecPoolProviderReturns['withdrawExcessAssets(uint64,uint64,uint64)uint64'] | undefined]
  >;

  /**
   * Gets available update methods
   */
  readonly update: {
    /**
     * Updates an existing instance of the BiatecPoolProvider smart contract using the updateApplication(uint64,byte[])void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    updateApplication(
      params?: CallParams<
        | BiatecPoolProviderArgs['obj']['updateApplication(uint64,byte[])void']
        | BiatecPoolProviderArgs['tuple']['updateApplication(uint64,byte[])void']
      >
    ): BiatecPoolProviderComposer<
      [...TReturns, BiatecPoolProviderReturns['updateApplication(uint64,byte[])void'] | undefined]
    >;
  };

  /**
   * Makes a clear_state call to an existing instance of the BiatecPoolProvider smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): BiatecPoolProviderComposer<[...TReturns, undefined]>;

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): BiatecPoolProviderComposer<TReturns>;
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>;
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<BiatecPoolProviderComposerResults<TReturns> & { simulateResponse: modelsv2.SimulateResponse }>;
  simulate(
    options: SkipSignaturesSimulateOptions
  ): Promise<BiatecPoolProviderComposerResults<TReturns> & { simulateResponse: modelsv2.SimulateResponse }>;
  simulate(
    options: RawSimulateOptions
  ): Promise<BiatecPoolProviderComposerResults<TReturns> & { simulateResponse: modelsv2.SimulateResponse }>;
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<BiatecPoolProviderComposerResults<TReturns>>;
};
export type BiatecPoolProviderComposerResults<TReturns extends [...any[]]> = Expand<
  SendAtomicTransactionComposerResults & {
    returns: TReturns;
  }
>;
