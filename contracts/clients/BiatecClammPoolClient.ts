/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { type AlgorandClient } from '@algorandfoundation/algokit-utils/types/algorand-client'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"BiatecClammPool","desc":"","methods":[{"name":"createApplication","desc":"Initial setup","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"updateApplication","desc":"addressUdpater from global biatec configuration is allowed to update application","args":[{"name":"appBiatecConfigProvider","type":"uint64"},{"name":"newVersion","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["UpdateApplication"]}},{"name":"getCurrentPrice","readonly":true,"args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getPriceDivider","readonly":true,"args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getLPTokenId","readonly":true,"args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"bootstrap","desc":"Only Biatec Pool Provider can deploy and bootsrap this smart contract","args":[{"name":"assetA","type":"uint64","desc":"Asset A ID must be lower then Asset B ID"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"appBiatecConfigProvider","type":"uint64","desc":"Biatec amm provider"},{"name":"appBiatecPoolProvider","type":"uint64","desc":"Pool provider"},{"name":"txSeed","type":"pay","desc":"Seed transaction so that smart contract can opt in to the assets"},{"name":"fee","type":"uint64","desc":"Fee in base level (9 decimals). value 1_000_000_000 = 1 = 100%. 10_000_000 = 1%. 1_000_000 = 0.1%"},{"name":"priceMin","type":"uint64","desc":"Min price range. At this point all assets are in asset A."},{"name":"priceMax","type":"uint64","desc":"Max price range. At this point all assets are in asset B."},{"name":"currentPrice","type":"uint64","desc":"Deployer can specify the current price for easier deployemnt."},{"name":"verificationClass","type":"uint64","desc":"Minimum verification level from the biatec identity. Level 0 means no kyc."}],"returns":{"type":"uint64","desc":"LP token ID"},"actions":{"create":[],"call":["NoOp"]}},{"name":"bootstrapStep2","desc":"When we know the app id of this pool, we can register it properly at the pool provider","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"addLiquidity","desc":"This method adds Asset A and Asset B to the Automated Market Maker Concentrated Liqudidity Pool and send to the liqudidty provider the liqudity token","args":[{"name":"appBiatecConfigProvider","type":"uint64","desc":"Configuration reference"},{"name":"appBiatecIdentityProvider","type":"uint64","desc":"Identity service reference"},{"name":"txAssetADeposit","type":"txn","desc":"Transfer of asset A to the LP pool"},{"name":"txAssetBDeposit","type":"txn","desc":"Transfer of asset B to the LP pool"},{"name":"assetA","type":"uint64","desc":"Asset A"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"assetLp","type":"uint64","desc":"Liquidity pool asset"}],"returns":{"type":"uint64","desc":"LP Token quantity distributed"},"actions":{"create":[],"call":["NoOp"]}},{"name":"removeLiquidity","desc":"This method retrieves from the liquidity provider LP token and returns Asset A and Asset B from the Automated Market Maker Concentrated Liqudidity Pool","args":[{"name":"appBiatecConfigProvider","type":"uint64","desc":"Configuration reference"},{"name":"appBiatecIdentityProvider","type":"uint64","desc":"Identity service reference"},{"name":"txLpXfer","type":"axfer","desc":"Transfer of the LP token"},{"name":"assetA","type":"uint64","desc":"Asset A"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"assetLp","type":"uint64","desc":"LP pool asset"}],"returns":{"type":"uint256","desc":"LP position reduced"},"actions":{"create":[],"call":["NoOp"]}},{"name":"removeLiquidityAdmin","desc":"This method allows biatec admin to reduce the lp position created by lp fees allocation.\n\n\nOnly addressExecutiveFee is allowed to execute this method.","args":[{"name":"appBiatecConfigProvider","type":"uint64","desc":"Biatec config app. Only addressExecutiveFee is allowed to execute this method."},{"name":"assetA","type":"uint64","desc":"Asset A"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"assetLp","type":"uint64"},{"name":"amount","type":"uint256","desc":"Amount to withdraw. If zero, removes all available lps from fees."}],"returns":{"type":"uint256","desc":"LP position reduced"},"actions":{"create":[],"call":["NoOp"]}},{"name":"swap","desc":"Swap Asset A to Asset B or Asset B to Asst A","args":[{"name":"appBiatecConfigProvider","type":"uint64"},{"name":"appBiatecIdentityProvider","type":"uint64"},{"name":"appBiatecPoolProvider","type":"uint64"},{"name":"txSwap","type":"txn","desc":"Transfer of the token to be deposited to the pool. To the owner the other asset will be sent."},{"name":"assetA","type":"uint64","desc":"Asset A"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"minimumToReceive","type":"uint64","desc":"If number greater then zero, the check is performed for the output of the other asset"}],"returns":{"type":"uint256"},"actions":{"create":[],"call":["NoOp"]}},{"name":"distributeExcessAssets","desc":"If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.\nIf someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.\n\n\nThis method is used to distribute amount a and amount b of asset a and asset b to holders as the fee income.\n\n\nOnly addressExecutiveFee is allowed to execute this method.","args":[{"name":"appBiatecConfigProvider","type":"uint64","desc":"Biatec config app. Only addressExecutiveFee is allowed to execute this method."},{"name":"assetA","type":"uint64","desc":"Asset A"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"amountA","type":"uint256","desc":"Amount of asset A to be deposited to the liquidity. In base decimals (9)"},{"name":"amountB","type":"uint256","desc":"Amount of asset B to be deposited to the liquidity. In base decimals (9)"}],"returns":{"type":"uint256"},"actions":{"create":[],"call":["NoOp"]}},{"name":"withdrawExcessAssets","desc":"If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.\nIf someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.\n\n\nThis method is used to distribute amount a and amount b of asset a and asset b to addressExecutiveFee account.\n\n\nOnly addressExecutiveFee is allowed to execute this method.","args":[{"name":"appBiatecConfigProvider","type":"uint64","desc":"Biatec config app. Only addressExecutiveFee is allowed to execute this method."},{"name":"assetA","type":"uint64","desc":"Asset A"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"amountA","type":"uint64","desc":"Amount of asset A to be deposited to the liquidity. In asset a decimals"},{"name":"amountB","type":"uint64","desc":"Amount of asset B to be deposited to the liquidity. In asset b decimals"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"sendOnlineKeyRegistration","desc":"addressExecutiveFee can perfom key registration for this LP pool\n\n\nOnly addressExecutiveFee is allowed to execute this method.","args":[{"name":"appBiatecConfigProvider","type":"uint64"},{"name":"votePk","type":"byte[]"},{"name":"selectionPk","type":"byte[]"},{"name":"stateProofPk","type":"byte[]"},{"name":"voteFirst","type":"uint64"},{"name":"voteLast","type":"uint64"},{"name":"voteKeyDilution","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateDistributedLiquidity","desc":"addressExecutiveFee can perfom key unregistration for this LP pool\n\n\nOnly addressExecutiveFee is allowed to execute this method.","readonly":true,"args":[{"name":"assetLp","type":"uint64"},{"name":"currentDeposit","type":"uint256"}],"returns":{"type":"uint256"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateLiquidityFlatPrice","readonly":true,"args":[{"name":"x","type":"uint256"},{"name":"y","type":"uint256"},{"name":"price","type":"uint256"}],"returns":{"type":"uint256"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateLiquidityD","desc":"Calculates the liquidity  from the x - Asset A position and y - Asset B position\nThis method calculates discriminant - first part of the calculation.\nIt is divided so that the readonly method does not need to charge fees","readonly":true,"args":[{"name":"x","type":"uint256","desc":"Asset A position balanced on the curve"},{"name":"y","type":"uint256","desc":"Asset B position balanced on the curve"},{"name":"priceMin","type":"uint256","desc":"Minimum price variable in base scale decimals (pa)"},{"name":"priceMax","type":"uint256","desc":"Maximum price variable in base scale decimals (pb)"},{"name":"priceMinSqrt","type":"uint256","desc":"sqrt(priceMin) in base scale decimals Variable pas"},{"name":"priceMaxSqrt","type":"uint256","desc":"sqrt(priceMax) in base scale decimals Variable pbs"}],"returns":{"type":"uint256","desc":"Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user."},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateLiquidityWithD","desc":"Calculates the liquidity  from the x - Asset A position and y - Asset B position","readonly":true,"args":[{"name":"x","type":"uint256","desc":"Asset A position balanced on the curve"},{"name":"y","type":"uint256","desc":"Asset B position balanced on the curve"},{"name":"priceMinSqrt","type":"uint256","desc":"sqrt(priceMin) in base scale decimals Variable pas"},{"name":"priceMaxSqrt","type":"uint256","desc":"sqrt(priceMax) in base scale decimals Variable pbs"},{"name":"dSqrt","type":"uint256"}],"returns":{"type":"uint256","desc":"Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user."},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculatePrice","desc":"Get the current price when asset a has x","readonly":true,"args":[{"name":"assetAQuantity","type":"uint256","desc":"x"},{"name":"assetBQuantity","type":"uint256","desc":"y"},{"name":"priceMinSqrt","type":"uint256","desc":"sqrt(priceMin)"},{"name":"priceMaxSqrt","type":"uint256","desc":"sqrt(priceMax)"},{"name":"liquidity","type":"uint256","desc":"Current pool liquidity - L variable"}],"returns":{"type":"uint256","desc":"the price with specified quantity with the price range set in the contract"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateAssetBWithdrawOnAssetADeposit","desc":"Calculates how much asset B will be taken from the smart contract on asset A deposit","readonly":true,"args":[{"name":"inAmount","type":"uint256","desc":"Asset A amount in Base decimal representation.. If asset has 6 decimals, 1 is represented as 1000000000"},{"name":"assetABalance","type":"uint256","desc":"Asset A balance. Variable ab, in base scale"},{"name":"assetBBalance","type":"uint256","desc":"Asset B balance. Variable bb, in base scale"},{"name":"priceMinSqrt","type":"uint256","desc":"sqrt(Min price). Variable pMinS, in base scale"},{"name":"priceMaxSqrt","type":"uint256","desc":"sqrt(Max price). Variable pMaxS, in base scale"},{"name":"liqudity","type":"uint256","desc":"sqrt(Max price). Variable L, in base scale"}],"returns":{"type":"uint256","desc":"Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateAssetAWithdrawOnAssetBDeposit","desc":"Calculates how much asset A will be taken from the smart contract on asset B deposit","readonly":true,"args":[{"name":"inAmount","type":"uint256","desc":"Asset B amount in Base decimal representation.. If asset has 6 decimals, 1 is represented as 1000000000"},{"name":"assetABalance","type":"uint256","desc":"Asset A balance. Variable ab, in base scale"},{"name":"assetBBalance","type":"uint256","desc":"Asset B balance. Variable bb, in base scale"},{"name":"priceMinSqrt","type":"uint256","desc":"sqrt(Min price). Variable pMinS, in base scale"},{"name":"priceMaxSqrt","type":"uint256","desc":"sqrt(Max price). Variable pMaxS, in base scale"},{"name":"liqudity","type":"uint256","desc":"sqrt(Max price). Variable L, in base scale"}],"returns":{"type":"uint256","desc":"Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateAssetAWithdrawOnLpDeposit","desc":"Calculates how much asset A will be taken from the smart contract on LP asset deposit","readonly":true,"args":[{"name":"inAmount","type":"uint256","desc":"LP Asset amount in Base decimal representation.."},{"name":"assetABalance","type":"uint256","desc":"Asset A balance. Variable ab, in base scale"},{"name":"liqudity","type":"uint256","desc":"Current liqudity. Variable L, in base scale"}],"returns":{"type":"uint256","desc":"Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateAssetBDepositOnAssetADeposit","desc":"Calculates how much asset B should be deposited when user deposit asset a and b.\n\n\nOn deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user","readonly":true,"args":[{"name":"inAmountA","type":"uint256","desc":"Asset A amount in Base decimal representation"},{"name":"inAmountB","type":"uint256","desc":"Asset B amount in Base decimal representation"},{"name":"assetABalance","type":"uint256","desc":"Asset A balance. Variable ab, in base scale"},{"name":"assetBBalance","type":"uint256","desc":"Asset B balance. Variable bb, in base scale"}],"returns":{"type":"uint256","desc":"Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateAssetADepositOnAssetBDeposit","desc":"Calculates how much asset A should be deposited when user deposit asset a and b\n\n\nOn deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user","readonly":true,"args":[{"name":"inAmountA","type":"uint256","desc":"Asset A amount in Base decimal representation"},{"name":"inAmountB","type":"uint256","desc":"Asset B amount in Base decimal representation"},{"name":"assetABalance","type":"uint256","desc":"Asset A balance. Variable ab, in base scale"},{"name":"assetBBalance","type":"uint256","desc":"Asset B balance. Variable bb, in base scale"}],"returns":{"type":"uint256","desc":"Amount of asset A to be deposited. The result is in Base decimals (9)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"status","readonly":true,"args":[{"name":"appBiatecConfigProvider","type":"uint64"},{"name":"assetA","type":"uint64"},{"name":"assetB","type":"uint64"},{"name":"assetLp","type":"uint64"}],"returns":{"type":"(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)","struct":"AmmStatus"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{"AmmStatus":[{"name":"scale","type":"uint64"},{"name":"assetABalance","type":"uint64"},{"name":"assetBBalance","type":"uint64"},{"name":"realABalance","type":"uint64"},{"name":"realBBalance","type":"uint64"},{"name":"priceMinSqrt","type":"uint64"},{"name":"priceMaxSqrt","type":"uint64"},{"name":"currentLiqudity","type":"uint64"},{"name":"releasedLiqudity","type":"uint64"},{"name":"liqudityUsersFromFees","type":"uint64"},{"name":"liqudityBiatecFromFees","type":"uint64"},{"name":"assetA","type":"uint64"},{"name":"assetB","type":"uint64"},{"name":"poolToken","type":"uint64"},{"name":"price","type":"uint64"},{"name":"fee","type":"uint64"},{"name":"biatecFee","type":"uint64"},{"name":"verificationClass","type":"uint64"}]},"state":{"schema":{"global":{"bytes":11,"ints":10},"local":{"bytes":0,"ints":0}},"keys":{"global":{"setupFinished":{"key":"cw==","keyType":"AVMBytes","valueType":"bool"},"assetA":{"key":"YQ==","keyType":"AVMBytes","valueType":"uint64"},"assetADecimals":{"key":"YWQ=","keyType":"AVMBytes","valueType":"uint256"},"assetB":{"key":"Yg==","keyType":"AVMBytes","valueType":"uint64"},"assetBDecimals":{"key":"YmQ=","keyType":"AVMBytes","valueType":"uint256"},"assetLp":{"key":"bHA=","keyType":"AVMBytes","valueType":"uint64"},"assetABalance":{"key":"YWI=","keyType":"AVMBytes","valueType":"uint256"},"assetBBalance":{"key":"YmI=","keyType":"AVMBytes","valueType":"uint256"},"priceMin":{"key":"cE1pbg==","keyType":"AVMBytes","valueType":"uint64"},"priceMax":{"key":"cE1heA==","keyType":"AVMBytes","valueType":"uint64"},"priceMinSqrt":{"key":"cE1pblM=","keyType":"AVMBytes","valueType":"uint256"},"priceMaxSqrt":{"key":"cE1heFM=","keyType":"AVMBytes","valueType":"uint256"},"Liqudity":{"key":"TA==","keyType":"AVMBytes","valueType":"uint256"},"LiqudityUsersFromFees":{"key":"THU=","keyType":"AVMBytes","valueType":"uint256"},"LiqudityBiatecFromFees":{"key":"TGI=","keyType":"AVMBytes","valueType":"uint256"},"fee":{"key":"Zg==","keyType":"AVMBytes","valueType":"uint64"},"currentPrice":{"key":"cHJpY2U=","keyType":"AVMBytes","valueType":"uint64"},"scale":{"key":"c2NhbGU=","keyType":"AVMBytes","valueType":"uint64"},"appBiatecConfigProvider":{"key":"YmM=","keyType":"AVMBytes","valueType":"uint64"},"verificationClass":{"key":"Yw==","keyType":"AVMBytes","valueType":"uint64"},"version":{"key":"c2N2ZXI=","keyType":"AVMBytes","valueType":"AVMBytes"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[0]},{"teal":2,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]},{"teal":3,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390]},{"teal":15,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[391,392]},{"teal":16,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[393]},{"teal":17,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[394,395]},{"teal":18,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[396]},{"teal":19,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[397,398]},{"teal":20,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[399]},{"teal":21,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425]},{"teal":25,"source":"contracts\\BiatecClammPool.algo.ts:36","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[426]},{"teal":30,"source":"contracts\\BiatecClammPool.algo.ts:114","pc":[427,428,429]},{"teal":31,"source":"contracts\\BiatecClammPool.algo.ts:114","pc":[430]},{"teal":32,"source":"contracts\\BiatecClammPool.algo.ts:114","pc":[431]},{"teal":38,"source":"contracts\\BiatecClammPool.algo.ts:114","pc":[432,433,434]},{"teal":42,"source":"contracts\\BiatecClammPool.algo.ts:115","pc":[435,436]},{"teal":43,"source":"contracts\\BiatecClammPool.algo.ts:115","pc":[437]},{"teal":47,"source":"contracts\\BiatecClammPool.algo.ts:116","pc":[438,439]},{"teal":48,"source":"contracts\\BiatecClammPool.algo.ts:116","pc":[440,441,442,443,444,445]},{"teal":49,"source":"contracts\\BiatecClammPool.algo.ts:116","pc":[446]},{"teal":53,"source":"contracts\\BiatecClammPool.algo.ts:117","pc":[447,448]},{"teal":54,"source":"contracts\\BiatecClammPool.algo.ts:117","pc":[449]},{"teal":55,"source":"contracts\\BiatecClammPool.algo.ts:117","pc":[450]},{"teal":59,"source":"contracts\\BiatecClammPool.algo.ts:118","pc":[451,452]},{"teal":60,"source":"contracts\\BiatecClammPool.algo.ts:118","pc":[453,454]},{"teal":61,"source":"contracts\\BiatecClammPool.algo.ts:118","pc":[455]},{"teal":65,"source":"contracts\\BiatecClammPool.algo.ts:119","pc":[456,457]},{"teal":66,"source":"contracts\\BiatecClammPool.algo.ts:119","pc":[458,459]},{"teal":67,"source":"contracts\\BiatecClammPool.algo.ts:119","pc":[460]},{"teal":71,"source":"contracts\\BiatecClammPool.algo.ts:120","pc":[461,462]},{"teal":72,"source":"contracts\\BiatecClammPool.algo.ts:120","pc":[463,464]},{"teal":73,"source":"contracts\\BiatecClammPool.algo.ts:120","pc":[465]},{"teal":77,"source":"contracts\\BiatecClammPool.algo.ts:121","pc":[466,467]},{"teal":78,"source":"contracts\\BiatecClammPool.algo.ts:121","pc":[468]},{"teal":79,"source":"contracts\\BiatecClammPool.algo.ts:121","pc":[469]},{"teal":83,"source":"contracts\\BiatecClammPool.algo.ts:122","pc":[470,471]},{"teal":84,"source":"contracts\\BiatecClammPool.algo.ts:122","pc":[472,473]},{"teal":85,"source":"contracts\\BiatecClammPool.algo.ts:122","pc":[474]},{"teal":89,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[475,476]},{"teal":90,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[477]},{"teal":91,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[478,479]},{"teal":92,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[480]},{"teal":93,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[481,482]},{"teal":94,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[483]},{"teal":95,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[484]},{"teal":96,"source":"contracts\\BiatecClammPool.algo.ts:114","pc":[485]},{"teal":101,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[486,487,488]},{"teal":102,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[489,490,491]},{"teal":105,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[492,493,494]},{"teal":106,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[495]},{"teal":109,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[496,497,498]},{"teal":110,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[499]},{"teal":111,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[500]},{"teal":117,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[501,502,503]},{"teal":120,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[504]},{"teal":124,"source":"contracts\\BiatecClammPool.algo.ts:130","pc":[505,506]},{"teal":125,"source":"contracts\\BiatecClammPool.algo.ts:130","pc":[507,508]},{"teal":126,"source":"contracts\\BiatecClammPool.algo.ts:130","pc":[509]},{"teal":127,"source":"contracts\\BiatecClammPool.algo.ts:130","pc":[510]},{"teal":130,"source":"contracts\\BiatecClammPool.algo.ts:130","errorMessage":"E_CONFIG","pc":[511]},{"teal":134,"source":"contracts\\BiatecClammPool.algo.ts:131","pc":[512,513]},{"teal":135,"source":"contracts\\BiatecClammPool.algo.ts:131","pc":[514,515,516]},{"teal":136,"source":"contracts\\BiatecClammPool.algo.ts:131","pc":[517]},{"teal":139,"source":"contracts\\BiatecClammPool.algo.ts:131","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('u')","pc":[518]},{"teal":140,"source":"contracts\\BiatecClammPool.algo.ts:131","pc":[519,520]},{"teal":144,"source":"contracts\\BiatecClammPool.algo.ts:132","pc":[521,522]},{"teal":145,"source":"contracts\\BiatecClammPool.algo.ts:132","pc":[523,524]},{"teal":146,"source":"contracts\\BiatecClammPool.algo.ts:132","pc":[525]},{"teal":149,"source":"contracts\\BiatecClammPool.algo.ts:132","errorMessage":"E_UPDATER","pc":[526]},{"teal":153,"source":"contracts\\BiatecClammPool.algo.ts:133","pc":[527,528]},{"teal":154,"source":"contracts\\BiatecClammPool.algo.ts:133","pc":[529,530]},{"teal":155,"source":"contracts\\BiatecClammPool.algo.ts:133","pc":[531]},{"teal":156,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[532]},{"teal":161,"source":"contracts\\BiatecClammPool.algo.ts:136","pc":[533,534]},{"teal":164,"source":"contracts\\BiatecClammPool.algo.ts:136","pc":[535,536,537]},{"teal":165,"source":"contracts\\BiatecClammPool.algo.ts:136","pc":[538]},{"teal":166,"source":"contracts\\BiatecClammPool.algo.ts:136","pc":[539]},{"teal":167,"source":"contracts\\BiatecClammPool.algo.ts:136","pc":[540]},{"teal":168,"source":"contracts\\BiatecClammPool.algo.ts:136","pc":[541]},{"teal":169,"source":"contracts\\BiatecClammPool.algo.ts:136","pc":[542]},{"teal":173,"source":"contracts\\BiatecClammPool.algo.ts:136","pc":[543,544,545]},{"teal":177,"source":"contracts\\BiatecClammPool.algo.ts:138","pc":[546,547]},{"teal":178,"source":"contracts\\BiatecClammPool.algo.ts:138","pc":[548]},{"teal":179,"source":"contracts\\BiatecClammPool.algo.ts:136","pc":[549]},{"teal":184,"source":"contracts\\BiatecClammPool.algo.ts:141","pc":[550,551]},{"teal":187,"source":"contracts\\BiatecClammPool.algo.ts:141","pc":[552,553,554]},{"teal":188,"source":"contracts\\BiatecClammPool.algo.ts:141","pc":[555]},{"teal":189,"source":"contracts\\BiatecClammPool.algo.ts:141","pc":[556]},{"teal":190,"source":"contracts\\BiatecClammPool.algo.ts:141","pc":[557]},{"teal":191,"source":"contracts\\BiatecClammPool.algo.ts:141","pc":[558]},{"teal":192,"source":"contracts\\BiatecClammPool.algo.ts:141","pc":[559]},{"teal":196,"source":"contracts\\BiatecClammPool.algo.ts:141","pc":[560,561,562]},{"teal":200,"source":"contracts\\BiatecClammPool.algo.ts:143","pc":[563,564]},{"teal":201,"source":"contracts\\BiatecClammPool.algo.ts:143","pc":[565]},{"teal":202,"source":"contracts\\BiatecClammPool.algo.ts:141","pc":[566]},{"teal":207,"source":"contracts\\BiatecClammPool.algo.ts:146","pc":[567,568]},{"teal":210,"source":"contracts\\BiatecClammPool.algo.ts:146","pc":[569,570,571]},{"teal":211,"source":"contracts\\BiatecClammPool.algo.ts:146","pc":[572]},{"teal":212,"source":"contracts\\BiatecClammPool.algo.ts:146","pc":[573]},{"teal":213,"source":"contracts\\BiatecClammPool.algo.ts:146","pc":[574]},{"teal":214,"source":"contracts\\BiatecClammPool.algo.ts:146","pc":[575]},{"teal":215,"source":"contracts\\BiatecClammPool.algo.ts:146","pc":[576]},{"teal":219,"source":"contracts\\BiatecClammPool.algo.ts:146","pc":[577,578,579]},{"teal":223,"source":"contracts\\BiatecClammPool.algo.ts:148","pc":[580,581]},{"teal":224,"source":"contracts\\BiatecClammPool.algo.ts:148","pc":[582]},{"teal":225,"source":"contracts\\BiatecClammPool.algo.ts:146","pc":[583]},{"teal":230,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[584,585]},{"teal":233,"source":"contracts\\BiatecClammPool.algo.ts:175","pc":[586,587,588]},{"teal":234,"source":"contracts\\BiatecClammPool.algo.ts:175","pc":[589]},{"teal":237,"source":"contracts\\BiatecClammPool.algo.ts:174","pc":[590,591,592]},{"teal":238,"source":"contracts\\BiatecClammPool.algo.ts:174","pc":[593]},{"teal":241,"source":"contracts\\BiatecClammPool.algo.ts:173","pc":[594,595,596]},{"teal":242,"source":"contracts\\BiatecClammPool.algo.ts:173","pc":[597]},{"teal":245,"source":"contracts\\BiatecClammPool.algo.ts:172","pc":[598,599,600]},{"teal":246,"source":"contracts\\BiatecClammPool.algo.ts:172","pc":[601]},{"teal":249,"source":"contracts\\BiatecClammPool.algo.ts:171","pc":[602,603,604]},{"teal":250,"source":"contracts\\BiatecClammPool.algo.ts:171","pc":[605]},{"teal":253,"source":"contracts\\BiatecClammPool.algo.ts:170","pc":[606,607]},{"teal":254,"source":"contracts\\BiatecClammPool.algo.ts:170","pc":[608]},{"teal":255,"source":"contracts\\BiatecClammPool.algo.ts:170","pc":[609]},{"teal":256,"source":"contracts\\BiatecClammPool.algo.ts:170","pc":[610]},{"teal":257,"source":"contracts\\BiatecClammPool.algo.ts:170","pc":[611,612]},{"teal":258,"source":"contracts\\BiatecClammPool.algo.ts:170","pc":[613]},{"teal":259,"source":"contracts\\BiatecClammPool.algo.ts:170","pc":[614]},{"teal":262,"source":"contracts\\BiatecClammPool.algo.ts:170","errorMessage":"argument 5 (txSeed) for bootstrap must be a pay transaction","pc":[615]},{"teal":265,"source":"contracts\\BiatecClammPool.algo.ts:169","pc":[616,617,618]},{"teal":266,"source":"contracts\\BiatecClammPool.algo.ts:169","pc":[619]},{"teal":269,"source":"contracts\\BiatecClammPool.algo.ts:168","pc":[620,621,622]},{"teal":270,"source":"contracts\\BiatecClammPool.algo.ts:168","pc":[623]},{"teal":273,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[624,625,626]},{"teal":274,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[627]},{"teal":277,"source":"contracts\\BiatecClammPool.algo.ts:166","pc":[628,629,630]},{"teal":278,"source":"contracts\\BiatecClammPool.algo.ts:166","pc":[631]},{"teal":281,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[632,633,634]},{"teal":282,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[635]},{"teal":283,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[636]},{"teal":284,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[637]},{"teal":285,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[638]},{"teal":286,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[639]},{"teal":303,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[640,641,642]},{"teal":306,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[643]},{"teal":307,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[644,645]},{"teal":311,"source":"contracts\\BiatecClammPool.algo.ts:177","pc":[646,647]},{"teal":312,"source":"contracts\\BiatecClammPool.algo.ts:177","pc":[648,649]},{"teal":313,"source":"contracts\\BiatecClammPool.algo.ts:177","pc":[650]},{"teal":316,"source":"contracts\\BiatecClammPool.algo.ts:177","errorMessage":"Only the pool provider can init this contract","pc":[651]},{"teal":321,"source":"contracts\\BiatecClammPool.algo.ts:178","pc":[652,653]},{"teal":322,"source":"contracts\\BiatecClammPool.algo.ts:178","pc":[654,655]},{"teal":323,"source":"contracts\\BiatecClammPool.algo.ts:178","pc":[656,657]},{"teal":324,"source":"contracts\\BiatecClammPool.algo.ts:178","pc":[658]},{"teal":327,"source":"contracts\\BiatecClammPool.algo.ts:178","errorMessage":"transaction verification failed: {\"txn\":\"txSeed\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[659]},{"teal":330,"source":"contracts\\BiatecClammPool.algo.ts:178","pc":[660,661]},{"teal":331,"source":"contracts\\BiatecClammPool.algo.ts:178","pc":[662,663]},{"teal":332,"source":"contracts\\BiatecClammPool.algo.ts:178","pc":[664,665,666,667]},{"teal":333,"source":"contracts\\BiatecClammPool.algo.ts:178","pc":[668]},{"teal":336,"source":"contracts\\BiatecClammPool.algo.ts:178","errorMessage":"transaction verification failed: {\"txn\":\"txSeed\",\"field\":\"amount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=400_000\"}","pc":[669]},{"teal":340,"source":"contracts\\BiatecClammPool.algo.ts:179","pc":[670,671]},{"teal":341,"source":"contracts\\BiatecClammPool.algo.ts:179","pc":[672]},{"teal":342,"source":"contracts\\BiatecClammPool.algo.ts:179","pc":[673]},{"teal":343,"source":"contracts\\BiatecClammPool.algo.ts:179","pc":[674]},{"teal":346,"source":"contracts\\BiatecClammPool.algo.ts:179","errorMessage":"E_PRICE_MAX","pc":[675]},{"teal":350,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[676,677]},{"teal":351,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[678,679,680]},{"teal":352,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[681,682]},{"teal":353,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[683]},{"teal":354,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[684]},{"teal":357,"source":"contracts\\BiatecClammPool.algo.ts:180","errorMessage":"E_SENDER","pc":[685]},{"teal":361,"source":"contracts\\BiatecClammPool.algo.ts:181","pc":[686,687]},{"teal":362,"source":"contracts\\BiatecClammPool.algo.ts:181","pc":[688]},{"teal":363,"source":"contracts\\BiatecClammPool.algo.ts:181","pc":[689]},{"teal":366,"source":"contracts\\BiatecClammPool.algo.ts:181","errorMessage":"E_PRICE","pc":[690]},{"teal":370,"source":"contracts\\BiatecClammPool.algo.ts:183","pc":[691,692]},{"teal":371,"source":"contracts\\BiatecClammPool.algo.ts:183","pc":[693,694]},{"teal":372,"source":"contracts\\BiatecClammPool.algo.ts:183","pc":[695]},{"teal":375,"source":"contracts\\BiatecClammPool.algo.ts:183","errorMessage":"Asset A must not be asset B","pc":[696]},{"teal":379,"source":"contracts\\BiatecClammPool.algo.ts:184","pc":[697,698]},{"teal":380,"source":"contracts\\BiatecClammPool.algo.ts:184","pc":[699,700,701,702,703]},{"teal":381,"source":"contracts\\BiatecClammPool.algo.ts:184","pc":[704]},{"teal":382,"source":"contracts\\BiatecClammPool.algo.ts:184","pc":[705]},{"teal":386,"source":"contracts\\BiatecClammPool.algo.ts:186","pc":[706,707,708]},{"teal":387,"source":"contracts\\BiatecClammPool.algo.ts:186","pc":[709,710]},{"teal":388,"source":"contracts\\BiatecClammPool.algo.ts:186","pc":[711]},{"teal":389,"source":"contracts\\BiatecClammPool.algo.ts:186","pc":[712]},{"teal":390,"source":"contracts\\BiatecClammPool.algo.ts:186","pc":[713]},{"teal":391,"source":"contracts\\BiatecClammPool.algo.ts:186","pc":[714]},{"teal":392,"source":"contracts\\BiatecClammPool.algo.ts:186","pc":[715]},{"teal":397,"source":"contracts\\BiatecClammPool.algo.ts:187","pc":[716,717]},{"teal":398,"source":"contracts\\BiatecClammPool.algo.ts:187","pc":[718]},{"teal":399,"source":"contracts\\BiatecClammPool.algo.ts:187","pc":[719]},{"teal":400,"source":"contracts\\BiatecClammPool.algo.ts:187","pc":[720,721,722]},{"teal":405,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[723,724]},{"teal":406,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[725,726]},{"teal":407,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[727]},{"teal":408,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[728,729]},{"teal":409,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[730]},{"teal":410,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[731]},{"teal":416,"source":"contracts\\BiatecClammPool.algo.ts:190","pc":[732,733]},{"teal":417,"source":"contracts\\BiatecClammPool.algo.ts:190","pc":[734]},{"teal":418,"source":"contracts\\BiatecClammPool.algo.ts:190","pc":[735]},{"teal":419,"source":"contracts\\BiatecClammPool.algo.ts:190","pc":[736,737,738]},{"teal":424,"source":"contracts\\BiatecClammPool.algo.ts:191","pc":[739,740]},{"teal":425,"source":"contracts\\BiatecClammPool.algo.ts:191","pc":[741,742]},{"teal":426,"source":"contracts\\BiatecClammPool.algo.ts:191","pc":[743]},{"teal":427,"source":"contracts\\BiatecClammPool.algo.ts:191","pc":[744,745]},{"teal":428,"source":"contracts\\BiatecClammPool.algo.ts:191","pc":[746]},{"teal":429,"source":"contracts\\BiatecClammPool.algo.ts:191","pc":[747]},{"teal":434,"source":"contracts\\BiatecClammPool.algo.ts:194","pc":[748,749]},{"teal":435,"source":"contracts\\BiatecClammPool.algo.ts:194","pc":[750]},{"teal":436,"source":"contracts\\BiatecClammPool.algo.ts:194","pc":[751]},{"teal":437,"source":"contracts\\BiatecClammPool.algo.ts:194","pc":[752]},{"teal":440,"source":"contracts\\BiatecClammPool.algo.ts:194","errorMessage":"E_FEE","pc":[753]},{"teal":444,"source":"contracts\\BiatecClammPool.algo.ts:196","pc":[754,755]},{"teal":445,"source":"contracts\\BiatecClammPool.algo.ts:196","pc":[756,757]},{"teal":446,"source":"contracts\\BiatecClammPool.algo.ts:196","pc":[758]},{"teal":449,"source":"contracts\\BiatecClammPool.algo.ts:196","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('p')","pc":[759]},{"teal":450,"source":"contracts\\BiatecClammPool.algo.ts:196","pc":[760,761]},{"teal":457,"source":"contracts\\BiatecClammPool.algo.ts:198","pc":[762,763]},{"teal":458,"source":"contracts\\BiatecClammPool.algo.ts:198","pc":[764,765]},{"teal":459,"source":"contracts\\BiatecClammPool.algo.ts:198","pc":[766]},{"teal":462,"source":"contracts\\BiatecClammPool.algo.ts:197","errorMessage":"E_CONFIG","pc":[767]},{"teal":466,"source":"contracts\\BiatecClammPool.algo.ts:201","pc":[768,769]},{"teal":467,"source":"contracts\\BiatecClammPool.algo.ts:201","pc":[770,771]},{"teal":468,"source":"contracts\\BiatecClammPool.algo.ts:201","pc":[772]},{"teal":471,"source":"contracts\\BiatecClammPool.algo.ts:201","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('s')","pc":[773]},{"teal":472,"source":"contracts\\BiatecClammPool.algo.ts:201","pc":[774,775]},{"teal":476,"source":"contracts\\BiatecClammPool.algo.ts:202","pc":[776,777]},{"teal":477,"source":"contracts\\BiatecClammPool.algo.ts:202","pc":[778]},{"teal":478,"source":"contracts\\BiatecClammPool.algo.ts:202","pc":[779]},{"teal":481,"source":"contracts\\BiatecClammPool.algo.ts:202","errorMessage":"E_PAUSED","pc":[780]},{"teal":485,"source":"contracts\\BiatecClammPool.algo.ts:204","pc":[781,782]},{"teal":486,"source":"contracts\\BiatecClammPool.algo.ts:204","pc":[783,784]},{"teal":487,"source":"contracts\\BiatecClammPool.algo.ts:204","pc":[785]},{"teal":491,"source":"contracts\\BiatecClammPool.algo.ts:206","pc":[786,787]},{"teal":492,"source":"contracts\\BiatecClammPool.algo.ts:206","pc":[788,789]},{"teal":493,"source":"contracts\\BiatecClammPool.algo.ts:206","pc":[790]},{"teal":497,"source":"contracts\\BiatecClammPool.algo.ts:207","pc":[791,792]},{"teal":498,"source":"contracts\\BiatecClammPool.algo.ts:207","pc":[793,794]},{"teal":499,"source":"contracts\\BiatecClammPool.algo.ts:207","pc":[795]},{"teal":503,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[796,797]},{"teal":504,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[798,799]},{"teal":505,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[800]},{"teal":506,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[801]},{"teal":507,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[802]},{"teal":508,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[803]},{"teal":509,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[804]},{"teal":510,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[805]},{"teal":511,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[806]},{"teal":512,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[807]},{"teal":515,"source":"contracts\\BiatecClammPool.algo.ts:208","errorMessage":"sqrt((priceMin as uint256) * s) overflowed 256 bits","pc":[808]},{"teal":516,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[809]},{"teal":517,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[810]},{"teal":518,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[811]},{"teal":519,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[812]},{"teal":520,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[813]},{"teal":521,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[814]},{"teal":522,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[815]},{"teal":523,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[816]},{"teal":524,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[817]},{"teal":525,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[818]},{"teal":529,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[819,820]},{"teal":530,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[821,822]},{"teal":531,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[823]},{"teal":532,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[824]},{"teal":533,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[825]},{"teal":534,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[826]},{"teal":535,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[827]},{"teal":536,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[828]},{"teal":537,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[829]},{"teal":538,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[830]},{"teal":541,"source":"contracts\\BiatecClammPool.algo.ts:209","errorMessage":"sqrt((priceMax as uint256) * s) overflowed 256 bits","pc":[831]},{"teal":542,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[832]},{"teal":543,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[833]},{"teal":544,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[834]},{"teal":545,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[835]},{"teal":546,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[836]},{"teal":547,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[837]},{"teal":548,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[838]},{"teal":549,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[839]},{"teal":550,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[840]},{"teal":551,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[841]},{"teal":555,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[842]},{"teal":556,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[843,844]},{"teal":557,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[845]},{"teal":561,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[846,847]},{"teal":562,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[848,849]},{"teal":563,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[850]},{"teal":567,"source":"contracts\\BiatecClammPool.algo.ts:212","pc":[851,852]},{"teal":568,"source":"contracts\\BiatecClammPool.algo.ts:212","pc":[853,854]},{"teal":569,"source":"contracts\\BiatecClammPool.algo.ts:212","pc":[855]},{"teal":573,"source":"contracts\\BiatecClammPool.algo.ts:214","pc":[856,857]},{"teal":574,"source":"contracts\\BiatecClammPool.algo.ts:214","pc":[858,859]},{"teal":575,"source":"contracts\\BiatecClammPool.algo.ts:214","pc":[860]},{"teal":579,"source":"contracts\\BiatecClammPool.algo.ts:215","pc":[861,862]},{"teal":580,"source":"contracts\\BiatecClammPool.algo.ts:215","pc":[863,864]},{"teal":581,"source":"contracts\\BiatecClammPool.algo.ts:215","pc":[865]},{"teal":585,"source":"contracts\\BiatecClammPool.algo.ts:216","pc":[866,867]},{"teal":586,"source":"contracts\\BiatecClammPool.algo.ts:216","pc":[868,869]},{"teal":587,"source":"contracts\\BiatecClammPool.algo.ts:216","pc":[870,871]},{"teal":588,"source":"contracts\\BiatecClammPool.algo.ts:216","pc":[872,873,874]},{"teal":589,"source":"contracts\\BiatecClammPool.algo.ts:216","pc":[875]},{"teal":593,"source":"contracts\\BiatecClammPool.algo.ts:217","pc":[876,877]},{"teal":594,"source":"contracts\\BiatecClammPool.algo.ts:217","pc":[878,879]},{"teal":595,"source":"contracts\\BiatecClammPool.algo.ts:217","pc":[880]},{"teal":599,"source":"contracts\\BiatecClammPool.algo.ts:218","pc":[881,882]},{"teal":600,"source":"contracts\\BiatecClammPool.algo.ts:218","pc":[883,884,885]},{"teal":604,"source":"contracts\\BiatecClammPool.algo.ts:219","pc":[886,887]},{"teal":605,"source":"contracts\\BiatecClammPool.algo.ts:219","pc":[888,889,890]},{"teal":609,"source":"contracts\\BiatecClammPool.algo.ts:220","pc":[891,892]},{"teal":610,"source":"contracts\\BiatecClammPool.algo.ts:220","pc":[893,894]},{"teal":611,"source":"contracts\\BiatecClammPool.algo.ts:220","pc":[895]},{"teal":615,"source":"contracts\\BiatecClammPool.algo.ts:222","pc":[896,897]},{"teal":616,"source":"contracts\\BiatecClammPool.algo.ts:222","pc":[898,899]},{"teal":621,"source":"contracts\\BiatecClammPool.algo.ts:223","pc":[900,901]},{"teal":622,"source":"contracts\\BiatecClammPool.algo.ts:223","pc":[902]},{"teal":623,"source":"contracts\\BiatecClammPool.algo.ts:223","pc":[903]},{"teal":624,"source":"contracts\\BiatecClammPool.algo.ts:223","pc":[904,905,906]},{"teal":629,"source":"contracts\\BiatecClammPool.algo.ts:223","pc":[907,908]},{"teal":630,"source":"contracts\\BiatecClammPool.algo.ts:223","pc":[909,910]},{"teal":631,"source":"contracts\\BiatecClammPool.algo.ts:223","pc":[911]},{"teal":632,"source":"contracts\\BiatecClammPool.algo.ts:223","pc":[912,913]},{"teal":637,"source":"contracts\\BiatecClammPool.algo.ts:224","pc":[914,915]},{"teal":638,"source":"contracts\\BiatecClammPool.algo.ts:224","pc":[916,917]},{"teal":643,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[918,919]},{"teal":644,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[920]},{"teal":645,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[921]},{"teal":646,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[922,923,924]},{"teal":651,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[925,926]},{"teal":652,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[927,928]},{"teal":653,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[929]},{"teal":654,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[930,931]},{"teal":659,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[932,933]},{"teal":660,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[934,935]},{"teal":661,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[936,937]},{"teal":662,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[938]},{"teal":663,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[939]},{"teal":664,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[940]},{"teal":665,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[941,942]},{"teal":669,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[943,944]},{"teal":670,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[945,946]},{"teal":671,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[947,948]},{"teal":672,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[949]},{"teal":673,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[950]},{"teal":674,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[951]},{"teal":675,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[952,953]},{"teal":679,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[954,955]},{"teal":680,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[956,957]},{"teal":681,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[958]},{"teal":682,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[959]},{"teal":683,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[960]},{"teal":684,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[961]},{"teal":687,"source":"contracts\\BiatecClammPool.algo.ts:230","errorMessage":"assetADelicmalScale2Scale overflowed 256 bits","pc":[962]},{"teal":688,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[963]},{"teal":689,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[964]},{"teal":690,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[965]},{"teal":691,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[966]},{"teal":692,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[967]},{"teal":693,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[968]},{"teal":694,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[969]},{"teal":695,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[970]},{"teal":696,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[971]},{"teal":697,"source":"contracts\\BiatecClammPool.algo.ts:230","pc":[972]},{"teal":701,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[973,974]},{"teal":702,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[975,976]},{"teal":703,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[977]},{"teal":704,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[978]},{"teal":705,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[979]},{"teal":706,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[980]},{"teal":709,"source":"contracts\\BiatecClammPool.algo.ts:231","errorMessage":"assetBDelicmalScale2Scale overflowed 256 bits","pc":[981]},{"teal":710,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[982]},{"teal":711,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[983]},{"teal":712,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[984]},{"teal":713,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[985]},{"teal":714,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[986]},{"teal":715,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[987]},{"teal":716,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[988]},{"teal":717,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[989]},{"teal":718,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[990]},{"teal":719,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[991]},{"teal":723,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[992,993]},{"teal":724,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[994]},{"teal":727,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[995,996]},{"teal":730,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[997,998]},{"teal":731,"source":"contracts\\BiatecClammPool.algo.ts:165","pc":[999]},{"teal":736,"source":"contracts\\BiatecClammPool.algo.ts:237","pc":[1000,1001,1002]},{"teal":737,"source":"contracts\\BiatecClammPool.algo.ts:237","pc":[1003]},{"teal":738,"source":"contracts\\BiatecClammPool.algo.ts:237","pc":[1004]},{"teal":744,"source":"contracts\\BiatecClammPool.algo.ts:237","pc":[1005,1006,1007]},{"teal":747,"source":"contracts\\BiatecClammPool.algo.ts:237","pc":[1008]},{"teal":748,"source":"contracts\\BiatecClammPool.algo.ts:237","pc":[1009]},{"teal":752,"source":"contracts\\BiatecClammPool.algo.ts:238","pc":[1010,1011]},{"teal":753,"source":"contracts\\BiatecClammPool.algo.ts:238","pc":[1012]},{"teal":754,"source":"contracts\\BiatecClammPool.algo.ts:238","pc":[1013]},{"teal":755,"source":"contracts\\BiatecClammPool.algo.ts:238","pc":[1014]},{"teal":756,"source":"contracts\\BiatecClammPool.algo.ts:238","pc":[1015]},{"teal":757,"source":"contracts\\BiatecClammPool.algo.ts:238","pc":[1016]},{"teal":761,"source":"contracts\\BiatecClammPool.algo.ts:239","pc":[1017,1018]},{"teal":762,"source":"contracts\\BiatecClammPool.algo.ts:239","pc":[1019]},{"teal":763,"source":"contracts\\BiatecClammPool.algo.ts:239","pc":[1020,1021]},{"teal":767,"source":"contracts\\BiatecClammPool.algo.ts:240","pc":[1022,1023]},{"teal":768,"source":"contracts\\BiatecClammPool.algo.ts:240","pc":[1024,1025]},{"teal":769,"source":"contracts\\BiatecClammPool.algo.ts:240","pc":[1026]},{"teal":772,"source":"contracts\\BiatecClammPool.algo.ts:240","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('p')","pc":[1027]},{"teal":773,"source":"contracts\\BiatecClammPool.algo.ts:240","pc":[1028,1029]},{"teal":782,"source":"contracts\\BiatecClammPool.algo.ts:241","pc":[1030]},{"teal":783,"source":"contracts\\BiatecClammPool.algo.ts:241","pc":[1031,1032]},{"teal":784,"source":"contracts\\BiatecClammPool.algo.ts:241","pc":[1033,1034]},{"teal":785,"source":"contracts\\BiatecClammPool.algo.ts:242","pc":[1035,1036,1037,1038,1039,1040]},{"teal":786,"source":"contracts\\BiatecClammPool.algo.ts:242","pc":[1041,1042]},{"teal":792,"source":"contracts\\BiatecClammPool.algo.ts:244","pc":[1043]},{"teal":793,"source":"contracts\\BiatecClammPool.algo.ts:244","pc":[1044,1045]},{"teal":797,"source":"contracts\\BiatecClammPool.algo.ts:245","pc":[1046,1047]},{"teal":798,"source":"contracts\\BiatecClammPool.algo.ts:245","pc":[1048,1049]},{"teal":801,"source":"contracts\\BiatecClammPool.algo.ts:241","pc":[1050]},{"teal":805,"source":"contracts\\BiatecClammPool.algo.ts:247","pc":[1051,1052]},{"teal":806,"source":"contracts\\BiatecClammPool.algo.ts:247","pc":[1053]},{"teal":807,"source":"contracts\\BiatecClammPool.algo.ts:247","pc":[1054,1055]},{"teal":808,"source":"contracts\\BiatecClammPool.algo.ts:247","pc":[1056]},{"teal":809,"source":"contracts\\BiatecClammPool.algo.ts:247","pc":[1057,1058]},{"teal":810,"source":"contracts\\BiatecClammPool.algo.ts:247","pc":[1059]},{"teal":811,"source":"contracts\\BiatecClammPool.algo.ts:247","pc":[1060]},{"teal":812,"source":"contracts\\BiatecClammPool.algo.ts:237","pc":[1061]},{"teal":821,"source":"contracts\\BiatecClammPool.algo.ts:255","pc":[1062,1063,1064]},{"teal":826,"source":"contracts\\BiatecClammPool.algo.ts:256","pc":[1065,1066]},{"teal":827,"source":"contracts\\BiatecClammPool.algo.ts:256","pc":[1067]},{"teal":828,"source":"contracts\\BiatecClammPool.algo.ts:256","pc":[1068]},{"teal":829,"source":"contracts\\BiatecClammPool.algo.ts:256","pc":[1069,1070,1071]},{"teal":838,"source":"contracts\\BiatecClammPool.algo.ts:257","pc":[1072]},{"teal":839,"source":"contracts\\BiatecClammPool.algo.ts:257","pc":[1073]},{"teal":840,"source":"contracts\\BiatecClammPool.algo.ts:257","pc":[1074,1075]},{"teal":844,"source":"contracts\\BiatecClammPool.algo.ts:258","pc":[1076,1077]},{"teal":845,"source":"contracts\\BiatecClammPool.algo.ts:258","pc":[1078,1079]},{"teal":849,"source":"contracts\\BiatecClammPool.algo.ts:259","pc":[1080,1081]},{"teal":850,"source":"contracts\\BiatecClammPool.algo.ts:259","pc":[1082,1083]},{"teal":854,"source":"contracts\\BiatecClammPool.algo.ts:260","pc":[1084]},{"teal":855,"source":"contracts\\BiatecClammPool.algo.ts:260","pc":[1085,1086]},{"teal":858,"source":"contracts\\BiatecClammPool.algo.ts:257","pc":[1087]},{"teal":859,"source":"contracts\\BiatecClammPool.algo.ts:256","pc":[1088,1089,1090]},{"teal":869,"source":"contracts\\BiatecClammPool.algo.ts:263","pc":[1091]},{"teal":870,"source":"contracts\\BiatecClammPool.algo.ts:263","pc":[1092,1093]},{"teal":871,"source":"contracts\\BiatecClammPool.algo.ts:263","pc":[1094,1095]},{"teal":875,"source":"contracts\\BiatecClammPool.algo.ts:264","pc":[1096,1097]},{"teal":876,"source":"contracts\\BiatecClammPool.algo.ts:264","pc":[1098,1099]},{"teal":880,"source":"contracts\\BiatecClammPool.algo.ts:265","pc":[1100,1101]},{"teal":881,"source":"contracts\\BiatecClammPool.algo.ts:265","pc":[1102,1103]},{"teal":885,"source":"contracts\\BiatecClammPool.algo.ts:266","pc":[1104,1105]},{"teal":886,"source":"contracts\\BiatecClammPool.algo.ts:266","pc":[1106,1107]},{"teal":890,"source":"contracts\\BiatecClammPool.algo.ts:267","pc":[1108]},{"teal":891,"source":"contracts\\BiatecClammPool.algo.ts:267","pc":[1109,1110]},{"teal":894,"source":"contracts\\BiatecClammPool.algo.ts:263","pc":[1111]},{"teal":897,"source":"contracts\\BiatecClammPool.algo.ts:255","pc":[1112]},{"teal":904,"source":"contracts\\BiatecClammPool.algo.ts:276","pc":[1113,1114,1115]},{"teal":909,"source":"contracts\\BiatecClammPool.algo.ts:277","pc":[1116,1117]},{"teal":910,"source":"contracts\\BiatecClammPool.algo.ts:277","pc":[1118]},{"teal":911,"source":"contracts\\BiatecClammPool.algo.ts:277","pc":[1119]},{"teal":912,"source":"contracts\\BiatecClammPool.algo.ts:277","pc":[1120,1121,1122]},{"teal":917,"source":"contracts\\BiatecClammPool.algo.ts:279","pc":[1123]},{"teal":918,"source":"contracts\\BiatecClammPool.algo.ts:279","pc":[1124,1125]},{"teal":919,"source":"contracts\\BiatecClammPool.algo.ts:279","pc":[1126,1127]},{"teal":920,"source":"contracts\\BiatecClammPool.algo.ts:279","pc":[1128,1129,1130]},{"teal":923,"source":"contracts\\BiatecClammPool.algo.ts:276","pc":[1131]},{"teal":932,"source":"contracts\\BiatecClammPool.algo.ts:288","pc":[1132,1133,1134]},{"teal":935,"source":"contracts\\BiatecClammPool.algo.ts:288","pc":[1135]},{"teal":936,"source":"contracts\\BiatecClammPool.algo.ts:288","pc":[1136,1137]},{"teal":940,"source":"contracts\\BiatecClammPool.algo.ts:292","pc":[1138,1139]},{"teal":941,"source":"contracts\\BiatecClammPool.algo.ts:292","pc":[1140,1141]},{"teal":946,"source":"contracts\\BiatecClammPool.algo.ts:293","pc":[1142,1143]},{"teal":947,"source":"contracts\\BiatecClammPool.algo.ts:293","pc":[1144]},{"teal":948,"source":"contracts\\BiatecClammPool.algo.ts:293","pc":[1145]},{"teal":949,"source":"contracts\\BiatecClammPool.algo.ts:293","pc":[1146,1147,1148]},{"teal":954,"source":"contracts\\BiatecClammPool.algo.ts:294","pc":[1149,1150]},{"teal":955,"source":"contracts\\BiatecClammPool.algo.ts:294","pc":[1151,1152]},{"teal":956,"source":"contracts\\BiatecClammPool.algo.ts:294","pc":[1153]},{"teal":957,"source":"contracts\\BiatecClammPool.algo.ts:294","pc":[1154,1155]},{"teal":962,"source":"contracts\\BiatecClammPool.algo.ts:296","pc":[1156,1157]},{"teal":963,"source":"contracts\\BiatecClammPool.algo.ts:296","pc":[1158,1159]},{"teal":968,"source":"contracts\\BiatecClammPool.algo.ts:297","pc":[1160,1161]},{"teal":969,"source":"contracts\\BiatecClammPool.algo.ts:297","pc":[1162]},{"teal":970,"source":"contracts\\BiatecClammPool.algo.ts:297","pc":[1163]},{"teal":971,"source":"contracts\\BiatecClammPool.algo.ts:297","pc":[1164,1165,1166]},{"teal":976,"source":"contracts\\BiatecClammPool.algo.ts:298","pc":[1167,1168]},{"teal":977,"source":"contracts\\BiatecClammPool.algo.ts:298","pc":[1169,1170]},{"teal":978,"source":"contracts\\BiatecClammPool.algo.ts:298","pc":[1171]},{"teal":979,"source":"contracts\\BiatecClammPool.algo.ts:298","pc":[1172,1173]},{"teal":990,"source":"contracts\\BiatecClammPool.algo.ts:302","pc":[1174,1175,1176,1177]},{"teal":991,"source":"contracts\\BiatecClammPool.algo.ts:305","pc":[1178,1179]},{"teal":992,"source":"contracts\\BiatecClammPool.algo.ts:302","pc":[1180]},{"teal":993,"source":"contracts\\BiatecClammPool.algo.ts:306","pc":[1181,1182,1183]},{"teal":994,"source":"contracts\\BiatecClammPool.algo.ts:305","pc":[1184]},{"teal":995,"source":"contracts\\BiatecClammPool.algo.ts:307","pc":[1185,1186]},{"teal":996,"source":"contracts\\BiatecClammPool.algo.ts:306","pc":[1187]},{"teal":997,"source":"contracts\\BiatecClammPool.algo.ts:301","pc":[1188,1189]},{"teal":1009,"source":"contracts\\BiatecClammPool.algo.ts:311","pc":[1190]},{"teal":1010,"source":"contracts\\BiatecClammPool.algo.ts:311","pc":[1191,1192]},{"teal":1011,"source":"contracts\\BiatecClammPool.algo.ts:311","pc":[1193,1194]},{"teal":1015,"source":"contracts\\BiatecClammPool.algo.ts:312","pc":[1195,1196]},{"teal":1016,"source":"contracts\\BiatecClammPool.algo.ts:312","pc":[1197,1198]},{"teal":1020,"source":"contracts\\BiatecClammPool.algo.ts:313","pc":[1199,1200,1201,1202,1203]},{"teal":1021,"source":"contracts\\BiatecClammPool.algo.ts:313","pc":[1204,1205]},{"teal":1025,"source":"contracts\\BiatecClammPool.algo.ts:315","pc":[1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216]},{"teal":1026,"source":"contracts\\BiatecClammPool.algo.ts:315","pc":[1217,1218]},{"teal":1030,"source":"contracts\\BiatecClammPool.algo.ts:316","pc":[1219,1220]},{"teal":1031,"source":"contracts\\BiatecClammPool.algo.ts:316","pc":[1221,1222]},{"teal":1035,"source":"contracts\\BiatecClammPool.algo.ts:317","pc":[1223,1224]},{"teal":1036,"source":"contracts\\BiatecClammPool.algo.ts:317","pc":[1225,1226]},{"teal":1040,"source":"contracts\\BiatecClammPool.algo.ts:318","pc":[1227,1228]},{"teal":1041,"source":"contracts\\BiatecClammPool.algo.ts:318","pc":[1229,1230]},{"teal":1044,"source":"contracts\\BiatecClammPool.algo.ts:311","pc":[1231]},{"teal":1045,"source":"contracts\\BiatecClammPool.algo.ts:311","pc":[1232,1233]},{"teal":1048,"source":"contracts\\BiatecClammPool.algo.ts:311","pc":[1234]},{"teal":1049,"source":"contracts\\BiatecClammPool.algo.ts:311","pc":[1235,1236]},{"teal":1052,"source":"contracts\\BiatecClammPool.algo.ts:288","pc":[1237,1238]},{"teal":1055,"source":"contracts\\BiatecClammPool.algo.ts:288","pc":[1239,1240]},{"teal":1056,"source":"contracts\\BiatecClammPool.algo.ts:288","pc":[1241]},{"teal":1060,"source":"contracts\\BiatecClammPool.algo.ts:322","pc":[1242,1243,1244]},{"teal":1064,"source":"contracts\\BiatecClammPool.algo.ts:323","pc":[1245,1246]},{"teal":1065,"source":"contracts\\BiatecClammPool.algo.ts:323","pc":[1247,1248]},{"teal":1066,"source":"contracts\\BiatecClammPool.algo.ts:323","pc":[1249]},{"teal":1067,"source":"contracts\\BiatecClammPool.algo.ts:323","pc":[1250]},{"teal":1070,"source":"contracts\\BiatecClammPool.algo.ts:323","errorMessage":"assetA does not match","pc":[1251]},{"teal":1074,"source":"contracts\\BiatecClammPool.algo.ts:324","pc":[1252,1253]},{"teal":1075,"source":"contracts\\BiatecClammPool.algo.ts:324","pc":[1254,1255]},{"teal":1076,"source":"contracts\\BiatecClammPool.algo.ts:324","pc":[1256]},{"teal":1077,"source":"contracts\\BiatecClammPool.algo.ts:324","pc":[1257]},{"teal":1080,"source":"contracts\\BiatecClammPool.algo.ts:324","errorMessage":"assetB does not match","pc":[1258]},{"teal":1081,"source":"contracts\\BiatecClammPool.algo.ts:322","pc":[1259]},{"teal":1085,"source":"contracts\\BiatecClammPool.algo.ts:327","pc":[1260,1261,1262]},{"teal":1089,"source":"contracts\\BiatecClammPool.algo.ts:328","pc":[1263,1264]},{"teal":1090,"source":"contracts\\BiatecClammPool.algo.ts:328","pc":[1265,1266]},{"teal":1091,"source":"contracts\\BiatecClammPool.algo.ts:328","pc":[1267,1268,1269]},{"teal":1095,"source":"contracts\\BiatecClammPool.algo.ts:329","pc":[1270,1271]},{"teal":1096,"source":"contracts\\BiatecClammPool.algo.ts:329","pc":[1272,1273]},{"teal":1097,"source":"contracts\\BiatecClammPool.algo.ts:329","pc":[1274]},{"teal":1098,"source":"contracts\\BiatecClammPool.algo.ts:329","pc":[1275]},{"teal":1101,"source":"contracts\\BiatecClammPool.algo.ts:329","errorMessage":"assetLp does not match","pc":[1276]},{"teal":1102,"source":"contracts\\BiatecClammPool.algo.ts:327","pc":[1277]},{"teal":1107,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[1278,1279]},{"teal":1110,"source":"contracts\\BiatecClammPool.algo.ts:350","pc":[1280,1281,1282]},{"teal":1111,"source":"contracts\\BiatecClammPool.algo.ts:350","pc":[1283]},{"teal":1114,"source":"contracts\\BiatecClammPool.algo.ts:349","pc":[1284,1285,1286]},{"teal":1115,"source":"contracts\\BiatecClammPool.algo.ts:349","pc":[1287]},{"teal":1118,"source":"contracts\\BiatecClammPool.algo.ts:348","pc":[1288,1289,1290]},{"teal":1119,"source":"contracts\\BiatecClammPool.algo.ts:348","pc":[1291]},{"teal":1122,"source":"contracts\\BiatecClammPool.algo.ts:347","pc":[1292,1293]},{"teal":1123,"source":"contracts\\BiatecClammPool.algo.ts:347","pc":[1294]},{"teal":1124,"source":"contracts\\BiatecClammPool.algo.ts:347","pc":[1295]},{"teal":1127,"source":"contracts\\BiatecClammPool.algo.ts:346","pc":[1296,1297]},{"teal":1128,"source":"contracts\\BiatecClammPool.algo.ts:346","pc":[1298,1299]},{"teal":1129,"source":"contracts\\BiatecClammPool.algo.ts:346","pc":[1300]},{"teal":1132,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1301,1302,1303]},{"teal":1133,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1304]},{"teal":1136,"source":"contracts\\BiatecClammPool.algo.ts:344","pc":[1305,1306,1307]},{"teal":1137,"source":"contracts\\BiatecClammPool.algo.ts:344","pc":[1308]},{"teal":1140,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[1309,1310,1311]},{"teal":1141,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[1312]},{"teal":1142,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[1313]},{"teal":1143,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[1314]},{"teal":1144,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[1315]},{"teal":1145,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[1316]},{"teal":1159,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[1317,1318,1319]},{"teal":1162,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[1320]},{"teal":1163,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[1321,1322]},{"teal":1167,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1323]},{"teal":1168,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1324,1325]},{"teal":1169,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1326,1327]},{"teal":1170,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1328]},{"teal":1171,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1329,1330]},{"teal":1172,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1331,1332]},{"teal":1173,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1333]},{"teal":1174,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1334,1335]},{"teal":1175,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1336,1337]},{"teal":1176,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1338,1339]},{"teal":1177,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1340,1341]},{"teal":1178,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1342]},{"teal":1182,"source":"contracts\\BiatecClammPool.algo.ts:353","pc":[1343]},{"teal":1183,"source":"contracts\\BiatecClammPool.algo.ts:353","pc":[1344,1345]},{"teal":1184,"source":"contracts\\BiatecClammPool.algo.ts:353","pc":[1346,1347]},{"teal":1185,"source":"contracts\\BiatecClammPool.algo.ts:353","pc":[1348]},{"teal":1186,"source":"contracts\\BiatecClammPool.algo.ts:353","pc":[1349,1350]},{"teal":1187,"source":"contracts\\BiatecClammPool.algo.ts:353","pc":[1351,1352]},{"teal":1188,"source":"contracts\\BiatecClammPool.algo.ts:353","pc":[1353]},{"teal":1189,"source":"contracts\\BiatecClammPool.algo.ts:353","pc":[1354,1355]},{"teal":1190,"source":"contracts\\BiatecClammPool.algo.ts:353","pc":[1356,1357]},{"teal":1191,"source":"contracts\\BiatecClammPool.algo.ts:353","pc":[1358,1359]},{"teal":1192,"source":"contracts\\BiatecClammPool.algo.ts:353","pc":[1360,1361]},{"teal":1193,"source":"contracts\\BiatecClammPool.algo.ts:353","pc":[1362]},{"teal":1198,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1363,1364]},{"teal":1199,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1365,1366]},{"teal":1200,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1367,1368]},{"teal":1201,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1369,1370,1371]},{"teal":1205,"source":"contracts\\BiatecClammPool.algo.ts:357","pc":[1372,1373]},{"teal":1206,"source":"contracts\\BiatecClammPool.algo.ts:357","pc":[1374,1375]},{"teal":1207,"source":"contracts\\BiatecClammPool.algo.ts:357","pc":[1376,1377,1378]},{"teal":1211,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[1379,1380]},{"teal":1212,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[1381,1382]},{"teal":1213,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[1383]},{"teal":1214,"source":"contracts\\BiatecClammPool.algo.ts:359","pc":[1384]},{"teal":1215,"source":"contracts\\BiatecClammPool.algo.ts:359","pc":[1385,1386]},{"teal":1219,"source":"contracts\\BiatecClammPool.algo.ts:361","pc":[1387,1388]},{"teal":1220,"source":"contracts\\BiatecClammPool.algo.ts:361","pc":[1389,1390]},{"teal":1224,"source":"contracts\\BiatecClammPool.algo.ts:362","pc":[1391,1392]},{"teal":1225,"source":"contracts\\BiatecClammPool.algo.ts:362","pc":[1393,1394]},{"teal":1230,"source":"contracts\\BiatecClammPool.algo.ts:363","pc":[1395,1396]},{"teal":1231,"source":"contracts\\BiatecClammPool.algo.ts:363","pc":[1397]},{"teal":1232,"source":"contracts\\BiatecClammPool.algo.ts:363","pc":[1398]},{"teal":1233,"source":"contracts\\BiatecClammPool.algo.ts:363","pc":[1399,1400,1401]},{"teal":1238,"source":"contracts\\BiatecClammPool.algo.ts:364","pc":[1402,1403]},{"teal":1239,"source":"contracts\\BiatecClammPool.algo.ts:364","pc":[1404,1405]},{"teal":1240,"source":"contracts\\BiatecClammPool.algo.ts:364","pc":[1406,1407]},{"teal":1241,"source":"contracts\\BiatecClammPool.algo.ts:364","pc":[1408]},{"teal":1242,"source":"contracts\\BiatecClammPool.algo.ts:364","pc":[1409]},{"teal":1246,"source":"contracts\\BiatecClammPool.algo.ts:365","pc":[1410,1411]},{"teal":1247,"source":"contracts\\BiatecClammPool.algo.ts:365","pc":[1412,1413]},{"teal":1248,"source":"contracts\\BiatecClammPool.algo.ts:365","pc":[1414]},{"teal":1249,"source":"contracts\\BiatecClammPool.algo.ts:365","pc":[1415,1416]},{"teal":1250,"source":"contracts\\BiatecClammPool.algo.ts:365","pc":[1417]},{"teal":1251,"source":"contracts\\BiatecClammPool.algo.ts:365","pc":[1418]},{"teal":1252,"source":"contracts\\BiatecClammPool.algo.ts:365","pc":[1419,1420]},{"teal":1253,"source":"contracts\\BiatecClammPool.algo.ts:363","pc":[1421,1422,1423]},{"teal":1258,"source":"contracts\\BiatecClammPool.algo.ts:367","pc":[1424,1425]},{"teal":1259,"source":"contracts\\BiatecClammPool.algo.ts:367","pc":[1426,1427]},{"teal":1260,"source":"contracts\\BiatecClammPool.algo.ts:367","pc":[1428]},{"teal":1261,"source":"contracts\\BiatecClammPool.algo.ts:367","pc":[1429]},{"teal":1262,"source":"contracts\\BiatecClammPool.algo.ts:367","pc":[1430]},{"teal":1266,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1431,1432]},{"teal":1267,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1433,1434]},{"teal":1268,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1435]},{"teal":1269,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1436,1437]},{"teal":1270,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1438]},{"teal":1271,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1439]},{"teal":1272,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1440,1441]},{"teal":1278,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1442,1443]},{"teal":1279,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1444,1445]},{"teal":1280,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1446,1447]},{"teal":1281,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1448]},{"teal":1282,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1449,1450,1451]},{"teal":1287,"source":"contracts\\BiatecClammPool.algo.ts:372","pc":[1452,1453]},{"teal":1288,"source":"contracts\\BiatecClammPool.algo.ts:372","pc":[1454]},{"teal":1289,"source":"contracts\\BiatecClammPool.algo.ts:372","pc":[1455,1456]},{"teal":1290,"source":"contracts\\BiatecClammPool.algo.ts:372","pc":[1457,1458]},{"teal":1291,"source":"contracts\\BiatecClammPool.algo.ts:372","pc":[1459]},{"teal":1294,"source":"contracts\\BiatecClammPool.algo.ts:372","errorMessage":"failed to cast txAssetADeposit to axfer","pc":[1460]},{"teal":1295,"source":"contracts\\BiatecClammPool.algo.ts:372","pc":[1461,1462]},{"teal":1304,"source":"contracts\\BiatecClammPool.algo.ts:373","pc":[1463,1464]},{"teal":1305,"source":"contracts\\BiatecClammPool.algo.ts:373","pc":[1465,1466]},{"teal":1306,"source":"contracts\\BiatecClammPool.algo.ts:373","pc":[1467,1468]},{"teal":1307,"source":"contracts\\BiatecClammPool.algo.ts:373","pc":[1469]},{"teal":1310,"source":"contracts\\BiatecClammPool.algo.ts:373","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"typeEnum\",\"expected\":\"axfer\"}","pc":[1470]},{"teal":1313,"source":"contracts\\BiatecClammPool.algo.ts:373","pc":[1471,1472]},{"teal":1314,"source":"contracts\\BiatecClammPool.algo.ts:374","pc":[1473,1474]},{"teal":1315,"source":"contracts\\BiatecClammPool.algo.ts:374","pc":[1475,1476]},{"teal":1316,"source":"contracts\\BiatecClammPool.algo.ts:374","pc":[1477]},{"teal":1319,"source":"contracts\\BiatecClammPool.algo.ts:374","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1478]},{"teal":1322,"source":"contracts\\BiatecClammPool.algo.ts:373","pc":[1479,1480]},{"teal":1323,"source":"contracts\\BiatecClammPool.algo.ts:375","pc":[1481,1482]},{"teal":1324,"source":"contracts\\BiatecClammPool.algo.ts:375","pc":[1483,1484]},{"teal":1325,"source":"contracts\\BiatecClammPool.algo.ts:375","pc":[1485]},{"teal":1328,"source":"contracts\\BiatecClammPool.algo.ts:375","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"xferAsset\",\"expected\":\"assetA\"}","pc":[1486]},{"teal":1331,"source":"contracts\\BiatecClammPool.algo.ts:373","pc":[1487,1488]},{"teal":1332,"source":"contracts\\BiatecClammPool.algo.ts:376","pc":[1489,1490]},{"teal":1333,"source":"contracts\\BiatecClammPool.algo.ts:376","pc":[1491]},{"teal":1334,"source":"contracts\\BiatecClammPool.algo.ts:376","pc":[1492]},{"teal":1337,"source":"contracts\\BiatecClammPool.algo.ts:376","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"assetAmount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=0\"}","pc":[1493]},{"teal":1338,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1494,1495,1496]},{"teal":1343,"source":"contracts\\BiatecClammPool.algo.ts:378","pc":[1497,1498]},{"teal":1344,"source":"contracts\\BiatecClammPool.algo.ts:378","pc":[1499,1500]},{"teal":1345,"source":"contracts\\BiatecClammPool.algo.ts:378","pc":[1501]},{"teal":1346,"source":"contracts\\BiatecClammPool.algo.ts:378","pc":[1502]},{"teal":1347,"source":"contracts\\BiatecClammPool.algo.ts:378","pc":[1503,1504,1505]},{"teal":1352,"source":"contracts\\BiatecClammPool.algo.ts:379","pc":[1506,1507]},{"teal":1353,"source":"contracts\\BiatecClammPool.algo.ts:379","pc":[1508]},{"teal":1354,"source":"contracts\\BiatecClammPool.algo.ts:379","pc":[1509,1510]},{"teal":1355,"source":"contracts\\BiatecClammPool.algo.ts:379","pc":[1511]},{"teal":1356,"source":"contracts\\BiatecClammPool.algo.ts:379","pc":[1512]},{"teal":1359,"source":"contracts\\BiatecClammPool.algo.ts:379","errorMessage":"failed to cast txAssetADeposit to pay","pc":[1513]},{"teal":1360,"source":"contracts\\BiatecClammPool.algo.ts:379","pc":[1514,1515]},{"teal":1368,"source":"contracts\\BiatecClammPool.algo.ts:380","pc":[1516,1517]},{"teal":1369,"source":"contracts\\BiatecClammPool.algo.ts:380","pc":[1518,1519]},{"teal":1370,"source":"contracts\\BiatecClammPool.algo.ts:380","pc":[1520]},{"teal":1371,"source":"contracts\\BiatecClammPool.algo.ts:380","pc":[1521]},{"teal":1374,"source":"contracts\\BiatecClammPool.algo.ts:380","errorMessage":"transaction verification failed: {\"txn\":\"payTx\",\"field\":\"typeEnum\",\"expected\":\"pay\"}","pc":[1522]},{"teal":1377,"source":"contracts\\BiatecClammPool.algo.ts:380","pc":[1523,1524]},{"teal":1378,"source":"contracts\\BiatecClammPool.algo.ts:381","pc":[1525,1526]},{"teal":1379,"source":"contracts\\BiatecClammPool.algo.ts:381","pc":[1527,1528]},{"teal":1380,"source":"contracts\\BiatecClammPool.algo.ts:381","pc":[1529]},{"teal":1383,"source":"contracts\\BiatecClammPool.algo.ts:381","errorMessage":"transaction verification failed: {\"txn\":\"payTx\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[1530]},{"teal":1386,"source":"contracts\\BiatecClammPool.algo.ts:380","pc":[1531,1532]},{"teal":1387,"source":"contracts\\BiatecClammPool.algo.ts:382","pc":[1533,1534]},{"teal":1388,"source":"contracts\\BiatecClammPool.algo.ts:382","pc":[1535]},{"teal":1389,"source":"contracts\\BiatecClammPool.algo.ts:382","pc":[1536]},{"teal":1392,"source":"contracts\\BiatecClammPool.algo.ts:382","errorMessage":"transaction verification failed: {\"txn\":\"payTx\",\"field\":\"amount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=0\"}","pc":[1537]},{"teal":1393,"source":"contracts\\BiatecClammPool.algo.ts:378","pc":[1538,1539,1540]},{"teal":1398,"source":"contracts\\BiatecClammPool.algo.ts:385","pc":[1541]},{"teal":1401,"source":"contracts\\BiatecClammPool.algo.ts:385","errorMessage":"Unsupported tx type of the asset A","pc":[1542]},{"teal":1407,"source":"contracts\\BiatecClammPool.algo.ts:388","pc":[1543,1544]},{"teal":1408,"source":"contracts\\BiatecClammPool.algo.ts:388","pc":[1545]},{"teal":1409,"source":"contracts\\BiatecClammPool.algo.ts:388","pc":[1546]},{"teal":1410,"source":"contracts\\BiatecClammPool.algo.ts:388","pc":[1547,1548,1549]},{"teal":1415,"source":"contracts\\BiatecClammPool.algo.ts:389","pc":[1550,1551]},{"teal":1416,"source":"contracts\\BiatecClammPool.algo.ts:389","pc":[1552,1553]},{"teal":1417,"source":"contracts\\BiatecClammPool.algo.ts:389","pc":[1554,1555]},{"teal":1418,"source":"contracts\\BiatecClammPool.algo.ts:389","pc":[1556]},{"teal":1419,"source":"contracts\\BiatecClammPool.algo.ts:389","pc":[1557]},{"teal":1423,"source":"contracts\\BiatecClammPool.algo.ts:390","pc":[1558,1559]},{"teal":1424,"source":"contracts\\BiatecClammPool.algo.ts:390","pc":[1560,1561]},{"teal":1425,"source":"contracts\\BiatecClammPool.algo.ts:390","pc":[1562]},{"teal":1426,"source":"contracts\\BiatecClammPool.algo.ts:390","pc":[1563,1564]},{"teal":1427,"source":"contracts\\BiatecClammPool.algo.ts:390","pc":[1565]},{"teal":1428,"source":"contracts\\BiatecClammPool.algo.ts:390","pc":[1566]},{"teal":1429,"source":"contracts\\BiatecClammPool.algo.ts:390","pc":[1567,1568]},{"teal":1430,"source":"contracts\\BiatecClammPool.algo.ts:388","pc":[1569,1570,1571]},{"teal":1435,"source":"contracts\\BiatecClammPool.algo.ts:392","pc":[1572,1573]},{"teal":1436,"source":"contracts\\BiatecClammPool.algo.ts:392","pc":[1574,1575]},{"teal":1437,"source":"contracts\\BiatecClammPool.algo.ts:392","pc":[1576]},{"teal":1438,"source":"contracts\\BiatecClammPool.algo.ts:392","pc":[1577]},{"teal":1439,"source":"contracts\\BiatecClammPool.algo.ts:392","pc":[1578]},{"teal":1443,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1579,1580]},{"teal":1444,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1581,1582]},{"teal":1445,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1583]},{"teal":1446,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1584,1585]},{"teal":1447,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1586]},{"teal":1448,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1587]},{"teal":1449,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1588,1589]},{"teal":1455,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1590,1591]},{"teal":1456,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1592,1593]},{"teal":1457,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1594,1595]},{"teal":1458,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1596]},{"teal":1459,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1597,1598,1599]},{"teal":1464,"source":"contracts\\BiatecClammPool.algo.ts:397","pc":[1600,1601]},{"teal":1465,"source":"contracts\\BiatecClammPool.algo.ts:397","pc":[1602]},{"teal":1466,"source":"contracts\\BiatecClammPool.algo.ts:397","pc":[1603,1604]},{"teal":1467,"source":"contracts\\BiatecClammPool.algo.ts:397","pc":[1605,1606]},{"teal":1468,"source":"contracts\\BiatecClammPool.algo.ts:397","pc":[1607]},{"teal":1471,"source":"contracts\\BiatecClammPool.algo.ts:397","errorMessage":"failed to cast txAssetBDeposit to axfer","pc":[1608]},{"teal":1472,"source":"contracts\\BiatecClammPool.algo.ts:397","pc":[1609,1610]},{"teal":1481,"source":"contracts\\BiatecClammPool.algo.ts:398","pc":[1611,1612]},{"teal":1482,"source":"contracts\\BiatecClammPool.algo.ts:398","pc":[1613,1614]},{"teal":1483,"source":"contracts\\BiatecClammPool.algo.ts:398","pc":[1615,1616]},{"teal":1484,"source":"contracts\\BiatecClammPool.algo.ts:398","pc":[1617]},{"teal":1487,"source":"contracts\\BiatecClammPool.algo.ts:398","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"typeEnum\",\"expected\":\"axfer\"}","pc":[1618]},{"teal":1490,"source":"contracts\\BiatecClammPool.algo.ts:398","pc":[1619,1620]},{"teal":1491,"source":"contracts\\BiatecClammPool.algo.ts:399","pc":[1621,1622]},{"teal":1492,"source":"contracts\\BiatecClammPool.algo.ts:399","pc":[1623,1624]},{"teal":1493,"source":"contracts\\BiatecClammPool.algo.ts:399","pc":[1625]},{"teal":1496,"source":"contracts\\BiatecClammPool.algo.ts:399","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1626]},{"teal":1499,"source":"contracts\\BiatecClammPool.algo.ts:398","pc":[1627,1628]},{"teal":1500,"source":"contracts\\BiatecClammPool.algo.ts:400","pc":[1629,1630]},{"teal":1501,"source":"contracts\\BiatecClammPool.algo.ts:400","pc":[1631,1632]},{"teal":1502,"source":"contracts\\BiatecClammPool.algo.ts:400","pc":[1633]},{"teal":1505,"source":"contracts\\BiatecClammPool.algo.ts:400","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"xferAsset\",\"expected\":\"assetB\"}","pc":[1634]},{"teal":1508,"source":"contracts\\BiatecClammPool.algo.ts:398","pc":[1635,1636]},{"teal":1509,"source":"contracts\\BiatecClammPool.algo.ts:401","pc":[1637,1638]},{"teal":1510,"source":"contracts\\BiatecClammPool.algo.ts:401","pc":[1639]},{"teal":1511,"source":"contracts\\BiatecClammPool.algo.ts:401","pc":[1640]},{"teal":1514,"source":"contracts\\BiatecClammPool.algo.ts:401","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"assetAmount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=0\"}","pc":[1641]},{"teal":1515,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1642,1643,1644]},{"teal":1520,"source":"contracts\\BiatecClammPool.algo.ts:403","pc":[1645,1646]},{"teal":1521,"source":"contracts\\BiatecClammPool.algo.ts:403","pc":[1647,1648]},{"teal":1522,"source":"contracts\\BiatecClammPool.algo.ts:403","pc":[1649]},{"teal":1523,"source":"contracts\\BiatecClammPool.algo.ts:403","pc":[1650]},{"teal":1524,"source":"contracts\\BiatecClammPool.algo.ts:403","pc":[1651,1652,1653]},{"teal":1529,"source":"contracts\\BiatecClammPool.algo.ts:404","pc":[1654,1655]},{"teal":1530,"source":"contracts\\BiatecClammPool.algo.ts:404","pc":[1656]},{"teal":1531,"source":"contracts\\BiatecClammPool.algo.ts:404","pc":[1657,1658]},{"teal":1532,"source":"contracts\\BiatecClammPool.algo.ts:404","pc":[1659]},{"teal":1533,"source":"contracts\\BiatecClammPool.algo.ts:404","pc":[1660]},{"teal":1536,"source":"contracts\\BiatecClammPool.algo.ts:404","errorMessage":"failed to cast txAssetBDeposit to pay","pc":[1661]},{"teal":1537,"source":"contracts\\BiatecClammPool.algo.ts:404","pc":[1662,1663]},{"teal":1545,"source":"contracts\\BiatecClammPool.algo.ts:405","pc":[1664,1665]},{"teal":1546,"source":"contracts\\BiatecClammPool.algo.ts:405","pc":[1666,1667]},{"teal":1547,"source":"contracts\\BiatecClammPool.algo.ts:405","pc":[1668]},{"teal":1548,"source":"contracts\\BiatecClammPool.algo.ts:405","pc":[1669]},{"teal":1551,"source":"contracts\\BiatecClammPool.algo.ts:405","errorMessage":"transaction verification failed: {\"txn\":\"payTx\",\"field\":\"typeEnum\",\"expected\":\"pay\"}","pc":[1670]},{"teal":1554,"source":"contracts\\BiatecClammPool.algo.ts:405","pc":[1671,1672]},{"teal":1555,"source":"contracts\\BiatecClammPool.algo.ts:406","pc":[1673,1674]},{"teal":1556,"source":"contracts\\BiatecClammPool.algo.ts:406","pc":[1675,1676]},{"teal":1557,"source":"contracts\\BiatecClammPool.algo.ts:406","pc":[1677]},{"teal":1560,"source":"contracts\\BiatecClammPool.algo.ts:406","errorMessage":"transaction verification failed: {\"txn\":\"payTx\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[1678]},{"teal":1563,"source":"contracts\\BiatecClammPool.algo.ts:405","pc":[1679,1680]},{"teal":1564,"source":"contracts\\BiatecClammPool.algo.ts:407","pc":[1681,1682]},{"teal":1565,"source":"contracts\\BiatecClammPool.algo.ts:407","pc":[1683]},{"teal":1566,"source":"contracts\\BiatecClammPool.algo.ts:407","pc":[1684]},{"teal":1569,"source":"contracts\\BiatecClammPool.algo.ts:407","errorMessage":"transaction verification failed: {\"txn\":\"payTx\",\"field\":\"amount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=0\"}","pc":[1685]},{"teal":1570,"source":"contracts\\BiatecClammPool.algo.ts:403","pc":[1686,1687,1688]},{"teal":1575,"source":"contracts\\BiatecClammPool.algo.ts:410","pc":[1689]},{"teal":1578,"source":"contracts\\BiatecClammPool.algo.ts:410","errorMessage":"Unsupported tx type of the asset B","pc":[1690]},{"teal":1584,"source":"contracts\\BiatecClammPool.algo.ts:415","pc":[1691,1692]},{"teal":1585,"source":"contracts\\BiatecClammPool.algo.ts:415","pc":[1693]},{"teal":1586,"source":"contracts\\BiatecClammPool.algo.ts:415","pc":[1694,1695]},{"teal":1587,"source":"contracts\\BiatecClammPool.algo.ts:415","pc":[1696]},{"teal":1588,"source":"contracts\\BiatecClammPool.algo.ts:415","pc":[1697]},{"teal":1589,"source":"contracts\\BiatecClammPool.algo.ts:415","pc":[1698,1699,1700]},{"teal":1594,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1701,1702]},{"teal":1595,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1703,1704]},{"teal":1596,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1705]},{"teal":1597,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1706]},{"teal":1598,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1707]},{"teal":1599,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1708]},{"teal":1602,"source":"contracts\\BiatecClammPool.algo.ts:416","errorMessage":"assetLpDelicmalScale2Scale overflowed 256 bits","pc":[1709]},{"teal":1603,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1710]},{"teal":1604,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1711]},{"teal":1605,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1712]},{"teal":1606,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1713]},{"teal":1607,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1714]},{"teal":1608,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1715]},{"teal":1609,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1716]},{"teal":1610,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1717]},{"teal":1611,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1718]},{"teal":1612,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1719,1720]},{"teal":1613,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1721]},{"teal":1614,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1722]},{"teal":1615,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1723]},{"teal":1616,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1724]},{"teal":1619,"source":"contracts\\BiatecClammPool.algo.ts:416","errorMessage":"bDepositInBaseScale overflowed 256 bits","pc":[1725]},{"teal":1620,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1726]},{"teal":1621,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1727]},{"teal":1622,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1728]},{"teal":1623,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1729]},{"teal":1624,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1730]},{"teal":1625,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1731]},{"teal":1626,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1732]},{"teal":1627,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1733]},{"teal":1628,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1734]},{"teal":1629,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1735,1736]},{"teal":1630,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1737]},{"teal":1631,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1738]},{"teal":1632,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1739]},{"teal":1633,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1740]},{"teal":1636,"source":"contracts\\BiatecClammPool.algo.ts:416","errorMessage":"aDepositInBaseScale overflowed 256 bits","pc":[1741]},{"teal":1637,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1742]},{"teal":1638,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1743]},{"teal":1639,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1744]},{"teal":1640,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1745]},{"teal":1641,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1746]},{"teal":1642,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1747]},{"teal":1643,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1748]},{"teal":1644,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1749]},{"teal":1645,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1750]},{"teal":1646,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1751,1752,1753]},{"teal":1647,"source":"contracts\\BiatecClammPool.algo.ts:416","pc":[1754,1755,1756]},{"teal":1653,"source":"contracts\\BiatecClammPool.algo.ts:421","pc":[1757]},{"teal":1654,"source":"contracts\\BiatecClammPool.algo.ts:421","pc":[1758]},{"teal":1655,"source":"contracts\\BiatecClammPool.algo.ts:421","pc":[1759,1760]},{"teal":1656,"source":"contracts\\BiatecClammPool.algo.ts:421","pc":[1761]},{"teal":1657,"source":"contracts\\BiatecClammPool.algo.ts:421","pc":[1762]},{"teal":1658,"source":"contracts\\BiatecClammPool.algo.ts:421","pc":[1763,1764,1765]},{"teal":1659,"source":"contracts\\BiatecClammPool.algo.ts:421","pc":[1766,1767]},{"teal":1660,"source":"contracts\\BiatecClammPool.algo.ts:421","pc":[1768]},{"teal":1661,"source":"contracts\\BiatecClammPool.algo.ts:421","pc":[1769,1770]},{"teal":1662,"source":"contracts\\BiatecClammPool.algo.ts:421","pc":[1771]},{"teal":1663,"source":"contracts\\BiatecClammPool.algo.ts:421","pc":[1772]},{"teal":1666,"source":"contracts\\BiatecClammPool.algo.ts:421","pc":[1773,1774,1775]},{"teal":1676,"source":"contracts\\BiatecClammPool.algo.ts:430","pc":[1776,1777]},{"teal":1677,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1778,1779]},{"teal":1678,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1780]},{"teal":1679,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1781]},{"teal":1680,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1782]},{"teal":1681,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1783]},{"teal":1684,"source":"contracts\\BiatecClammPool.algo.ts:429","errorMessage":"assetLpDelicmalScale2Scale overflowed 256 bits","pc":[1784]},{"teal":1685,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1785]},{"teal":1686,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1786]},{"teal":1687,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1787]},{"teal":1688,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1788]},{"teal":1689,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1789]},{"teal":1690,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1790]},{"teal":1691,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1791]},{"teal":1692,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1792]},{"teal":1693,"source":"contracts\\BiatecClammPool.algo.ts:429","pc":[1793]},{"teal":1694,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1794,1795]},{"teal":1695,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1796]},{"teal":1696,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1797]},{"teal":1697,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1798]},{"teal":1698,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1799]},{"teal":1701,"source":"contracts\\BiatecClammPool.algo.ts:428","errorMessage":"bDepositInBaseScale overflowed 256 bits","pc":[1800]},{"teal":1702,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1801]},{"teal":1703,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1802]},{"teal":1704,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1803]},{"teal":1705,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1804]},{"teal":1706,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1805]},{"teal":1707,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1806]},{"teal":1708,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1807]},{"teal":1709,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1808]},{"teal":1710,"source":"contracts\\BiatecClammPool.algo.ts:428","pc":[1809]},{"teal":1711,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1810,1811]},{"teal":1712,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1812]},{"teal":1713,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1813]},{"teal":1714,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1814]},{"teal":1715,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1815]},{"teal":1718,"source":"contracts\\BiatecClammPool.algo.ts:427","errorMessage":"aDepositInBaseScale overflowed 256 bits","pc":[1816]},{"teal":1719,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1817]},{"teal":1720,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1818]},{"teal":1721,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1819]},{"teal":1722,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1820]},{"teal":1723,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1821]},{"teal":1724,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1822]},{"teal":1725,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1823]},{"teal":1726,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1824]},{"teal":1727,"source":"contracts\\BiatecClammPool.algo.ts:427","pc":[1825]},{"teal":1728,"source":"contracts\\BiatecClammPool.algo.ts:426","pc":[1826,1827,1828]},{"teal":1729,"source":"contracts\\BiatecClammPool.algo.ts:426","pc":[1829,1830]},{"teal":1739,"source":"contracts\\BiatecClammPool.algo.ts:438","pc":[1831,1832]},{"teal":1740,"source":"contracts\\BiatecClammPool.algo.ts:438","pc":[1833]},{"teal":1741,"source":"contracts\\BiatecClammPool.algo.ts:437","pc":[1834,1835]},{"teal":1742,"source":"contracts\\BiatecClammPool.algo.ts:437","pc":[1836]},{"teal":1743,"source":"contracts\\BiatecClammPool.algo.ts:436","pc":[1837,1838]},{"teal":1744,"source":"contracts\\BiatecClammPool.algo.ts:436","pc":[1839]},{"teal":1745,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1840,1841]},{"teal":1746,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1842]},{"teal":1747,"source":"contracts\\BiatecClammPool.algo.ts:434","pc":[1843]},{"teal":1748,"source":"contracts\\BiatecClammPool.algo.ts:434","pc":[1844]},{"teal":1749,"source":"contracts\\BiatecClammPool.algo.ts:433","pc":[1845,1846,1847]},{"teal":1750,"source":"contracts\\BiatecClammPool.algo.ts:433","pc":[1848,1849]},{"teal":1754,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1850,1851]},{"teal":1755,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1852,1853]},{"teal":1756,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1854]},{"teal":1757,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1855]},{"teal":1758,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1856,1857]},{"teal":1759,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1858]},{"teal":1762,"source":"contracts\\BiatecClammPool.algo.ts:441","errorMessage":"newPrice as uint64 overflowed 64 bits","pc":[1859]},{"teal":1763,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1860,1861]},{"teal":1764,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1862]},{"teal":1765,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1863]},{"teal":1766,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1864]},{"teal":1767,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1865]},{"teal":1768,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1866,1867]},{"teal":1769,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1868]},{"teal":1770,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1869]},{"teal":1771,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1870]},{"teal":1772,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1871]},{"teal":1773,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1872]},{"teal":1777,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1873,1874]},{"teal":1778,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1875,1876,1877]},{"teal":1788,"source":"contracts\\BiatecClammPool.algo.ts:453","pc":[1878,1879]},{"teal":1789,"source":"contracts\\BiatecClammPool.algo.ts:453","pc":[1880]},{"teal":1790,"source":"contracts\\BiatecClammPool.algo.ts:452","pc":[1881]},{"teal":1791,"source":"contracts\\BiatecClammPool.algo.ts:452","pc":[1882]},{"teal":1792,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1883,1884]},{"teal":1793,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1885]},{"teal":1794,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1886]},{"teal":1795,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1887]},{"teal":1796,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1888]},{"teal":1799,"source":"contracts\\BiatecClammPool.algo.ts:451","errorMessage":"bDepositInBaseScale overflowed 256 bits","pc":[1889]},{"teal":1800,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1890]},{"teal":1801,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1891]},{"teal":1802,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1892]},{"teal":1803,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1893]},{"teal":1804,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1894]},{"teal":1805,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1895]},{"teal":1806,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1896]},{"teal":1807,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1897]},{"teal":1808,"source":"contracts\\BiatecClammPool.algo.ts:451","pc":[1898]},{"teal":1809,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1899,1900]},{"teal":1810,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1901]},{"teal":1811,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1902]},{"teal":1812,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1903]},{"teal":1813,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1904]},{"teal":1816,"source":"contracts\\BiatecClammPool.algo.ts:450","errorMessage":"aDepositInBaseScale overflowed 256 bits","pc":[1905]},{"teal":1817,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1906]},{"teal":1818,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1907]},{"teal":1819,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1908]},{"teal":1820,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1909]},{"teal":1821,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1910]},{"teal":1822,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1911]},{"teal":1823,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1912]},{"teal":1824,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1913]},{"teal":1825,"source":"contracts\\BiatecClammPool.algo.ts:450","pc":[1914]},{"teal":1826,"source":"contracts\\BiatecClammPool.algo.ts:449","pc":[1915,1916,1917]},{"teal":1827,"source":"contracts\\BiatecClammPool.algo.ts:449","pc":[1918,1919]},{"teal":1836,"source":"contracts\\BiatecClammPool.algo.ts:460","pc":[1920,1921]},{"teal":1837,"source":"contracts\\BiatecClammPool.algo.ts:460","pc":[1922]},{"teal":1838,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1923]},{"teal":1839,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1924]},{"teal":1840,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1925,1926]},{"teal":1841,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1927]},{"teal":1842,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1928]},{"teal":1843,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1929]},{"teal":1844,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1930]},{"teal":1847,"source":"contracts\\BiatecClammPool.algo.ts:458","errorMessage":"bDepositInBaseScale overflowed 256 bits","pc":[1931]},{"teal":1848,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1932]},{"teal":1849,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1933]},{"teal":1850,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1934]},{"teal":1851,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1935]},{"teal":1852,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1936]},{"teal":1853,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1937]},{"teal":1854,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1938]},{"teal":1855,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1939]},{"teal":1856,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1940]},{"teal":1857,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1941,1942]},{"teal":1858,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1943]},{"teal":1859,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1944]},{"teal":1860,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1945]},{"teal":1861,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1946]},{"teal":1864,"source":"contracts\\BiatecClammPool.algo.ts:457","errorMessage":"aDepositInBaseScale overflowed 256 bits","pc":[1947]},{"teal":1865,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1948]},{"teal":1866,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1949]},{"teal":1867,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1950]},{"teal":1868,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1951]},{"teal":1869,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1952]},{"teal":1870,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1953]},{"teal":1871,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1954]},{"teal":1872,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1955]},{"teal":1873,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1956]},{"teal":1874,"source":"contracts\\BiatecClammPool.algo.ts:456","pc":[1957,1958,1959]},{"teal":1875,"source":"contracts\\BiatecClammPool.algo.ts:456","pc":[1960,1961]},{"teal":1879,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1962,1963]},{"teal":1880,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1964,1965]},{"teal":1881,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1966]},{"teal":1882,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1967]},{"teal":1883,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1968]},{"teal":1884,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1969]},{"teal":1885,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1970,1971]},{"teal":1886,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1972]},{"teal":1889,"source":"contracts\\BiatecClammPool.algo.ts:462","errorMessage":"(a / this.assetADecimals.value) as uint64 overflowed 64 bits","pc":[1973]},{"teal":1890,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1974,1975]},{"teal":1891,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1976]},{"teal":1892,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1977]},{"teal":1893,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1978]},{"teal":1894,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1979]},{"teal":1895,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1980,1981]},{"teal":1896,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1982]},{"teal":1897,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1983]},{"teal":1898,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1984]},{"teal":1899,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1985]},{"teal":1900,"source":"contracts\\BiatecClammPool.algo.ts:462","pc":[1986,1987]},{"teal":1904,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[1988,1989]},{"teal":1905,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[1990,1991]},{"teal":1906,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[1992]},{"teal":1907,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[1993]},{"teal":1908,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[1994]},{"teal":1909,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[1995]},{"teal":1910,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[1996,1997]},{"teal":1911,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[1998]},{"teal":1914,"source":"contracts\\BiatecClammPool.algo.ts:463","errorMessage":"(b / this.assetBDecimals.value) as uint64 overflowed 64 bits","pc":[1999]},{"teal":1915,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[2000,2001]},{"teal":1916,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[2002]},{"teal":1917,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[2003]},{"teal":1918,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[2004]},{"teal":1919,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[2005]},{"teal":1920,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[2006,2007]},{"teal":1921,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[2008]},{"teal":1922,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[2009]},{"teal":1923,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[2010]},{"teal":1924,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[2011]},{"teal":1925,"source":"contracts\\BiatecClammPool.algo.ts:463","pc":[2012,2013]},{"teal":1930,"source":"contracts\\BiatecClammPool.algo.ts:465","pc":[2014,2015]},{"teal":1931,"source":"contracts\\BiatecClammPool.algo.ts:465","pc":[2016,2017]},{"teal":1932,"source":"contracts\\BiatecClammPool.algo.ts:465","pc":[2018,2019]},{"teal":1933,"source":"contracts\\BiatecClammPool.algo.ts:465","pc":[2020]},{"teal":1934,"source":"contracts\\BiatecClammPool.algo.ts:465","pc":[2021,2022,2023]},{"teal":1940,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[2024,2025]},{"teal":1941,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[2026,2027]},{"teal":1942,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[2028,2029]},{"teal":1943,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[2030]},{"teal":1944,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[2031,2032,2033]},{"teal":1949,"source":"contracts\\BiatecClammPool.algo.ts:473","pc":[2034]},{"teal":1952,"source":"contracts\\BiatecClammPool.algo.ts:473","errorMessage":"Dominant is asset B","pc":[2035]},{"teal":1958,"source":"contracts\\BiatecClammPool.algo.ts:475","pc":[2036,2037]},{"teal":1959,"source":"contracts\\BiatecClammPool.algo.ts:475","pc":[2038,2039]},{"teal":1960,"source":"contracts\\BiatecClammPool.algo.ts:475","pc":[2040,2041]},{"teal":1961,"source":"contracts\\BiatecClammPool.algo.ts:475","pc":[2042]},{"teal":1962,"source":"contracts\\BiatecClammPool.algo.ts:475","pc":[2043]},{"teal":1963,"source":"contracts\\BiatecClammPool.algo.ts:475","pc":[2044]},{"teal":1964,"source":"contracts\\BiatecClammPool.algo.ts:475","pc":[2045,2046,2047]},{"teal":1969,"source":"contracts\\BiatecClammPool.algo.ts:477","pc":[2048,2049]},{"teal":1970,"source":"contracts\\BiatecClammPool.algo.ts:477","pc":[2050,2051]},{"teal":1971,"source":"contracts\\BiatecClammPool.algo.ts:477","pc":[2052,2053]},{"teal":1972,"source":"contracts\\BiatecClammPool.algo.ts:477","pc":[2054]},{"teal":1973,"source":"contracts\\BiatecClammPool.algo.ts:477","pc":[2055,2056]},{"teal":1974,"source":"contracts\\BiatecClammPool.algo.ts:477","pc":[2057,2058]},{"teal":1975,"source":"contracts\\BiatecClammPool.algo.ts:477","pc":[2059,2060,2061]},{"teal":1980,"source":"contracts\\BiatecClammPool.algo.ts:479","pc":[2062,2063]},{"teal":1981,"source":"contracts\\BiatecClammPool.algo.ts:479","pc":[2064,2065]},{"teal":1985,"source":"contracts\\BiatecClammPool.algo.ts:480","pc":[2066,2067]},{"teal":1986,"source":"contracts\\BiatecClammPool.algo.ts:480","pc":[2068]},{"teal":1987,"source":"contracts\\BiatecClammPool.algo.ts:480","pc":[2069,2070]},{"teal":1988,"source":"contracts\\BiatecClammPool.algo.ts:480","pc":[2071]},{"teal":1989,"source":"contracts\\BiatecClammPool.algo.ts:480","pc":[2072]},{"teal":1990,"source":"contracts\\BiatecClammPool.algo.ts:480","pc":[2073,2074]},{"teal":1994,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2075,2076]},{"teal":1995,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2077,2078]},{"teal":1996,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2079]},{"teal":1997,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2080]},{"teal":1998,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2081]},{"teal":1999,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2082]},{"teal":2002,"source":"contracts\\BiatecClammPool.algo.ts:481","errorMessage":"assetLpDelicmalScale2Scale overflowed 256 bits","pc":[2083]},{"teal":2003,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2084]},{"teal":2004,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2085]},{"teal":2005,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2086]},{"teal":2006,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2087]},{"teal":2007,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2088]},{"teal":2008,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2089]},{"teal":2009,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2090]},{"teal":2010,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2091]},{"teal":2011,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2092]},{"teal":2012,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2093,2094]},{"teal":2013,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2095]},{"teal":2014,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2096]},{"teal":2015,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2097]},{"teal":2016,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2098]},{"teal":2019,"source":"contracts\\BiatecClammPool.algo.ts:481","errorMessage":"realAssetBDeposit overflowed 256 bits","pc":[2099]},{"teal":2020,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2100]},{"teal":2021,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2101]},{"teal":2022,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2102]},{"teal":2023,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2103]},{"teal":2024,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2104]},{"teal":2025,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2105]},{"teal":2026,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2106]},{"teal":2027,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2107]},{"teal":2028,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2108]},{"teal":2029,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2109,2110]},{"teal":2030,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2111]},{"teal":2031,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2112]},{"teal":2032,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2113]},{"teal":2033,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2114]},{"teal":2036,"source":"contracts\\BiatecClammPool.algo.ts:481","errorMessage":"realAssetADeposit overflowed 256 bits","pc":[2115]},{"teal":2037,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2116]},{"teal":2038,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2117]},{"teal":2039,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2118]},{"teal":2040,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2119]},{"teal":2041,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2120]},{"teal":2042,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2121]},{"teal":2043,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2122]},{"teal":2044,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2123]},{"teal":2045,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2124]},{"teal":2046,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2125,2126,2127]},{"teal":2047,"source":"contracts\\BiatecClammPool.algo.ts:481","pc":[2128,2129,2130]},{"teal":2053,"source":"contracts\\BiatecClammPool.algo.ts:484","pc":[2131,2132]},{"teal":2054,"source":"contracts\\BiatecClammPool.algo.ts:484","pc":[2133,2134]},{"teal":2055,"source":"contracts\\BiatecClammPool.algo.ts:484","pc":[2135,2136]},{"teal":2056,"source":"contracts\\BiatecClammPool.algo.ts:484","pc":[2137]},{"teal":2057,"source":"contracts\\BiatecClammPool.algo.ts:484","pc":[2138,2139,2140]},{"teal":2063,"source":"contracts\\BiatecClammPool.algo.ts:491","pc":[2141,2142]},{"teal":2064,"source":"contracts\\BiatecClammPool.algo.ts:491","pc":[2143,2144]},{"teal":2065,"source":"contracts\\BiatecClammPool.algo.ts:491","pc":[2145,2146]},{"teal":2066,"source":"contracts\\BiatecClammPool.algo.ts:491","pc":[2147]},{"teal":2067,"source":"contracts\\BiatecClammPool.algo.ts:491","pc":[2148,2149,2150]},{"teal":2072,"source":"contracts\\BiatecClammPool.algo.ts:492","pc":[2151]},{"teal":2075,"source":"contracts\\BiatecClammPool.algo.ts:492","errorMessage":"Dominant is asset A","pc":[2152]},{"teal":2081,"source":"contracts\\BiatecClammPool.algo.ts:494","pc":[2153,2154]},{"teal":2082,"source":"contracts\\BiatecClammPool.algo.ts:494","pc":[2155,2156]},{"teal":2083,"source":"contracts\\BiatecClammPool.algo.ts:494","pc":[2157,2158]},{"teal":2084,"source":"contracts\\BiatecClammPool.algo.ts:494","pc":[2159]},{"teal":2085,"source":"contracts\\BiatecClammPool.algo.ts:494","pc":[2160]},{"teal":2086,"source":"contracts\\BiatecClammPool.algo.ts:494","pc":[2161]},{"teal":2087,"source":"contracts\\BiatecClammPool.algo.ts:494","pc":[2162,2163,2164]},{"teal":2092,"source":"contracts\\BiatecClammPool.algo.ts:496","pc":[2165,2166]},{"teal":2093,"source":"contracts\\BiatecClammPool.algo.ts:496","pc":[2167,2168]},{"teal":2094,"source":"contracts\\BiatecClammPool.algo.ts:496","pc":[2169,2170]},{"teal":2095,"source":"contracts\\BiatecClammPool.algo.ts:496","pc":[2171]},{"teal":2096,"source":"contracts\\BiatecClammPool.algo.ts:496","pc":[2172,2173]},{"teal":2097,"source":"contracts\\BiatecClammPool.algo.ts:496","pc":[2174,2175]},{"teal":2098,"source":"contracts\\BiatecClammPool.algo.ts:496","pc":[2176,2177,2178]},{"teal":2103,"source":"contracts\\BiatecClammPool.algo.ts:498","pc":[2179,2180]},{"teal":2104,"source":"contracts\\BiatecClammPool.algo.ts:498","pc":[2181]},{"teal":2105,"source":"contracts\\BiatecClammPool.algo.ts:498","pc":[2182,2183]},{"teal":2106,"source":"contracts\\BiatecClammPool.algo.ts:498","pc":[2184]},{"teal":2107,"source":"contracts\\BiatecClammPool.algo.ts:498","pc":[2185]},{"teal":2108,"source":"contracts\\BiatecClammPool.algo.ts:498","pc":[2186,2187]},{"teal":2112,"source":"contracts\\BiatecClammPool.algo.ts:499","pc":[2188,2189]},{"teal":2113,"source":"contracts\\BiatecClammPool.algo.ts:499","pc":[2190,2191]},{"teal":2117,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2192,2193]},{"teal":2118,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2194,2195]},{"teal":2119,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2196]},{"teal":2120,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2197]},{"teal":2121,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2198]},{"teal":2122,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2199]},{"teal":2125,"source":"contracts\\BiatecClammPool.algo.ts:500","errorMessage":"assetLpDelicmalScale2Scale overflowed 256 bits","pc":[2200]},{"teal":2126,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2201]},{"teal":2127,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2202]},{"teal":2128,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2203]},{"teal":2129,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2204]},{"teal":2130,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2205]},{"teal":2131,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2206]},{"teal":2132,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2207]},{"teal":2133,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2208]},{"teal":2134,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2209]},{"teal":2135,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2210,2211]},{"teal":2136,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2212]},{"teal":2137,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2213]},{"teal":2138,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2214]},{"teal":2139,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2215]},{"teal":2142,"source":"contracts\\BiatecClammPool.algo.ts:500","errorMessage":"realAssetBDeposit overflowed 256 bits","pc":[2216]},{"teal":2143,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2217]},{"teal":2144,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2218]},{"teal":2145,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2219]},{"teal":2146,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2220]},{"teal":2147,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2221]},{"teal":2148,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2222]},{"teal":2149,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2223]},{"teal":2150,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2224]},{"teal":2151,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2225]},{"teal":2152,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2226,2227]},{"teal":2153,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2228]},{"teal":2154,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2229]},{"teal":2155,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2230]},{"teal":2156,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2231]},{"teal":2159,"source":"contracts\\BiatecClammPool.algo.ts:500","errorMessage":"realAssetADeposit overflowed 256 bits","pc":[2232]},{"teal":2160,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2233]},{"teal":2161,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2234]},{"teal":2162,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2235]},{"teal":2163,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2236]},{"teal":2164,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2237]},{"teal":2165,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2238]},{"teal":2166,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2239]},{"teal":2167,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2240]},{"teal":2168,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2241]},{"teal":2169,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2242,2243,2244]},{"teal":2170,"source":"contracts\\BiatecClammPool.algo.ts:500","pc":[2245,2246,2247]},{"teal":2176,"source":"contracts\\BiatecClammPool.algo.ts:502","pc":[2248,2249]},{"teal":2177,"source":"contracts\\BiatecClammPool.algo.ts:502","pc":[2250,2251]},{"teal":2178,"source":"contracts\\BiatecClammPool.algo.ts:502","pc":[2252,2253]},{"teal":2179,"source":"contracts\\BiatecClammPool.algo.ts:502","pc":[2254]},{"teal":2180,"source":"contracts\\BiatecClammPool.algo.ts:502","pc":[2255]},{"teal":2181,"source":"contracts\\BiatecClammPool.algo.ts:502","pc":[2256,2257,2258]},{"teal":2182,"source":"contracts\\BiatecClammPool.algo.ts:502","pc":[2259,2260]},{"teal":2183,"source":"contracts\\BiatecClammPool.algo.ts:502","pc":[2261,2262]},{"teal":2184,"source":"contracts\\BiatecClammPool.algo.ts:502","pc":[2263,2264]},{"teal":2185,"source":"contracts\\BiatecClammPool.algo.ts:502","pc":[2265]},{"teal":2186,"source":"contracts\\BiatecClammPool.algo.ts:502","pc":[2266]},{"teal":2189,"source":"contracts\\BiatecClammPool.algo.ts:502","pc":[2267,2268,2269]},{"teal":2194,"source":"contracts\\BiatecClammPool.algo.ts:503","pc":[2270,2271]},{"teal":2195,"source":"contracts\\BiatecClammPool.algo.ts:503","pc":[2272,2273]},{"teal":2199,"source":"contracts\\BiatecClammPool.algo.ts:504","pc":[2274,2275]},{"teal":2200,"source":"contracts\\BiatecClammPool.algo.ts:504","pc":[2276,2277]},{"teal":2204,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2278,2279]},{"teal":2205,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2280,2281]},{"teal":2206,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2282]},{"teal":2207,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2283]},{"teal":2208,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2284]},{"teal":2209,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2285]},{"teal":2212,"source":"contracts\\BiatecClammPool.algo.ts:505","errorMessage":"assetLpDelicmalScale2Scale overflowed 256 bits","pc":[2286]},{"teal":2213,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2287]},{"teal":2214,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2288]},{"teal":2215,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2289]},{"teal":2216,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2290]},{"teal":2217,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2291]},{"teal":2218,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2292]},{"teal":2219,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2293]},{"teal":2220,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2294]},{"teal":2221,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2295]},{"teal":2222,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2296,2297]},{"teal":2223,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2298]},{"teal":2224,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2299]},{"teal":2225,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2300]},{"teal":2226,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2301]},{"teal":2229,"source":"contracts\\BiatecClammPool.algo.ts:505","errorMessage":"realAssetBDeposit overflowed 256 bits","pc":[2302]},{"teal":2230,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2303]},{"teal":2231,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2304]},{"teal":2232,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2305]},{"teal":2233,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2306]},{"teal":2234,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2307]},{"teal":2235,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2308]},{"teal":2236,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2309]},{"teal":2237,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2310]},{"teal":2238,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2311]},{"teal":2239,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2312,2313]},{"teal":2240,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2314]},{"teal":2241,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2315]},{"teal":2242,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2316]},{"teal":2243,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2317]},{"teal":2246,"source":"contracts\\BiatecClammPool.algo.ts:505","errorMessage":"realAssetADeposit overflowed 256 bits","pc":[2318]},{"teal":2247,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2319]},{"teal":2248,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2320]},{"teal":2249,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2321]},{"teal":2250,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2322]},{"teal":2251,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2323]},{"teal":2252,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2324]},{"teal":2253,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2325]},{"teal":2254,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2326]},{"teal":2255,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2327]},{"teal":2256,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2328,2329,2330]},{"teal":2257,"source":"contracts\\BiatecClammPool.algo.ts:505","pc":[2331,2332,2333]},{"teal":2263,"source":"contracts\\BiatecClammPool.algo.ts:508","pc":[2334,2335]},{"teal":2264,"source":"contracts\\BiatecClammPool.algo.ts:508","pc":[2336,2337]},{"teal":2265,"source":"contracts\\BiatecClammPool.algo.ts:508","pc":[2338,2339]},{"teal":2266,"source":"contracts\\BiatecClammPool.algo.ts:508","pc":[2340]},{"teal":2267,"source":"contracts\\BiatecClammPool.algo.ts:508","pc":[2341]},{"teal":2268,"source":"contracts\\BiatecClammPool.algo.ts:508","pc":[2342,2343,2344]},{"teal":2269,"source":"contracts\\BiatecClammPool.algo.ts:508","pc":[2345,2346]},{"teal":2270,"source":"contracts\\BiatecClammPool.algo.ts:508","pc":[2347,2348]},{"teal":2271,"source":"contracts\\BiatecClammPool.algo.ts:508","pc":[2349,2350]},{"teal":2272,"source":"contracts\\BiatecClammPool.algo.ts:508","pc":[2351]},{"teal":2273,"source":"contracts\\BiatecClammPool.algo.ts:508","pc":[2352]},{"teal":2276,"source":"contracts\\BiatecClammPool.algo.ts:508","pc":[2353,2354,2355]},{"teal":2281,"source":"contracts\\BiatecClammPool.algo.ts:509","pc":[2356,2357]},{"teal":2282,"source":"contracts\\BiatecClammPool.algo.ts:509","pc":[2358,2359]},{"teal":2286,"source":"contracts\\BiatecClammPool.algo.ts:510","pc":[2360,2361]},{"teal":2287,"source":"contracts\\BiatecClammPool.algo.ts:510","pc":[2362,2363]},{"teal":2291,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2364,2365]},{"teal":2292,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2366,2367]},{"teal":2293,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2368]},{"teal":2294,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2369]},{"teal":2295,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2370]},{"teal":2296,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2371]},{"teal":2299,"source":"contracts\\BiatecClammPool.algo.ts:511","errorMessage":"assetLpDelicmalScale2Scale overflowed 256 bits","pc":[2372]},{"teal":2300,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2373]},{"teal":2301,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2374]},{"teal":2302,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2375]},{"teal":2303,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2376]},{"teal":2304,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2377]},{"teal":2305,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2378]},{"teal":2306,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2379]},{"teal":2307,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2380]},{"teal":2308,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2381]},{"teal":2309,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2382,2383]},{"teal":2310,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2384]},{"teal":2311,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2385]},{"teal":2312,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2386]},{"teal":2313,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2387]},{"teal":2316,"source":"contracts\\BiatecClammPool.algo.ts:511","errorMessage":"realAssetBDeposit overflowed 256 bits","pc":[2388]},{"teal":2317,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2389]},{"teal":2318,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2390]},{"teal":2319,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2391]},{"teal":2320,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2392]},{"teal":2321,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2393]},{"teal":2322,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2394]},{"teal":2323,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2395]},{"teal":2324,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2396]},{"teal":2325,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2397]},{"teal":2326,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2398,2399]},{"teal":2327,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2400]},{"teal":2328,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2401]},{"teal":2329,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2402]},{"teal":2330,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2403]},{"teal":2333,"source":"contracts\\BiatecClammPool.algo.ts:511","errorMessage":"realAssetADeposit overflowed 256 bits","pc":[2404]},{"teal":2334,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2405]},{"teal":2335,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2406]},{"teal":2336,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2407]},{"teal":2337,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2408]},{"teal":2338,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2409]},{"teal":2339,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2410]},{"teal":2340,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2411]},{"teal":2341,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2412]},{"teal":2342,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2413]},{"teal":2343,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2414,2415,2416]},{"teal":2344,"source":"contracts\\BiatecClammPool.algo.ts:511","pc":[2417,2418,2419]},{"teal":2350,"source":"contracts\\BiatecClammPool.algo.ts:514","pc":[2420,2421]},{"teal":2351,"source":"contracts\\BiatecClammPool.algo.ts:514","pc":[2422]},{"teal":2352,"source":"contracts\\BiatecClammPool.algo.ts:514","pc":[2423]},{"teal":2353,"source":"contracts\\BiatecClammPool.algo.ts:514","pc":[2424]},{"teal":2354,"source":"contracts\\BiatecClammPool.algo.ts:514","pc":[2425,2426,2427]},{"teal":2355,"source":"contracts\\BiatecClammPool.algo.ts:514","pc":[2428,2429]},{"teal":2356,"source":"contracts\\BiatecClammPool.algo.ts:514","pc":[2430]},{"teal":2357,"source":"contracts\\BiatecClammPool.algo.ts:514","pc":[2431]},{"teal":2358,"source":"contracts\\BiatecClammPool.algo.ts:514","pc":[2432]},{"teal":2361,"source":"contracts\\BiatecClammPool.algo.ts:514","pc":[2433,2434,2435]},{"teal":2367,"source":"contracts\\BiatecClammPool.algo.ts:516","pc":[2436,2437]},{"teal":2368,"source":"contracts\\BiatecClammPool.algo.ts:516","pc":[2438,2439]},{"teal":2369,"source":"contracts\\BiatecClammPool.algo.ts:516","pc":[2440]},{"teal":2370,"source":"contracts\\BiatecClammPool.algo.ts:516","pc":[2441]},{"teal":2371,"source":"contracts\\BiatecClammPool.algo.ts:516","pc":[2442,2443,2444]},{"teal":2376,"source":"contracts\\BiatecClammPool.algo.ts:517","pc":[2445,2446]},{"teal":2377,"source":"contracts\\BiatecClammPool.algo.ts:517","pc":[2447,2448]},{"teal":2378,"source":"contracts\\BiatecClammPool.algo.ts:517","pc":[2449,2450]},{"teal":2379,"source":"contracts\\BiatecClammPool.algo.ts:517","pc":[2451,2452]},{"teal":2380,"source":"contracts\\BiatecClammPool.algo.ts:517","pc":[2453,2454,2455]},{"teal":2386,"source":"contracts\\BiatecClammPool.algo.ts:519","pc":[2456,2457]},{"teal":2387,"source":"contracts\\BiatecClammPool.algo.ts:519","pc":[2458,2459]},{"teal":2388,"source":"contracts\\BiatecClammPool.algo.ts:519","pc":[2460]},{"teal":2389,"source":"contracts\\BiatecClammPool.algo.ts:519","pc":[2461]},{"teal":2390,"source":"contracts\\BiatecClammPool.algo.ts:519","pc":[2462,2463,2464]},{"teal":2395,"source":"contracts\\BiatecClammPool.algo.ts:520","pc":[2465,2466]},{"teal":2396,"source":"contracts\\BiatecClammPool.algo.ts:520","pc":[2467,2468]},{"teal":2397,"source":"contracts\\BiatecClammPool.algo.ts:520","pc":[2469,2470]},{"teal":2398,"source":"contracts\\BiatecClammPool.algo.ts:520","pc":[2471,2472]},{"teal":2399,"source":"contracts\\BiatecClammPool.algo.ts:520","pc":[2473,2474,2475]},{"teal":2404,"source":"contracts\\BiatecClammPool.algo.ts:522","pc":[2476]},{"teal":2405,"source":"contracts\\BiatecClammPool.algo.ts:522","pc":[2477,2478,2479]},{"teal":2410,"source":"contracts\\BiatecClammPool.algo.ts:524","pc":[2480]},{"teal":2413,"source":"contracts\\BiatecClammPool.algo.ts:524","errorMessage":"failed to calculate exact liqudidity","pc":[2481]},{"teal":2417,"source":"contracts\\BiatecClammPool.algo.ts:525","pc":[2482,2483]},{"teal":2421,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[2484,2485]},{"teal":2424,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[2486,2487]},{"teal":2425,"source":"contracts\\BiatecClammPool.algo.ts:343","pc":[2488]},{"teal":2436,"source":"contracts\\BiatecClammPool.algo.ts:536","pc":[2489,2490,2491]},{"teal":2439,"source":"contracts\\BiatecClammPool.algo.ts:536","pc":[2492]},{"teal":2440,"source":"contracts\\BiatecClammPool.algo.ts:536","pc":[2493,2494]},{"teal":2444,"source":"contracts\\BiatecClammPool.algo.ts:542","pc":[2495]},{"teal":2445,"source":"contracts\\BiatecClammPool.algo.ts:542","pc":[2496,2497]},{"teal":2446,"source":"contracts\\BiatecClammPool.algo.ts:542","pc":[2498,2499]},{"teal":2447,"source":"contracts\\BiatecClammPool.algo.ts:542","pc":[2500]},{"teal":2448,"source":"contracts\\BiatecClammPool.algo.ts:542","pc":[2501,2502]},{"teal":2449,"source":"contracts\\BiatecClammPool.algo.ts:542","pc":[2503,2504]},{"teal":2450,"source":"contracts\\BiatecClammPool.algo.ts:542","pc":[2505]},{"teal":2451,"source":"contracts\\BiatecClammPool.algo.ts:542","pc":[2506,2507]},{"teal":2452,"source":"contracts\\BiatecClammPool.algo.ts:542","pc":[2508,2509]},{"teal":2453,"source":"contracts\\BiatecClammPool.algo.ts:542","pc":[2510,2511]},{"teal":2454,"source":"contracts\\BiatecClammPool.algo.ts:542","pc":[2512,2513]},{"teal":2455,"source":"contracts\\BiatecClammPool.algo.ts:542","pc":[2514]},{"teal":2459,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2515]},{"teal":2460,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2516]},{"teal":2461,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2517]},{"teal":2462,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2518,2519]},{"teal":2463,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2520]},{"teal":2464,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2521]},{"teal":2465,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2522]},{"teal":2466,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2523]},{"teal":2467,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2524]},{"teal":2470,"source":"contracts\\BiatecClammPool.algo.ts:544","errorMessage":"this.assetABalance.value + realAssetADeposit overflowed 256 bits","pc":[2525]},{"teal":2471,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2526]},{"teal":2472,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2527]},{"teal":2473,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2528]},{"teal":2474,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2529]},{"teal":2475,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2530]},{"teal":2476,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2531]},{"teal":2477,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2532]},{"teal":2478,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2533]},{"teal":2479,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2534]},{"teal":2480,"source":"contracts\\BiatecClammPool.algo.ts:544","pc":[2535]},{"teal":2484,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2536,2537]},{"teal":2485,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2538]},{"teal":2486,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2539]},{"teal":2487,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2540,2541]},{"teal":2488,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2542]},{"teal":2489,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2543]},{"teal":2490,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2544]},{"teal":2491,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2545]},{"teal":2492,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2546]},{"teal":2495,"source":"contracts\\BiatecClammPool.algo.ts:545","errorMessage":"this.assetBBalance.value + realAssetBDeposit overflowed 256 bits","pc":[2547]},{"teal":2496,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2548]},{"teal":2497,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2549]},{"teal":2498,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2550]},{"teal":2499,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2551]},{"teal":2500,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2552]},{"teal":2501,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2553]},{"teal":2502,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2554]},{"teal":2503,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2555]},{"teal":2504,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2556]},{"teal":2505,"source":"contracts\\BiatecClammPool.algo.ts:545","pc":[2557]},{"teal":2509,"source":"contracts\\BiatecClammPool.algo.ts:548","pc":[2558]},{"teal":2510,"source":"contracts\\BiatecClammPool.algo.ts:548","pc":[2559]},{"teal":2511,"source":"contracts\\BiatecClammPool.algo.ts:548","pc":[2560,2561]},{"teal":2515,"source":"contracts\\BiatecClammPool.algo.ts:549","pc":[2562,2563]},{"teal":2516,"source":"contracts\\BiatecClammPool.algo.ts:549","pc":[2564]},{"teal":2517,"source":"contracts\\BiatecClammPool.algo.ts:549","pc":[2565,2566]},{"teal":2521,"source":"contracts\\BiatecClammPool.algo.ts:550","pc":[2567,2568]},{"teal":2522,"source":"contracts\\BiatecClammPool.algo.ts:550","pc":[2569]},{"teal":2523,"source":"contracts\\BiatecClammPool.algo.ts:550","pc":[2570]},{"teal":2524,"source":"contracts\\BiatecClammPool.algo.ts:550","pc":[2571,2572]},{"teal":2528,"source":"contracts\\BiatecClammPool.algo.ts:551","pc":[2573,2574]},{"teal":2529,"source":"contracts\\BiatecClammPool.algo.ts:551","pc":[2575]},{"teal":2530,"source":"contracts\\BiatecClammPool.algo.ts:551","pc":[2576]},{"teal":2531,"source":"contracts\\BiatecClammPool.algo.ts:551","pc":[2577,2578]},{"teal":2535,"source":"contracts\\BiatecClammPool.algo.ts:552","pc":[2579,2580]},{"teal":2536,"source":"contracts\\BiatecClammPool.algo.ts:552","pc":[2581]},{"teal":2537,"source":"contracts\\BiatecClammPool.algo.ts:552","pc":[2582,2583]},{"teal":2541,"source":"contracts\\BiatecClammPool.algo.ts:553","pc":[2584,2585]},{"teal":2542,"source":"contracts\\BiatecClammPool.algo.ts:553","pc":[2586]},{"teal":2543,"source":"contracts\\BiatecClammPool.algo.ts:553","pc":[2587,2588]},{"teal":2547,"source":"contracts\\BiatecClammPool.algo.ts:554","pc":[2589,2590]},{"teal":2548,"source":"contracts\\BiatecClammPool.algo.ts:554","pc":[2591,2592]},{"teal":2553,"source":"contracts\\BiatecClammPool.algo.ts:555","pc":[2593,2594]},{"teal":2554,"source":"contracts\\BiatecClammPool.algo.ts:555","pc":[2595,2596]},{"teal":2555,"source":"contracts\\BiatecClammPool.algo.ts:555","pc":[2597]},{"teal":2556,"source":"contracts\\BiatecClammPool.algo.ts:555","pc":[2598,2599,2600]},{"teal":2561,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2601,2602]},{"teal":2562,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2603]},{"teal":2563,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2604]},{"teal":2564,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2605]},{"teal":2565,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2606]},{"teal":2568,"source":"contracts\\BiatecClammPool.algo.ts:556","errorMessage":"priceMin overflowed 256 bits","pc":[2607]},{"teal":2569,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2608]},{"teal":2570,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2609]},{"teal":2571,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2610]},{"teal":2572,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2611]},{"teal":2573,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2612]},{"teal":2574,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2613]},{"teal":2575,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2614]},{"teal":2576,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2615]},{"teal":2577,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2616]},{"teal":2578,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2617,2618]},{"teal":2579,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2619,2620]},{"teal":2580,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2621,2622,2623]},{"teal":2581,"source":"contracts\\BiatecClammPool.algo.ts:556","pc":[2624,2625]},{"teal":2582,"source":"contracts\\BiatecClammPool.algo.ts:555","pc":[2626,2627,2628]},{"teal":2587,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2629,2630]},{"teal":2588,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2631,2632]},{"teal":2589,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2633,2634]},{"teal":2590,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2635]},{"teal":2591,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2636]},{"teal":2592,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2637]},{"teal":2593,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2638]},{"teal":2596,"source":"contracts\\BiatecClammPool.algo.ts:558","errorMessage":"priceMax overflowed 256 bits","pc":[2639]},{"teal":2597,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2640]},{"teal":2598,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2641]},{"teal":2599,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2642]},{"teal":2600,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2643]},{"teal":2601,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2644]},{"teal":2602,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2645]},{"teal":2603,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2646]},{"teal":2604,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2647]},{"teal":2605,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2648]},{"teal":2606,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2649,2650]},{"teal":2607,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2651]},{"teal":2608,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2652]},{"teal":2609,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2653]},{"teal":2610,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2654]},{"teal":2613,"source":"contracts\\BiatecClammPool.algo.ts:558","errorMessage":"priceMin overflowed 256 bits","pc":[2655]},{"teal":2614,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2656]},{"teal":2615,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2657]},{"teal":2616,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2658]},{"teal":2617,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2659]},{"teal":2618,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2660]},{"teal":2619,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2661]},{"teal":2620,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2662]},{"teal":2621,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2663]},{"teal":2622,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2664]},{"teal":2623,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2665,2666]},{"teal":2624,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2667,2668]},{"teal":2625,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2669,2670,2671]},{"teal":2626,"source":"contracts\\BiatecClammPool.algo.ts:558","pc":[2672,2673]},{"teal":2630,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2674,2675]},{"teal":2631,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2676]},{"teal":2632,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2677]},{"teal":2633,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2678]},{"teal":2634,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2679]},{"teal":2637,"source":"contracts\\BiatecClammPool.algo.ts:559","errorMessage":"D_SQRT overflowed 256 bits","pc":[2680]},{"teal":2638,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2681]},{"teal":2639,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2682]},{"teal":2640,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2683]},{"teal":2641,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2684]},{"teal":2642,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2685]},{"teal":2643,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2686]},{"teal":2644,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2687]},{"teal":2645,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2688]},{"teal":2646,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2689]},{"teal":2647,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2690,2691]},{"teal":2648,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2692,2693]},{"teal":2649,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2694,2695]},{"teal":2650,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2696,2697]},{"teal":2651,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2698,2699,2700]},{"teal":2652,"source":"contracts\\BiatecClammPool.algo.ts:559","pc":[2701,2702]},{"teal":2657,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2703,2704]},{"teal":2658,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2705,2706]},{"teal":2659,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2707]},{"teal":2660,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2708]},{"teal":2661,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2709,2710]},{"teal":2662,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2711]},{"teal":2663,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2712]},{"teal":2664,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2713]},{"teal":2665,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2714,2715]},{"teal":2666,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2716]},{"teal":2669,"source":"contracts\\BiatecClammPool.algo.ts:562","errorMessage":"((newLiqudity - this.Liqudity.value) / assetLpDelicmalScale2Scale) as uint64 overflowed 64 bits","pc":[2717]},{"teal":2670,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2718,2719]},{"teal":2671,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2720]},{"teal":2672,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2721]},{"teal":2673,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2722]},{"teal":2674,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2723]},{"teal":2675,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2724,2725]},{"teal":2676,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2726]},{"teal":2677,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2727]},{"teal":2678,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2728]},{"teal":2679,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2729]},{"teal":2680,"source":"contracts\\BiatecClammPool.algo.ts:562","pc":[2730,2731]},{"teal":2684,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2732,2733]},{"teal":2685,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2734,2735]},{"teal":2686,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2736]},{"teal":2687,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2737]},{"teal":2688,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2738]},{"teal":2689,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2739]},{"teal":2692,"source":"contracts\\BiatecClammPool.algo.ts:564","errorMessage":"newLiqudity overflowed 256 bits","pc":[2740]},{"teal":2693,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2741]},{"teal":2694,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2742]},{"teal":2695,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2743]},{"teal":2696,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2744]},{"teal":2697,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2745]},{"teal":2698,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2746]},{"teal":2699,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2747]},{"teal":2700,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2748]},{"teal":2701,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2749]},{"teal":2702,"source":"contracts\\BiatecClammPool.algo.ts:564","pc":[2750]},{"teal":2706,"source":"contracts\\BiatecClammPool.algo.ts:566","pc":[2751,2752]},{"teal":2707,"source":"contracts\\BiatecClammPool.algo.ts:566","pc":[2753,2754]},{"teal":2708,"source":"contracts\\BiatecClammPool.algo.ts:566","pc":[2755,2756]},{"teal":2709,"source":"contracts\\BiatecClammPool.algo.ts:566","pc":[2757,2758,2759]},{"teal":2713,"source":"contracts\\BiatecClammPool.algo.ts:572","pc":[2760,2761]},{"teal":2714,"source":"contracts\\BiatecClammPool.algo.ts:572","pc":[2762]},{"teal":2715,"source":"contracts\\BiatecClammPool.algo.ts:572","pc":[2763]},{"teal":2718,"source":"contracts\\BiatecClammPool.algo.ts:572","errorMessage":"LP-ZERO-ERR","pc":[2764]},{"teal":2722,"source":"contracts\\BiatecClammPool.algo.ts:573","pc":[2765,2766]},{"teal":2725,"source":"contracts\\BiatecClammPool.algo.ts:536","pc":[2767,2768]},{"teal":2728,"source":"contracts\\BiatecClammPool.algo.ts:536","pc":[2769,2770]},{"teal":2729,"source":"contracts\\BiatecClammPool.algo.ts:536","pc":[2771]},{"teal":2734,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2772,2773]},{"teal":2737,"source":"contracts\\BiatecClammPool.algo.ts:592","pc":[2774,2775,2776]},{"teal":2738,"source":"contracts\\BiatecClammPool.algo.ts:592","pc":[2777]},{"teal":2741,"source":"contracts\\BiatecClammPool.algo.ts:591","pc":[2778,2779,2780]},{"teal":2742,"source":"contracts\\BiatecClammPool.algo.ts:591","pc":[2781]},{"teal":2745,"source":"contracts\\BiatecClammPool.algo.ts:590","pc":[2782,2783,2784]},{"teal":2746,"source":"contracts\\BiatecClammPool.algo.ts:590","pc":[2785]},{"teal":2749,"source":"contracts\\BiatecClammPool.algo.ts:589","pc":[2786,2787]},{"teal":2750,"source":"contracts\\BiatecClammPool.algo.ts:589","pc":[2788]},{"teal":2751,"source":"contracts\\BiatecClammPool.algo.ts:589","pc":[2789]},{"teal":2752,"source":"contracts\\BiatecClammPool.algo.ts:589","pc":[2790]},{"teal":2753,"source":"contracts\\BiatecClammPool.algo.ts:589","pc":[2791,2792]},{"teal":2754,"source":"contracts\\BiatecClammPool.algo.ts:589","pc":[2793,2794]},{"teal":2755,"source":"contracts\\BiatecClammPool.algo.ts:589","pc":[2795]},{"teal":2758,"source":"contracts\\BiatecClammPool.algo.ts:589","errorMessage":"argument 3 (txLpXfer) for removeLiquidity must be a axfer transaction","pc":[2796]},{"teal":2761,"source":"contracts\\BiatecClammPool.algo.ts:588","pc":[2797,2798,2799]},{"teal":2762,"source":"contracts\\BiatecClammPool.algo.ts:588","pc":[2800]},{"teal":2765,"source":"contracts\\BiatecClammPool.algo.ts:587","pc":[2801,2802,2803]},{"teal":2766,"source":"contracts\\BiatecClammPool.algo.ts:587","pc":[2804]},{"teal":2769,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2805,2806,2807]},{"teal":2770,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2808]},{"teal":2771,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2809]},{"teal":2772,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2810]},{"teal":2773,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2811]},{"teal":2776,"source":"contracts\\BiatecClammPool.algo.ts:586","errorMessage":"removeLiquidity return value overflowed 256 bits","pc":[2812]},{"teal":2777,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2813]},{"teal":2778,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2814]},{"teal":2779,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2815]},{"teal":2780,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2816]},{"teal":2781,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2817]},{"teal":2782,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2818]},{"teal":2783,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2819]},{"teal":2784,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2820]},{"teal":2785,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2821]},{"teal":2786,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2822]},{"teal":2787,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2823]},{"teal":2788,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2824]},{"teal":2789,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2825]},{"teal":2802,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2826,2827,2828]},{"teal":2805,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2829]},{"teal":2806,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[2830,2831]},{"teal":2811,"source":"contracts\\BiatecClammPool.algo.ts:595","pc":[2832,2833]},{"teal":2812,"source":"contracts\\BiatecClammPool.algo.ts:595","pc":[2834,2835]},{"teal":2813,"source":"contracts\\BiatecClammPool.algo.ts:595","pc":[2836,2837]},{"teal":2814,"source":"contracts\\BiatecClammPool.algo.ts:595","pc":[2838,2839,2840]},{"teal":2823,"source":"contracts\\BiatecClammPool.algo.ts:596","pc":[2841,2842]},{"teal":2824,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[2843,2844]},{"teal":2825,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[2845,2846]},{"teal":2826,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[2847]},{"teal":2829,"source":"contracts\\BiatecClammPool.algo.ts:597","errorMessage":"transaction verification failed: {\"txn\":\"txLpXfer\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[2848]},{"teal":2832,"source":"contracts\\BiatecClammPool.algo.ts:596","pc":[2849,2850]},{"teal":2833,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[2851,2852]},{"teal":2834,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[2853,2854]},{"teal":2835,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[2855]},{"teal":2838,"source":"contracts\\BiatecClammPool.algo.ts:598","errorMessage":"transaction verification failed: {\"txn\":\"txLpXfer\",\"field\":\"xferAsset\",\"expected\":\"assetLp\"}","pc":[2856]},{"teal":2841,"source":"contracts\\BiatecClammPool.algo.ts:596","pc":[2857,2858]},{"teal":2842,"source":"contracts\\BiatecClammPool.algo.ts:599","pc":[2859,2860]},{"teal":2843,"source":"contracts\\BiatecClammPool.algo.ts:599","pc":[2861]},{"teal":2844,"source":"contracts\\BiatecClammPool.algo.ts:599","pc":[2862]},{"teal":2847,"source":"contracts\\BiatecClammPool.algo.ts:599","errorMessage":"transaction verification failed: {\"txn\":\"txLpXfer\",\"field\":\"assetAmount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=0\"}","pc":[2863]},{"teal":2851,"source":"contracts\\BiatecClammPool.algo.ts:602","pc":[2864,2865]},{"teal":2852,"source":"contracts\\BiatecClammPool.algo.ts:602","pc":[2866,2867]},{"teal":2853,"source":"contracts\\BiatecClammPool.algo.ts:602","pc":[2868,2869,2870]},{"teal":2857,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2871]},{"teal":2858,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2872,2873]},{"teal":2859,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2874,2875]},{"teal":2860,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2876]},{"teal":2861,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2877,2878]},{"teal":2862,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2879,2880]},{"teal":2863,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2881]},{"teal":2864,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2882,2883]},{"teal":2865,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2884,2885]},{"teal":2866,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2886,2887]},{"teal":2867,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2888,2889]},{"teal":2868,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2890]},{"teal":2872,"source":"contracts\\BiatecClammPool.algo.ts:606","pc":[2891]},{"teal":2873,"source":"contracts\\BiatecClammPool.algo.ts:606","pc":[2892,2893]},{"teal":2874,"source":"contracts\\BiatecClammPool.algo.ts:606","pc":[2894,2895]},{"teal":2875,"source":"contracts\\BiatecClammPool.algo.ts:606","pc":[2896]},{"teal":2876,"source":"contracts\\BiatecClammPool.algo.ts:606","pc":[2897,2898]},{"teal":2877,"source":"contracts\\BiatecClammPool.algo.ts:606","pc":[2899,2900]},{"teal":2878,"source":"contracts\\BiatecClammPool.algo.ts:606","pc":[2901]},{"teal":2879,"source":"contracts\\BiatecClammPool.algo.ts:606","pc":[2902,2903]},{"teal":2880,"source":"contracts\\BiatecClammPool.algo.ts:606","pc":[2904,2905]},{"teal":2881,"source":"contracts\\BiatecClammPool.algo.ts:606","pc":[2906,2907]},{"teal":2882,"source":"contracts\\BiatecClammPool.algo.ts:606","pc":[2908,2909]},{"teal":2883,"source":"contracts\\BiatecClammPool.algo.ts:606","pc":[2910]},{"teal":2887,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[2911,2912]},{"teal":2888,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[2913,2914]},{"teal":2889,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[2915]},{"teal":2890,"source":"contracts\\BiatecClammPool.algo.ts:608","pc":[2916]},{"teal":2891,"source":"contracts\\BiatecClammPool.algo.ts:608","pc":[2917,2918]},{"teal":2895,"source":"contracts\\BiatecClammPool.algo.ts:610","pc":[2919,2920]},{"teal":2896,"source":"contracts\\BiatecClammPool.algo.ts:610","pc":[2921,2922]},{"teal":2897,"source":"contracts\\BiatecClammPool.algo.ts:610","pc":[2923]},{"teal":2898,"source":"contracts\\BiatecClammPool.algo.ts:610","pc":[2924,2925]},{"teal":2902,"source":"contracts\\BiatecClammPool.algo.ts:611","pc":[2926,2927]},{"teal":2903,"source":"contracts\\BiatecClammPool.algo.ts:611","pc":[2928,2929]},{"teal":2904,"source":"contracts\\BiatecClammPool.algo.ts:611","pc":[2930]},{"teal":2905,"source":"contracts\\BiatecClammPool.algo.ts:611","pc":[2931,2932]},{"teal":2909,"source":"contracts\\BiatecClammPool.algo.ts:612","pc":[2933,2934]},{"teal":2910,"source":"contracts\\BiatecClammPool.algo.ts:612","pc":[2935,2936]},{"teal":2914,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2937,2938]},{"teal":2915,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2939]},{"teal":2916,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2940]},{"teal":2917,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2941]},{"teal":2918,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2942]},{"teal":2921,"source":"contracts\\BiatecClammPool.algo.ts:613","errorMessage":"lpDelta overflowed 256 bits","pc":[2943]},{"teal":2922,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2944]},{"teal":2923,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2945]},{"teal":2924,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2946]},{"teal":2925,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2947]},{"teal":2926,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2948]},{"teal":2927,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2949]},{"teal":2928,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2950]},{"teal":2929,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2951]},{"teal":2930,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2952]},{"teal":2931,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2953,2954]},{"teal":2932,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2955,2956,2957]},{"teal":2933,"source":"contracts\\BiatecClammPool.algo.ts:613","pc":[2958,2959]},{"teal":2938,"source":"contracts\\BiatecClammPool.algo.ts:614","pc":[2960,2961]},{"teal":2939,"source":"contracts\\BiatecClammPool.algo.ts:614","pc":[2962,2963]},{"teal":2940,"source":"contracts\\BiatecClammPool.algo.ts:614","pc":[2964]},{"teal":2941,"source":"contracts\\BiatecClammPool.algo.ts:614","pc":[2965,2966,2967]},{"teal":2946,"source":"contracts\\BiatecClammPool.algo.ts:616","pc":[2968,2969]},{"teal":2947,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[2970]},{"teal":2948,"source":"contracts\\BiatecClammPool.algo.ts:616","pc":[2971]},{"teal":2949,"source":"contracts\\BiatecClammPool.algo.ts:616","pc":[2972,2973]},{"teal":2950,"source":"contracts\\BiatecClammPool.algo.ts:616","pc":[2974]},{"teal":2951,"source":"contracts\\BiatecClammPool.algo.ts:616","pc":[2975,2976]},{"teal":2955,"source":"contracts\\BiatecClammPool.algo.ts:617","pc":[2977,2978]},{"teal":2956,"source":"contracts\\BiatecClammPool.algo.ts:617","pc":[2979]},{"teal":2957,"source":"contracts\\BiatecClammPool.algo.ts:617","pc":[2980,2981]},{"teal":2958,"source":"contracts\\BiatecClammPool.algo.ts:617","pc":[2982]},{"teal":2959,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[2983]},{"teal":2960,"source":"contracts\\BiatecClammPool.algo.ts:617","pc":[2984]},{"teal":2961,"source":"contracts\\BiatecClammPool.algo.ts:617","pc":[2985,2986]},{"teal":2965,"source":"contracts\\BiatecClammPool.algo.ts:618","pc":[2987,2988]},{"teal":2966,"source":"contracts\\BiatecClammPool.algo.ts:618","pc":[2989,2990]},{"teal":2967,"source":"contracts\\BiatecClammPool.algo.ts:618","pc":[2991]},{"teal":2968,"source":"contracts\\BiatecClammPool.algo.ts:618","pc":[2992,2993]},{"teal":2972,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[2994,2995]},{"teal":2973,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[2996]},{"teal":2974,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[2997]},{"teal":2975,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[2998,2999]},{"teal":2976,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3000]},{"teal":2977,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3001]},{"teal":2978,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3002]},{"teal":2979,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3003]},{"teal":2980,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3004]},{"teal":2983,"source":"contracts\\BiatecClammPool.algo.ts:619","errorMessage":"this.LiqudityUsersFromFees.value - myPortionOfFeesCollected overflowed 256 bits","pc":[3005]},{"teal":2984,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3006]},{"teal":2985,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3007]},{"teal":2986,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3008]},{"teal":2987,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3009]},{"teal":2988,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3010]},{"teal":2989,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3011]},{"teal":2990,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3012]},{"teal":2991,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3013]},{"teal":2992,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3014]},{"teal":2993,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[3015]},{"teal":3002,"source":"contracts\\BiatecClammPool.algo.ts:624","pc":[3016,3017]},{"teal":3003,"source":"contracts\\BiatecClammPool.algo.ts:624","pc":[3018]},{"teal":3004,"source":"contracts\\BiatecClammPool.algo.ts:623","pc":[3019]},{"teal":3005,"source":"contracts\\BiatecClammPool.algo.ts:623","pc":[3020]},{"teal":3006,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3021,3022]},{"teal":3007,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3023]},{"teal":3008,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3024]},{"teal":3009,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3025]},{"teal":3010,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3026]},{"teal":3013,"source":"contracts\\BiatecClammPool.algo.ts:622","errorMessage":"lpDeltaWithFees overflowed 256 bits","pc":[3027]},{"teal":3014,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3028]},{"teal":3015,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3029]},{"teal":3016,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3030]},{"teal":3017,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3031]},{"teal":3018,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3032]},{"teal":3019,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3033]},{"teal":3020,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3034]},{"teal":3021,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3035]},{"teal":3022,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[3036]},{"teal":3023,"source":"contracts\\BiatecClammPool.algo.ts:621","pc":[3037,3038,3039]},{"teal":3024,"source":"contracts\\BiatecClammPool.algo.ts:621","pc":[3040,3041]},{"teal":3028,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3042,3043]},{"teal":3029,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3044,3045]},{"teal":3030,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3046]},{"teal":3031,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3047]},{"teal":3032,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3048]},{"teal":3033,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3049]},{"teal":3034,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3050,3051]},{"teal":3035,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3052]},{"teal":3038,"source":"contracts\\BiatecClammPool.algo.ts:626","errorMessage":"(aToSend / this.assetADecimals.value) as uint64 overflowed 64 bits","pc":[3053]},{"teal":3039,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3054,3055]},{"teal":3040,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3056]},{"teal":3041,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3057]},{"teal":3042,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3058]},{"teal":3043,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3059]},{"teal":3044,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3060,3061]},{"teal":3045,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3062]},{"teal":3046,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3063]},{"teal":3047,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3064]},{"teal":3048,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3065]},{"teal":3049,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[3066,3067]},{"teal":3054,"source":"contracts\\BiatecClammPool.algo.ts:627","pc":[3068,3069]},{"teal":3055,"source":"contracts\\BiatecClammPool.algo.ts:627","pc":[3070]},{"teal":3056,"source":"contracts\\BiatecClammPool.algo.ts:627","pc":[3071]},{"teal":3057,"source":"contracts\\BiatecClammPool.algo.ts:627","pc":[3072,3073,3074]},{"teal":3062,"source":"contracts\\BiatecClammPool.algo.ts:628","pc":[3075,3076]},{"teal":3063,"source":"contracts\\BiatecClammPool.algo.ts:628","pc":[3077,3078]},{"teal":3064,"source":"contracts\\BiatecClammPool.algo.ts:628","pc":[3079,3080]},{"teal":3065,"source":"contracts\\BiatecClammPool.algo.ts:628","pc":[3081,3082,3083]},{"teal":3074,"source":"contracts\\BiatecClammPool.algo.ts:633","pc":[3084,3085]},{"teal":3075,"source":"contracts\\BiatecClammPool.algo.ts:633","pc":[3086]},{"teal":3076,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[3087,3088]},{"teal":3077,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[3089]},{"teal":3078,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3090,3091]},{"teal":3079,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3092]},{"teal":3080,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3093]},{"teal":3081,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3094]},{"teal":3082,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3095]},{"teal":3085,"source":"contracts\\BiatecClammPool.algo.ts:631","errorMessage":"lpDeltaWithFees overflowed 256 bits","pc":[3096]},{"teal":3086,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3097]},{"teal":3087,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3098]},{"teal":3088,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3099]},{"teal":3089,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3100]},{"teal":3090,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3101]},{"teal":3091,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3102]},{"teal":3092,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3103]},{"teal":3093,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3104]},{"teal":3094,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[3105]},{"teal":3095,"source":"contracts\\BiatecClammPool.algo.ts:630","pc":[3106,3107,3108]},{"teal":3096,"source":"contracts\\BiatecClammPool.algo.ts:630","pc":[3109,3110]},{"teal":3100,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3111,3112]},{"teal":3101,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3113,3114]},{"teal":3102,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3115]},{"teal":3103,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3116]},{"teal":3104,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3117]},{"teal":3105,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3118]},{"teal":3106,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3119,3120]},{"teal":3107,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3121]},{"teal":3110,"source":"contracts\\BiatecClammPool.algo.ts:635","errorMessage":"(bToSend / this.assetBDecimals.value) as uint64 overflowed 64 bits","pc":[3122]},{"teal":3111,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3123,3124]},{"teal":3112,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3125]},{"teal":3113,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3126]},{"teal":3114,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3127]},{"teal":3115,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3128]},{"teal":3116,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3129,3130]},{"teal":3117,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3131]},{"teal":3118,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3132]},{"teal":3119,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3133]},{"teal":3120,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3134]},{"teal":3121,"source":"contracts\\BiatecClammPool.algo.ts:635","pc":[3135,3136]},{"teal":3126,"source":"contracts\\BiatecClammPool.algo.ts:636","pc":[3137,3138]},{"teal":3127,"source":"contracts\\BiatecClammPool.algo.ts:636","pc":[3139]},{"teal":3128,"source":"contracts\\BiatecClammPool.algo.ts:636","pc":[3140]},{"teal":3129,"source":"contracts\\BiatecClammPool.algo.ts:636","pc":[3141,3142,3143]},{"teal":3134,"source":"contracts\\BiatecClammPool.algo.ts:637","pc":[3144,3145]},{"teal":3135,"source":"contracts\\BiatecClammPool.algo.ts:637","pc":[3146,3147]},{"teal":3136,"source":"contracts\\BiatecClammPool.algo.ts:637","pc":[3148,3149]},{"teal":3137,"source":"contracts\\BiatecClammPool.algo.ts:637","pc":[3150,3151,3152]},{"teal":3142,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[3153,3154]},{"teal":3143,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[3155]},{"teal":3144,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[3156]},{"teal":3145,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[3157]},{"teal":3146,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[3158,3159,3160]},{"teal":3147,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[3161,3162]},{"teal":3148,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[3163]},{"teal":3149,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[3164]},{"teal":3150,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[3165]},{"teal":3154,"source":"contracts\\BiatecClammPool.algo.ts:641","errorMessage":"ERR-REM-ZERO","pc":[3166]},{"teal":3158,"source":"contracts\\BiatecClammPool.algo.ts:643","pc":[3167]},{"teal":3159,"source":"contracts\\BiatecClammPool.algo.ts:643","pc":[3168]},{"teal":3160,"source":"contracts\\BiatecClammPool.algo.ts:643","pc":[3169,3170]},{"teal":3161,"source":"contracts\\BiatecClammPool.algo.ts:643","pc":[3171]},{"teal":3162,"source":"contracts\\BiatecClammPool.algo.ts:643","pc":[3172,3173]},{"teal":3166,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[3174,3175]},{"teal":3167,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[3176]},{"teal":3168,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[3177,3178]},{"teal":3169,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[3179]},{"teal":3170,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[3180,3181]},{"teal":3174,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3182]},{"teal":3175,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3183,3184]},{"teal":3176,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3185]},{"teal":3177,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3186]},{"teal":3178,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3187]},{"teal":3179,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3188]},{"teal":3182,"source":"contracts\\BiatecClammPool.algo.ts:645","errorMessage":"newAssetA overflowed 256 bits","pc":[3189]},{"teal":3183,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3190]},{"teal":3184,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3191]},{"teal":3185,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3192]},{"teal":3186,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3193]},{"teal":3187,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3194]},{"teal":3188,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3195]},{"teal":3189,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3196]},{"teal":3190,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3197]},{"teal":3191,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3198]},{"teal":3192,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[3199]},{"teal":3196,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3200,3201]},{"teal":3197,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3202,3203]},{"teal":3198,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3204]},{"teal":3199,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3205]},{"teal":3200,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3206]},{"teal":3201,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3207]},{"teal":3204,"source":"contracts\\BiatecClammPool.algo.ts:646","errorMessage":"newAssetB overflowed 256 bits","pc":[3208]},{"teal":3205,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3209]},{"teal":3206,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3210]},{"teal":3207,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3211]},{"teal":3208,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3212]},{"teal":3209,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3213]},{"teal":3210,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3214]},{"teal":3211,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3215]},{"teal":3212,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3216]},{"teal":3213,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3217]},{"teal":3214,"source":"contracts\\BiatecClammPool.algo.ts:646","pc":[3218]},{"teal":3218,"source":"contracts\\BiatecClammPool.algo.ts:650","pc":[3219,3220]},{"teal":3219,"source":"contracts\\BiatecClammPool.algo.ts:650","pc":[3221,3222]},{"teal":3224,"source":"contracts\\BiatecClammPool.algo.ts:651","pc":[3223,3224]},{"teal":3225,"source":"contracts\\BiatecClammPool.algo.ts:651","pc":[3225]},{"teal":3226,"source":"contracts\\BiatecClammPool.algo.ts:651","pc":[3226,3227]},{"teal":3227,"source":"contracts\\BiatecClammPool.algo.ts:651","pc":[3228]},{"teal":3228,"source":"contracts\\BiatecClammPool.algo.ts:651","pc":[3229]},{"teal":3229,"source":"contracts\\BiatecClammPool.algo.ts:651","pc":[3230,3231,3232]},{"teal":3238,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3233,3234]},{"teal":3239,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3235]},{"teal":3240,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3236]},{"teal":3241,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3237]},{"teal":3242,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3238]},{"teal":3243,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3239]},{"teal":3244,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3240]},{"teal":3247,"source":"contracts\\BiatecClammPool.algo.ts:655","errorMessage":"this.priceMin.value as uint256 overflowed 256 bits","pc":[3241]},{"teal":3248,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3242]},{"teal":3249,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3243]},{"teal":3250,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3244]},{"teal":3251,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3245]},{"teal":3252,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3246]},{"teal":3253,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3247]},{"teal":3254,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3248]},{"teal":3255,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3249]},{"teal":3256,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[3250]},{"teal":3257,"source":"contracts\\BiatecClammPool.algo.ts:654","pc":[3251,3252]},{"teal":3258,"source":"contracts\\BiatecClammPool.algo.ts:654","pc":[3253]},{"teal":3259,"source":"contracts\\BiatecClammPool.algo.ts:653","pc":[3254]},{"teal":3260,"source":"contracts\\BiatecClammPool.algo.ts:653","pc":[3255]},{"teal":3261,"source":"contracts\\BiatecClammPool.algo.ts:652","pc":[3256,3257,3258]},{"teal":3262,"source":"contracts\\BiatecClammPool.algo.ts:652","pc":[3259,3260]},{"teal":3263,"source":"contracts\\BiatecClammPool.algo.ts:651","pc":[3261,3262,3263]},{"teal":3275,"source":"contracts\\BiatecClammPool.algo.ts:664","pc":[3264,3265]},{"teal":3276,"source":"contracts\\BiatecClammPool.algo.ts:664","pc":[3266]},{"teal":3277,"source":"contracts\\BiatecClammPool.algo.ts:663","pc":[3267,3268]},{"teal":3278,"source":"contracts\\BiatecClammPool.algo.ts:663","pc":[3269]},{"teal":3279,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3270,3271]},{"teal":3280,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3272]},{"teal":3281,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3273]},{"teal":3282,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3274]},{"teal":3283,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3275]},{"teal":3284,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3276]},{"teal":3285,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3277]},{"teal":3288,"source":"contracts\\BiatecClammPool.algo.ts:662","errorMessage":"this.priceMax.value as uint256 overflowed 256 bits","pc":[3278]},{"teal":3289,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3279]},{"teal":3290,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3280]},{"teal":3291,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3281]},{"teal":3292,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3282]},{"teal":3293,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3283]},{"teal":3294,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3284]},{"teal":3295,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3285]},{"teal":3296,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3286]},{"teal":3297,"source":"contracts\\BiatecClammPool.algo.ts:662","pc":[3287]},{"teal":3298,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3288,3289]},{"teal":3299,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3290]},{"teal":3300,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3291]},{"teal":3301,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3292]},{"teal":3302,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3293]},{"teal":3303,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3294]},{"teal":3304,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3295]},{"teal":3307,"source":"contracts\\BiatecClammPool.algo.ts:661","errorMessage":"this.priceMin.value as uint256 overflowed 256 bits","pc":[3296]},{"teal":3308,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3297]},{"teal":3309,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3298]},{"teal":3310,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3299]},{"teal":3311,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3300]},{"teal":3312,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3301]},{"teal":3313,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3302]},{"teal":3314,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3303]},{"teal":3315,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3304]},{"teal":3316,"source":"contracts\\BiatecClammPool.algo.ts:661","pc":[3305]},{"teal":3317,"source":"contracts\\BiatecClammPool.algo.ts:660","pc":[3306,3307]},{"teal":3318,"source":"contracts\\BiatecClammPool.algo.ts:660","pc":[3308]},{"teal":3319,"source":"contracts\\BiatecClammPool.algo.ts:659","pc":[3309]},{"teal":3320,"source":"contracts\\BiatecClammPool.algo.ts:659","pc":[3310]},{"teal":3321,"source":"contracts\\BiatecClammPool.algo.ts:658","pc":[3311,3312,3313]},{"teal":3322,"source":"contracts\\BiatecClammPool.algo.ts:658","pc":[3314,3315]},{"teal":3332,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3316,3317]},{"teal":3333,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3318]},{"teal":3334,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3319]},{"teal":3335,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3320]},{"teal":3336,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3321]},{"teal":3339,"source":"contracts\\BiatecClammPool.algo.ts:671","errorMessage":"D_SQRT overflowed 256 bits","pc":[3322]},{"teal":3340,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3323]},{"teal":3341,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3324]},{"teal":3342,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3325]},{"teal":3343,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3326]},{"teal":3344,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3327]},{"teal":3345,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3328]},{"teal":3346,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3329]},{"teal":3347,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3330]},{"teal":3348,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[3331]},{"teal":3349,"source":"contracts\\BiatecClammPool.algo.ts:670","pc":[3332,3333]},{"teal":3350,"source":"contracts\\BiatecClammPool.algo.ts:670","pc":[3334]},{"teal":3351,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[3335,3336]},{"teal":3352,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[3337]},{"teal":3353,"source":"contracts\\BiatecClammPool.algo.ts:668","pc":[3338,3339]},{"teal":3354,"source":"contracts\\BiatecClammPool.algo.ts:668","pc":[3340]},{"teal":3355,"source":"contracts\\BiatecClammPool.algo.ts:667","pc":[3341]},{"teal":3356,"source":"contracts\\BiatecClammPool.algo.ts:667","pc":[3342]},{"teal":3357,"source":"contracts\\BiatecClammPool.algo.ts:666","pc":[3343,3344,3345]},{"teal":3358,"source":"contracts\\BiatecClammPool.algo.ts:666","pc":[3346,3347]},{"teal":3363,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3348,3349]},{"teal":3364,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3350,3351]},{"teal":3365,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3352]},{"teal":3366,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3353]},{"teal":3367,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3354]},{"teal":3368,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3355]},{"teal":3371,"source":"contracts\\BiatecClammPool.algo.ts:674","errorMessage":"lAfter overflowed 256 bits","pc":[3356]},{"teal":3372,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3357]},{"teal":3373,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3358]},{"teal":3374,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3359]},{"teal":3375,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3360]},{"teal":3376,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3361]},{"teal":3377,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3362]},{"teal":3378,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3363]},{"teal":3379,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3364]},{"teal":3380,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3365]},{"teal":3381,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[3366]},{"teal":3385,"source":"contracts\\BiatecClammPool.algo.ts:675","pc":[3367,3368]},{"teal":3386,"source":"contracts\\BiatecClammPool.algo.ts:675","pc":[3369,3370]},{"teal":3387,"source":"contracts\\BiatecClammPool.algo.ts:675","pc":[3371]},{"teal":3390,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[3372,3373]},{"teal":3393,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[3374,3375]},{"teal":3394,"source":"contracts\\BiatecClammPool.algo.ts:586","pc":[3376]},{"teal":3399,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3377,3378]},{"teal":3402,"source":"contracts\\BiatecClammPool.algo.ts:695","pc":[3379,3380,3381]},{"teal":3403,"source":"contracts\\BiatecClammPool.algo.ts:695","pc":[3382]},{"teal":3404,"source":"contracts\\BiatecClammPool.algo.ts:695","pc":[3383]},{"teal":3405,"source":"contracts\\BiatecClammPool.algo.ts:695","pc":[3384]},{"teal":3406,"source":"contracts\\BiatecClammPool.algo.ts:695","pc":[3385]},{"teal":3409,"source":"contracts\\BiatecClammPool.algo.ts:695","errorMessage":"argument 0 (amount) for removeLiquidityAdmin must be a uint256","pc":[3386]},{"teal":3412,"source":"contracts\\BiatecClammPool.algo.ts:694","pc":[3387,3388,3389]},{"teal":3413,"source":"contracts\\BiatecClammPool.algo.ts:694","pc":[3390]},{"teal":3416,"source":"contracts\\BiatecClammPool.algo.ts:693","pc":[3391,3392,3393]},{"teal":3417,"source":"contracts\\BiatecClammPool.algo.ts:693","pc":[3394]},{"teal":3420,"source":"contracts\\BiatecClammPool.algo.ts:692","pc":[3395,3396,3397]},{"teal":3421,"source":"contracts\\BiatecClammPool.algo.ts:692","pc":[3398]},{"teal":3424,"source":"contracts\\BiatecClammPool.algo.ts:691","pc":[3399,3400,3401]},{"teal":3425,"source":"contracts\\BiatecClammPool.algo.ts:691","pc":[3402]},{"teal":3428,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3403,3404,3405]},{"teal":3429,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3406]},{"teal":3430,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3407]},{"teal":3431,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3408]},{"teal":3432,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3409]},{"teal":3435,"source":"contracts\\BiatecClammPool.algo.ts:690","errorMessage":"removeLiquidityAdmin return value overflowed 256 bits","pc":[3410]},{"teal":3436,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3411]},{"teal":3437,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3412]},{"teal":3438,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3413]},{"teal":3439,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3414]},{"teal":3440,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3415]},{"teal":3441,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3416]},{"teal":3442,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3417]},{"teal":3443,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3418]},{"teal":3444,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3419]},{"teal":3445,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3420]},{"teal":3446,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3421]},{"teal":3447,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3422]},{"teal":3448,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3423]},{"teal":3463,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3424,3425,3426]},{"teal":3466,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3427]},{"teal":3467,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3428,3429]},{"teal":3472,"source":"contracts\\BiatecClammPool.algo.ts:698","pc":[3430,3431]},{"teal":3473,"source":"contracts\\BiatecClammPool.algo.ts:698","pc":[3432,3433]},{"teal":3474,"source":"contracts\\BiatecClammPool.algo.ts:698","pc":[3434,3435]},{"teal":3475,"source":"contracts\\BiatecClammPool.algo.ts:698","pc":[3436,3437,3438]},{"teal":3479,"source":"contracts\\BiatecClammPool.algo.ts:700","pc":[3439,3440]},{"teal":3480,"source":"contracts\\BiatecClammPool.algo.ts:700","pc":[3441,3442]},{"teal":3481,"source":"contracts\\BiatecClammPool.algo.ts:700","pc":[3443]},{"teal":3482,"source":"contracts\\BiatecClammPool.algo.ts:700","pc":[3444]},{"teal":3483,"source":"contracts\\BiatecClammPool.algo.ts:700","pc":[3445]},{"teal":3487,"source":"contracts\\BiatecClammPool.algo.ts:701","pc":[3446,3447]},{"teal":3488,"source":"contracts\\BiatecClammPool.algo.ts:701","pc":[3448,3449]},{"teal":3489,"source":"contracts\\BiatecClammPool.algo.ts:701","pc":[3450]},{"teal":3492,"source":"contracts\\BiatecClammPool.algo.ts:701","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('ef')","pc":[3451]},{"teal":3493,"source":"contracts\\BiatecClammPool.algo.ts:701","pc":[3452,3453]},{"teal":3497,"source":"contracts\\BiatecClammPool.algo.ts:703","pc":[3454,3455]},{"teal":3498,"source":"contracts\\BiatecClammPool.algo.ts:703","pc":[3456,3457]},{"teal":3499,"source":"contracts\\BiatecClammPool.algo.ts:703","pc":[3458]},{"teal":3502,"source":"contracts\\BiatecClammPool.algo.ts:703","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('s')","pc":[3459]},{"teal":3503,"source":"contracts\\BiatecClammPool.algo.ts:703","pc":[3460,3461]},{"teal":3507,"source":"contracts\\BiatecClammPool.algo.ts:704","pc":[3462,3463]},{"teal":3508,"source":"contracts\\BiatecClammPool.algo.ts:704","pc":[3464]},{"teal":3509,"source":"contracts\\BiatecClammPool.algo.ts:704","pc":[3465]},{"teal":3512,"source":"contracts\\BiatecClammPool.algo.ts:704","errorMessage":"E_PAUSED","pc":[3466]},{"teal":3516,"source":"contracts\\BiatecClammPool.algo.ts:710","pc":[3467,3468]},{"teal":3517,"source":"contracts\\BiatecClammPool.algo.ts:710","pc":[3469,3470]},{"teal":3518,"source":"contracts\\BiatecClammPool.algo.ts:710","pc":[3471]},{"teal":3521,"source":"contracts\\BiatecClammPool.algo.ts:710","errorMessage":"ERR-EXEC-ONLY","pc":[3472]},{"teal":3525,"source":"contracts\\BiatecClammPool.algo.ts:712","pc":[3473]},{"teal":3526,"source":"contracts\\BiatecClammPool.algo.ts:712","pc":[3474,3475]},{"teal":3527,"source":"contracts\\BiatecClammPool.algo.ts:712","pc":[3476,3477]},{"teal":3528,"source":"contracts\\BiatecClammPool.algo.ts:712","pc":[3478]},{"teal":3529,"source":"contracts\\BiatecClammPool.algo.ts:712","pc":[3479,3480]},{"teal":3530,"source":"contracts\\BiatecClammPool.algo.ts:712","pc":[3481,3482]},{"teal":3531,"source":"contracts\\BiatecClammPool.algo.ts:712","pc":[3483]},{"teal":3532,"source":"contracts\\BiatecClammPool.algo.ts:712","pc":[3484,3485]},{"teal":3533,"source":"contracts\\BiatecClammPool.algo.ts:712","pc":[3486,3487]},{"teal":3534,"source":"contracts\\BiatecClammPool.algo.ts:712","pc":[3488,3489]},{"teal":3535,"source":"contracts\\BiatecClammPool.algo.ts:712","pc":[3490,3491]},{"teal":3536,"source":"contracts\\BiatecClammPool.algo.ts:712","pc":[3492]},{"teal":3540,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[3493]},{"teal":3541,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[3494,3495]},{"teal":3542,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[3496,3497]},{"teal":3543,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[3498]},{"teal":3544,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[3499,3500]},{"teal":3545,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[3501,3502]},{"teal":3546,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[3503]},{"teal":3547,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[3504,3505]},{"teal":3548,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[3506,3507]},{"teal":3549,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[3508,3509]},{"teal":3550,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[3510,3511]},{"teal":3551,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[3512]},{"teal":3555,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[3513,3514]},{"teal":3556,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[3515,3516]},{"teal":3557,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[3517]},{"teal":3558,"source":"contracts\\BiatecClammPool.algo.ts:716","pc":[3518]},{"teal":3559,"source":"contracts\\BiatecClammPool.algo.ts:716","pc":[3519,3520]},{"teal":3563,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[3521,3522]},{"teal":3564,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[3523,3524]},{"teal":3569,"source":"contracts\\BiatecClammPool.algo.ts:719","pc":[3525,3526]},{"teal":3570,"source":"contracts\\BiatecClammPool.algo.ts:719","pc":[3527,3528]},{"teal":3571,"source":"contracts\\BiatecClammPool.algo.ts:719","pc":[3529]},{"teal":3572,"source":"contracts\\BiatecClammPool.algo.ts:719","pc":[3530,3531,3532]},{"teal":3577,"source":"contracts\\BiatecClammPool.algo.ts:719","pc":[3533,3534]},{"teal":3578,"source":"contracts\\BiatecClammPool.algo.ts:719","pc":[3535]},{"teal":3579,"source":"contracts\\BiatecClammPool.algo.ts:719","pc":[3536,3537]},{"teal":3587,"source":"contracts\\BiatecClammPool.algo.ts:721","pc":[3538,3539]},{"teal":3588,"source":"contracts\\BiatecClammPool.algo.ts:721","pc":[3540,3541]},{"teal":3589,"source":"contracts\\BiatecClammPool.algo.ts:721","pc":[3542]},{"teal":3590,"source":"contracts\\BiatecClammPool.algo.ts:721","pc":[3543]},{"teal":3593,"source":"contracts\\BiatecClammPool.algo.ts:720","errorMessage":"ERR-TOO-MUCH","pc":[3544]},{"teal":3597,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3545,3546]},{"teal":3598,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3547]},{"teal":3599,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3548]},{"teal":3600,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3549,3550]},{"teal":3601,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3551]},{"teal":3602,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3552]},{"teal":3603,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3553]},{"teal":3604,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3554]},{"teal":3605,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3555]},{"teal":3608,"source":"contracts\\BiatecClammPool.algo.ts:724","errorMessage":"this.LiqudityBiatecFromFees.value - lpDeltaWithFees overflowed 256 bits","pc":[3556]},{"teal":3609,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3557]},{"teal":3610,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3558]},{"teal":3611,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3559]},{"teal":3612,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3560]},{"teal":3613,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3561]},{"teal":3614,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3562]},{"teal":3615,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3563]},{"teal":3616,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3564]},{"teal":3617,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3565]},{"teal":3618,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[3566]},{"teal":3626,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[3567,3568]},{"teal":3627,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[3569]},{"teal":3628,"source":"contracts\\BiatecClammPool.algo.ts:727","pc":[3570]},{"teal":3629,"source":"contracts\\BiatecClammPool.algo.ts:727","pc":[3571]},{"teal":3630,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3572,3573]},{"teal":3631,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3574]},{"teal":3632,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3575]},{"teal":3633,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3576]},{"teal":3634,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3577]},{"teal":3637,"source":"contracts\\BiatecClammPool.algo.ts:726","errorMessage":"lpDeltaWithFees overflowed 256 bits","pc":[3578]},{"teal":3638,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3579]},{"teal":3639,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3580]},{"teal":3640,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3581]},{"teal":3641,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3582]},{"teal":3642,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3583]},{"teal":3643,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3584]},{"teal":3644,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3585]},{"teal":3645,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3586]},{"teal":3646,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[3587]},{"teal":3647,"source":"contracts\\BiatecClammPool.algo.ts:725","pc":[3588,3589,3590]},{"teal":3648,"source":"contracts\\BiatecClammPool.algo.ts:725","pc":[3591,3592]},{"teal":3652,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3593,3594]},{"teal":3653,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3595,3596]},{"teal":3654,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3597]},{"teal":3655,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3598]},{"teal":3656,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3599]},{"teal":3657,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3600]},{"teal":3658,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3601,3602]},{"teal":3659,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3603]},{"teal":3662,"source":"contracts\\BiatecClammPool.algo.ts:730","errorMessage":"(aToSend / this.assetADecimals.value) as uint64 overflowed 64 bits","pc":[3604]},{"teal":3663,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3605,3606]},{"teal":3664,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3607]},{"teal":3665,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3608]},{"teal":3666,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3609]},{"teal":3667,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3610]},{"teal":3668,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3611,3612]},{"teal":3669,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3613]},{"teal":3670,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3614]},{"teal":3671,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3615]},{"teal":3672,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3616]},{"teal":3673,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[3617,3618]},{"teal":3678,"source":"contracts\\BiatecClammPool.algo.ts:731","pc":[3619,3620]},{"teal":3679,"source":"contracts\\BiatecClammPool.algo.ts:731","pc":[3621]},{"teal":3680,"source":"contracts\\BiatecClammPool.algo.ts:731","pc":[3622]},{"teal":3681,"source":"contracts\\BiatecClammPool.algo.ts:731","pc":[3623,3624,3625]},{"teal":3686,"source":"contracts\\BiatecClammPool.algo.ts:732","pc":[3626,3627]},{"teal":3687,"source":"contracts\\BiatecClammPool.algo.ts:732","pc":[3628,3629]},{"teal":3688,"source":"contracts\\BiatecClammPool.algo.ts:732","pc":[3630,3631]},{"teal":3689,"source":"contracts\\BiatecClammPool.algo.ts:732","pc":[3632,3633,3634]},{"teal":3698,"source":"contracts\\BiatecClammPool.algo.ts:737","pc":[3635,3636]},{"teal":3699,"source":"contracts\\BiatecClammPool.algo.ts:737","pc":[3637]},{"teal":3700,"source":"contracts\\BiatecClammPool.algo.ts:736","pc":[3638,3639]},{"teal":3701,"source":"contracts\\BiatecClammPool.algo.ts:736","pc":[3640]},{"teal":3702,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3641,3642]},{"teal":3703,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3643]},{"teal":3704,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3644]},{"teal":3705,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3645]},{"teal":3706,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3646]},{"teal":3709,"source":"contracts\\BiatecClammPool.algo.ts:735","errorMessage":"lpDeltaWithFees overflowed 256 bits","pc":[3647]},{"teal":3710,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3648]},{"teal":3711,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3649]},{"teal":3712,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3650]},{"teal":3713,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3651]},{"teal":3714,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3652]},{"teal":3715,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3653]},{"teal":3716,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3654]},{"teal":3717,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3655]},{"teal":3718,"source":"contracts\\BiatecClammPool.algo.ts:735","pc":[3656]},{"teal":3719,"source":"contracts\\BiatecClammPool.algo.ts:734","pc":[3657,3658,3659]},{"teal":3720,"source":"contracts\\BiatecClammPool.algo.ts:734","pc":[3660,3661]},{"teal":3724,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3662,3663]},{"teal":3725,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3664,3665]},{"teal":3726,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3666]},{"teal":3727,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3667]},{"teal":3728,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3668]},{"teal":3729,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3669]},{"teal":3730,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3670,3671]},{"teal":3731,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3672]},{"teal":3734,"source":"contracts\\BiatecClammPool.algo.ts:739","errorMessage":"(bToSend / this.assetBDecimals.value) as uint64 overflowed 64 bits","pc":[3673]},{"teal":3735,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3674,3675]},{"teal":3736,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3676]},{"teal":3737,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3677]},{"teal":3738,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3678]},{"teal":3739,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3679]},{"teal":3740,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3680,3681]},{"teal":3741,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3682]},{"teal":3742,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3683]},{"teal":3743,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3684]},{"teal":3744,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3685]},{"teal":3745,"source":"contracts\\BiatecClammPool.algo.ts:739","pc":[3686,3687]},{"teal":3750,"source":"contracts\\BiatecClammPool.algo.ts:740","pc":[3688,3689]},{"teal":3751,"source":"contracts\\BiatecClammPool.algo.ts:740","pc":[3690]},{"teal":3752,"source":"contracts\\BiatecClammPool.algo.ts:740","pc":[3691]},{"teal":3753,"source":"contracts\\BiatecClammPool.algo.ts:740","pc":[3692,3693,3694]},{"teal":3758,"source":"contracts\\BiatecClammPool.algo.ts:741","pc":[3695,3696]},{"teal":3759,"source":"contracts\\BiatecClammPool.algo.ts:741","pc":[3697,3698]},{"teal":3760,"source":"contracts\\BiatecClammPool.algo.ts:741","pc":[3699,3700]},{"teal":3761,"source":"contracts\\BiatecClammPool.algo.ts:741","pc":[3701,3702,3703]},{"teal":3766,"source":"contracts\\BiatecClammPool.algo.ts:744","pc":[3704]},{"teal":3767,"source":"contracts\\BiatecClammPool.algo.ts:744","pc":[3705]},{"teal":3768,"source":"contracts\\BiatecClammPool.algo.ts:744","pc":[3706,3707]},{"teal":3769,"source":"contracts\\BiatecClammPool.algo.ts:744","pc":[3708]},{"teal":3770,"source":"contracts\\BiatecClammPool.algo.ts:744","pc":[3709,3710]},{"teal":3774,"source":"contracts\\BiatecClammPool.algo.ts:745","pc":[3711,3712]},{"teal":3775,"source":"contracts\\BiatecClammPool.algo.ts:745","pc":[3713]},{"teal":3776,"source":"contracts\\BiatecClammPool.algo.ts:745","pc":[3714,3715]},{"teal":3777,"source":"contracts\\BiatecClammPool.algo.ts:745","pc":[3716]},{"teal":3778,"source":"contracts\\BiatecClammPool.algo.ts:745","pc":[3717,3718]},{"teal":3782,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3719]},{"teal":3783,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3720,3721]},{"teal":3784,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3722]},{"teal":3785,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3723]},{"teal":3786,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3724]},{"teal":3787,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3725]},{"teal":3790,"source":"contracts\\BiatecClammPool.algo.ts:746","errorMessage":"newAssetA overflowed 256 bits","pc":[3726]},{"teal":3791,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3727]},{"teal":3792,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3728]},{"teal":3793,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3729]},{"teal":3794,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3730]},{"teal":3795,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3731]},{"teal":3796,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3732]},{"teal":3797,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3733]},{"teal":3798,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3734]},{"teal":3799,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3735]},{"teal":3800,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3736]},{"teal":3804,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3737,3738]},{"teal":3805,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3739,3740]},{"teal":3806,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3741]},{"teal":3807,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3742]},{"teal":3808,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3743]},{"teal":3809,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3744]},{"teal":3812,"source":"contracts\\BiatecClammPool.algo.ts:747","errorMessage":"newAssetB overflowed 256 bits","pc":[3745]},{"teal":3813,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3746]},{"teal":3814,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3747]},{"teal":3815,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3748]},{"teal":3816,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3749]},{"teal":3817,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3750]},{"teal":3818,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3751]},{"teal":3819,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3752]},{"teal":3820,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3753]},{"teal":3821,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3754]},{"teal":3822,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[3755]},{"teal":3826,"source":"contracts\\BiatecClammPool.algo.ts:751","pc":[3756,3757]},{"teal":3827,"source":"contracts\\BiatecClammPool.algo.ts:751","pc":[3758,3759]},{"teal":3832,"source":"contracts\\BiatecClammPool.algo.ts:752","pc":[3760,3761]},{"teal":3833,"source":"contracts\\BiatecClammPool.algo.ts:752","pc":[3762]},{"teal":3834,"source":"contracts\\BiatecClammPool.algo.ts:752","pc":[3763,3764]},{"teal":3835,"source":"contracts\\BiatecClammPool.algo.ts:752","pc":[3765]},{"teal":3836,"source":"contracts\\BiatecClammPool.algo.ts:752","pc":[3766]},{"teal":3837,"source":"contracts\\BiatecClammPool.algo.ts:752","pc":[3767,3768,3769]},{"teal":3846,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3770,3771]},{"teal":3847,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3772]},{"teal":3848,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3773]},{"teal":3849,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3774]},{"teal":3850,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3775]},{"teal":3851,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3776]},{"teal":3852,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3777]},{"teal":3855,"source":"contracts\\BiatecClammPool.algo.ts:756","errorMessage":"this.priceMin.value as uint256 overflowed 256 bits","pc":[3778]},{"teal":3856,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3779]},{"teal":3857,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3780]},{"teal":3858,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3781]},{"teal":3859,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3782]},{"teal":3860,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3783]},{"teal":3861,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3784]},{"teal":3862,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3785]},{"teal":3863,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3786]},{"teal":3864,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[3787]},{"teal":3865,"source":"contracts\\BiatecClammPool.algo.ts:755","pc":[3788,3789]},{"teal":3866,"source":"contracts\\BiatecClammPool.algo.ts:755","pc":[3790]},{"teal":3867,"source":"contracts\\BiatecClammPool.algo.ts:754","pc":[3791]},{"teal":3868,"source":"contracts\\BiatecClammPool.algo.ts:754","pc":[3792]},{"teal":3869,"source":"contracts\\BiatecClammPool.algo.ts:753","pc":[3793,3794,3795]},{"teal":3870,"source":"contracts\\BiatecClammPool.algo.ts:753","pc":[3796,3797]},{"teal":3871,"source":"contracts\\BiatecClammPool.algo.ts:752","pc":[3798,3799,3800]},{"teal":3883,"source":"contracts\\BiatecClammPool.algo.ts:765","pc":[3801,3802]},{"teal":3884,"source":"contracts\\BiatecClammPool.algo.ts:765","pc":[3803]},{"teal":3885,"source":"contracts\\BiatecClammPool.algo.ts:764","pc":[3804,3805]},{"teal":3886,"source":"contracts\\BiatecClammPool.algo.ts:764","pc":[3806]},{"teal":3887,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3807,3808]},{"teal":3888,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3809]},{"teal":3889,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3810]},{"teal":3890,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3811]},{"teal":3891,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3812]},{"teal":3892,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3813]},{"teal":3893,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3814]},{"teal":3896,"source":"contracts\\BiatecClammPool.algo.ts:763","errorMessage":"this.priceMax.value as uint256 overflowed 256 bits","pc":[3815]},{"teal":3897,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3816]},{"teal":3898,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3817]},{"teal":3899,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3818]},{"teal":3900,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3819]},{"teal":3901,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3820]},{"teal":3902,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3821]},{"teal":3903,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3822]},{"teal":3904,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3823]},{"teal":3905,"source":"contracts\\BiatecClammPool.algo.ts:763","pc":[3824]},{"teal":3906,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3825,3826]},{"teal":3907,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3827]},{"teal":3908,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3828]},{"teal":3909,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3829]},{"teal":3910,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3830]},{"teal":3911,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3831]},{"teal":3912,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3832]},{"teal":3915,"source":"contracts\\BiatecClammPool.algo.ts:762","errorMessage":"this.priceMin.value as uint256 overflowed 256 bits","pc":[3833]},{"teal":3916,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3834]},{"teal":3917,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3835]},{"teal":3918,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3836]},{"teal":3919,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3837]},{"teal":3920,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3838]},{"teal":3921,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3839]},{"teal":3922,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3840]},{"teal":3923,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3841]},{"teal":3924,"source":"contracts\\BiatecClammPool.algo.ts:762","pc":[3842]},{"teal":3925,"source":"contracts\\BiatecClammPool.algo.ts:761","pc":[3843,3844]},{"teal":3926,"source":"contracts\\BiatecClammPool.algo.ts:761","pc":[3845]},{"teal":3927,"source":"contracts\\BiatecClammPool.algo.ts:760","pc":[3846]},{"teal":3928,"source":"contracts\\BiatecClammPool.algo.ts:760","pc":[3847]},{"teal":3929,"source":"contracts\\BiatecClammPool.algo.ts:759","pc":[3848,3849,3850]},{"teal":3930,"source":"contracts\\BiatecClammPool.algo.ts:759","pc":[3851,3852]},{"teal":3940,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3853,3854]},{"teal":3941,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3855]},{"teal":3942,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3856]},{"teal":3943,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3857]},{"teal":3944,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3858]},{"teal":3947,"source":"contracts\\BiatecClammPool.algo.ts:772","errorMessage":"D_SQRT overflowed 256 bits","pc":[3859]},{"teal":3948,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3860]},{"teal":3949,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3861]},{"teal":3950,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3862]},{"teal":3951,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3863]},{"teal":3952,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3864]},{"teal":3953,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3865]},{"teal":3954,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3866]},{"teal":3955,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3867]},{"teal":3956,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[3868]},{"teal":3957,"source":"contracts\\BiatecClammPool.algo.ts:771","pc":[3869,3870]},{"teal":3958,"source":"contracts\\BiatecClammPool.algo.ts:771","pc":[3871]},{"teal":3959,"source":"contracts\\BiatecClammPool.algo.ts:770","pc":[3872,3873]},{"teal":3960,"source":"contracts\\BiatecClammPool.algo.ts:770","pc":[3874]},{"teal":3961,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[3875,3876]},{"teal":3962,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[3877]},{"teal":3963,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[3878]},{"teal":3964,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[3879]},{"teal":3965,"source":"contracts\\BiatecClammPool.algo.ts:767","pc":[3880,3881,3882]},{"teal":3966,"source":"contracts\\BiatecClammPool.algo.ts:767","pc":[3883,3884]},{"teal":3971,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3885,3886]},{"teal":3972,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3887,3888]},{"teal":3973,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3889]},{"teal":3974,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3890]},{"teal":3975,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3891]},{"teal":3976,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3892]},{"teal":3979,"source":"contracts\\BiatecClammPool.algo.ts:775","errorMessage":"lAfter overflowed 256 bits","pc":[3893]},{"teal":3980,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3894]},{"teal":3981,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3895]},{"teal":3982,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3896]},{"teal":3983,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3897]},{"teal":3984,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3898]},{"teal":3985,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3899]},{"teal":3986,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3900]},{"teal":3987,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3901]},{"teal":3988,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3902]},{"teal":3989,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[3903]},{"teal":3993,"source":"contracts\\BiatecClammPool.algo.ts:776","pc":[3904,3905]},{"teal":3994,"source":"contracts\\BiatecClammPool.algo.ts:776","pc":[3906,3907]},{"teal":3995,"source":"contracts\\BiatecClammPool.algo.ts:776","pc":[3908]},{"teal":3998,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3909,3910]},{"teal":4001,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3911,3912]},{"teal":4002,"source":"contracts\\BiatecClammPool.algo.ts:690","pc":[3913]},{"teal":4014,"source":"contracts\\BiatecClammPool.algo.ts:788","pc":[3914,3915,3916]},{"teal":4017,"source":"contracts\\BiatecClammPool.algo.ts:788","pc":[3917]},{"teal":4018,"source":"contracts\\BiatecClammPool.algo.ts:788","pc":[3918,3919]},{"teal":4025,"source":"contracts\\BiatecClammPool.algo.ts:790","pc":[3920,3921]},{"teal":4026,"source":"contracts\\BiatecClammPool.algo.ts:790","pc":[3922,3923]},{"teal":4027,"source":"contracts\\BiatecClammPool.algo.ts:790","pc":[3924]},{"teal":4028,"source":"contracts\\BiatecClammPool.algo.ts:790","pc":[3925]},{"teal":4031,"source":"contracts\\BiatecClammPool.algo.ts:789","errorMessage":"ERR-INVALID-CONFIG","pc":[3926]},{"teal":4035,"source":"contracts\\BiatecClammPool.algo.ts:793","pc":[3927,3928]},{"teal":4036,"source":"contracts\\BiatecClammPool.algo.ts:793","pc":[3929,3930,3931]},{"teal":4037,"source":"contracts\\BiatecClammPool.algo.ts:793","pc":[3932]},{"teal":4040,"source":"contracts\\BiatecClammPool.algo.ts:793","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('i')","pc":[3933]},{"teal":4041,"source":"contracts\\BiatecClammPool.algo.ts:793","pc":[3934,3935]},{"teal":4048,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3936,3937]},{"teal":4049,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3938,3939]},{"teal":4050,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3940]},{"teal":4053,"source":"contracts\\BiatecClammPool.algo.ts:794","errorMessage":"ERR-WRONG-IDENT","pc":[3941]},{"teal":4062,"source":"contracts\\BiatecClammPool.algo.ts:799","pc":[3942]},{"teal":4063,"source":"contracts\\BiatecClammPool.algo.ts:799","pc":[3943,3944]},{"teal":4064,"source":"contracts\\BiatecClammPool.algo.ts:799","pc":[3945,3946]},{"teal":4065,"source":"contracts\\BiatecClammPool.algo.ts:800","pc":[3947,3948,3949,3950,3951,3952]},{"teal":4066,"source":"contracts\\BiatecClammPool.algo.ts:800","pc":[3953,3954]},{"teal":4070,"source":"contracts\\BiatecClammPool.algo.ts:801","pc":[3955,3956]},{"teal":4071,"source":"contracts\\BiatecClammPool.algo.ts:801","pc":[3957,3958]},{"teal":4072,"source":"contracts\\BiatecClammPool.algo.ts:801","pc":[3959,3960,3961]},{"teal":4073,"source":"contracts\\BiatecClammPool.algo.ts:801","pc":[3962,3963]},{"teal":4077,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3964]},{"teal":4078,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3965,3966]},{"teal":4082,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3967,3968]},{"teal":4083,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3969,3970]},{"teal":4086,"source":"contracts\\BiatecClammPool.algo.ts:799","pc":[3971]},{"teal":4087,"source":"contracts\\BiatecClammPool.algo.ts:799","pc":[3972,3973]},{"teal":4088,"source":"contracts\\BiatecClammPool.algo.ts:799","pc":[3974]},{"teal":4089,"source":"contracts\\BiatecClammPool.algo.ts:799","pc":[3975]},{"teal":4090,"source":"contracts\\BiatecClammPool.algo.ts:799","pc":[3976,3977]},{"teal":4091,"source":"contracts\\BiatecClammPool.algo.ts:799","pc":[3978,3979,3980]},{"teal":4092,"source":"contracts\\BiatecClammPool.algo.ts:799","pc":[3981,3982]},{"teal":4099,"source":"contracts\\BiatecClammPool.algo.ts:806","pc":[3983,3984]},{"teal":4100,"source":"contracts\\BiatecClammPool.algo.ts:806","pc":[3985,3986]},{"teal":4101,"source":"contracts\\BiatecClammPool.algo.ts:806","pc":[3987,3988]},{"teal":4102,"source":"contracts\\BiatecClammPool.algo.ts:806","pc":[3989,3990,3991]},{"teal":4103,"source":"contracts\\BiatecClammPool.algo.ts:806","pc":[3992]},{"teal":4104,"source":"contracts\\BiatecClammPool.algo.ts:806","pc":[3993]},{"teal":4107,"source":"contracts\\BiatecClammPool.algo.ts:805","errorMessage":"ERR-USER-LOCKED","pc":[3994]},{"teal":4114,"source":"contracts\\BiatecClammPool.algo.ts:810","pc":[3995,3996]},{"teal":4115,"source":"contracts\\BiatecClammPool.algo.ts:810","pc":[3997,3998]},{"teal":4116,"source":"contracts\\BiatecClammPool.algo.ts:810","pc":[3999,4000]},{"teal":4117,"source":"contracts\\BiatecClammPool.algo.ts:810","pc":[4001,4002,4003]},{"teal":4118,"source":"contracts\\BiatecClammPool.algo.ts:810","pc":[4004]},{"teal":4119,"source":"contracts\\BiatecClammPool.algo.ts:810","pc":[4005,4006]},{"teal":4120,"source":"contracts\\BiatecClammPool.algo.ts:810","pc":[4007]},{"teal":4121,"source":"contracts\\BiatecClammPool.algo.ts:810","pc":[4008]},{"teal":4124,"source":"contracts\\BiatecClammPool.algo.ts:809","errorMessage":"ERR-LOW-VER","pc":[4009]},{"teal":4128,"source":"contracts\\BiatecClammPool.algo.ts:814","pc":[4010,4011]},{"teal":4129,"source":"contracts\\BiatecClammPool.algo.ts:814","pc":[4012,4013]},{"teal":4130,"source":"contracts\\BiatecClammPool.algo.ts:814","pc":[4014]},{"teal":4133,"source":"contracts\\BiatecClammPool.algo.ts:814","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('s')","pc":[4015]},{"teal":4134,"source":"contracts\\BiatecClammPool.algo.ts:814","pc":[4016,4017]},{"teal":4138,"source":"contracts\\BiatecClammPool.algo.ts:815","pc":[4018,4019]},{"teal":4139,"source":"contracts\\BiatecClammPool.algo.ts:815","pc":[4020]},{"teal":4140,"source":"contracts\\BiatecClammPool.algo.ts:815","pc":[4021]},{"teal":4143,"source":"contracts\\BiatecClammPool.algo.ts:815","errorMessage":"E_PAUSED","pc":[4022]},{"teal":4147,"source":"contracts\\BiatecClammPool.algo.ts:817","pc":[4023,4024]},{"teal":4150,"source":"contracts\\BiatecClammPool.algo.ts:788","pc":[4025,4026]},{"teal":4153,"source":"contracts\\BiatecClammPool.algo.ts:788","pc":[4027,4028]},{"teal":4154,"source":"contracts\\BiatecClammPool.algo.ts:788","pc":[4029]},{"teal":4159,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4030,4031]},{"teal":4162,"source":"contracts\\BiatecClammPool.algo.ts:834","pc":[4032,4033,4034]},{"teal":4163,"source":"contracts\\BiatecClammPool.algo.ts:834","pc":[4035]},{"teal":4166,"source":"contracts\\BiatecClammPool.algo.ts:833","pc":[4036,4037,4038]},{"teal":4167,"source":"contracts\\BiatecClammPool.algo.ts:833","pc":[4039]},{"teal":4170,"source":"contracts\\BiatecClammPool.algo.ts:832","pc":[4040,4041,4042]},{"teal":4171,"source":"contracts\\BiatecClammPool.algo.ts:832","pc":[4043]},{"teal":4174,"source":"contracts\\BiatecClammPool.algo.ts:831","pc":[4044,4045]},{"teal":4175,"source":"contracts\\BiatecClammPool.algo.ts:831","pc":[4046]},{"teal":4176,"source":"contracts\\BiatecClammPool.algo.ts:831","pc":[4047]},{"teal":4179,"source":"contracts\\BiatecClammPool.algo.ts:830","pc":[4048,4049,4050]},{"teal":4180,"source":"contracts\\BiatecClammPool.algo.ts:830","pc":[4051]},{"teal":4183,"source":"contracts\\BiatecClammPool.algo.ts:829","pc":[4052,4053,4054]},{"teal":4184,"source":"contracts\\BiatecClammPool.algo.ts:829","pc":[4055]},{"teal":4187,"source":"contracts\\BiatecClammPool.algo.ts:828","pc":[4056,4057,4058]},{"teal":4188,"source":"contracts\\BiatecClammPool.algo.ts:828","pc":[4059]},{"teal":4191,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4060,4061,4062]},{"teal":4192,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4063]},{"teal":4193,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4064]},{"teal":4194,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4065]},{"teal":4195,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4066]},{"teal":4198,"source":"contracts\\BiatecClammPool.algo.ts:827","errorMessage":"swap return value overflowed 256 bits","pc":[4067]},{"teal":4199,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4068]},{"teal":4200,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4069]},{"teal":4201,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4070]},{"teal":4202,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4071]},{"teal":4203,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4072]},{"teal":4204,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4073]},{"teal":4205,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4074]},{"teal":4206,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4075]},{"teal":4207,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4076]},{"teal":4208,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4077]},{"teal":4209,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4078]},{"teal":4210,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4079]},{"teal":4211,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4080]},{"teal":4221,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4081,4082,4083]},{"teal":4224,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4084]},{"teal":4225,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[4085,4086]},{"teal":4229,"source":"contracts\\BiatecClammPool.algo.ts:836","pc":[4087]},{"teal":4230,"source":"contracts\\BiatecClammPool.algo.ts:836","pc":[4088,4089]},{"teal":4231,"source":"contracts\\BiatecClammPool.algo.ts:836","pc":[4090,4091]},{"teal":4232,"source":"contracts\\BiatecClammPool.algo.ts:836","pc":[4092]},{"teal":4233,"source":"contracts\\BiatecClammPool.algo.ts:836","pc":[4093,4094]},{"teal":4234,"source":"contracts\\BiatecClammPool.algo.ts:836","pc":[4095,4096]},{"teal":4235,"source":"contracts\\BiatecClammPool.algo.ts:836","pc":[4097]},{"teal":4236,"source":"contracts\\BiatecClammPool.algo.ts:836","pc":[4098,4099]},{"teal":4237,"source":"contracts\\BiatecClammPool.algo.ts:836","pc":[4100,4101]},{"teal":4238,"source":"contracts\\BiatecClammPool.algo.ts:836","pc":[4102,4103]},{"teal":4239,"source":"contracts\\BiatecClammPool.algo.ts:836","pc":[4104,4105]},{"teal":4240,"source":"contracts\\BiatecClammPool.algo.ts:836","pc":[4106]},{"teal":4244,"source":"contracts\\BiatecClammPool.algo.ts:837","pc":[4107]},{"teal":4245,"source":"contracts\\BiatecClammPool.algo.ts:837","pc":[4108,4109]},{"teal":4246,"source":"contracts\\BiatecClammPool.algo.ts:837","pc":[4110,4111]},{"teal":4247,"source":"contracts\\BiatecClammPool.algo.ts:837","pc":[4112]},{"teal":4248,"source":"contracts\\BiatecClammPool.algo.ts:837","pc":[4113,4114]},{"teal":4249,"source":"contracts\\BiatecClammPool.algo.ts:837","pc":[4115,4116]},{"teal":4250,"source":"contracts\\BiatecClammPool.algo.ts:837","pc":[4117]},{"teal":4251,"source":"contracts\\BiatecClammPool.algo.ts:837","pc":[4118,4119]},{"teal":4252,"source":"contracts\\BiatecClammPool.algo.ts:837","pc":[4120,4121]},{"teal":4253,"source":"contracts\\BiatecClammPool.algo.ts:837","pc":[4122,4123]},{"teal":4254,"source":"contracts\\BiatecClammPool.algo.ts:837","pc":[4124,4125]},{"teal":4255,"source":"contracts\\BiatecClammPool.algo.ts:837","pc":[4126]},{"teal":4259,"source":"contracts\\BiatecClammPool.algo.ts:838","pc":[4127]},{"teal":4260,"source":"contracts\\BiatecClammPool.algo.ts:838","pc":[4128,4129]},{"teal":4261,"source":"contracts\\BiatecClammPool.algo.ts:838","pc":[4130,4131]},{"teal":4262,"source":"contracts\\BiatecClammPool.algo.ts:838","pc":[4132]},{"teal":4263,"source":"contracts\\BiatecClammPool.algo.ts:838","pc":[4133,4134]},{"teal":4264,"source":"contracts\\BiatecClammPool.algo.ts:838","pc":[4135,4136]},{"teal":4265,"source":"contracts\\BiatecClammPool.algo.ts:838","pc":[4137]},{"teal":4266,"source":"contracts\\BiatecClammPool.algo.ts:838","pc":[4138,4139]},{"teal":4267,"source":"contracts\\BiatecClammPool.algo.ts:838","pc":[4140,4141]},{"teal":4268,"source":"contracts\\BiatecClammPool.algo.ts:838","pc":[4142,4143]},{"teal":4269,"source":"contracts\\BiatecClammPool.algo.ts:838","pc":[4144,4145]},{"teal":4270,"source":"contracts\\BiatecClammPool.algo.ts:838","pc":[4146]},{"teal":4275,"source":"contracts\\BiatecClammPool.algo.ts:840","pc":[4147,4148]},{"teal":4276,"source":"contracts\\BiatecClammPool.algo.ts:840","pc":[4149,4150]},{"teal":4277,"source":"contracts\\BiatecClammPool.algo.ts:840","pc":[4151,4152,4153]},{"teal":4282,"source":"contracts\\BiatecClammPool.algo.ts:842","pc":[4154,4155]},{"teal":4283,"source":"contracts\\BiatecClammPool.algo.ts:842","pc":[4156,4157]},{"teal":4284,"source":"contracts\\BiatecClammPool.algo.ts:842","pc":[4158]},{"teal":4285,"source":"contracts\\BiatecClammPool.algo.ts:842","pc":[4159]},{"teal":4286,"source":"contracts\\BiatecClammPool.algo.ts:842","pc":[4160,4161,4162]},{"teal":4294,"source":"contracts\\BiatecClammPool.algo.ts:844","pc":[4163,4164]},{"teal":4295,"source":"contracts\\BiatecClammPool.algo.ts:844","pc":[4165]},{"teal":4296,"source":"contracts\\BiatecClammPool.algo.ts:844","pc":[4166]},{"teal":4297,"source":"contracts\\BiatecClammPool.algo.ts:844","pc":[4167]},{"teal":4298,"source":"contracts\\BiatecClammPool.algo.ts:844","pc":[4168,4169,4170]},{"teal":4299,"source":"contracts\\BiatecClammPool.algo.ts:844","pc":[4171,4172]},{"teal":4300,"source":"contracts\\BiatecClammPool.algo.ts:844","pc":[4173]},{"teal":4301,"source":"contracts\\BiatecClammPool.algo.ts:844","pc":[4174]},{"teal":4302,"source":"contracts\\BiatecClammPool.algo.ts:844","pc":[4175]},{"teal":4306,"source":"contracts\\BiatecClammPool.algo.ts:843","errorMessage":"Payment can be done only when one of the pool assets is native token","pc":[4176]},{"teal":4315,"source":"contracts\\BiatecClammPool.algo.ts:848","pc":[4177,4178]},{"teal":4316,"source":"contracts\\BiatecClammPool.algo.ts:848","pc":[4179,4180]},{"teal":4317,"source":"contracts\\BiatecClammPool.algo.ts:848","pc":[4181]},{"teal":4318,"source":"contracts\\BiatecClammPool.algo.ts:848","pc":[4182]},{"teal":4321,"source":"contracts\\BiatecClammPool.algo.ts:848","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"typeEnum\",\"expected\":\"pay\"}","pc":[4183]},{"teal":4324,"source":"contracts\\BiatecClammPool.algo.ts:848","pc":[4184,4185]},{"teal":4325,"source":"contracts\\BiatecClammPool.algo.ts:849","pc":[4186,4187]},{"teal":4326,"source":"contracts\\BiatecClammPool.algo.ts:849","pc":[4188]},{"teal":4327,"source":"contracts\\BiatecClammPool.algo.ts:849","pc":[4189]},{"teal":4330,"source":"contracts\\BiatecClammPool.algo.ts:849","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"amount\",\"condition\":\"greaterThan\",\"expected\":\">0\"}","pc":[4190]},{"teal":4333,"source":"contracts\\BiatecClammPool.algo.ts:848","pc":[4191,4192]},{"teal":4334,"source":"contracts\\BiatecClammPool.algo.ts:850","pc":[4193,4194]},{"teal":4335,"source":"contracts\\BiatecClammPool.algo.ts:850","pc":[4195,4196]},{"teal":4336,"source":"contracts\\BiatecClammPool.algo.ts:850","pc":[4197]},{"teal":4339,"source":"contracts\\BiatecClammPool.algo.ts:850","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[4198]},{"teal":4342,"source":"contracts\\BiatecClammPool.algo.ts:848","pc":[4199,4200]},{"teal":4343,"source":"contracts\\BiatecClammPool.algo.ts:851","pc":[4201,4202]},{"teal":4344,"source":"contracts\\BiatecClammPool.algo.ts:851","pc":[4203,4204]},{"teal":4345,"source":"contracts\\BiatecClammPool.algo.ts:851","pc":[4205]},{"teal":4348,"source":"contracts\\BiatecClammPool.algo.ts:851","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"sender\",\"expected\":\"this.txn.sender\"}","pc":[4206]},{"teal":4349,"source":"contracts\\BiatecClammPool.algo.ts:842","pc":[4207,4208,4209]},{"teal":4354,"source":"contracts\\BiatecClammPool.algo.ts:854","pc":[4210,4211]},{"teal":4355,"source":"contracts\\BiatecClammPool.algo.ts:854","pc":[4212,4213]},{"teal":4356,"source":"contracts\\BiatecClammPool.algo.ts:854","pc":[4214,4215]},{"teal":4357,"source":"contracts\\BiatecClammPool.algo.ts:854","pc":[4216]},{"teal":4358,"source":"contracts\\BiatecClammPool.algo.ts:854","pc":[4217]},{"teal":4368,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[4218,4219]},{"teal":4369,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[4220,4221]},{"teal":4370,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[4222,4223]},{"teal":4371,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[4224]},{"teal":4374,"source":"contracts\\BiatecClammPool.algo.ts:856","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"typeEnum\",\"expected\":\"axfer\"}","pc":[4225]},{"teal":4377,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[4226,4227]},{"teal":4378,"source":"contracts\\BiatecClammPool.algo.ts:857","pc":[4228,4229]},{"teal":4379,"source":"contracts\\BiatecClammPool.algo.ts:857","pc":[4230]},{"teal":4380,"source":"contracts\\BiatecClammPool.algo.ts:857","pc":[4231]},{"teal":4383,"source":"contracts\\BiatecClammPool.algo.ts:857","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"assetAmount\",\"condition\":\"greaterThan\",\"expected\":\">0\"}","pc":[4232]},{"teal":4386,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[4233,4234]},{"teal":4387,"source":"contracts\\BiatecClammPool.algo.ts:858","pc":[4235,4236]},{"teal":4388,"source":"contracts\\BiatecClammPool.algo.ts:858","pc":[4237,4238]},{"teal":4389,"source":"contracts\\BiatecClammPool.algo.ts:858","pc":[4239]},{"teal":4392,"source":"contracts\\BiatecClammPool.algo.ts:858","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[4240]},{"teal":4395,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[4241,4242]},{"teal":4396,"source":"contracts\\BiatecClammPool.algo.ts:859","pc":[4243,4244]},{"teal":4397,"source":"contracts\\BiatecClammPool.algo.ts:859","pc":[4245,4246]},{"teal":4398,"source":"contracts\\BiatecClammPool.algo.ts:859","pc":[4247]},{"teal":4401,"source":"contracts\\BiatecClammPool.algo.ts:859","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"sender\",\"expected\":\"this.txn.sender\"}","pc":[4248]},{"teal":4404,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[4249,4250]},{"teal":4405,"source":"contracts\\BiatecClammPool.algo.ts:860","pc":[4251,4252]},{"teal":4406,"source":"contracts\\BiatecClammPool.algo.ts:860","pc":[4253,4254]},{"teal":4407,"source":"contracts\\BiatecClammPool.algo.ts:860","pc":[4255]},{"teal":4408,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[4256,4257]},{"teal":4409,"source":"contracts\\BiatecClammPool.algo.ts:860","pc":[4258,4259]},{"teal":4410,"source":"contracts\\BiatecClammPool.algo.ts:860","pc":[4260,4261]},{"teal":4411,"source":"contracts\\BiatecClammPool.algo.ts:860","pc":[4262]},{"teal":4412,"source":"contracts\\BiatecClammPool.algo.ts:860","pc":[4263]},{"teal":4415,"source":"contracts\\BiatecClammPool.algo.ts:860","errorMessage":"transaction verification failed: {\"txn\":{\"txnText\":\"txSwap\"},\"field\":\"xferAsset\",\"condition\":\"includedIn\",\"expected\":\"[assetA, assetB]\"}","pc":[4264]},{"teal":4420,"source":"contracts\\BiatecClammPool.algo.ts:864","pc":[4265,4266]},{"teal":4421,"source":"contracts\\BiatecClammPool.algo.ts:864","pc":[4267,4268]},{"teal":4422,"source":"contracts\\BiatecClammPool.algo.ts:864","pc":[4269]},{"teal":4425,"source":"contracts\\BiatecClammPool.algo.ts:864","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('p')","pc":[4270]},{"teal":4426,"source":"contracts\\BiatecClammPool.algo.ts:864","pc":[4271,4272]},{"teal":4433,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[4273,4274]},{"teal":4434,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[4275,4276]},{"teal":4435,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[4277]},{"teal":4438,"source":"contracts\\BiatecClammPool.algo.ts:865","errorMessage":"ERR-INVALID-PP","pc":[4278]},{"teal":4442,"source":"contracts\\BiatecClammPool.algo.ts:869","pc":[4279,4280]},{"teal":4443,"source":"contracts\\BiatecClammPool.algo.ts:869","pc":[4281,4282]},{"teal":4444,"source":"contracts\\BiatecClammPool.algo.ts:869","pc":[4283,4284,4285]},{"teal":4445,"source":"contracts\\BiatecClammPool.algo.ts:869","pc":[4286,4287]},{"teal":4450,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[4288]},{"teal":4451,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4289,4290]},{"teal":4452,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4291]},{"teal":4453,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4292]},{"teal":4454,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4293,4294]},{"teal":4455,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4295,4296]},{"teal":4456,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4297,4298]},{"teal":4457,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4299,4300,4301]},{"teal":4458,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4302]},{"teal":4459,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4303]},{"teal":4460,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4304]},{"teal":4461,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4305,4306]},{"teal":4462,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4307,4308]},{"teal":4463,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4309,4310]},{"teal":4464,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4311,4312,4313]},{"teal":4465,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4314]},{"teal":4466,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4315]},{"teal":4467,"source":"contracts\\BiatecClammPool.algo.ts:872","pc":[4316]},{"teal":4468,"source":"contracts\\BiatecClammPool.algo.ts:871","pc":[4317]},{"teal":4469,"source":"contracts\\BiatecClammPool.algo.ts:871","pc":[4318,4319]},{"teal":4473,"source":"contracts\\BiatecClammPool.algo.ts:873","pc":[4320]},{"teal":4474,"source":"contracts\\BiatecClammPool.algo.ts:873","pc":[4321,4322]},{"teal":4478,"source":"contracts\\BiatecClammPool.algo.ts:874","pc":[4323]},{"teal":4479,"source":"contracts\\BiatecClammPool.algo.ts:874","pc":[4324,4325]},{"teal":4483,"source":"contracts\\BiatecClammPool.algo.ts:875","pc":[4326]},{"teal":4484,"source":"contracts\\BiatecClammPool.algo.ts:875","pc":[4327,4328]},{"teal":4488,"source":"contracts\\BiatecClammPool.algo.ts:876","pc":[4329]},{"teal":4489,"source":"contracts\\BiatecClammPool.algo.ts:876","pc":[4330,4331]},{"teal":4493,"source":"contracts\\BiatecClammPool.algo.ts:877","pc":[4332]},{"teal":4494,"source":"contracts\\BiatecClammPool.algo.ts:877","pc":[4333,4334]},{"teal":4498,"source":"contracts\\BiatecClammPool.algo.ts:879","pc":[4335]},{"teal":4499,"source":"contracts\\BiatecClammPool.algo.ts:879","pc":[4336,4337]},{"teal":4504,"source":"contracts\\BiatecClammPool.algo.ts:880","pc":[4338,4339]},{"teal":4505,"source":"contracts\\BiatecClammPool.algo.ts:880","pc":[4340,4341]},{"teal":4506,"source":"contracts\\BiatecClammPool.algo.ts:880","pc":[4342]},{"teal":4507,"source":"contracts\\BiatecClammPool.algo.ts:880","pc":[4343]},{"teal":4508,"source":"contracts\\BiatecClammPool.algo.ts:880","pc":[4344,4345,4346]},{"teal":4513,"source":"contracts\\BiatecClammPool.algo.ts:881","pc":[4347,4348]},{"teal":4514,"source":"contracts\\BiatecClammPool.algo.ts:881","pc":[4349]},{"teal":4515,"source":"contracts\\BiatecClammPool.algo.ts:881","pc":[4350]},{"teal":4516,"source":"contracts\\BiatecClammPool.algo.ts:881","pc":[4351,4352]},{"teal":4517,"source":"contracts\\BiatecClammPool.algo.ts:880","pc":[4353,4354,4355]},{"teal":4522,"source":"contracts\\BiatecClammPool.algo.ts:883","pc":[4356,4357]},{"teal":4523,"source":"contracts\\BiatecClammPool.algo.ts:883","pc":[4358,4359]},{"teal":4524,"source":"contracts\\BiatecClammPool.algo.ts:883","pc":[4360,4361]},{"teal":4525,"source":"contracts\\BiatecClammPool.algo.ts:883","pc":[4362]},{"teal":4526,"source":"contracts\\BiatecClammPool.algo.ts:883","pc":[4363,4364]},{"teal":4531,"source":"contracts\\BiatecClammPool.algo.ts:885","pc":[4365,4366]},{"teal":4532,"source":"contracts\\BiatecClammPool.algo.ts:885","pc":[4367,4368]},{"teal":4536,"source":"contracts\\BiatecClammPool.algo.ts:886","pc":[4369,4370]},{"teal":4537,"source":"contracts\\BiatecClammPool.algo.ts:886","pc":[4371,4372]},{"teal":4542,"source":"contracts\\BiatecClammPool.algo.ts:887","pc":[4373,4374]},{"teal":4543,"source":"contracts\\BiatecClammPool.algo.ts:887","pc":[4375,4376,4377]},{"teal":4548,"source":"contracts\\BiatecClammPool.algo.ts:888","pc":[4378,4379]},{"teal":4549,"source":"contracts\\BiatecClammPool.algo.ts:888","pc":[4380,4381]},{"teal":4554,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[4382,4383]},{"teal":4555,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[4384,4385]},{"teal":4556,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[4386]},{"teal":4557,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[4387]},{"teal":4558,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[4388,4389,4390]},{"teal":4563,"source":"contracts\\BiatecClammPool.algo.ts:890","pc":[4391,4392]},{"teal":4564,"source":"contracts\\BiatecClammPool.algo.ts:890","pc":[4393,4394]},{"teal":4565,"source":"contracts\\BiatecClammPool.algo.ts:890","pc":[4395]},{"teal":4566,"source":"contracts\\BiatecClammPool.algo.ts:890","pc":[4396,4397]},{"teal":4570,"source":"contracts\\BiatecClammPool.algo.ts:891","pc":[4398,4399]},{"teal":4571,"source":"contracts\\BiatecClammPool.algo.ts:891","pc":[4400,4401]},{"teal":4572,"source":"contracts\\BiatecClammPool.algo.ts:891","pc":[4402,4403]},{"teal":4573,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[4404,4405,4406]},{"teal":4578,"source":"contracts\\BiatecClammPool.algo.ts:893","pc":[4407,4408]},{"teal":4579,"source":"contracts\\BiatecClammPool.algo.ts:893","pc":[4409,4410]},{"teal":4580,"source":"contracts\\BiatecClammPool.algo.ts:893","pc":[4411]},{"teal":4581,"source":"contracts\\BiatecClammPool.algo.ts:893","pc":[4412,4413]},{"teal":4585,"source":"contracts\\BiatecClammPool.algo.ts:894","pc":[4414,4415]},{"teal":4586,"source":"contracts\\BiatecClammPool.algo.ts:894","pc":[4416,4417]},{"teal":4587,"source":"contracts\\BiatecClammPool.algo.ts:894","pc":[4418,4419]},{"teal":4592,"source":"contracts\\BiatecClammPool.algo.ts:896","pc":[4420,4421]},{"teal":4593,"source":"contracts\\BiatecClammPool.algo.ts:896","pc":[4422,4423]},{"teal":4594,"source":"contracts\\BiatecClammPool.algo.ts:896","pc":[4424]},{"teal":4595,"source":"contracts\\BiatecClammPool.algo.ts:896","pc":[4425]},{"teal":4596,"source":"contracts\\BiatecClammPool.algo.ts:896","pc":[4426,4427]},{"teal":4600,"source":"contracts\\BiatecClammPool.algo.ts:897","pc":[4428,4429]},{"teal":4601,"source":"contracts\\BiatecClammPool.algo.ts:897","pc":[4430,4431]},{"teal":4602,"source":"contracts\\BiatecClammPool.algo.ts:897","pc":[4432]},{"teal":4603,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[4433]},{"teal":4604,"source":"contracts\\BiatecClammPool.algo.ts:897","pc":[4434]},{"teal":4605,"source":"contracts\\BiatecClammPool.algo.ts:897","pc":[4435,4436]},{"teal":4616,"source":"contracts\\BiatecClammPool.algo.ts:905","pc":[4437,4438]},{"teal":4617,"source":"contracts\\BiatecClammPool.algo.ts:905","pc":[4439]},{"teal":4618,"source":"contracts\\BiatecClammPool.algo.ts:904","pc":[4440,4441]},{"teal":4619,"source":"contracts\\BiatecClammPool.algo.ts:904","pc":[4442]},{"teal":4620,"source":"contracts\\BiatecClammPool.algo.ts:903","pc":[4443,4444]},{"teal":4621,"source":"contracts\\BiatecClammPool.algo.ts:903","pc":[4445]},{"teal":4622,"source":"contracts\\BiatecClammPool.algo.ts:902","pc":[4446,4447]},{"teal":4623,"source":"contracts\\BiatecClammPool.algo.ts:902","pc":[4448]},{"teal":4624,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[4449]},{"teal":4625,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[4450]},{"teal":4626,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4451,4452]},{"teal":4627,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4453]},{"teal":4628,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4454]},{"teal":4629,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4455]},{"teal":4630,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4456]},{"teal":4633,"source":"contracts\\BiatecClammPool.algo.ts:900","errorMessage":"inAssetAfterFee overflowed 256 bits","pc":[4457]},{"teal":4634,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4458]},{"teal":4635,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4459]},{"teal":4636,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4460]},{"teal":4637,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4461]},{"teal":4638,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4462]},{"teal":4639,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4463]},{"teal":4640,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4464]},{"teal":4641,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4465]},{"teal":4642,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[4466]},{"teal":4643,"source":"contracts\\BiatecClammPool.algo.ts:899","pc":[4467,4468,4469]},{"teal":4644,"source":"contracts\\BiatecClammPool.algo.ts:899","pc":[4470,4471]},{"teal":4648,"source":"contracts\\BiatecClammPool.algo.ts:907","pc":[4472,4473]},{"teal":4649,"source":"contracts\\BiatecClammPool.algo.ts:907","pc":[4474,4475]},{"teal":4653,"source":"contracts\\BiatecClammPool.algo.ts:908","pc":[4476,4477]},{"teal":4654,"source":"contracts\\BiatecClammPool.algo.ts:908","pc":[4478,4479]},{"teal":4655,"source":"contracts\\BiatecClammPool.algo.ts:908","pc":[4480]},{"teal":4656,"source":"contracts\\BiatecClammPool.algo.ts:908","pc":[4481]},{"teal":4657,"source":"contracts\\BiatecClammPool.algo.ts:908","pc":[4482,4483]},{"teal":4662,"source":"contracts\\BiatecClammPool.algo.ts:910","pc":[4484,4485]},{"teal":4663,"source":"contracts\\BiatecClammPool.algo.ts:910","pc":[4486,4487]},{"teal":4664,"source":"contracts\\BiatecClammPool.algo.ts:910","pc":[4488]},{"teal":4665,"source":"contracts\\BiatecClammPool.algo.ts:910","pc":[4489]},{"teal":4666,"source":"contracts\\BiatecClammPool.algo.ts:910","pc":[4490,4491]},{"teal":4667,"source":"contracts\\BiatecClammPool.algo.ts:910","pc":[4492]},{"teal":4668,"source":"contracts\\BiatecClammPool.algo.ts:910","pc":[4493,4494,4495]},{"teal":4673,"source":"contracts\\BiatecClammPool.algo.ts:911","pc":[4496,4497]},{"teal":4674,"source":"contracts\\BiatecClammPool.algo.ts:911","pc":[4498,4499]},{"teal":4675,"source":"contracts\\BiatecClammPool.algo.ts:911","pc":[4500]},{"teal":4676,"source":"contracts\\BiatecClammPool.algo.ts:911","pc":[4501,4502]},{"teal":4680,"source":"contracts\\BiatecClammPool.algo.ts:912","pc":[4503,4504]},{"teal":4681,"source":"contracts\\BiatecClammPool.algo.ts:912","pc":[4505,4506]},{"teal":4682,"source":"contracts\\BiatecClammPool.algo.ts:912","pc":[4507]},{"teal":4683,"source":"contracts\\BiatecClammPool.algo.ts:912","pc":[4508]},{"teal":4684,"source":"contracts\\BiatecClammPool.algo.ts:912","pc":[4509,4510]},{"teal":4689,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4511,4512]},{"teal":4690,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4513]},{"teal":4691,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4514]},{"teal":4692,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4515,4516]},{"teal":4693,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4517]},{"teal":4696,"source":"contracts\\BiatecClammPool.algo.ts:914","errorMessage":"realSwapBDecimals as uint64 overflowed 64 bits","pc":[4518]},{"teal":4697,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4519,4520]},{"teal":4698,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4521]},{"teal":4699,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4522]},{"teal":4700,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4523]},{"teal":4701,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4524]},{"teal":4702,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4525,4526]},{"teal":4703,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4527]},{"teal":4704,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4528]},{"teal":4705,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4529]},{"teal":4706,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4530]},{"teal":4707,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[4531,4532]},{"teal":4711,"source":"contracts\\BiatecClammPool.algo.ts:915","pc":[4533,4534]},{"teal":4712,"source":"contracts\\BiatecClammPool.algo.ts:915","pc":[4535,4536]},{"teal":4717,"source":"contracts\\BiatecClammPool.algo.ts:916","pc":[4537,4538]},{"teal":4718,"source":"contracts\\BiatecClammPool.algo.ts:916","pc":[4539]},{"teal":4719,"source":"contracts\\BiatecClammPool.algo.ts:916","pc":[4540]},{"teal":4720,"source":"contracts\\BiatecClammPool.algo.ts:916","pc":[4541,4542,4543]},{"teal":4725,"source":"contracts\\BiatecClammPool.algo.ts:918","pc":[4544,4545]},{"teal":4726,"source":"contracts\\BiatecClammPool.algo.ts:918","pc":[4546,4547]},{"teal":4727,"source":"contracts\\BiatecClammPool.algo.ts:918","pc":[4548]},{"teal":4730,"source":"contracts\\BiatecClammPool.algo.ts:918","errorMessage":"Minimum to receive is not met","pc":[4549]},{"teal":4735,"source":"contracts\\BiatecClammPool.algo.ts:920","pc":[4550,4551]},{"teal":4736,"source":"contracts\\BiatecClammPool.algo.ts:920","pc":[4552,4553]},{"teal":4740,"source":"contracts\\BiatecClammPool.algo.ts:921","pc":[4554,4555]},{"teal":4741,"source":"contracts\\BiatecClammPool.algo.ts:921","pc":[4556,4557]},{"teal":4742,"source":"contracts\\BiatecClammPool.algo.ts:921","pc":[4558,4559]},{"teal":4743,"source":"contracts\\BiatecClammPool.algo.ts:921","pc":[4560,4561,4562]},{"teal":4747,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4563]},{"teal":4748,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4564]},{"teal":4749,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4565]},{"teal":4750,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4566,4567]},{"teal":4751,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4568]},{"teal":4752,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4569]},{"teal":4753,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4570]},{"teal":4754,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4571]},{"teal":4755,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4572]},{"teal":4758,"source":"contracts\\BiatecClammPool.algo.ts:923","errorMessage":"this.assetABalance.value + inAsset overflowed 256 bits","pc":[4573]},{"teal":4759,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4574]},{"teal":4760,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4575]},{"teal":4761,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4576]},{"teal":4762,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4577]},{"teal":4763,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4578]},{"teal":4764,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4579]},{"teal":4765,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4580]},{"teal":4766,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4581]},{"teal":4767,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4582]},{"teal":4768,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[4583]},{"teal":4772,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4584,4585]},{"teal":4773,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4586]},{"teal":4774,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4587]},{"teal":4775,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4588,4589]},{"teal":4776,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4590]},{"teal":4777,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4591]},{"teal":4778,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4592]},{"teal":4779,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4593]},{"teal":4780,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4594]},{"teal":4783,"source":"contracts\\BiatecClammPool.algo.ts:924","errorMessage":"this.assetBBalance.value - realSwapBaseDecimals overflowed 256 bits","pc":[4595]},{"teal":4784,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4596]},{"teal":4785,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4597]},{"teal":4786,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4598]},{"teal":4787,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4599]},{"teal":4788,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4600]},{"teal":4789,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4601]},{"teal":4790,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4602]},{"teal":4791,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4603]},{"teal":4792,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4604]},{"teal":4793,"source":"contracts\\BiatecClammPool.algo.ts:924","pc":[4605]},{"teal":4799,"source":"contracts\\BiatecClammPool.algo.ts:927","pc":[4606,4607]},{"teal":4800,"source":"contracts\\BiatecClammPool.algo.ts:927","pc":[4608]},{"teal":4801,"source":"contracts\\BiatecClammPool.algo.ts:927","pc":[4609,4610,4611]},{"teal":4806,"source":"contracts\\BiatecClammPool.algo.ts:928","pc":[4612,4613]},{"teal":4807,"source":"contracts\\BiatecClammPool.algo.ts:928","pc":[4614,4615]},{"teal":4812,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[4616,4617]},{"teal":4813,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[4618,4619]},{"teal":4814,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[4620]},{"teal":4815,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[4621]},{"teal":4816,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[4622,4623,4624]},{"teal":4821,"source":"contracts\\BiatecClammPool.algo.ts:930","pc":[4625,4626]},{"teal":4822,"source":"contracts\\BiatecClammPool.algo.ts:930","pc":[4627,4628]},{"teal":4823,"source":"contracts\\BiatecClammPool.algo.ts:930","pc":[4629]},{"teal":4824,"source":"contracts\\BiatecClammPool.algo.ts:930","pc":[4630,4631]},{"teal":4828,"source":"contracts\\BiatecClammPool.algo.ts:931","pc":[4632,4633]},{"teal":4829,"source":"contracts\\BiatecClammPool.algo.ts:931","pc":[4634,4635]},{"teal":4830,"source":"contracts\\BiatecClammPool.algo.ts:931","pc":[4636,4637]},{"teal":4831,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[4638,4639,4640]},{"teal":4836,"source":"contracts\\BiatecClammPool.algo.ts:933","pc":[4641,4642]},{"teal":4837,"source":"contracts\\BiatecClammPool.algo.ts:933","pc":[4643,4644]},{"teal":4838,"source":"contracts\\BiatecClammPool.algo.ts:933","pc":[4645]},{"teal":4839,"source":"contracts\\BiatecClammPool.algo.ts:933","pc":[4646,4647]},{"teal":4843,"source":"contracts\\BiatecClammPool.algo.ts:934","pc":[4648,4649]},{"teal":4844,"source":"contracts\\BiatecClammPool.algo.ts:934","pc":[4650,4651]},{"teal":4845,"source":"contracts\\BiatecClammPool.algo.ts:934","pc":[4652,4653]},{"teal":4850,"source":"contracts\\BiatecClammPool.algo.ts:936","pc":[4654,4655]},{"teal":4851,"source":"contracts\\BiatecClammPool.algo.ts:936","pc":[4656,4657]},{"teal":4852,"source":"contracts\\BiatecClammPool.algo.ts:936","pc":[4658]},{"teal":4853,"source":"contracts\\BiatecClammPool.algo.ts:936","pc":[4659]},{"teal":4854,"source":"contracts\\BiatecClammPool.algo.ts:936","pc":[4660,4661]},{"teal":4858,"source":"contracts\\BiatecClammPool.algo.ts:937","pc":[4662,4663]},{"teal":4859,"source":"contracts\\BiatecClammPool.algo.ts:937","pc":[4664,4665]},{"teal":4860,"source":"contracts\\BiatecClammPool.algo.ts:937","pc":[4666]},{"teal":4861,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[4667]},{"teal":4862,"source":"contracts\\BiatecClammPool.algo.ts:937","pc":[4668]},{"teal":4863,"source":"contracts\\BiatecClammPool.algo.ts:937","pc":[4669,4670]},{"teal":4874,"source":"contracts\\BiatecClammPool.algo.ts:944","pc":[4671,4672]},{"teal":4875,"source":"contracts\\BiatecClammPool.algo.ts:944","pc":[4673]},{"teal":4876,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[4674,4675]},{"teal":4877,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[4676]},{"teal":4878,"source":"contracts\\BiatecClammPool.algo.ts:942","pc":[4677,4678]},{"teal":4879,"source":"contracts\\BiatecClammPool.algo.ts:942","pc":[4679]},{"teal":4880,"source":"contracts\\BiatecClammPool.algo.ts:941","pc":[4680,4681]},{"teal":4881,"source":"contracts\\BiatecClammPool.algo.ts:941","pc":[4682]},{"teal":4882,"source":"contracts\\BiatecClammPool.algo.ts:940","pc":[4683]},{"teal":4883,"source":"contracts\\BiatecClammPool.algo.ts:940","pc":[4684]},{"teal":4884,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4685,4686]},{"teal":4885,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4687]},{"teal":4886,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4688]},{"teal":4887,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4689]},{"teal":4888,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4690]},{"teal":4891,"source":"contracts\\BiatecClammPool.algo.ts:939","errorMessage":"inAssetAfterFee overflowed 256 bits","pc":[4691]},{"teal":4892,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4692]},{"teal":4893,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4693]},{"teal":4894,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4694]},{"teal":4895,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4695]},{"teal":4896,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4696]},{"teal":4897,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4697]},{"teal":4898,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4698]},{"teal":4899,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4699]},{"teal":4900,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[4700]},{"teal":4901,"source":"contracts\\BiatecClammPool.algo.ts:938","pc":[4701,4702,4703]},{"teal":4902,"source":"contracts\\BiatecClammPool.algo.ts:938","pc":[4704,4705]},{"teal":4906,"source":"contracts\\BiatecClammPool.algo.ts:946","pc":[4706,4707]},{"teal":4907,"source":"contracts\\BiatecClammPool.algo.ts:946","pc":[4708,4709]},{"teal":4911,"source":"contracts\\BiatecClammPool.algo.ts:947","pc":[4710,4711]},{"teal":4912,"source":"contracts\\BiatecClammPool.algo.ts:947","pc":[4712,4713]},{"teal":4913,"source":"contracts\\BiatecClammPool.algo.ts:947","pc":[4714]},{"teal":4914,"source":"contracts\\BiatecClammPool.algo.ts:947","pc":[4715]},{"teal":4915,"source":"contracts\\BiatecClammPool.algo.ts:947","pc":[4716,4717]},{"teal":4920,"source":"contracts\\BiatecClammPool.algo.ts:949","pc":[4718,4719]},{"teal":4921,"source":"contracts\\BiatecClammPool.algo.ts:949","pc":[4720,4721]},{"teal":4922,"source":"contracts\\BiatecClammPool.algo.ts:949","pc":[4722]},{"teal":4923,"source":"contracts\\BiatecClammPool.algo.ts:949","pc":[4723]},{"teal":4924,"source":"contracts\\BiatecClammPool.algo.ts:949","pc":[4724,4725]},{"teal":4925,"source":"contracts\\BiatecClammPool.algo.ts:949","pc":[4726]},{"teal":4926,"source":"contracts\\BiatecClammPool.algo.ts:949","pc":[4727,4728,4729]},{"teal":4931,"source":"contracts\\BiatecClammPool.algo.ts:950","pc":[4730,4731]},{"teal":4932,"source":"contracts\\BiatecClammPool.algo.ts:950","pc":[4732,4733]},{"teal":4933,"source":"contracts\\BiatecClammPool.algo.ts:950","pc":[4734]},{"teal":4934,"source":"contracts\\BiatecClammPool.algo.ts:950","pc":[4735,4736]},{"teal":4938,"source":"contracts\\BiatecClammPool.algo.ts:951","pc":[4737,4738]},{"teal":4939,"source":"contracts\\BiatecClammPool.algo.ts:951","pc":[4739,4740]},{"teal":4940,"source":"contracts\\BiatecClammPool.algo.ts:951","pc":[4741]},{"teal":4941,"source":"contracts\\BiatecClammPool.algo.ts:951","pc":[4742]},{"teal":4942,"source":"contracts\\BiatecClammPool.algo.ts:951","pc":[4743,4744]},{"teal":4947,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4745,4746]},{"teal":4948,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4747]},{"teal":4949,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4748]},{"teal":4950,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4749,4750]},{"teal":4951,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4751]},{"teal":4954,"source":"contracts\\BiatecClammPool.algo.ts:953","errorMessage":"realSwapADecimals as uint64 overflowed 64 bits","pc":[4752]},{"teal":4955,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4753,4754]},{"teal":4956,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4755]},{"teal":4957,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4756]},{"teal":4958,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4757]},{"teal":4959,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4758]},{"teal":4960,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4759,4760]},{"teal":4961,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4761]},{"teal":4962,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4762]},{"teal":4963,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4763]},{"teal":4964,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4764]},{"teal":4965,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[4765,4766]},{"teal":4969,"source":"contracts\\BiatecClammPool.algo.ts:954","pc":[4767,4768]},{"teal":4970,"source":"contracts\\BiatecClammPool.algo.ts:954","pc":[4769,4770]},{"teal":4975,"source":"contracts\\BiatecClammPool.algo.ts:955","pc":[4771,4772]},{"teal":4976,"source":"contracts\\BiatecClammPool.algo.ts:955","pc":[4773]},{"teal":4977,"source":"contracts\\BiatecClammPool.algo.ts:955","pc":[4774]},{"teal":4978,"source":"contracts\\BiatecClammPool.algo.ts:955","pc":[4775,4776,4777]},{"teal":4983,"source":"contracts\\BiatecClammPool.algo.ts:957","pc":[4778,4779]},{"teal":4984,"source":"contracts\\BiatecClammPool.algo.ts:957","pc":[4780,4781]},{"teal":4985,"source":"contracts\\BiatecClammPool.algo.ts:957","pc":[4782]},{"teal":4988,"source":"contracts\\BiatecClammPool.algo.ts:957","errorMessage":"Minimum to receive is not met","pc":[4783]},{"teal":4993,"source":"contracts\\BiatecClammPool.algo.ts:959","pc":[4784,4785]},{"teal":4994,"source":"contracts\\BiatecClammPool.algo.ts:959","pc":[4786,4787]},{"teal":4998,"source":"contracts\\BiatecClammPool.algo.ts:960","pc":[4788,4789]},{"teal":4999,"source":"contracts\\BiatecClammPool.algo.ts:960","pc":[4790,4791]},{"teal":5000,"source":"contracts\\BiatecClammPool.algo.ts:960","pc":[4792,4793]},{"teal":5001,"source":"contracts\\BiatecClammPool.algo.ts:960","pc":[4794,4795,4796]},{"teal":5005,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4797,4798]},{"teal":5006,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4799]},{"teal":5007,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4800]},{"teal":5008,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4801,4802]},{"teal":5009,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4803]},{"teal":5010,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4804]},{"teal":5011,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4805]},{"teal":5012,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4806]},{"teal":5013,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4807]},{"teal":5016,"source":"contracts\\BiatecClammPool.algo.ts:962","errorMessage":"this.assetBBalance.value + inAsset overflowed 256 bits","pc":[4808]},{"teal":5017,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4809]},{"teal":5018,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4810]},{"teal":5019,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4811]},{"teal":5020,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4812]},{"teal":5021,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4813]},{"teal":5022,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4814]},{"teal":5023,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4815]},{"teal":5024,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4816]},{"teal":5025,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4817]},{"teal":5026,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[4818]},{"teal":5030,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4819]},{"teal":5031,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4820]},{"teal":5032,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4821]},{"teal":5033,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4822,4823]},{"teal":5034,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4824]},{"teal":5035,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4825]},{"teal":5036,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4826]},{"teal":5037,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4827]},{"teal":5038,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4828]},{"teal":5041,"source":"contracts\\BiatecClammPool.algo.ts:963","errorMessage":"this.assetABalance.value - realSwapBaseDecimals overflowed 256 bits","pc":[4829]},{"teal":5042,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4830]},{"teal":5043,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4831]},{"teal":5044,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4832]},{"teal":5045,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4833]},{"teal":5046,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4834]},{"teal":5047,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4835]},{"teal":5048,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4836]},{"teal":5049,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4837]},{"teal":5050,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4838]},{"teal":5051,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[4839]},{"teal":5056,"source":"contracts\\BiatecClammPool.algo.ts:965","pc":[4840,4841]},{"teal":5057,"source":"contracts\\BiatecClammPool.algo.ts:965","pc":[4842,4843]},{"teal":5062,"source":"contracts\\BiatecClammPool.algo.ts:966","pc":[4844,4845]},{"teal":5063,"source":"contracts\\BiatecClammPool.algo.ts:966","pc":[4846]},{"teal":5064,"source":"contracts\\BiatecClammPool.algo.ts:966","pc":[4847,4848]},{"teal":5065,"source":"contracts\\BiatecClammPool.algo.ts:966","pc":[4849]},{"teal":5066,"source":"contracts\\BiatecClammPool.algo.ts:966","pc":[4850]},{"teal":5067,"source":"contracts\\BiatecClammPool.algo.ts:966","pc":[4851,4852,4853]},{"teal":5076,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4854,4855]},{"teal":5077,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4856]},{"teal":5078,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4857]},{"teal":5079,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4858]},{"teal":5080,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4859]},{"teal":5081,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4860]},{"teal":5082,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4861]},{"teal":5085,"source":"contracts\\BiatecClammPool.algo.ts:970","errorMessage":"this.priceMin.value as uint256 overflowed 256 bits","pc":[4862]},{"teal":5086,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4863]},{"teal":5087,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4864]},{"teal":5088,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4865]},{"teal":5089,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4866]},{"teal":5090,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4867]},{"teal":5091,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4868]},{"teal":5092,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4869]},{"teal":5093,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4870]},{"teal":5094,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[4871]},{"teal":5095,"source":"contracts\\BiatecClammPool.algo.ts:969","pc":[4872,4873]},{"teal":5096,"source":"contracts\\BiatecClammPool.algo.ts:969","pc":[4874]},{"teal":5097,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[4875]},{"teal":5098,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[4876]},{"teal":5099,"source":"contracts\\BiatecClammPool.algo.ts:967","pc":[4877,4878,4879]},{"teal":5100,"source":"contracts\\BiatecClammPool.algo.ts:967","pc":[4880,4881]},{"teal":5101,"source":"contracts\\BiatecClammPool.algo.ts:966","pc":[4882,4883,4884]},{"teal":5113,"source":"contracts\\BiatecClammPool.algo.ts:979","pc":[4885,4886]},{"teal":5114,"source":"contracts\\BiatecClammPool.algo.ts:979","pc":[4887]},{"teal":5115,"source":"contracts\\BiatecClammPool.algo.ts:978","pc":[4888,4889]},{"teal":5116,"source":"contracts\\BiatecClammPool.algo.ts:978","pc":[4890]},{"teal":5117,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4891,4892]},{"teal":5118,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4893]},{"teal":5119,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4894]},{"teal":5120,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4895]},{"teal":5121,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4896]},{"teal":5122,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4897]},{"teal":5123,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4898]},{"teal":5126,"source":"contracts\\BiatecClammPool.algo.ts:977","errorMessage":"this.priceMax.value as uint256 overflowed 256 bits","pc":[4899]},{"teal":5127,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4900]},{"teal":5128,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4901]},{"teal":5129,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4902]},{"teal":5130,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4903]},{"teal":5131,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4904]},{"teal":5132,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4905]},{"teal":5133,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4906]},{"teal":5134,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4907]},{"teal":5135,"source":"contracts\\BiatecClammPool.algo.ts:977","pc":[4908]},{"teal":5136,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4909,4910]},{"teal":5137,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4911]},{"teal":5138,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4912]},{"teal":5139,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4913]},{"teal":5140,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4914]},{"teal":5141,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4915]},{"teal":5142,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4916]},{"teal":5145,"source":"contracts\\BiatecClammPool.algo.ts:976","errorMessage":"this.priceMin.value as uint256 overflowed 256 bits","pc":[4917]},{"teal":5146,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4918]},{"teal":5147,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4919]},{"teal":5148,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4920]},{"teal":5149,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4921]},{"teal":5150,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4922]},{"teal":5151,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4923]},{"teal":5152,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4924]},{"teal":5153,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4925]},{"teal":5154,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[4926]},{"teal":5155,"source":"contracts\\BiatecClammPool.algo.ts:975","pc":[4927,4928]},{"teal":5156,"source":"contracts\\BiatecClammPool.algo.ts:975","pc":[4929]},{"teal":5157,"source":"contracts\\BiatecClammPool.algo.ts:974","pc":[4930]},{"teal":5158,"source":"contracts\\BiatecClammPool.algo.ts:974","pc":[4931]},{"teal":5159,"source":"contracts\\BiatecClammPool.algo.ts:973","pc":[4932,4933,4934]},{"teal":5160,"source":"contracts\\BiatecClammPool.algo.ts:973","pc":[4935,4936]},{"teal":5170,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4937,4938]},{"teal":5171,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4939]},{"teal":5172,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4940]},{"teal":5173,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4941]},{"teal":5174,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4942]},{"teal":5177,"source":"contracts\\BiatecClammPool.algo.ts:986","errorMessage":"D_SQRT overflowed 256 bits","pc":[4943]},{"teal":5178,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4944]},{"teal":5179,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4945]},{"teal":5180,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4946]},{"teal":5181,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4947]},{"teal":5182,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4948]},{"teal":5183,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4949]},{"teal":5184,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4950]},{"teal":5185,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4951]},{"teal":5186,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4952]},{"teal":5187,"source":"contracts\\BiatecClammPool.algo.ts:985","pc":[4953,4954]},{"teal":5188,"source":"contracts\\BiatecClammPool.algo.ts:985","pc":[4955]},{"teal":5189,"source":"contracts\\BiatecClammPool.algo.ts:984","pc":[4956,4957]},{"teal":5190,"source":"contracts\\BiatecClammPool.algo.ts:984","pc":[4958]},{"teal":5191,"source":"contracts\\BiatecClammPool.algo.ts:983","pc":[4959,4960]},{"teal":5192,"source":"contracts\\BiatecClammPool.algo.ts:983","pc":[4961]},{"teal":5193,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4962]},{"teal":5194,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4963]},{"teal":5195,"source":"contracts\\BiatecClammPool.algo.ts:981","pc":[4964,4965,4966]},{"teal":5196,"source":"contracts\\BiatecClammPool.algo.ts:981","pc":[4967,4968]},{"teal":5202,"source":"contracts\\BiatecClammPool.algo.ts:990","pc":[4969,4970]},{"teal":5203,"source":"contracts\\BiatecClammPool.algo.ts:990","pc":[4971,4972]},{"teal":5204,"source":"contracts\\BiatecClammPool.algo.ts:990","pc":[4973]},{"teal":5205,"source":"contracts\\BiatecClammPool.algo.ts:990","pc":[4974]},{"teal":5206,"source":"contracts\\BiatecClammPool.algo.ts:990","pc":[4975,4976,4977]},{"teal":5211,"source":"contracts\\BiatecClammPool.algo.ts:993","pc":[4978,4979]},{"teal":5212,"source":"contracts\\BiatecClammPool.algo.ts:993","pc":[4980,4981]},{"teal":5213,"source":"contracts\\BiatecClammPool.algo.ts:993","pc":[4982]},{"teal":5214,"source":"contracts\\BiatecClammPool.algo.ts:993","pc":[4983]},{"teal":5215,"source":"contracts\\BiatecClammPool.algo.ts:993","pc":[4984,4985]},{"teal":5219,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4986,4987]},{"teal":5220,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4988,4989]},{"teal":5221,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4990]},{"teal":5222,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4991]},{"teal":5223,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4992]},{"teal":5224,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4993]},{"teal":5227,"source":"contracts\\BiatecClammPool.algo.ts:994","errorMessage":"newL overflowed 256 bits","pc":[4994]},{"teal":5228,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4995]},{"teal":5229,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4996]},{"teal":5230,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4997]},{"teal":5231,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4998]},{"teal":5232,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4999]},{"teal":5233,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[5000]},{"teal":5234,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[5001]},{"teal":5235,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[5002]},{"teal":5236,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[5003]},{"teal":5237,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[5004]},{"teal":5242,"source":"contracts\\BiatecClammPool.algo.ts:996","pc":[5005,5006]},{"teal":5243,"source":"contracts\\BiatecClammPool.algo.ts:996","pc":[5007,5008,5009]},{"teal":5248,"source":"contracts\\BiatecClammPool.algo.ts:998","pc":[5010]},{"teal":5249,"source":"contracts\\BiatecClammPool.algo.ts:998","pc":[5011]},{"teal":5250,"source":"contracts\\BiatecClammPool.algo.ts:998","pc":[5012,5013]},{"teal":5251,"source":"contracts\\BiatecClammPool.algo.ts:998","pc":[5014]},{"teal":5252,"source":"contracts\\BiatecClammPool.algo.ts:998","pc":[5015,5016]},{"teal":5253,"source":"contracts\\BiatecClammPool.algo.ts:998","pc":[5017]},{"teal":5254,"source":"contracts\\BiatecClammPool.algo.ts:998","pc":[5018,5019]},{"teal":5258,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5020,5021]},{"teal":5259,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5022]},{"teal":5260,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5023]},{"teal":5261,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5024,5025]},{"teal":5262,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5026]},{"teal":5265,"source":"contracts\\BiatecClammPool.algo.ts:999","errorMessage":"feeB256 as uint64 overflowed 64 bits","pc":[5027]},{"teal":5266,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5028,5029]},{"teal":5267,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5030]},{"teal":5268,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5031]},{"teal":5269,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5032]},{"teal":5270,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5033]},{"teal":5271,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5034,5035]},{"teal":5272,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5036]},{"teal":5273,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5037]},{"teal":5274,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5038]},{"teal":5275,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5039]},{"teal":5276,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[5040,5041]},{"teal":5280,"source":"contracts\\BiatecClammPool.algo.ts:1000","pc":[5042]},{"teal":5281,"source":"contracts\\BiatecClammPool.algo.ts:1000","pc":[5043,5044]},{"teal":5282,"source":"contracts\\BiatecClammPool.algo.ts:996","pc":[5045,5046,5047]},{"teal":5287,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[5048,5049]},{"teal":5288,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[5050]},{"teal":5289,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[5051,5052]},{"teal":5290,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[5053]},{"teal":5291,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[5054,5055]},{"teal":5292,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[5056]},{"teal":5293,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[5057,5058]},{"teal":5297,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[5059]},{"teal":5298,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[5060,5061]},{"teal":5302,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5062,5063]},{"teal":5303,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5064]},{"teal":5304,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5065]},{"teal":5305,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5066,5067]},{"teal":5306,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5068]},{"teal":5309,"source":"contracts\\BiatecClammPool.algo.ts:1005","errorMessage":"feeB256 as uint64 overflowed 64 bits","pc":[5069]},{"teal":5310,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5070,5071]},{"teal":5311,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5072]},{"teal":5312,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5073]},{"teal":5313,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5074]},{"teal":5314,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5075]},{"teal":5315,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5076,5077]},{"teal":5316,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5078]},{"teal":5317,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5079]},{"teal":5318,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5080]},{"teal":5319,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5081]},{"teal":5320,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[5082,5083]},{"teal":5325,"source":"contracts\\BiatecClammPool.algo.ts:1008","pc":[5084,5085]},{"teal":5326,"source":"contracts\\BiatecClammPool.algo.ts:1008","pc":[5086]},{"teal":5327,"source":"contracts\\BiatecClammPool.algo.ts:1008","pc":[5087,5088]},{"teal":5328,"source":"contracts\\BiatecClammPool.algo.ts:1008","pc":[5089]},{"teal":5331,"source":"contracts\\BiatecClammPool.algo.ts:1008","errorMessage":"global state value does not exist: this.appBiatecConfigProvider.value.globalState('f')","pc":[5090]},{"teal":5332,"source":"contracts\\BiatecClammPool.algo.ts:1008","pc":[5091,5092]},{"teal":5337,"source":"contracts\\BiatecClammPool.algo.ts:1009","pc":[5093,5094]},{"teal":5338,"source":"contracts\\BiatecClammPool.algo.ts:1009","pc":[5095,5096]},{"teal":5339,"source":"contracts\\BiatecClammPool.algo.ts:1009","pc":[5097]},{"teal":5340,"source":"contracts\\BiatecClammPool.algo.ts:1009","pc":[5098,5099,5100]},{"teal":5345,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[5101,5102]},{"teal":5346,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[5103,5104]},{"teal":5350,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5105,5106]},{"teal":5351,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5107]},{"teal":5352,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5108]},{"teal":5353,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5109,5110]},{"teal":5354,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5111]},{"teal":5355,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5112]},{"teal":5356,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5113]},{"teal":5357,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5114]},{"teal":5358,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5115]},{"teal":5361,"source":"contracts\\BiatecClammPool.algo.ts:1011","errorMessage":"this.LiqudityUsersFromFees.value + usersLiquidityFromFeeIncrement overflowed 256 bits","pc":[5116]},{"teal":5362,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5117]},{"teal":5363,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5118]},{"teal":5364,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5119]},{"teal":5365,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5120]},{"teal":5366,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5121]},{"teal":5367,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5122]},{"teal":5368,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5123]},{"teal":5369,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5124]},{"teal":5370,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5125]},{"teal":5371,"source":"contracts\\BiatecClammPool.algo.ts:1011","pc":[5126]},{"teal":5372,"source":"contracts\\BiatecClammPool.algo.ts:1009","pc":[5127,5128,5129]},{"teal":5377,"source":"contracts\\BiatecClammPool.algo.ts:1013","pc":[5130,5131]},{"teal":5378,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5132]},{"teal":5379,"source":"contracts\\BiatecClammPool.algo.ts:1013","pc":[5133,5134]},{"teal":5380,"source":"contracts\\BiatecClammPool.algo.ts:1013","pc":[5135]},{"teal":5381,"source":"contracts\\BiatecClammPool.algo.ts:1013","pc":[5136]},{"teal":5382,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5137]},{"teal":5383,"source":"contracts\\BiatecClammPool.algo.ts:1013","pc":[5138]},{"teal":5384,"source":"contracts\\BiatecClammPool.algo.ts:1013","pc":[5139,5140]},{"teal":5388,"source":"contracts\\BiatecClammPool.algo.ts:1014","pc":[5141,5142]},{"teal":5389,"source":"contracts\\BiatecClammPool.algo.ts:1014","pc":[5143,5144]},{"teal":5390,"source":"contracts\\BiatecClammPool.algo.ts:1014","pc":[5145]},{"teal":5391,"source":"contracts\\BiatecClammPool.algo.ts:1014","pc":[5146,5147]},{"teal":5395,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5148,5149]},{"teal":5396,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5150]},{"teal":5397,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5151]},{"teal":5398,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5152,5153]},{"teal":5399,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5154]},{"teal":5400,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5155]},{"teal":5401,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5156]},{"teal":5402,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5157]},{"teal":5403,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5158]},{"teal":5406,"source":"contracts\\BiatecClammPool.algo.ts:1015","errorMessage":"this.LiqudityUsersFromFees.value + usersLiquidityFromFeeIncrement overflowed 256 bits","pc":[5159]},{"teal":5407,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5160]},{"teal":5408,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5161]},{"teal":5409,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5162]},{"teal":5410,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5163]},{"teal":5411,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5164]},{"teal":5412,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5165]},{"teal":5413,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5166]},{"teal":5414,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5167]},{"teal":5415,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5168]},{"teal":5416,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[5169]},{"teal":5420,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5170,5171]},{"teal":5421,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5172]},{"teal":5422,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5173]},{"teal":5423,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5174,5175]},{"teal":5424,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5176]},{"teal":5425,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5177]},{"teal":5426,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5178]},{"teal":5427,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5179]},{"teal":5428,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5180]},{"teal":5431,"source":"contracts\\BiatecClammPool.algo.ts:1016","errorMessage":"this.LiqudityBiatecFromFees.value + biatecLiquidityFromFeeIncrement overflowed 256 bits","pc":[5181]},{"teal":5432,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5182]},{"teal":5433,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5183]},{"teal":5434,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5184]},{"teal":5435,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5185]},{"teal":5436,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5186]},{"teal":5437,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5187]},{"teal":5438,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5188]},{"teal":5439,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5189]},{"teal":5440,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5190]},{"teal":5441,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[5191]},{"teal":5454,"source":"contracts\\BiatecClammPool.algo.ts:1024","pc":[5192,5193]},{"teal":5455,"source":"contracts\\BiatecClammPool.algo.ts:1024","pc":[5194]},{"teal":5456,"source":"contracts\\BiatecClammPool.algo.ts:1023","pc":[5195,5196]},{"teal":5457,"source":"contracts\\BiatecClammPool.algo.ts:1023","pc":[5197]},{"teal":5458,"source":"contracts\\BiatecClammPool.algo.ts:1022","pc":[5198,5199]},{"teal":5459,"source":"contracts\\BiatecClammPool.algo.ts:1022","pc":[5200]},{"teal":5460,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[5201,5202]},{"teal":5461,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[5203]},{"teal":5462,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[5204]},{"teal":5463,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[5205]},{"teal":5464,"source":"contracts\\BiatecClammPool.algo.ts:1019","pc":[5206,5207,5208]},{"teal":5465,"source":"contracts\\BiatecClammPool.algo.ts:1019","pc":[5209,5210]},{"teal":5469,"source":"contracts\\BiatecClammPool.algo.ts:1026","pc":[5211,5212]},{"teal":5470,"source":"contracts\\BiatecClammPool.algo.ts:1026","pc":[5213]},{"teal":5471,"source":"contracts\\BiatecClammPool.algo.ts:1026","pc":[5214]},{"teal":5472,"source":"contracts\\BiatecClammPool.algo.ts:1026","pc":[5215]},{"teal":5473,"source":"contracts\\BiatecClammPool.algo.ts:1026","pc":[5216,5217,5218]},{"teal":5474,"source":"contracts\\BiatecClammPool.algo.ts:1026","pc":[5219,5220]},{"teal":5475,"source":"contracts\\BiatecClammPool.algo.ts:1026","pc":[5221]},{"teal":5476,"source":"contracts\\BiatecClammPool.algo.ts:1026","pc":[5222]},{"teal":5477,"source":"contracts\\BiatecClammPool.algo.ts:1026","pc":[5223]},{"teal":5481,"source":"contracts\\BiatecClammPool.algo.ts:1026","errorMessage":"Stats to register must not be empty","pc":[5224]},{"teal":5501,"source":"contracts\\BiatecClammPool.algo.ts:1027","pc":[5225]},{"teal":5502,"source":"contracts\\BiatecClammPool.algo.ts:1027","pc":[5226,5227]},{"teal":5503,"source":"contracts\\BiatecClammPool.algo.ts:1027","pc":[5228,5229]},{"teal":5504,"source":"contracts\\BiatecClammPool.algo.ts:1028","pc":[5230,5231,5232,5233,5234,5235]},{"teal":5505,"source":"contracts\\BiatecClammPool.algo.ts:1028","pc":[5236,5237]},{"teal":5520,"source":"contracts\\BiatecClammPool.algo.ts:1030","pc":[5238,5239]},{"teal":5521,"source":"contracts\\BiatecClammPool.algo.ts:1030","pc":[5240]},{"teal":5522,"source":"contracts\\BiatecClammPool.algo.ts:1030","pc":[5241,5242]},{"teal":5523,"source":"contracts\\BiatecClammPool.algo.ts:1031","pc":[5243,5244]},{"teal":5524,"source":"contracts\\BiatecClammPool.algo.ts:1031","pc":[5245]},{"teal":5525,"source":"contracts\\BiatecClammPool.algo.ts:1031","pc":[5246,5247]},{"teal":5526,"source":"contracts\\BiatecClammPool.algo.ts:1032","pc":[5248,5249]},{"teal":5527,"source":"contracts\\BiatecClammPool.algo.ts:1032","pc":[5250]},{"teal":5528,"source":"contracts\\BiatecClammPool.algo.ts:1032","pc":[5251,5252]},{"teal":5529,"source":"contracts\\BiatecClammPool.algo.ts:1033","pc":[5253,5254]},{"teal":5530,"source":"contracts\\BiatecClammPool.algo.ts:1033","pc":[5255]},{"teal":5531,"source":"contracts\\BiatecClammPool.algo.ts:1033","pc":[5256]},{"teal":5532,"source":"contracts\\BiatecClammPool.algo.ts:1033","pc":[5257,5258]},{"teal":5533,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5259,5260]},{"teal":5534,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5261]},{"teal":5535,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5262]},{"teal":5536,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5263,5264]},{"teal":5537,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5265]},{"teal":5540,"source":"contracts\\BiatecClammPool.algo.ts:1034","errorMessage":"newPrice as uint64 overflowed 64 bits","pc":[5266]},{"teal":5541,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5267,5268]},{"teal":5542,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5269]},{"teal":5543,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5270]},{"teal":5544,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5271]},{"teal":5545,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5272]},{"teal":5546,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5273,5274]},{"teal":5547,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5275]},{"teal":5548,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5276]},{"teal":5549,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5277]},{"teal":5550,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5278]},{"teal":5551,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5279]},{"teal":5552,"source":"contracts\\BiatecClammPool.algo.ts:1034","pc":[5280,5281]},{"teal":5553,"source":"contracts\\BiatecClammPool.algo.ts:1035","pc":[5282,5283]},{"teal":5554,"source":"contracts\\BiatecClammPool.algo.ts:1035","pc":[5284,5285]},{"teal":5555,"source":"contracts\\BiatecClammPool.algo.ts:1035","pc":[5286]},{"teal":5556,"source":"contracts\\BiatecClammPool.algo.ts:1035","pc":[5287]},{"teal":5557,"source":"contracts\\BiatecClammPool.algo.ts:1035","pc":[5288]},{"teal":5558,"source":"contracts\\BiatecClammPool.algo.ts:1035","pc":[5289,5290]},{"teal":5559,"source":"contracts\\BiatecClammPool.algo.ts:1035","pc":[5291]},{"teal":5562,"source":"contracts\\BiatecClammPool.algo.ts:1035","errorMessage":"this.assetADecimals.value as uint64 overflowed 64 bits","pc":[5292]},{"teal":5563,"source":"contracts\\BiatecClammPool.algo.ts:1035","pc":[5293,5294,5295]},{"teal":5564,"source":"contracts\\BiatecClammPool.algo.ts:1035","pc":[5296]},{"teal":5565,"source":"contracts\\BiatecClammPool.algo.ts:1035","pc":[5297]},{"teal":5566,"source":"contracts\\BiatecClammPool.algo.ts:1035","pc":[5298]},{"teal":5567,"source":"contracts\\BiatecClammPool.algo.ts:1035","pc":[5299,5300]},{"teal":5568,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[5301,5302]},{"teal":5569,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[5303,5304]},{"teal":5570,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[5305]},{"teal":5571,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[5306]},{"teal":5572,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[5307]},{"teal":5573,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[5308,5309]},{"teal":5574,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[5310]},{"teal":5577,"source":"contracts\\BiatecClammPool.algo.ts:1036","errorMessage":"this.assetBDecimals.value as uint64 overflowed 64 bits","pc":[5311]},{"teal":5578,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[5312,5313,5314]},{"teal":5579,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[5315]},{"teal":5580,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[5316]},{"teal":5581,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[5317]},{"teal":5582,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[5318,5319]},{"teal":5583,"source":"contracts\\BiatecClammPool.algo.ts:1037","pc":[5320,5321]},{"teal":5584,"source":"contracts\\BiatecClammPool.algo.ts:1037","pc":[5322]},{"teal":5585,"source":"contracts\\BiatecClammPool.algo.ts:1037","pc":[5323,5324]},{"teal":5586,"source":"contracts\\BiatecClammPool.algo.ts:1038","pc":[5325,5326]},{"teal":5587,"source":"contracts\\BiatecClammPool.algo.ts:1038","pc":[5327]},{"teal":5588,"source":"contracts\\BiatecClammPool.algo.ts:1038","pc":[5328,5329]},{"teal":5589,"source":"contracts\\BiatecClammPool.algo.ts:1039","pc":[5330,5331]},{"teal":5590,"source":"contracts\\BiatecClammPool.algo.ts:1039","pc":[5332,5333]},{"teal":5594,"source":"contracts\\BiatecClammPool.algo.ts:1041","pc":[5334]},{"teal":5595,"source":"contracts\\BiatecClammPool.algo.ts:1041","pc":[5335,5336]},{"teal":5599,"source":"contracts\\BiatecClammPool.algo.ts:1042","pc":[5337,5338]},{"teal":5600,"source":"contracts\\BiatecClammPool.algo.ts:1042","pc":[5339,5340]},{"teal":5603,"source":"contracts\\BiatecClammPool.algo.ts:1027","pc":[5341]},{"teal":5607,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5342,5343]},{"teal":5608,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5344,5345]},{"teal":5609,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5346]},{"teal":5610,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5347]},{"teal":5611,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5348,5349]},{"teal":5612,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5350]},{"teal":5615,"source":"contracts\\BiatecClammPool.algo.ts:1045","errorMessage":"newPrice as uint64 overflowed 64 bits","pc":[5351]},{"teal":5616,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5352,5353]},{"teal":5617,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5354]},{"teal":5618,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5355]},{"teal":5619,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5356]},{"teal":5620,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5357]},{"teal":5621,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5358,5359]},{"teal":5622,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5360]},{"teal":5623,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5361]},{"teal":5624,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5362]},{"teal":5625,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5363]},{"teal":5626,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[5364]},{"teal":5630,"source":"contracts\\BiatecClammPool.algo.ts:1067","pc":[5365,5366]},{"teal":5631,"source":"contracts\\BiatecClammPool.algo.ts:1067","pc":[5367]},{"teal":5634,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[5368,5369]},{"teal":5637,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[5370,5371]},{"teal":5638,"source":"contracts\\BiatecClammPool.algo.ts:827","pc":[5372]},{"teal":5643,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5373,5374]},{"teal":5646,"source":"contracts\\BiatecClammPool.algo.ts:1089","pc":[5375,5376,5377]},{"teal":5647,"source":"contracts\\BiatecClammPool.algo.ts:1089","pc":[5378]},{"teal":5648,"source":"contracts\\BiatecClammPool.algo.ts:1089","pc":[5379]},{"teal":5649,"source":"contracts\\BiatecClammPool.algo.ts:1089","pc":[5380]},{"teal":5650,"source":"contracts\\BiatecClammPool.algo.ts:1089","pc":[5381]},{"teal":5653,"source":"contracts\\BiatecClammPool.algo.ts:1089","errorMessage":"argument 0 (amountB) for distributeExcessAssets must be a uint256","pc":[5382]},{"teal":5656,"source":"contracts\\BiatecClammPool.algo.ts:1088","pc":[5383,5384,5385]},{"teal":5657,"source":"contracts\\BiatecClammPool.algo.ts:1088","pc":[5386]},{"teal":5658,"source":"contracts\\BiatecClammPool.algo.ts:1088","pc":[5387]},{"teal":5659,"source":"contracts\\BiatecClammPool.algo.ts:1088","pc":[5388]},{"teal":5660,"source":"contracts\\BiatecClammPool.algo.ts:1088","pc":[5389]},{"teal":5663,"source":"contracts\\BiatecClammPool.algo.ts:1088","errorMessage":"argument 1 (amountA) for distributeExcessAssets must be a uint256","pc":[5390]},{"teal":5666,"source":"contracts\\BiatecClammPool.algo.ts:1087","pc":[5391,5392,5393]},{"teal":5667,"source":"contracts\\BiatecClammPool.algo.ts:1087","pc":[5394]},{"teal":5670,"source":"contracts\\BiatecClammPool.algo.ts:1086","pc":[5395,5396,5397]},{"teal":5671,"source":"contracts\\BiatecClammPool.algo.ts:1086","pc":[5398]},{"teal":5674,"source":"contracts\\BiatecClammPool.algo.ts:1085","pc":[5399,5400,5401]},{"teal":5675,"source":"contracts\\BiatecClammPool.algo.ts:1085","pc":[5402]},{"teal":5678,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5403,5404,5405]},{"teal":5679,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5406]},{"teal":5680,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5407]},{"teal":5681,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5408]},{"teal":5682,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5409]},{"teal":5685,"source":"contracts\\BiatecClammPool.algo.ts:1084","errorMessage":"distributeExcessAssets return value overflowed 256 bits","pc":[5410]},{"teal":5686,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5411]},{"teal":5687,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5412]},{"teal":5688,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5413]},{"teal":5689,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5414]},{"teal":5690,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5415]},{"teal":5691,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5416]},{"teal":5692,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5417]},{"teal":5693,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5418]},{"teal":5694,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5419]},{"teal":5695,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5420]},{"teal":5696,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5421]},{"teal":5697,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5422]},{"teal":5698,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5423]},{"teal":5715,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5424,5425,5426]},{"teal":5718,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5427]},{"teal":5719,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5428,5429]},{"teal":5723,"source":"contracts\\BiatecClammPool.algo.ts:1091","pc":[5430]},{"teal":5724,"source":"contracts\\BiatecClammPool.algo.ts:1091","pc":[5431,5432]},{"teal":5725,"source":"contracts\\BiatecClammPool.algo.ts:1091","pc":[5433,5434]},{"teal":5726,"source":"contracts\\BiatecClammPool.algo.ts:1091","pc":[5435]},{"teal":5727,"source":"contracts\\BiatecClammPool.algo.ts:1091","pc":[5436,5437]},{"teal":5728,"source":"contracts\\BiatecClammPool.algo.ts:1091","pc":[5438,5439]},{"teal":5729,"source":"contracts\\BiatecClammPool.algo.ts:1091","pc":[5440]},{"teal":5730,"source":"contracts\\BiatecClammPool.algo.ts:1091","pc":[5441,5442]},{"teal":5731,"source":"contracts\\BiatecClammPool.algo.ts:1091","pc":[5443,5444]},{"teal":5732,"source":"contracts\\BiatecClammPool.algo.ts:1091","pc":[5445,5446]},{"teal":5733,"source":"contracts\\BiatecClammPool.algo.ts:1091","pc":[5447,5448]},{"teal":5734,"source":"contracts\\BiatecClammPool.algo.ts:1091","pc":[5449]},{"teal":5738,"source":"contracts\\BiatecClammPool.algo.ts:1092","pc":[5450]},{"teal":5739,"source":"contracts\\BiatecClammPool.algo.ts:1092","pc":[5451,5452]},{"teal":5740,"source":"contracts\\BiatecClammPool.algo.ts:1092","pc":[5453,5454]},{"teal":5741,"source":"contracts\\BiatecClammPool.algo.ts:1092","pc":[5455]},{"teal":5742,"source":"contracts\\BiatecClammPool.algo.ts:1092","pc":[5456,5457]},{"teal":5743,"source":"contracts\\BiatecClammPool.algo.ts:1092","pc":[5458,5459]},{"teal":5744,"source":"contracts\\BiatecClammPool.algo.ts:1092","pc":[5460]},{"teal":5745,"source":"contracts\\BiatecClammPool.algo.ts:1092","pc":[5461,5462]},{"teal":5746,"source":"contracts\\BiatecClammPool.algo.ts:1092","pc":[5463,5464]},{"teal":5747,"source":"contracts\\BiatecClammPool.algo.ts:1092","pc":[5465,5466]},{"teal":5748,"source":"contracts\\BiatecClammPool.algo.ts:1092","pc":[5467,5468]},{"teal":5749,"source":"contracts\\BiatecClammPool.algo.ts:1092","pc":[5469]},{"teal":5753,"source":"contracts\\BiatecClammPool.algo.ts:1093","pc":[5470,5471]},{"teal":5754,"source":"contracts\\BiatecClammPool.algo.ts:1093","pc":[5472,5473]},{"teal":5755,"source":"contracts\\BiatecClammPool.algo.ts:1093","pc":[5474,5475,5476]},{"teal":5759,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[5477,5478]},{"teal":5760,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[5479,5480]},{"teal":5761,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[5481]},{"teal":5762,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[5482]},{"teal":5765,"source":"contracts\\BiatecClammPool.algo.ts:1095","errorMessage":"E_CONFIG","pc":[5483]},{"teal":5769,"source":"contracts\\BiatecClammPool.algo.ts:1096","pc":[5484,5485]},{"teal":5770,"source":"contracts\\BiatecClammPool.algo.ts:1096","pc":[5486,5487]},{"teal":5771,"source":"contracts\\BiatecClammPool.algo.ts:1096","pc":[5488]},{"teal":5774,"source":"contracts\\BiatecClammPool.algo.ts:1096","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('ef')","pc":[5489]},{"teal":5775,"source":"contracts\\BiatecClammPool.algo.ts:1096","pc":[5490,5491]},{"teal":5779,"source":"contracts\\BiatecClammPool.algo.ts:1098","pc":[5492,5493]},{"teal":5780,"source":"contracts\\BiatecClammPool.algo.ts:1098","pc":[5494,5495]},{"teal":5781,"source":"contracts\\BiatecClammPool.algo.ts:1098","pc":[5496]},{"teal":5784,"source":"contracts\\BiatecClammPool.algo.ts:1098","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('s')","pc":[5497]},{"teal":5785,"source":"contracts\\BiatecClammPool.algo.ts:1098","pc":[5498,5499]},{"teal":5789,"source":"contracts\\BiatecClammPool.algo.ts:1099","pc":[5500,5501]},{"teal":5790,"source":"contracts\\BiatecClammPool.algo.ts:1099","pc":[5502]},{"teal":5791,"source":"contracts\\BiatecClammPool.algo.ts:1099","pc":[5503]},{"teal":5794,"source":"contracts\\BiatecClammPool.algo.ts:1099","errorMessage":"E_PAUSED","pc":[5504]},{"teal":5801,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[5505,5506]},{"teal":5802,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[5507,5508]},{"teal":5803,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[5509]},{"teal":5806,"source":"contracts\\BiatecClammPool.algo.ts:1101","errorMessage":"E_SENDER","pc":[5510]},{"teal":5810,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5511]},{"teal":5811,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5512]},{"teal":5812,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5513]},{"teal":5813,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5514,5515]},{"teal":5814,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5516]},{"teal":5815,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5517]},{"teal":5816,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5518]},{"teal":5817,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5519]},{"teal":5818,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5520]},{"teal":5821,"source":"contracts\\BiatecClammPool.algo.ts:1106","errorMessage":"this.assetABalance.value + amountA overflowed 256 bits","pc":[5521]},{"teal":5822,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5522]},{"teal":5823,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5523]},{"teal":5824,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5524]},{"teal":5825,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5525]},{"teal":5826,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5526]},{"teal":5827,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5527]},{"teal":5828,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5528]},{"teal":5829,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5529]},{"teal":5830,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5530]},{"teal":5831,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[5531]},{"teal":5835,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5532,5533]},{"teal":5836,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5534]},{"teal":5837,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5535]},{"teal":5838,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5536,5537]},{"teal":5839,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5538]},{"teal":5840,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5539]},{"teal":5841,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5540]},{"teal":5842,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5541]},{"teal":5843,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5542]},{"teal":5846,"source":"contracts\\BiatecClammPool.algo.ts:1107","errorMessage":"this.assetBBalance.value + amountB overflowed 256 bits","pc":[5543]},{"teal":5847,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5544]},{"teal":5848,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5545]},{"teal":5849,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5546]},{"teal":5850,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5547]},{"teal":5851,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5548]},{"teal":5852,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5549]},{"teal":5853,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5550]},{"teal":5854,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5551]},{"teal":5855,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5552]},{"teal":5856,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[5553]},{"teal":5861,"source":"contracts\\BiatecClammPool.algo.ts:1108","pc":[5554,5555]},{"teal":5862,"source":"contracts\\BiatecClammPool.algo.ts:1108","pc":[5556]},{"teal":5863,"source":"contracts\\BiatecClammPool.algo.ts:1108","pc":[5557]},{"teal":5864,"source":"contracts\\BiatecClammPool.algo.ts:1108","pc":[5558,5559,5560]},{"teal":5872,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[5561,5562]},{"teal":5873,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[5563,5564]},{"teal":5874,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[5565]},{"teal":5875,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[5566,5567]},{"teal":5876,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[5568]},{"teal":5877,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[5569]},{"teal":5878,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[5570,5571]},{"teal":5879,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[5572]},{"teal":5880,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[5573]},{"teal":5881,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[5574]},{"teal":5882,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[5575]},{"teal":5883,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[5576]},{"teal":5886,"source":"contracts\\BiatecClammPool.algo.ts:1109","errorMessage":"E_A0_B","pc":[5577]},{"teal":5887,"source":"contracts\\BiatecClammPool.algo.ts:1108","pc":[5578,5579,5580]},{"teal":5895,"source":"contracts\\BiatecClammPool.algo.ts:1115","pc":[5581,5582]},{"teal":5896,"source":"contracts\\BiatecClammPool.algo.ts:1115","pc":[5583,5584]},{"teal":5897,"source":"contracts\\BiatecClammPool.algo.ts:1115","pc":[5585,5586]},{"teal":5898,"source":"contracts\\BiatecClammPool.algo.ts:1115","pc":[5587]},{"teal":5899,"source":"contracts\\BiatecClammPool.algo.ts:1115","pc":[5588]},{"teal":5900,"source":"contracts\\BiatecClammPool.algo.ts:1115","pc":[5589,5590]},{"teal":5901,"source":"contracts\\BiatecClammPool.algo.ts:1115","pc":[5591]},{"teal":5902,"source":"contracts\\BiatecClammPool.algo.ts:1115","pc":[5592]},{"teal":5903,"source":"contracts\\BiatecClammPool.algo.ts:1115","pc":[5593]},{"teal":5904,"source":"contracts\\BiatecClammPool.algo.ts:1115","pc":[5594]},{"teal":5905,"source":"contracts\\BiatecClammPool.algo.ts:1115","pc":[5595]},{"teal":5908,"source":"contracts\\BiatecClammPool.algo.ts:1114","errorMessage":"E_A_B","pc":[5596]},{"teal":5916,"source":"contracts\\BiatecClammPool.algo.ts:1120","pc":[5597,5598]},{"teal":5917,"source":"contracts\\BiatecClammPool.algo.ts:1120","pc":[5599,5600]},{"teal":5918,"source":"contracts\\BiatecClammPool.algo.ts:1120","pc":[5601,5602]},{"teal":5919,"source":"contracts\\BiatecClammPool.algo.ts:1120","pc":[5603]},{"teal":5920,"source":"contracts\\BiatecClammPool.algo.ts:1120","pc":[5604]},{"teal":5921,"source":"contracts\\BiatecClammPool.algo.ts:1120","pc":[5605,5606]},{"teal":5922,"source":"contracts\\BiatecClammPool.algo.ts:1120","pc":[5607]},{"teal":5923,"source":"contracts\\BiatecClammPool.algo.ts:1120","pc":[5608]},{"teal":5924,"source":"contracts\\BiatecClammPool.algo.ts:1120","pc":[5609,5610]},{"teal":5925,"source":"contracts\\BiatecClammPool.algo.ts:1120","pc":[5611]},{"teal":5926,"source":"contracts\\BiatecClammPool.algo.ts:1120","pc":[5612]},{"teal":5929,"source":"contracts\\BiatecClammPool.algo.ts:1119","errorMessage":"E_B_B","pc":[5613]},{"teal":5933,"source":"contracts\\BiatecClammPool.algo.ts:1123","pc":[5614,5615]},{"teal":5934,"source":"contracts\\BiatecClammPool.algo.ts:1123","pc":[5616,5617]},{"teal":5939,"source":"contracts\\BiatecClammPool.algo.ts:1124","pc":[5618,5619]},{"teal":5940,"source":"contracts\\BiatecClammPool.algo.ts:1124","pc":[5620]},{"teal":5941,"source":"contracts\\BiatecClammPool.algo.ts:1124","pc":[5621,5622]},{"teal":5942,"source":"contracts\\BiatecClammPool.algo.ts:1124","pc":[5623]},{"teal":5943,"source":"contracts\\BiatecClammPool.algo.ts:1124","pc":[5624]},{"teal":5944,"source":"contracts\\BiatecClammPool.algo.ts:1124","pc":[5625,5626,5627]},{"teal":5953,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5628,5629]},{"teal":5954,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5630]},{"teal":5955,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5631]},{"teal":5956,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5632]},{"teal":5957,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5633]},{"teal":5958,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5634]},{"teal":5959,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5635]},{"teal":5962,"source":"contracts\\BiatecClammPool.algo.ts:1128","errorMessage":"this.priceMin.value as uint256 overflowed 256 bits","pc":[5636]},{"teal":5963,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5637]},{"teal":5964,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5638]},{"teal":5965,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5639]},{"teal":5966,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5640]},{"teal":5967,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5641]},{"teal":5968,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5642]},{"teal":5969,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5643]},{"teal":5970,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5644]},{"teal":5971,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[5645]},{"teal":5972,"source":"contracts\\BiatecClammPool.algo.ts:1127","pc":[5646,5647]},{"teal":5973,"source":"contracts\\BiatecClammPool.algo.ts:1127","pc":[5648]},{"teal":5974,"source":"contracts\\BiatecClammPool.algo.ts:1126","pc":[5649]},{"teal":5975,"source":"contracts\\BiatecClammPool.algo.ts:1126","pc":[5650]},{"teal":5976,"source":"contracts\\BiatecClammPool.algo.ts:1125","pc":[5651,5652,5653]},{"teal":5977,"source":"contracts\\BiatecClammPool.algo.ts:1125","pc":[5654,5655]},{"teal":5978,"source":"contracts\\BiatecClammPool.algo.ts:1124","pc":[5656,5657,5658]},{"teal":5990,"source":"contracts\\BiatecClammPool.algo.ts:1137","pc":[5659,5660]},{"teal":5991,"source":"contracts\\BiatecClammPool.algo.ts:1137","pc":[5661]},{"teal":5992,"source":"contracts\\BiatecClammPool.algo.ts:1136","pc":[5662,5663]},{"teal":5993,"source":"contracts\\BiatecClammPool.algo.ts:1136","pc":[5664]},{"teal":5994,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5665,5666]},{"teal":5995,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5667]},{"teal":5996,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5668]},{"teal":5997,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5669]},{"teal":5998,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5670]},{"teal":5999,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5671]},{"teal":6000,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5672]},{"teal":6003,"source":"contracts\\BiatecClammPool.algo.ts:1135","errorMessage":"this.priceMax.value as uint256 overflowed 256 bits","pc":[5673]},{"teal":6004,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5674]},{"teal":6005,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5675]},{"teal":6006,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5676]},{"teal":6007,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5677]},{"teal":6008,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5678]},{"teal":6009,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5679]},{"teal":6010,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5680]},{"teal":6011,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5681]},{"teal":6012,"source":"contracts\\BiatecClammPool.algo.ts:1135","pc":[5682]},{"teal":6013,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5683,5684]},{"teal":6014,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5685]},{"teal":6015,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5686]},{"teal":6016,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5687]},{"teal":6017,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5688]},{"teal":6018,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5689]},{"teal":6019,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5690]},{"teal":6022,"source":"contracts\\BiatecClammPool.algo.ts:1134","errorMessage":"this.priceMin.value as uint256 overflowed 256 bits","pc":[5691]},{"teal":6023,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5692]},{"teal":6024,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5693]},{"teal":6025,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5694]},{"teal":6026,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5695]},{"teal":6027,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5696]},{"teal":6028,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5697]},{"teal":6029,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5698]},{"teal":6030,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5699]},{"teal":6031,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[5700]},{"teal":6032,"source":"contracts\\BiatecClammPool.algo.ts:1133","pc":[5701,5702]},{"teal":6033,"source":"contracts\\BiatecClammPool.algo.ts:1133","pc":[5703]},{"teal":6034,"source":"contracts\\BiatecClammPool.algo.ts:1132","pc":[5704]},{"teal":6035,"source":"contracts\\BiatecClammPool.algo.ts:1132","pc":[5705]},{"teal":6036,"source":"contracts\\BiatecClammPool.algo.ts:1131","pc":[5706,5707,5708]},{"teal":6037,"source":"contracts\\BiatecClammPool.algo.ts:1131","pc":[5709,5710]},{"teal":6047,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5711,5712]},{"teal":6048,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5713]},{"teal":6049,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5714]},{"teal":6050,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5715]},{"teal":6051,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5716]},{"teal":6054,"source":"contracts\\BiatecClammPool.algo.ts:1144","errorMessage":"D_SQRT overflowed 256 bits","pc":[5717]},{"teal":6055,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5718]},{"teal":6056,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5719]},{"teal":6057,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5720]},{"teal":6058,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5721]},{"teal":6059,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5722]},{"teal":6060,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5723]},{"teal":6061,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5724]},{"teal":6062,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5725]},{"teal":6063,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[5726]},{"teal":6064,"source":"contracts\\BiatecClammPool.algo.ts:1143","pc":[5727,5728]},{"teal":6065,"source":"contracts\\BiatecClammPool.algo.ts:1143","pc":[5729]},{"teal":6066,"source":"contracts\\BiatecClammPool.algo.ts:1142","pc":[5730,5731]},{"teal":6067,"source":"contracts\\BiatecClammPool.algo.ts:1142","pc":[5732]},{"teal":6068,"source":"contracts\\BiatecClammPool.algo.ts:1141","pc":[5733,5734]},{"teal":6069,"source":"contracts\\BiatecClammPool.algo.ts:1141","pc":[5735]},{"teal":6070,"source":"contracts\\BiatecClammPool.algo.ts:1140","pc":[5736]},{"teal":6071,"source":"contracts\\BiatecClammPool.algo.ts:1140","pc":[5737]},{"teal":6072,"source":"contracts\\BiatecClammPool.algo.ts:1139","pc":[5738,5739,5740]},{"teal":6073,"source":"contracts\\BiatecClammPool.algo.ts:1139","pc":[5741,5742]},{"teal":6078,"source":"contracts\\BiatecClammPool.algo.ts:1148","pc":[5743,5744]},{"teal":6079,"source":"contracts\\BiatecClammPool.algo.ts:1148","pc":[5745,5746]},{"teal":6080,"source":"contracts\\BiatecClammPool.algo.ts:1148","pc":[5747]},{"teal":6081,"source":"contracts\\BiatecClammPool.algo.ts:1148","pc":[5748]},{"teal":6082,"source":"contracts\\BiatecClammPool.algo.ts:1148","pc":[5749,5750]},{"teal":6086,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5751,5752]},{"teal":6087,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5753,5754]},{"teal":6088,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5755]},{"teal":6089,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5756]},{"teal":6090,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5757]},{"teal":6091,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5758]},{"teal":6094,"source":"contracts\\BiatecClammPool.algo.ts:1149","errorMessage":"newL overflowed 256 bits","pc":[5759]},{"teal":6095,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5760]},{"teal":6096,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5761]},{"teal":6097,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5762]},{"teal":6098,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5763]},{"teal":6099,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5764]},{"teal":6100,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5765]},{"teal":6101,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5766]},{"teal":6102,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5767]},{"teal":6103,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5768]},{"teal":6104,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[5769]},{"teal":6108,"source":"contracts\\BiatecClammPool.algo.ts:1151","pc":[5770,5771]},{"teal":6109,"source":"contracts\\BiatecClammPool.algo.ts:1151","pc":[5772]},{"teal":6110,"source":"contracts\\BiatecClammPool.algo.ts:1151","pc":[5773,5774]},{"teal":6111,"source":"contracts\\BiatecClammPool.algo.ts:1151","pc":[5775]},{"teal":6114,"source":"contracts\\BiatecClammPool.algo.ts:1151","errorMessage":"global state value does not exist: this.appBiatecConfigProvider.value.globalState('f')","pc":[5776]},{"teal":6115,"source":"contracts\\BiatecClammPool.algo.ts:1151","pc":[5777,5778]},{"teal":6120,"source":"contracts\\BiatecClammPool.algo.ts:1152","pc":[5779,5780]},{"teal":6121,"source":"contracts\\BiatecClammPool.algo.ts:1152","pc":[5781,5782]},{"teal":6122,"source":"contracts\\BiatecClammPool.algo.ts:1152","pc":[5783]},{"teal":6123,"source":"contracts\\BiatecClammPool.algo.ts:1152","pc":[5784,5785,5786]},{"teal":6128,"source":"contracts\\BiatecClammPool.algo.ts:1153","pc":[5787,5788]},{"teal":6129,"source":"contracts\\BiatecClammPool.algo.ts:1153","pc":[5789,5790]},{"teal":6133,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5791,5792]},{"teal":6134,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5793]},{"teal":6135,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5794]},{"teal":6136,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5795,5796]},{"teal":6137,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5797]},{"teal":6138,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5798]},{"teal":6139,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5799]},{"teal":6140,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5800]},{"teal":6141,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5801]},{"teal":6144,"source":"contracts\\BiatecClammPool.algo.ts:1154","errorMessage":"this.LiqudityUsersFromFees.value + usersLiquidityFromFeeIncrement overflowed 256 bits","pc":[5802]},{"teal":6145,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5803]},{"teal":6146,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5804]},{"teal":6147,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5805]},{"teal":6148,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5806]},{"teal":6149,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5807]},{"teal":6150,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5808]},{"teal":6151,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5809]},{"teal":6152,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5810]},{"teal":6153,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5811]},{"teal":6154,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[5812]},{"teal":6155,"source":"contracts\\BiatecClammPool.algo.ts:1152","pc":[5813,5814,5815]},{"teal":6160,"source":"contracts\\BiatecClammPool.algo.ts:1156","pc":[5816,5817]},{"teal":6161,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5818]},{"teal":6162,"source":"contracts\\BiatecClammPool.algo.ts:1156","pc":[5819,5820]},{"teal":6163,"source":"contracts\\BiatecClammPool.algo.ts:1156","pc":[5821]},{"teal":6164,"source":"contracts\\BiatecClammPool.algo.ts:1156","pc":[5822]},{"teal":6165,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5823]},{"teal":6166,"source":"contracts\\BiatecClammPool.algo.ts:1156","pc":[5824]},{"teal":6167,"source":"contracts\\BiatecClammPool.algo.ts:1156","pc":[5825,5826]},{"teal":6171,"source":"contracts\\BiatecClammPool.algo.ts:1157","pc":[5827,5828]},{"teal":6172,"source":"contracts\\BiatecClammPool.algo.ts:1157","pc":[5829,5830]},{"teal":6173,"source":"contracts\\BiatecClammPool.algo.ts:1157","pc":[5831]},{"teal":6174,"source":"contracts\\BiatecClammPool.algo.ts:1157","pc":[5832,5833]},{"teal":6178,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5834,5835]},{"teal":6179,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5836]},{"teal":6180,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5837]},{"teal":6181,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5838,5839]},{"teal":6182,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5840]},{"teal":6183,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5841]},{"teal":6184,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5842]},{"teal":6185,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5843]},{"teal":6186,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5844]},{"teal":6189,"source":"contracts\\BiatecClammPool.algo.ts:1158","errorMessage":"this.LiqudityUsersFromFees.value + usersLiquidityFromFeeIncrement overflowed 256 bits","pc":[5845]},{"teal":6190,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5846]},{"teal":6191,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5847]},{"teal":6192,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5848]},{"teal":6193,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5849]},{"teal":6194,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5850]},{"teal":6195,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5851]},{"teal":6196,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5852]},{"teal":6197,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5853]},{"teal":6198,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5854]},{"teal":6199,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[5855]},{"teal":6203,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5856,5857]},{"teal":6204,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5858]},{"teal":6205,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5859]},{"teal":6206,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5860,5861]},{"teal":6207,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5862]},{"teal":6208,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5863]},{"teal":6209,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5864]},{"teal":6210,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5865]},{"teal":6211,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5866]},{"teal":6214,"source":"contracts\\BiatecClammPool.algo.ts:1159","errorMessage":"this.LiqudityBiatecFromFees.value + biatecLiquidityFromFeeIncrement overflowed 256 bits","pc":[5867]},{"teal":6215,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5868]},{"teal":6216,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5869]},{"teal":6217,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5870]},{"teal":6218,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5871]},{"teal":6219,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5872]},{"teal":6220,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5873]},{"teal":6221,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5874]},{"teal":6222,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5875]},{"teal":6223,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5876]},{"teal":6224,"source":"contracts\\BiatecClammPool.algo.ts:1159","pc":[5877]},{"teal":6235,"source":"contracts\\BiatecClammPool.algo.ts:1167","pc":[5878,5879]},{"teal":6236,"source":"contracts\\BiatecClammPool.algo.ts:1167","pc":[5880]},{"teal":6237,"source":"contracts\\BiatecClammPool.algo.ts:1166","pc":[5881,5882]},{"teal":6238,"source":"contracts\\BiatecClammPool.algo.ts:1166","pc":[5883]},{"teal":6239,"source":"contracts\\BiatecClammPool.algo.ts:1165","pc":[5884,5885]},{"teal":6240,"source":"contracts\\BiatecClammPool.algo.ts:1165","pc":[5886]},{"teal":6241,"source":"contracts\\BiatecClammPool.algo.ts:1164","pc":[5887,5888]},{"teal":6242,"source":"contracts\\BiatecClammPool.algo.ts:1164","pc":[5889]},{"teal":6243,"source":"contracts\\BiatecClammPool.algo.ts:1163","pc":[5890]},{"teal":6244,"source":"contracts\\BiatecClammPool.algo.ts:1163","pc":[5891]},{"teal":6245,"source":"contracts\\BiatecClammPool.algo.ts:1162","pc":[5892,5893,5894]},{"teal":6246,"source":"contracts\\BiatecClammPool.algo.ts:1162","pc":[5895,5896]},{"teal":6250,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5897,5898]},{"teal":6251,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5899,5900]},{"teal":6252,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5901]},{"teal":6253,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5902]},{"teal":6254,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5903,5904]},{"teal":6255,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5905]},{"teal":6258,"source":"contracts\\BiatecClammPool.algo.ts:1169","errorMessage":"newPrice as uint64 overflowed 64 bits","pc":[5906]},{"teal":6259,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5907,5908]},{"teal":6260,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5909]},{"teal":6261,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5910]},{"teal":6262,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5911]},{"teal":6263,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5912]},{"teal":6264,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5913,5914]},{"teal":6265,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5915]},{"teal":6266,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5916]},{"teal":6267,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5917]},{"teal":6268,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5918]},{"teal":6269,"source":"contracts\\BiatecClammPool.algo.ts:1169","pc":[5919]},{"teal":6273,"source":"contracts\\BiatecClammPool.algo.ts:1170","pc":[5920,5921]},{"teal":6276,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5922,5923]},{"teal":6279,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5924,5925]},{"teal":6280,"source":"contracts\\BiatecClammPool.algo.ts:1084","pc":[5926]},{"teal":6285,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[5927,5928]},{"teal":6288,"source":"contracts\\BiatecClammPool.algo.ts:1192","pc":[5929,5930,5931]},{"teal":6289,"source":"contracts\\BiatecClammPool.algo.ts:1192","pc":[5932]},{"teal":6292,"source":"contracts\\BiatecClammPool.algo.ts:1191","pc":[5933,5934,5935]},{"teal":6293,"source":"contracts\\BiatecClammPool.algo.ts:1191","pc":[5936]},{"teal":6296,"source":"contracts\\BiatecClammPool.algo.ts:1190","pc":[5937,5938,5939]},{"teal":6297,"source":"contracts\\BiatecClammPool.algo.ts:1190","pc":[5940]},{"teal":6300,"source":"contracts\\BiatecClammPool.algo.ts:1189","pc":[5941,5942,5943]},{"teal":6301,"source":"contracts\\BiatecClammPool.algo.ts:1189","pc":[5944]},{"teal":6304,"source":"contracts\\BiatecClammPool.algo.ts:1188","pc":[5945,5946,5947]},{"teal":6305,"source":"contracts\\BiatecClammPool.algo.ts:1188","pc":[5948]},{"teal":6308,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[5949,5950,5951]},{"teal":6309,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[5952]},{"teal":6310,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[5953]},{"teal":6311,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[5954]},{"teal":6312,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[5955]},{"teal":6313,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[5956]},{"teal":6330,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[5957,5958,5959]},{"teal":6333,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[5960]},{"teal":6334,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[5961]},{"teal":6338,"source":"contracts\\BiatecClammPool.algo.ts:1194","pc":[5962,5963]},{"teal":6339,"source":"contracts\\BiatecClammPool.algo.ts:1194","pc":[5964,5965]},{"teal":6340,"source":"contracts\\BiatecClammPool.algo.ts:1194","pc":[5966,5967,5968]},{"teal":6344,"source":"contracts\\BiatecClammPool.algo.ts:1196","pc":[5969,5970]},{"teal":6345,"source":"contracts\\BiatecClammPool.algo.ts:1196","pc":[5971,5972]},{"teal":6346,"source":"contracts\\BiatecClammPool.algo.ts:1196","pc":[5973]},{"teal":6347,"source":"contracts\\BiatecClammPool.algo.ts:1196","pc":[5974]},{"teal":6350,"source":"contracts\\BiatecClammPool.algo.ts:1196","errorMessage":"E_CONFIG","pc":[5975]},{"teal":6354,"source":"contracts\\BiatecClammPool.algo.ts:1197","pc":[5976,5977]},{"teal":6355,"source":"contracts\\BiatecClammPool.algo.ts:1197","pc":[5978,5979]},{"teal":6356,"source":"contracts\\BiatecClammPool.algo.ts:1197","pc":[5980]},{"teal":6359,"source":"contracts\\BiatecClammPool.algo.ts:1197","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('ef')","pc":[5981]},{"teal":6360,"source":"contracts\\BiatecClammPool.algo.ts:1197","pc":[5982,5983]},{"teal":6364,"source":"contracts\\BiatecClammPool.algo.ts:1199","pc":[5984,5985]},{"teal":6365,"source":"contracts\\BiatecClammPool.algo.ts:1199","pc":[5986,5987]},{"teal":6366,"source":"contracts\\BiatecClammPool.algo.ts:1199","pc":[5988]},{"teal":6369,"source":"contracts\\BiatecClammPool.algo.ts:1199","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('s')","pc":[5989]},{"teal":6370,"source":"contracts\\BiatecClammPool.algo.ts:1199","pc":[5990,5991]},{"teal":6374,"source":"contracts\\BiatecClammPool.algo.ts:1200","pc":[5992,5993]},{"teal":6375,"source":"contracts\\BiatecClammPool.algo.ts:1200","pc":[5994]},{"teal":6376,"source":"contracts\\BiatecClammPool.algo.ts:1200","pc":[5995]},{"teal":6379,"source":"contracts\\BiatecClammPool.algo.ts:1200","errorMessage":"E_PAUSED","pc":[5996]},{"teal":6386,"source":"contracts\\BiatecClammPool.algo.ts:1203","pc":[5997,5998]},{"teal":6387,"source":"contracts\\BiatecClammPool.algo.ts:1203","pc":[5999,6000]},{"teal":6388,"source":"contracts\\BiatecClammPool.algo.ts:1203","pc":[6001]},{"teal":6391,"source":"contracts\\BiatecClammPool.algo.ts:1202","errorMessage":"E_SENDER","pc":[6002]},{"teal":6396,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[6003,6004]},{"teal":6397,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[6005]},{"teal":6398,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[6006]},{"teal":6399,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[6007,6008,6009]},{"teal":6404,"source":"contracts\\BiatecClammPool.algo.ts:1208","pc":[6010,6011]},{"teal":6405,"source":"contracts\\BiatecClammPool.algo.ts:1208","pc":[6012,6013]},{"teal":6406,"source":"contracts\\BiatecClammPool.algo.ts:1208","pc":[6014,6015]},{"teal":6407,"source":"contracts\\BiatecClammPool.algo.ts:1208","pc":[6016,6017,6018]},{"teal":6413,"source":"contracts\\BiatecClammPool.algo.ts:1210","pc":[6019,6020]},{"teal":6414,"source":"contracts\\BiatecClammPool.algo.ts:1210","pc":[6021]},{"teal":6415,"source":"contracts\\BiatecClammPool.algo.ts:1210","pc":[6022]},{"teal":6416,"source":"contracts\\BiatecClammPool.algo.ts:1210","pc":[6023,6024,6025]},{"teal":6421,"source":"contracts\\BiatecClammPool.algo.ts:1211","pc":[6026,6027]},{"teal":6422,"source":"contracts\\BiatecClammPool.algo.ts:1211","pc":[6028,6029]},{"teal":6423,"source":"contracts\\BiatecClammPool.algo.ts:1211","pc":[6030,6031]},{"teal":6424,"source":"contracts\\BiatecClammPool.algo.ts:1211","pc":[6032,6033,6034]},{"teal":6430,"source":"contracts\\BiatecClammPool.algo.ts:1214","pc":[6035,6036]},{"teal":6431,"source":"contracts\\BiatecClammPool.algo.ts:1214","pc":[6037]},{"teal":6432,"source":"contracts\\BiatecClammPool.algo.ts:1214","pc":[6038]},{"teal":6433,"source":"contracts\\BiatecClammPool.algo.ts:1214","pc":[6039,6040,6041]},{"teal":6441,"source":"contracts\\BiatecClammPool.algo.ts:1216","pc":[6042,6043]},{"teal":6442,"source":"contracts\\BiatecClammPool.algo.ts:1216","pc":[6044,6045]},{"teal":6443,"source":"contracts\\BiatecClammPool.algo.ts:1216","pc":[6046]},{"teal":6444,"source":"contracts\\BiatecClammPool.algo.ts:1216","pc":[6047,6048]},{"teal":6445,"source":"contracts\\BiatecClammPool.algo.ts:1216","pc":[6049]},{"teal":6446,"source":"contracts\\BiatecClammPool.algo.ts:1216","pc":[6050]},{"teal":6447,"source":"contracts\\BiatecClammPool.algo.ts:1216","pc":[6051,6052]},{"teal":6448,"source":"contracts\\BiatecClammPool.algo.ts:1216","pc":[6053]},{"teal":6449,"source":"contracts\\BiatecClammPool.algo.ts:1216","pc":[6054]},{"teal":6450,"source":"contracts\\BiatecClammPool.algo.ts:1216","pc":[6055]},{"teal":6451,"source":"contracts\\BiatecClammPool.algo.ts:1216","pc":[6056]},{"teal":6452,"source":"contracts\\BiatecClammPool.algo.ts:1216","pc":[6057]},{"teal":6455,"source":"contracts\\BiatecClammPool.algo.ts:1215","errorMessage":"E_A0_B","pc":[6058]},{"teal":6456,"source":"contracts\\BiatecClammPool.algo.ts:1214","pc":[6059,6060,6061]},{"teal":6464,"source":"contracts\\BiatecClammPool.algo.ts:1221","pc":[6062,6063]},{"teal":6465,"source":"contracts\\BiatecClammPool.algo.ts:1221","pc":[6064,6065]},{"teal":6466,"source":"contracts\\BiatecClammPool.algo.ts:1221","pc":[6066,6067]},{"teal":6467,"source":"contracts\\BiatecClammPool.algo.ts:1221","pc":[6068]},{"teal":6468,"source":"contracts\\BiatecClammPool.algo.ts:1221","pc":[6069]},{"teal":6469,"source":"contracts\\BiatecClammPool.algo.ts:1221","pc":[6070,6071]},{"teal":6470,"source":"contracts\\BiatecClammPool.algo.ts:1221","pc":[6072]},{"teal":6471,"source":"contracts\\BiatecClammPool.algo.ts:1221","pc":[6073]},{"teal":6472,"source":"contracts\\BiatecClammPool.algo.ts:1221","pc":[6074]},{"teal":6473,"source":"contracts\\BiatecClammPool.algo.ts:1221","pc":[6075]},{"teal":6474,"source":"contracts\\BiatecClammPool.algo.ts:1221","pc":[6076]},{"teal":6477,"source":"contracts\\BiatecClammPool.algo.ts:1220","errorMessage":"E_A_B","pc":[6077]},{"teal":6485,"source":"contracts\\BiatecClammPool.algo.ts:1226","pc":[6078,6079]},{"teal":6486,"source":"contracts\\BiatecClammPool.algo.ts:1226","pc":[6080,6081]},{"teal":6487,"source":"contracts\\BiatecClammPool.algo.ts:1226","pc":[6082,6083]},{"teal":6488,"source":"contracts\\BiatecClammPool.algo.ts:1226","pc":[6084]},{"teal":6489,"source":"contracts\\BiatecClammPool.algo.ts:1226","pc":[6085]},{"teal":6490,"source":"contracts\\BiatecClammPool.algo.ts:1226","pc":[6086,6087]},{"teal":6491,"source":"contracts\\BiatecClammPool.algo.ts:1226","pc":[6088]},{"teal":6492,"source":"contracts\\BiatecClammPool.algo.ts:1226","pc":[6089]},{"teal":6493,"source":"contracts\\BiatecClammPool.algo.ts:1226","pc":[6090,6091]},{"teal":6494,"source":"contracts\\BiatecClammPool.algo.ts:1226","pc":[6092]},{"teal":6495,"source":"contracts\\BiatecClammPool.algo.ts:1226","pc":[6093]},{"teal":6498,"source":"contracts\\BiatecClammPool.algo.ts:1225","errorMessage":"E_B_B","pc":[6094]},{"teal":6502,"source":"contracts\\BiatecClammPool.algo.ts:1230","pc":[6095,6096]},{"teal":6503,"source":"contracts\\BiatecClammPool.algo.ts:1230","pc":[6097,6098]},{"teal":6504,"source":"contracts\\BiatecClammPool.algo.ts:1230","pc":[6099]},{"teal":6507,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[6100,6101]},{"teal":6510,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[6102,6103]},{"teal":6511,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[6104]},{"teal":6516,"source":"contracts\\BiatecClammPool.algo.ts:1245","pc":[6105,6106,6107]},{"teal":6517,"source":"contracts\\BiatecClammPool.algo.ts:1245","pc":[6108]},{"teal":6520,"source":"contracts\\BiatecClammPool.algo.ts:1244","pc":[6109,6110,6111]},{"teal":6521,"source":"contracts\\BiatecClammPool.algo.ts:1244","pc":[6112]},{"teal":6524,"source":"contracts\\BiatecClammPool.algo.ts:1243","pc":[6113,6114,6115]},{"teal":6525,"source":"contracts\\BiatecClammPool.algo.ts:1243","pc":[6116]},{"teal":6528,"source":"contracts\\BiatecClammPool.algo.ts:1242","pc":[6117,6118,6119]},{"teal":6529,"source":"contracts\\BiatecClammPool.algo.ts:1242","pc":[6120,6121,6122]},{"teal":6532,"source":"contracts\\BiatecClammPool.algo.ts:1241","pc":[6123,6124,6125]},{"teal":6533,"source":"contracts\\BiatecClammPool.algo.ts:1241","pc":[6126,6127,6128]},{"teal":6536,"source":"contracts\\BiatecClammPool.algo.ts:1240","pc":[6129,6130,6131]},{"teal":6537,"source":"contracts\\BiatecClammPool.algo.ts:1240","pc":[6132,6133,6134]},{"teal":6540,"source":"contracts\\BiatecClammPool.algo.ts:1239","pc":[6135,6136,6137]},{"teal":6541,"source":"contracts\\BiatecClammPool.algo.ts:1239","pc":[6138]},{"teal":6544,"source":"contracts\\BiatecClammPool.algo.ts:1238","pc":[6139,6140,6141]},{"teal":6545,"source":"contracts\\BiatecClammPool.algo.ts:1238","pc":[6142]},{"teal":6546,"source":"contracts\\BiatecClammPool.algo.ts:1238","pc":[6143]},{"teal":6554,"source":"contracts\\BiatecClammPool.algo.ts:1238","pc":[6144,6145,6146]},{"teal":6557,"source":"contracts\\BiatecClammPool.algo.ts:1238","pc":[6147]},{"teal":6561,"source":"contracts\\BiatecClammPool.algo.ts:1247","pc":[6148,6149]},{"teal":6562,"source":"contracts\\BiatecClammPool.algo.ts:1247","pc":[6150,6151]},{"teal":6563,"source":"contracts\\BiatecClammPool.algo.ts:1247","pc":[6152]},{"teal":6564,"source":"contracts\\BiatecClammPool.algo.ts:1247","pc":[6153]},{"teal":6567,"source":"contracts\\BiatecClammPool.algo.ts:1247","errorMessage":"E_CONFIG","pc":[6154]},{"teal":6571,"source":"contracts\\BiatecClammPool.algo.ts:1248","pc":[6155,6156]},{"teal":6572,"source":"contracts\\BiatecClammPool.algo.ts:1248","pc":[6157,6158]},{"teal":6573,"source":"contracts\\BiatecClammPool.algo.ts:1248","pc":[6159]},{"teal":6576,"source":"contracts\\BiatecClammPool.algo.ts:1248","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('ef')","pc":[6160]},{"teal":6577,"source":"contracts\\BiatecClammPool.algo.ts:1248","pc":[6161,6162]},{"teal":6584,"source":"contracts\\BiatecClammPool.algo.ts:1250","pc":[6163,6164]},{"teal":6585,"source":"contracts\\BiatecClammPool.algo.ts:1250","pc":[6165,6166]},{"teal":6586,"source":"contracts\\BiatecClammPool.algo.ts:1250","pc":[6167]},{"teal":6589,"source":"contracts\\BiatecClammPool.algo.ts:1249","errorMessage":"E_SENDER","pc":[6168]},{"teal":6601,"source":"contracts\\BiatecClammPool.algo.ts:1253","pc":[6169]},{"teal":6602,"source":"contracts\\BiatecClammPool.algo.ts:1253","pc":[6170,6171]},{"teal":6603,"source":"contracts\\BiatecClammPool.algo.ts:1253","pc":[6172,6173]},{"teal":6607,"source":"contracts\\BiatecClammPool.algo.ts:1254","pc":[6174,6175]},{"teal":6608,"source":"contracts\\BiatecClammPool.algo.ts:1254","pc":[6176,6177]},{"teal":6612,"source":"contracts\\BiatecClammPool.algo.ts:1255","pc":[6178,6179]},{"teal":6613,"source":"contracts\\BiatecClammPool.algo.ts:1255","pc":[6180,6181]},{"teal":6617,"source":"contracts\\BiatecClammPool.algo.ts:1256","pc":[6182,6183]},{"teal":6618,"source":"contracts\\BiatecClammPool.algo.ts:1256","pc":[6184,6185]},{"teal":6622,"source":"contracts\\BiatecClammPool.algo.ts:1257","pc":[6186,6187]},{"teal":6623,"source":"contracts\\BiatecClammPool.algo.ts:1257","pc":[6188,6189]},{"teal":6627,"source":"contracts\\BiatecClammPool.algo.ts:1258","pc":[6190,6191]},{"teal":6628,"source":"contracts\\BiatecClammPool.algo.ts:1258","pc":[6192,6193]},{"teal":6632,"source":"contracts\\BiatecClammPool.algo.ts:1259","pc":[6194,6195]},{"teal":6633,"source":"contracts\\BiatecClammPool.algo.ts:1259","pc":[6196,6197]},{"teal":6637,"source":"contracts\\BiatecClammPool.algo.ts:1260","pc":[6198]},{"teal":6638,"source":"contracts\\BiatecClammPool.algo.ts:1260","pc":[6199,6200]},{"teal":6641,"source":"contracts\\BiatecClammPool.algo.ts:1253","pc":[6201]},{"teal":6642,"source":"contracts\\BiatecClammPool.algo.ts:1238","pc":[6202]},{"teal":6647,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6203,6204]},{"teal":6650,"source":"contracts\\BiatecClammPool.algo.ts:1287","pc":[6205,6206,6207]},{"teal":6651,"source":"contracts\\BiatecClammPool.algo.ts:1287","pc":[6208]},{"teal":6652,"source":"contracts\\BiatecClammPool.algo.ts:1287","pc":[6209]},{"teal":6653,"source":"contracts\\BiatecClammPool.algo.ts:1287","pc":[6210]},{"teal":6654,"source":"contracts\\BiatecClammPool.algo.ts:1287","pc":[6211]},{"teal":6657,"source":"contracts\\BiatecClammPool.algo.ts:1287","errorMessage":"argument 0 (currentDeposit) for calculateDistributedLiquidity must be a uint256","pc":[6212]},{"teal":6660,"source":"contracts\\BiatecClammPool.algo.ts:1287","pc":[6213,6214,6215]},{"teal":6661,"source":"contracts\\BiatecClammPool.algo.ts:1287","pc":[6216]},{"teal":6664,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6217,6218,6219]},{"teal":6665,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6220]},{"teal":6666,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6221]},{"teal":6667,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6222]},{"teal":6668,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6223]},{"teal":6671,"source":"contracts\\BiatecClammPool.algo.ts:1286","errorMessage":"calculateDistributedLiquidity return value overflowed 256 bits","pc":[6224]},{"teal":6672,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6225]},{"teal":6673,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6226]},{"teal":6674,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6227]},{"teal":6675,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6228]},{"teal":6676,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6229]},{"teal":6677,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6230]},{"teal":6678,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6231]},{"teal":6679,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6232]},{"teal":6680,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6233]},{"teal":6681,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6234]},{"teal":6682,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6235]},{"teal":6683,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6236]},{"teal":6684,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6237]},{"teal":6695,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6238,6239,6240]},{"teal":6698,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6241]},{"teal":6699,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6242,6243]},{"teal":6703,"source":"contracts\\BiatecClammPool.algo.ts:1288","pc":[6244,6245]},{"teal":6704,"source":"contracts\\BiatecClammPool.algo.ts:1288","pc":[6246,6247]},{"teal":6705,"source":"contracts\\BiatecClammPool.algo.ts:1288","pc":[6248,6249]},{"teal":6706,"source":"contracts\\BiatecClammPool.algo.ts:1288","pc":[6250]},{"teal":6707,"source":"contracts\\BiatecClammPool.algo.ts:1288","pc":[6251]},{"teal":6708,"source":"contracts\\BiatecClammPool.algo.ts:1288","pc":[6252,6253]},{"teal":6709,"source":"contracts\\BiatecClammPool.algo.ts:1288","pc":[6254]},{"teal":6710,"source":"contracts\\BiatecClammPool.algo.ts:1288","pc":[6255,6256]},{"teal":6714,"source":"contracts\\BiatecClammPool.algo.ts:1289","pc":[6257,6258]},{"teal":6715,"source":"contracts\\BiatecClammPool.algo.ts:1289","pc":[6259,6260]},{"teal":6719,"source":"contracts\\BiatecClammPool.algo.ts:1290","pc":[6261,6262]},{"teal":6720,"source":"contracts\\BiatecClammPool.algo.ts:1290","pc":[6263,6264]},{"teal":6721,"source":"contracts\\BiatecClammPool.algo.ts:1290","pc":[6265]},{"teal":6722,"source":"contracts\\BiatecClammPool.algo.ts:1290","pc":[6266,6267]},{"teal":6726,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[6268,6269]},{"teal":6727,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[6270,6271]},{"teal":6728,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[6272]},{"teal":6729,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[6273]},{"teal":6730,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[6274,6275]},{"teal":6734,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[6276,6277]},{"teal":6735,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[6278,6279]},{"teal":6736,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[6280]},{"teal":6737,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[6281,6282]},{"teal":6741,"source":"contracts\\BiatecClammPool.algo.ts:1294","pc":[6283,6284]},{"teal":6744,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6285,6286]},{"teal":6747,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6287,6288]},{"teal":6748,"source":"contracts\\BiatecClammPool.algo.ts:1286","pc":[6289]},{"teal":6753,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6290,6291]},{"teal":6756,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6292,6293,6294]},{"teal":6757,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6295]},{"teal":6758,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6296]},{"teal":6759,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6297]},{"teal":6760,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6298]},{"teal":6763,"source":"contracts\\BiatecClammPool.algo.ts:1298","errorMessage":"argument 0 (price) for calculateLiquidityFlatPrice must be a uint256","pc":[6299]},{"teal":6766,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6300,6301,6302]},{"teal":6767,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6303]},{"teal":6768,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6304]},{"teal":6769,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6305]},{"teal":6770,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6306]},{"teal":6773,"source":"contracts\\BiatecClammPool.algo.ts:1298","errorMessage":"argument 1 (y) for calculateLiquidityFlatPrice must be a uint256","pc":[6307]},{"teal":6776,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6308,6309,6310]},{"teal":6777,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6311]},{"teal":6778,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6312]},{"teal":6779,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6313]},{"teal":6780,"source":"contracts\\BiatecClammPool.algo.ts:1298","pc":[6314]},{"teal":6783,"source":"contracts\\BiatecClammPool.algo.ts:1298","errorMessage":"argument 2 (x) for calculateLiquidityFlatPrice must be a uint256","pc":[6315]},{"teal":6786,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6316,6317,6318]},{"teal":6787,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6319]},{"teal":6788,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6320]},{"teal":6789,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6321]},{"teal":6790,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6322]},{"teal":6793,"source":"contracts\\BiatecClammPool.algo.ts:1297","errorMessage":"calculateLiquidityFlatPrice return value overflowed 256 bits","pc":[6323]},{"teal":6794,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6324]},{"teal":6795,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6325]},{"teal":6796,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6326]},{"teal":6797,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6327]},{"teal":6798,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6328]},{"teal":6799,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6329]},{"teal":6800,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6330]},{"teal":6801,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6331]},{"teal":6802,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6332]},{"teal":6803,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6333]},{"teal":6804,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6334]},{"teal":6805,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6335]},{"teal":6806,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6336]},{"teal":6810,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6337,6338,6339]},{"teal":6814,"source":"contracts\\BiatecClammPool.algo.ts:1313","pc":[6340,6341]},{"teal":6815,"source":"contracts\\BiatecClammPool.algo.ts:1313","pc":[6342,6343]},{"teal":6816,"source":"contracts\\BiatecClammPool.algo.ts:1313","pc":[6344]},{"teal":6817,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6345]},{"teal":6818,"source":"contracts\\BiatecClammPool.algo.ts:1313","pc":[6346]},{"teal":6819,"source":"contracts\\BiatecClammPool.algo.ts:1313","pc":[6347,6348]},{"teal":6820,"source":"contracts\\BiatecClammPool.algo.ts:1313","pc":[6349]},{"teal":6821,"source":"contracts\\BiatecClammPool.algo.ts:1297","pc":[6350]},{"teal":6826,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6351,6352]},{"teal":6829,"source":"contracts\\BiatecClammPool.algo.ts:1336","pc":[6353,6354,6355]},{"teal":6830,"source":"contracts\\BiatecClammPool.algo.ts:1336","pc":[6356]},{"teal":6831,"source":"contracts\\BiatecClammPool.algo.ts:1336","pc":[6357]},{"teal":6832,"source":"contracts\\BiatecClammPool.algo.ts:1336","pc":[6358]},{"teal":6833,"source":"contracts\\BiatecClammPool.algo.ts:1336","pc":[6359]},{"teal":6836,"source":"contracts\\BiatecClammPool.algo.ts:1336","errorMessage":"argument 0 (priceMaxSqrt) for calculateLiquidityD must be a uint256","pc":[6360]},{"teal":6839,"source":"contracts\\BiatecClammPool.algo.ts:1335","pc":[6361,6362,6363]},{"teal":6840,"source":"contracts\\BiatecClammPool.algo.ts:1335","pc":[6364]},{"teal":6841,"source":"contracts\\BiatecClammPool.algo.ts:1335","pc":[6365]},{"teal":6842,"source":"contracts\\BiatecClammPool.algo.ts:1335","pc":[6366]},{"teal":6843,"source":"contracts\\BiatecClammPool.algo.ts:1335","pc":[6367]},{"teal":6846,"source":"contracts\\BiatecClammPool.algo.ts:1335","errorMessage":"argument 1 (priceMinSqrt) for calculateLiquidityD must be a uint256","pc":[6368]},{"teal":6849,"source":"contracts\\BiatecClammPool.algo.ts:1334","pc":[6369,6370,6371]},{"teal":6850,"source":"contracts\\BiatecClammPool.algo.ts:1334","pc":[6372]},{"teal":6851,"source":"contracts\\BiatecClammPool.algo.ts:1334","pc":[6373]},{"teal":6852,"source":"contracts\\BiatecClammPool.algo.ts:1334","pc":[6374]},{"teal":6853,"source":"contracts\\BiatecClammPool.algo.ts:1334","pc":[6375]},{"teal":6856,"source":"contracts\\BiatecClammPool.algo.ts:1334","errorMessage":"argument 2 (priceMax) for calculateLiquidityD must be a uint256","pc":[6376]},{"teal":6859,"source":"contracts\\BiatecClammPool.algo.ts:1333","pc":[6377,6378,6379]},{"teal":6860,"source":"contracts\\BiatecClammPool.algo.ts:1333","pc":[6380]},{"teal":6861,"source":"contracts\\BiatecClammPool.algo.ts:1333","pc":[6381]},{"teal":6862,"source":"contracts\\BiatecClammPool.algo.ts:1333","pc":[6382]},{"teal":6863,"source":"contracts\\BiatecClammPool.algo.ts:1333","pc":[6383]},{"teal":6866,"source":"contracts\\BiatecClammPool.algo.ts:1333","errorMessage":"argument 3 (priceMin) for calculateLiquidityD must be a uint256","pc":[6384]},{"teal":6869,"source":"contracts\\BiatecClammPool.algo.ts:1332","pc":[6385,6386,6387]},{"teal":6870,"source":"contracts\\BiatecClammPool.algo.ts:1332","pc":[6388]},{"teal":6871,"source":"contracts\\BiatecClammPool.algo.ts:1332","pc":[6389]},{"teal":6872,"source":"contracts\\BiatecClammPool.algo.ts:1332","pc":[6390]},{"teal":6873,"source":"contracts\\BiatecClammPool.algo.ts:1332","pc":[6391]},{"teal":6876,"source":"contracts\\BiatecClammPool.algo.ts:1332","errorMessage":"argument 4 (y) for calculateLiquidityD must be a uint256","pc":[6392]},{"teal":6879,"source":"contracts\\BiatecClammPool.algo.ts:1331","pc":[6393,6394,6395]},{"teal":6880,"source":"contracts\\BiatecClammPool.algo.ts:1331","pc":[6396]},{"teal":6881,"source":"contracts\\BiatecClammPool.algo.ts:1331","pc":[6397]},{"teal":6882,"source":"contracts\\BiatecClammPool.algo.ts:1331","pc":[6398]},{"teal":6883,"source":"contracts\\BiatecClammPool.algo.ts:1331","pc":[6399]},{"teal":6886,"source":"contracts\\BiatecClammPool.algo.ts:1331","errorMessage":"argument 5 (x) for calculateLiquidityD must be a uint256","pc":[6400]},{"teal":6889,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6401,6402,6403]},{"teal":6890,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6404]},{"teal":6891,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6405]},{"teal":6892,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6406]},{"teal":6893,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6407]},{"teal":6896,"source":"contracts\\BiatecClammPool.algo.ts:1329","errorMessage":"calculateLiquidityD return value overflowed 256 bits","pc":[6408]},{"teal":6897,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6409]},{"teal":6898,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6410]},{"teal":6899,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6411]},{"teal":6900,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6412]},{"teal":6901,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6413]},{"teal":6902,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6414]},{"teal":6903,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6415]},{"teal":6904,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6416]},{"teal":6905,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6417]},{"teal":6906,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6418]},{"teal":6907,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6419]},{"teal":6908,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6420]},{"teal":6909,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6421]},{"teal":6925,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6422,6423,6424]},{"teal":6928,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6425]},{"teal":6929,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6426,6427]},{"teal":6933,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[6428,6429]},{"teal":6934,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[6430,6431]},{"teal":6935,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[6432]},{"teal":6936,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[6433,6434]},{"teal":6937,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[6435]},{"teal":6938,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6436]},{"teal":6939,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[6437]},{"teal":6940,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6438]},{"teal":6941,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[6439]},{"teal":6942,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[6440,6441]},{"teal":6946,"source":"contracts\\BiatecClammPool.algo.ts:1369","pc":[6442,6443]},{"teal":6947,"source":"contracts\\BiatecClammPool.algo.ts:1369","pc":[6444,6445]},{"teal":6948,"source":"contracts\\BiatecClammPool.algo.ts:1369","pc":[6446]},{"teal":6949,"source":"contracts\\BiatecClammPool.algo.ts:1369","pc":[6447,6448]},{"teal":6950,"source":"contracts\\BiatecClammPool.algo.ts:1369","pc":[6449]},{"teal":6951,"source":"contracts\\BiatecClammPool.algo.ts:1369","pc":[6450,6451]},{"teal":6955,"source":"contracts\\BiatecClammPool.algo.ts:1371","pc":[6452,6453]},{"teal":6956,"source":"contracts\\BiatecClammPool.algo.ts:1371","pc":[6454,6455]},{"teal":6957,"source":"contracts\\BiatecClammPool.algo.ts:1371","pc":[6456]},{"teal":6958,"source":"contracts\\BiatecClammPool.algo.ts:1371","pc":[6457,6458]},{"teal":6959,"source":"contracts\\BiatecClammPool.algo.ts:1371","pc":[6459]},{"teal":6960,"source":"contracts\\BiatecClammPool.algo.ts:1371","pc":[6460,6461]},{"teal":6961,"source":"contracts\\BiatecClammPool.algo.ts:1371","pc":[6462]},{"teal":6962,"source":"contracts\\BiatecClammPool.algo.ts:1371","pc":[6463,6464]},{"teal":6966,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[6465,6466]},{"teal":6967,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[6467,6468]},{"teal":6968,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[6469]},{"teal":6969,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6470]},{"teal":6970,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[6471]},{"teal":6971,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[6472,6473]},{"teal":6975,"source":"contracts\\BiatecClammPool.algo.ts:1375","pc":[6474,6475]},{"teal":6976,"source":"contracts\\BiatecClammPool.algo.ts:1375","pc":[6476,6477]},{"teal":6977,"source":"contracts\\BiatecClammPool.algo.ts:1375","pc":[6478]},{"teal":6978,"source":"contracts\\BiatecClammPool.algo.ts:1375","pc":[6479,6480]},{"teal":6979,"source":"contracts\\BiatecClammPool.algo.ts:1375","pc":[6481]},{"teal":6980,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6482]},{"teal":6981,"source":"contracts\\BiatecClammPool.algo.ts:1375","pc":[6483]},{"teal":6982,"source":"contracts\\BiatecClammPool.algo.ts:1375","pc":[6484,6485]},{"teal":6986,"source":"contracts\\BiatecClammPool.algo.ts:1377","pc":[6486,6487]},{"teal":6987,"source":"contracts\\BiatecClammPool.algo.ts:1377","pc":[6488,6489]},{"teal":6988,"source":"contracts\\BiatecClammPool.algo.ts:1377","pc":[6490]},{"teal":6989,"source":"contracts\\BiatecClammPool.algo.ts:1377","pc":[6491,6492]},{"teal":6990,"source":"contracts\\BiatecClammPool.algo.ts:1377","pc":[6493]},{"teal":6991,"source":"contracts\\BiatecClammPool.algo.ts:1377","pc":[6494,6495]},{"teal":6992,"source":"contracts\\BiatecClammPool.algo.ts:1377","pc":[6496]},{"teal":6993,"source":"contracts\\BiatecClammPool.algo.ts:1377","pc":[6497,6498]},{"teal":6997,"source":"contracts\\BiatecClammPool.algo.ts:1378","pc":[6499,6500]},{"teal":6998,"source":"contracts\\BiatecClammPool.algo.ts:1378","pc":[6501,6502]},{"teal":6999,"source":"contracts\\BiatecClammPool.algo.ts:1378","pc":[6503]},{"teal":7000,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6504]},{"teal":7001,"source":"contracts\\BiatecClammPool.algo.ts:1378","pc":[6505]},{"teal":7002,"source":"contracts\\BiatecClammPool.algo.ts:1378","pc":[6506,6507]},{"teal":7006,"source":"contracts\\BiatecClammPool.algo.ts:1379","pc":[6508,6509]},{"teal":7007,"source":"contracts\\BiatecClammPool.algo.ts:1379","pc":[6510,6511]},{"teal":7008,"source":"contracts\\BiatecClammPool.algo.ts:1379","pc":[6512]},{"teal":7009,"source":"contracts\\BiatecClammPool.algo.ts:1379","pc":[6513,6514]},{"teal":7010,"source":"contracts\\BiatecClammPool.algo.ts:1379","pc":[6515]},{"teal":7011,"source":"contracts\\BiatecClammPool.algo.ts:1379","pc":[6516,6517]},{"teal":7012,"source":"contracts\\BiatecClammPool.algo.ts:1379","pc":[6518]},{"teal":7013,"source":"contracts\\BiatecClammPool.algo.ts:1379","pc":[6519,6520]},{"teal":7014,"source":"contracts\\BiatecClammPool.algo.ts:1379","pc":[6521]},{"teal":7015,"source":"contracts\\BiatecClammPool.algo.ts:1379","pc":[6522,6523]},{"teal":7019,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6524]},{"teal":7020,"source":"contracts\\BiatecClammPool.algo.ts:1380","pc":[6525,6526]},{"teal":7021,"source":"contracts\\BiatecClammPool.algo.ts:1380","pc":[6527]},{"teal":7022,"source":"contracts\\BiatecClammPool.algo.ts:1380","pc":[6528]},{"teal":7023,"source":"contracts\\BiatecClammPool.algo.ts:1380","pc":[6529,6530]},{"teal":7027,"source":"contracts\\BiatecClammPool.algo.ts:1381","pc":[6531,6532]},{"teal":7030,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6533,6534]},{"teal":7033,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6535,6536]},{"teal":7034,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[6537]},{"teal":7039,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6538,6539]},{"teal":7042,"source":"contracts\\BiatecClammPool.algo.ts:1399","pc":[6540,6541,6542]},{"teal":7043,"source":"contracts\\BiatecClammPool.algo.ts:1399","pc":[6543]},{"teal":7044,"source":"contracts\\BiatecClammPool.algo.ts:1399","pc":[6544]},{"teal":7045,"source":"contracts\\BiatecClammPool.algo.ts:1399","pc":[6545]},{"teal":7046,"source":"contracts\\BiatecClammPool.algo.ts:1399","pc":[6546]},{"teal":7049,"source":"contracts\\BiatecClammPool.algo.ts:1399","errorMessage":"argument 0 (dSqrt) for calculateLiquidityWithD must be a uint256","pc":[6547]},{"teal":7052,"source":"contracts\\BiatecClammPool.algo.ts:1398","pc":[6548,6549,6550]},{"teal":7053,"source":"contracts\\BiatecClammPool.algo.ts:1398","pc":[6551]},{"teal":7054,"source":"contracts\\BiatecClammPool.algo.ts:1398","pc":[6552]},{"teal":7055,"source":"contracts\\BiatecClammPool.algo.ts:1398","pc":[6553]},{"teal":7056,"source":"contracts\\BiatecClammPool.algo.ts:1398","pc":[6554]},{"teal":7059,"source":"contracts\\BiatecClammPool.algo.ts:1398","errorMessage":"argument 1 (priceMaxSqrt) for calculateLiquidityWithD must be a uint256","pc":[6555]},{"teal":7062,"source":"contracts\\BiatecClammPool.algo.ts:1397","pc":[6556,6557,6558]},{"teal":7063,"source":"contracts\\BiatecClammPool.algo.ts:1397","pc":[6559]},{"teal":7064,"source":"contracts\\BiatecClammPool.algo.ts:1397","pc":[6560]},{"teal":7065,"source":"contracts\\BiatecClammPool.algo.ts:1397","pc":[6561]},{"teal":7066,"source":"contracts\\BiatecClammPool.algo.ts:1397","pc":[6562]},{"teal":7069,"source":"contracts\\BiatecClammPool.algo.ts:1397","errorMessage":"argument 2 (priceMinSqrt) for calculateLiquidityWithD must be a uint256","pc":[6563]},{"teal":7072,"source":"contracts\\BiatecClammPool.algo.ts:1396","pc":[6564,6565,6566]},{"teal":7073,"source":"contracts\\BiatecClammPool.algo.ts:1396","pc":[6567]},{"teal":7074,"source":"contracts\\BiatecClammPool.algo.ts:1396","pc":[6568]},{"teal":7075,"source":"contracts\\BiatecClammPool.algo.ts:1396","pc":[6569]},{"teal":7076,"source":"contracts\\BiatecClammPool.algo.ts:1396","pc":[6570]},{"teal":7079,"source":"contracts\\BiatecClammPool.algo.ts:1396","errorMessage":"argument 3 (y) for calculateLiquidityWithD must be a uint256","pc":[6571]},{"teal":7082,"source":"contracts\\BiatecClammPool.algo.ts:1395","pc":[6572,6573,6574]},{"teal":7083,"source":"contracts\\BiatecClammPool.algo.ts:1395","pc":[6575]},{"teal":7084,"source":"contracts\\BiatecClammPool.algo.ts:1395","pc":[6576]},{"teal":7085,"source":"contracts\\BiatecClammPool.algo.ts:1395","pc":[6577]},{"teal":7086,"source":"contracts\\BiatecClammPool.algo.ts:1395","pc":[6578]},{"teal":7089,"source":"contracts\\BiatecClammPool.algo.ts:1395","errorMessage":"argument 4 (x) for calculateLiquidityWithD must be a uint256","pc":[6579]},{"teal":7092,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6580,6581,6582]},{"teal":7093,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6583]},{"teal":7094,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6584]},{"teal":7095,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6585]},{"teal":7096,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6586]},{"teal":7099,"source":"contracts\\BiatecClammPool.algo.ts:1393","errorMessage":"calculateLiquidityWithD return value overflowed 256 bits","pc":[6587]},{"teal":7100,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6588]},{"teal":7101,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6589]},{"teal":7102,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6590]},{"teal":7103,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6591]},{"teal":7104,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6592]},{"teal":7105,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6593]},{"teal":7106,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6594]},{"teal":7107,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6595]},{"teal":7108,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6596]},{"teal":7109,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6597]},{"teal":7110,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6598]},{"teal":7111,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6599]},{"teal":7112,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6600]},{"teal":7124,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6601,6602,6603]},{"teal":7127,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6604]},{"teal":7128,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6605,6606]},{"teal":7132,"source":"contracts\\BiatecClammPool.algo.ts:1431","pc":[6607,6608]},{"teal":7133,"source":"contracts\\BiatecClammPool.algo.ts:1431","pc":[6609,6610]},{"teal":7134,"source":"contracts\\BiatecClammPool.algo.ts:1431","pc":[6611]},{"teal":7135,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6612]},{"teal":7136,"source":"contracts\\BiatecClammPool.algo.ts:1431","pc":[6613]},{"teal":7137,"source":"contracts\\BiatecClammPool.algo.ts:1431","pc":[6614,6615]},{"teal":7141,"source":"contracts\\BiatecClammPool.algo.ts:1434","pc":[6616,6617]},{"teal":7142,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6618]},{"teal":7143,"source":"contracts\\BiatecClammPool.algo.ts:1434","pc":[6619]},{"teal":7144,"source":"contracts\\BiatecClammPool.algo.ts:1434","pc":[6620,6621]},{"teal":7145,"source":"contracts\\BiatecClammPool.algo.ts:1434","pc":[6622]},{"teal":7146,"source":"contracts\\BiatecClammPool.algo.ts:1434","pc":[6623,6624]},{"teal":7150,"source":"contracts\\BiatecClammPool.algo.ts:1439","pc":[6625,6626]},{"teal":7151,"source":"contracts\\BiatecClammPool.algo.ts:1439","pc":[6627,6628]},{"teal":7155,"source":"contracts\\BiatecClammPool.algo.ts:1440","pc":[6629,6630]},{"teal":7156,"source":"contracts\\BiatecClammPool.algo.ts:1440","pc":[6631,6632]},{"teal":7157,"source":"contracts\\BiatecClammPool.algo.ts:1440","pc":[6633]},{"teal":7158,"source":"contracts\\BiatecClammPool.algo.ts:1440","pc":[6634,6635]},{"teal":7162,"source":"contracts\\BiatecClammPool.algo.ts:1441","pc":[6636,6637]},{"teal":7163,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6638]},{"teal":7164,"source":"contracts\\BiatecClammPool.algo.ts:1441","pc":[6639]},{"teal":7165,"source":"contracts\\BiatecClammPool.algo.ts:1441","pc":[6640,6641]},{"teal":7169,"source":"contracts\\BiatecClammPool.algo.ts:1442","pc":[6642,6643]},{"teal":7170,"source":"contracts\\BiatecClammPool.algo.ts:1442","pc":[6644,6645]},{"teal":7171,"source":"contracts\\BiatecClammPool.algo.ts:1442","pc":[6646]},{"teal":7172,"source":"contracts\\BiatecClammPool.algo.ts:1442","pc":[6647,6648]},{"teal":7177,"source":"contracts\\BiatecClammPool.algo.ts:1443","pc":[6649,6650]},{"teal":7178,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6651]},{"teal":7179,"source":"contracts\\BiatecClammPool.algo.ts:1443","pc":[6652]},{"teal":7180,"source":"contracts\\BiatecClammPool.algo.ts:1443","pc":[6653,6654]},{"teal":7181,"source":"contracts\\BiatecClammPool.algo.ts:1443","pc":[6655]},{"teal":7182,"source":"contracts\\BiatecClammPool.algo.ts:1443","pc":[6656,6657,6658]},{"teal":7187,"source":"contracts\\BiatecClammPool.algo.ts:1444","pc":[6659,6660]},{"teal":7188,"source":"contracts\\BiatecClammPool.algo.ts:1444","pc":[6661,6662]},{"teal":7189,"source":"contracts\\BiatecClammPool.algo.ts:1444","pc":[6663]},{"teal":7190,"source":"contracts\\BiatecClammPool.algo.ts:1444","pc":[6664,6665]},{"teal":7191,"source":"contracts\\BiatecClammPool.algo.ts:1444","pc":[6666]},{"teal":7192,"source":"contracts\\BiatecClammPool.algo.ts:1444","pc":[6667,6668]},{"teal":7196,"source":"contracts\\BiatecClammPool.algo.ts:1445","pc":[6669,6670]},{"teal":7197,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6671]},{"teal":7198,"source":"contracts\\BiatecClammPool.algo.ts:1445","pc":[6672]},{"teal":7199,"source":"contracts\\BiatecClammPool.algo.ts:1445","pc":[6673,6674]},{"teal":7200,"source":"contracts\\BiatecClammPool.algo.ts:1445","pc":[6675]},{"teal":7201,"source":"contracts\\BiatecClammPool.algo.ts:1445","pc":[6676,6677]},{"teal":7205,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6678]},{"teal":7206,"source":"contracts\\BiatecClammPool.algo.ts:1446","pc":[6679,6680]},{"teal":7207,"source":"contracts\\BiatecClammPool.algo.ts:1446","pc":[6681]},{"teal":7208,"source":"contracts\\BiatecClammPool.algo.ts:1446","pc":[6682,6683]},{"teal":7209,"source":"contracts\\BiatecClammPool.algo.ts:1446","pc":[6684]},{"teal":7210,"source":"contracts\\BiatecClammPool.algo.ts:1446","pc":[6685,6686]},{"teal":7214,"source":"contracts\\BiatecClammPool.algo.ts:1447","pc":[6687,6688]},{"teal":7215,"source":"contracts\\BiatecClammPool.algo.ts:1447","pc":[6689,6690,6691]},{"teal":7220,"source":"contracts\\BiatecClammPool.algo.ts:1449","pc":[6692,6693]},{"teal":7221,"source":"contracts\\BiatecClammPool.algo.ts:1449","pc":[6694,6695]},{"teal":7222,"source":"contracts\\BiatecClammPool.algo.ts:1449","pc":[6696]},{"teal":7223,"source":"contracts\\BiatecClammPool.algo.ts:1449","pc":[6697,6698]},{"teal":7224,"source":"contracts\\BiatecClammPool.algo.ts:1449","pc":[6699]},{"teal":7225,"source":"contracts\\BiatecClammPool.algo.ts:1449","pc":[6700,6701]},{"teal":7229,"source":"contracts\\BiatecClammPool.algo.ts:1450","pc":[6702,6703]},{"teal":7230,"source":"contracts\\BiatecClammPool.algo.ts:1450","pc":[6704,6705]},{"teal":7231,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6706]},{"teal":7232,"source":"contracts\\BiatecClammPool.algo.ts:1450","pc":[6707]},{"teal":7233,"source":"contracts\\BiatecClammPool.algo.ts:1450","pc":[6708]},{"teal":7234,"source":"contracts\\BiatecClammPool.algo.ts:1450","pc":[6709,6710]},{"teal":7238,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6711]},{"teal":7239,"source":"contracts\\BiatecClammPool.algo.ts:1451","pc":[6712,6713]},{"teal":7240,"source":"contracts\\BiatecClammPool.algo.ts:1451","pc":[6714]},{"teal":7241,"source":"contracts\\BiatecClammPool.algo.ts:1451","pc":[6715,6716]},{"teal":7242,"source":"contracts\\BiatecClammPool.algo.ts:1451","pc":[6717]},{"teal":7243,"source":"contracts\\BiatecClammPool.algo.ts:1451","pc":[6718,6719]},{"teal":7247,"source":"contracts\\BiatecClammPool.algo.ts:1452","pc":[6720,6721]},{"teal":7251,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6722,6723]},{"teal":7254,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6724,6725]},{"teal":7255,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[6726]},{"teal":7260,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6727,6728]},{"teal":7263,"source":"contracts\\BiatecClammPool.algo.ts:1473","pc":[6729,6730,6731]},{"teal":7264,"source":"contracts\\BiatecClammPool.algo.ts:1473","pc":[6732]},{"teal":7265,"source":"contracts\\BiatecClammPool.algo.ts:1473","pc":[6733]},{"teal":7266,"source":"contracts\\BiatecClammPool.algo.ts:1473","pc":[6734]},{"teal":7267,"source":"contracts\\BiatecClammPool.algo.ts:1473","pc":[6735]},{"teal":7270,"source":"contracts\\BiatecClammPool.algo.ts:1473","errorMessage":"argument 0 (liquidity) for calculatePrice must be a uint256","pc":[6736]},{"teal":7273,"source":"contracts\\BiatecClammPool.algo.ts:1472","pc":[6737,6738,6739]},{"teal":7274,"source":"contracts\\BiatecClammPool.algo.ts:1472","pc":[6740]},{"teal":7275,"source":"contracts\\BiatecClammPool.algo.ts:1472","pc":[6741]},{"teal":7276,"source":"contracts\\BiatecClammPool.algo.ts:1472","pc":[6742]},{"teal":7277,"source":"contracts\\BiatecClammPool.algo.ts:1472","pc":[6743]},{"teal":7280,"source":"contracts\\BiatecClammPool.algo.ts:1472","errorMessage":"argument 1 (priceMaxSqrt) for calculatePrice must be a uint256","pc":[6744]},{"teal":7283,"source":"contracts\\BiatecClammPool.algo.ts:1471","pc":[6745,6746,6747]},{"teal":7284,"source":"contracts\\BiatecClammPool.algo.ts:1471","pc":[6748]},{"teal":7285,"source":"contracts\\BiatecClammPool.algo.ts:1471","pc":[6749]},{"teal":7286,"source":"contracts\\BiatecClammPool.algo.ts:1471","pc":[6750]},{"teal":7287,"source":"contracts\\BiatecClammPool.algo.ts:1471","pc":[6751]},{"teal":7290,"source":"contracts\\BiatecClammPool.algo.ts:1471","errorMessage":"argument 2 (priceMinSqrt) for calculatePrice must be a uint256","pc":[6752]},{"teal":7293,"source":"contracts\\BiatecClammPool.algo.ts:1470","pc":[6753,6754,6755]},{"teal":7294,"source":"contracts\\BiatecClammPool.algo.ts:1470","pc":[6756]},{"teal":7295,"source":"contracts\\BiatecClammPool.algo.ts:1470","pc":[6757]},{"teal":7296,"source":"contracts\\BiatecClammPool.algo.ts:1470","pc":[6758]},{"teal":7297,"source":"contracts\\BiatecClammPool.algo.ts:1470","pc":[6759]},{"teal":7300,"source":"contracts\\BiatecClammPool.algo.ts:1470","errorMessage":"argument 3 (assetBQuantity) for calculatePrice must be a uint256","pc":[6760]},{"teal":7303,"source":"contracts\\BiatecClammPool.algo.ts:1469","pc":[6761,6762,6763]},{"teal":7304,"source":"contracts\\BiatecClammPool.algo.ts:1469","pc":[6764]},{"teal":7305,"source":"contracts\\BiatecClammPool.algo.ts:1469","pc":[6765]},{"teal":7306,"source":"contracts\\BiatecClammPool.algo.ts:1469","pc":[6766]},{"teal":7307,"source":"contracts\\BiatecClammPool.algo.ts:1469","pc":[6767]},{"teal":7310,"source":"contracts\\BiatecClammPool.algo.ts:1469","errorMessage":"argument 4 (assetAQuantity) for calculatePrice must be a uint256","pc":[6768]},{"teal":7313,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6769,6770,6771]},{"teal":7314,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6772]},{"teal":7315,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6773]},{"teal":7316,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6774]},{"teal":7317,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6775]},{"teal":7320,"source":"contracts\\BiatecClammPool.algo.ts:1467","errorMessage":"calculatePrice return value overflowed 256 bits","pc":[6776]},{"teal":7321,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6777]},{"teal":7322,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6778]},{"teal":7323,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6779]},{"teal":7324,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6780]},{"teal":7325,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6781]},{"teal":7326,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6782]},{"teal":7327,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6783]},{"teal":7328,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6784]},{"teal":7329,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6785]},{"teal":7330,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6786]},{"teal":7331,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6787]},{"teal":7332,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6788]},{"teal":7333,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6789]},{"teal":7345,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6790,6791,6792]},{"teal":7348,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6793]},{"teal":7349,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6794,6795]},{"teal":7354,"source":"contracts\\BiatecClammPool.algo.ts:1476","pc":[6796,6797]},{"teal":7355,"source":"contracts\\BiatecClammPool.algo.ts:1476","pc":[6798,6799]},{"teal":7356,"source":"contracts\\BiatecClammPool.algo.ts:1476","pc":[6800]},{"teal":7357,"source":"contracts\\BiatecClammPool.algo.ts:1476","pc":[6801,6802,6803]},{"teal":7362,"source":"contracts\\BiatecClammPool.algo.ts:1477","pc":[6804,6805]},{"teal":7363,"source":"contracts\\BiatecClammPool.algo.ts:1477","pc":[6806,6807]},{"teal":7364,"source":"contracts\\BiatecClammPool.algo.ts:1477","pc":[6808]},{"teal":7365,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6809]},{"teal":7366,"source":"contracts\\BiatecClammPool.algo.ts:1477","pc":[6810]},{"teal":7367,"source":"contracts\\BiatecClammPool.algo.ts:1477","pc":[6811,6812]},{"teal":7371,"source":"contracts\\BiatecClammPool.algo.ts:1478","pc":[6813,6814]},{"teal":7372,"source":"contracts\\BiatecClammPool.algo.ts:1478","pc":[6815,6816,6817]},{"teal":7377,"source":"contracts\\BiatecClammPool.algo.ts:1481","pc":[6818,6819]},{"teal":7378,"source":"contracts\\BiatecClammPool.algo.ts:1481","pc":[6820,6821]},{"teal":7382,"source":"contracts\\BiatecClammPool.algo.ts:1482","pc":[6822,6823]},{"teal":7383,"source":"contracts\\BiatecClammPool.algo.ts:1482","pc":[6824,6825]},{"teal":7387,"source":"contracts\\BiatecClammPool.algo.ts:1483","pc":[6826,6827]},{"teal":7388,"source":"contracts\\BiatecClammPool.algo.ts:1483","pc":[6828,6829]},{"teal":7389,"source":"contracts\\BiatecClammPool.algo.ts:1483","pc":[6830]},{"teal":7390,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6831]},{"teal":7391,"source":"contracts\\BiatecClammPool.algo.ts:1483","pc":[6832]},{"teal":7392,"source":"contracts\\BiatecClammPool.algo.ts:1483","pc":[6833,6834]},{"teal":7396,"source":"contracts\\BiatecClammPool.algo.ts:1484","pc":[6835,6836]},{"teal":7397,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6837]},{"teal":7398,"source":"contracts\\BiatecClammPool.algo.ts:1484","pc":[6838]},{"teal":7399,"source":"contracts\\BiatecClammPool.algo.ts:1484","pc":[6839,6840]},{"teal":7400,"source":"contracts\\BiatecClammPool.algo.ts:1484","pc":[6841]},{"teal":7401,"source":"contracts\\BiatecClammPool.algo.ts:1484","pc":[6842,6843]},{"teal":7405,"source":"contracts\\BiatecClammPool.algo.ts:1485","pc":[6844,6845]},{"teal":7406,"source":"contracts\\BiatecClammPool.algo.ts:1485","pc":[6846,6847]},{"teal":7407,"source":"contracts\\BiatecClammPool.algo.ts:1485","pc":[6848]},{"teal":7408,"source":"contracts\\BiatecClammPool.algo.ts:1485","pc":[6849,6850]},{"teal":7412,"source":"contracts\\BiatecClammPool.algo.ts:1486","pc":[6851,6852]},{"teal":7413,"source":"contracts\\BiatecClammPool.algo.ts:1486","pc":[6853,6854]},{"teal":7414,"source":"contracts\\BiatecClammPool.algo.ts:1486","pc":[6855]},{"teal":7415,"source":"contracts\\BiatecClammPool.algo.ts:1486","pc":[6856,6857]},{"teal":7419,"source":"contracts\\BiatecClammPool.algo.ts:1487","pc":[6858,6859]},{"teal":7420,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6860]},{"teal":7421,"source":"contracts\\BiatecClammPool.algo.ts:1487","pc":[6861]},{"teal":7422,"source":"contracts\\BiatecClammPool.algo.ts:1487","pc":[6862,6863]},{"teal":7423,"source":"contracts\\BiatecClammPool.algo.ts:1487","pc":[6864]},{"teal":7424,"source":"contracts\\BiatecClammPool.algo.ts:1487","pc":[6865,6866]},{"teal":7428,"source":"contracts\\BiatecClammPool.algo.ts:1488","pc":[6867,6868]},{"teal":7432,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6869,6870]},{"teal":7435,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6871,6872]},{"teal":7436,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[6873]},{"teal":7441,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6874,6875]},{"teal":7444,"source":"contracts\\BiatecClammPool.algo.ts:1508","pc":[6876,6877,6878]},{"teal":7445,"source":"contracts\\BiatecClammPool.algo.ts:1508","pc":[6879]},{"teal":7446,"source":"contracts\\BiatecClammPool.algo.ts:1508","pc":[6880]},{"teal":7447,"source":"contracts\\BiatecClammPool.algo.ts:1508","pc":[6881]},{"teal":7448,"source":"contracts\\BiatecClammPool.algo.ts:1508","pc":[6882]},{"teal":7451,"source":"contracts\\BiatecClammPool.algo.ts:1508","errorMessage":"argument 0 (liqudity) for calculateAssetBWithdrawOnAssetADeposit must be a uint256","pc":[6883]},{"teal":7454,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[6884,6885,6886]},{"teal":7455,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[6887]},{"teal":7456,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[6888]},{"teal":7457,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[6889]},{"teal":7458,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[6890]},{"teal":7461,"source":"contracts\\BiatecClammPool.algo.ts:1507","errorMessage":"argument 1 (priceMaxSqrt) for calculateAssetBWithdrawOnAssetADeposit must be a uint256","pc":[6891]},{"teal":7464,"source":"contracts\\BiatecClammPool.algo.ts:1506","pc":[6892,6893,6894]},{"teal":7465,"source":"contracts\\BiatecClammPool.algo.ts:1506","pc":[6895]},{"teal":7466,"source":"contracts\\BiatecClammPool.algo.ts:1506","pc":[6896]},{"teal":7467,"source":"contracts\\BiatecClammPool.algo.ts:1506","pc":[6897]},{"teal":7468,"source":"contracts\\BiatecClammPool.algo.ts:1506","pc":[6898]},{"teal":7471,"source":"contracts\\BiatecClammPool.algo.ts:1506","errorMessage":"argument 2 (priceMinSqrt) for calculateAssetBWithdrawOnAssetADeposit must be a uint256","pc":[6899]},{"teal":7474,"source":"contracts\\BiatecClammPool.algo.ts:1505","pc":[6900,6901,6902]},{"teal":7475,"source":"contracts\\BiatecClammPool.algo.ts:1505","pc":[6903]},{"teal":7476,"source":"contracts\\BiatecClammPool.algo.ts:1505","pc":[6904]},{"teal":7477,"source":"contracts\\BiatecClammPool.algo.ts:1505","pc":[6905]},{"teal":7478,"source":"contracts\\BiatecClammPool.algo.ts:1505","pc":[6906]},{"teal":7481,"source":"contracts\\BiatecClammPool.algo.ts:1505","errorMessage":"argument 3 (assetBBalance) for calculateAssetBWithdrawOnAssetADeposit must be a uint256","pc":[6907]},{"teal":7484,"source":"contracts\\BiatecClammPool.algo.ts:1504","pc":[6908,6909,6910]},{"teal":7485,"source":"contracts\\BiatecClammPool.algo.ts:1504","pc":[6911]},{"teal":7486,"source":"contracts\\BiatecClammPool.algo.ts:1504","pc":[6912]},{"teal":7487,"source":"contracts\\BiatecClammPool.algo.ts:1504","pc":[6913]},{"teal":7488,"source":"contracts\\BiatecClammPool.algo.ts:1504","pc":[6914]},{"teal":7491,"source":"contracts\\BiatecClammPool.algo.ts:1504","errorMessage":"argument 4 (assetABalance) for calculateAssetBWithdrawOnAssetADeposit must be a uint256","pc":[6915]},{"teal":7494,"source":"contracts\\BiatecClammPool.algo.ts:1503","pc":[6916,6917,6918]},{"teal":7495,"source":"contracts\\BiatecClammPool.algo.ts:1503","pc":[6919]},{"teal":7496,"source":"contracts\\BiatecClammPool.algo.ts:1503","pc":[6920]},{"teal":7497,"source":"contracts\\BiatecClammPool.algo.ts:1503","pc":[6921]},{"teal":7498,"source":"contracts\\BiatecClammPool.algo.ts:1503","pc":[6922]},{"teal":7501,"source":"contracts\\BiatecClammPool.algo.ts:1503","errorMessage":"argument 5 (inAmount) for calculateAssetBWithdrawOnAssetADeposit must be a uint256","pc":[6923]},{"teal":7504,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6924,6925,6926]},{"teal":7505,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6927]},{"teal":7506,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6928]},{"teal":7507,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6929]},{"teal":7508,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6930]},{"teal":7511,"source":"contracts\\BiatecClammPool.algo.ts:1501","errorMessage":"calculateAssetBWithdrawOnAssetADeposit return value overflowed 256 bits","pc":[6931]},{"teal":7512,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6932]},{"teal":7513,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6933]},{"teal":7514,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6934]},{"teal":7515,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6935]},{"teal":7516,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6936]},{"teal":7517,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6937]},{"teal":7518,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6938]},{"teal":7519,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6939]},{"teal":7520,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6940]},{"teal":7521,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6941]},{"teal":7522,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6942]},{"teal":7523,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6943]},{"teal":7524,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6944]},{"teal":7537,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6945,6946,6947]},{"teal":7540,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6948]},{"teal":7541,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[6949,6950]},{"teal":7546,"source":"contracts\\BiatecClammPool.algo.ts:1511","pc":[6951,6952]},{"teal":7547,"source":"contracts\\BiatecClammPool.algo.ts:1511","pc":[6953,6954]},{"teal":7548,"source":"contracts\\BiatecClammPool.algo.ts:1511","pc":[6955]},{"teal":7549,"source":"contracts\\BiatecClammPool.algo.ts:1511","pc":[6956,6957,6958]},{"teal":7554,"source":"contracts\\BiatecClammPool.algo.ts:1512","pc":[6959,6960]},{"teal":7555,"source":"contracts\\BiatecClammPool.algo.ts:1512","pc":[6961,6962]},{"teal":7556,"source":"contracts\\BiatecClammPool.algo.ts:1512","pc":[6963]},{"teal":7557,"source":"contracts\\BiatecClammPool.algo.ts:1512","pc":[6964,6965]},{"teal":7558,"source":"contracts\\BiatecClammPool.algo.ts:1512","pc":[6966]},{"teal":7559,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6967]},{"teal":7560,"source":"contracts\\BiatecClammPool.algo.ts:1512","pc":[6968]},{"teal":7561,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6969]},{"teal":7562,"source":"contracts\\BiatecClammPool.algo.ts:1512","pc":[6970]},{"teal":7563,"source":"contracts\\BiatecClammPool.algo.ts:1512","pc":[6971,6972]},{"teal":7567,"source":"contracts\\BiatecClammPool.algo.ts:1513","pc":[6973,6974]},{"teal":7568,"source":"contracts\\BiatecClammPool.algo.ts:1513","pc":[6975,6976,6977]},{"teal":7573,"source":"contracts\\BiatecClammPool.algo.ts:1531","pc":[6978,6979]},{"teal":7574,"source":"contracts\\BiatecClammPool.algo.ts:1531","pc":[6980,6981]},{"teal":7578,"source":"contracts\\BiatecClammPool.algo.ts:1532","pc":[6982,6983]},{"teal":7579,"source":"contracts\\BiatecClammPool.algo.ts:1532","pc":[6984,6985]},{"teal":7583,"source":"contracts\\BiatecClammPool.algo.ts:1533","pc":[6986,6987]},{"teal":7584,"source":"contracts\\BiatecClammPool.algo.ts:1533","pc":[6988,6989]},{"teal":7588,"source":"contracts\\BiatecClammPool.algo.ts:1534","pc":[6990,6991]},{"teal":7589,"source":"contracts\\BiatecClammPool.algo.ts:1534","pc":[6992,6993]},{"teal":7593,"source":"contracts\\BiatecClammPool.algo.ts:1535","pc":[6994,6995]},{"teal":7594,"source":"contracts\\BiatecClammPool.algo.ts:1535","pc":[6996,6997]},{"teal":7598,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[6998,6999]},{"teal":7599,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[7000,7001]},{"teal":7600,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[7002]},{"teal":7601,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7003]},{"teal":7602,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[7004]},{"teal":7603,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[7005,7006]},{"teal":7604,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[7007]},{"teal":7605,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7008]},{"teal":7606,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[7009]},{"teal":7607,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[7010,7011]},{"teal":7608,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[7012]},{"teal":7609,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7013]},{"teal":7610,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[7014]},{"teal":7611,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[7015,7016]},{"teal":7615,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[7017,7018]},{"teal":7616,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[7019,7020]},{"teal":7617,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[7021]},{"teal":7618,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7022]},{"teal":7619,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[7023]},{"teal":7620,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[7024,7025]},{"teal":7621,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[7026]},{"teal":7622,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7027]},{"teal":7623,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[7028]},{"teal":7624,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[7029,7030]},{"teal":7628,"source":"contracts\\BiatecClammPool.algo.ts:1541","pc":[7031,7032]},{"teal":7629,"source":"contracts\\BiatecClammPool.algo.ts:1541","pc":[7033,7034]},{"teal":7630,"source":"contracts\\BiatecClammPool.algo.ts:1541","pc":[7035]},{"teal":7631,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7036]},{"teal":7632,"source":"contracts\\BiatecClammPool.algo.ts:1541","pc":[7037]},{"teal":7633,"source":"contracts\\BiatecClammPool.algo.ts:1541","pc":[7038,7039]},{"teal":7637,"source":"contracts\\BiatecClammPool.algo.ts:1543","pc":[7040,7041]},{"teal":7638,"source":"contracts\\BiatecClammPool.algo.ts:1543","pc":[7042,7043]},{"teal":7639,"source":"contracts\\BiatecClammPool.algo.ts:1543","pc":[7044]},{"teal":7640,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7045]},{"teal":7641,"source":"contracts\\BiatecClammPool.algo.ts:1543","pc":[7046]},{"teal":7642,"source":"contracts\\BiatecClammPool.algo.ts:1543","pc":[7047,7048]},{"teal":7646,"source":"contracts\\BiatecClammPool.algo.ts:1545","pc":[7049,7050]},{"teal":7647,"source":"contracts\\BiatecClammPool.algo.ts:1545","pc":[7051,7052]},{"teal":7648,"source":"contracts\\BiatecClammPool.algo.ts:1545","pc":[7053]},{"teal":7649,"source":"contracts\\BiatecClammPool.algo.ts:1545","pc":[7054,7055]},{"teal":7653,"source":"contracts\\BiatecClammPool.algo.ts:1547","pc":[7056,7057]},{"teal":7654,"source":"contracts\\BiatecClammPool.algo.ts:1547","pc":[7058,7059]},{"teal":7655,"source":"contracts\\BiatecClammPool.algo.ts:1547","pc":[7060]},{"teal":7656,"source":"contracts\\BiatecClammPool.algo.ts:1547","pc":[7061,7062]},{"teal":7657,"source":"contracts\\BiatecClammPool.algo.ts:1547","pc":[7063]},{"teal":7658,"source":"contracts\\BiatecClammPool.algo.ts:1547","pc":[7064,7065]},{"teal":7662,"source":"contracts\\BiatecClammPool.algo.ts:1549","pc":[7066,7067]},{"teal":7663,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7068]},{"teal":7664,"source":"contracts\\BiatecClammPool.algo.ts:1549","pc":[7069]},{"teal":7665,"source":"contracts\\BiatecClammPool.algo.ts:1549","pc":[7070,7071]},{"teal":7666,"source":"contracts\\BiatecClammPool.algo.ts:1549","pc":[7072]},{"teal":7667,"source":"contracts\\BiatecClammPool.algo.ts:1549","pc":[7073,7074]},{"teal":7671,"source":"contracts\\BiatecClammPool.algo.ts:1550","pc":[7075,7076]},{"teal":7675,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[7077,7078]},{"teal":7678,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[7079,7080]},{"teal":7679,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[7081]},{"teal":7684,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7082,7083]},{"teal":7687,"source":"contracts\\BiatecClammPool.algo.ts:1571","pc":[7084,7085,7086]},{"teal":7688,"source":"contracts\\BiatecClammPool.algo.ts:1571","pc":[7087]},{"teal":7689,"source":"contracts\\BiatecClammPool.algo.ts:1571","pc":[7088]},{"teal":7690,"source":"contracts\\BiatecClammPool.algo.ts:1571","pc":[7089]},{"teal":7691,"source":"contracts\\BiatecClammPool.algo.ts:1571","pc":[7090]},{"teal":7694,"source":"contracts\\BiatecClammPool.algo.ts:1571","errorMessage":"argument 0 (liqudity) for calculateAssetAWithdrawOnAssetBDeposit must be a uint256","pc":[7091]},{"teal":7697,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[7092,7093,7094]},{"teal":7698,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[7095]},{"teal":7699,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[7096]},{"teal":7700,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[7097]},{"teal":7701,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[7098]},{"teal":7704,"source":"contracts\\BiatecClammPool.algo.ts:1570","errorMessage":"argument 1 (priceMaxSqrt) for calculateAssetAWithdrawOnAssetBDeposit must be a uint256","pc":[7099]},{"teal":7707,"source":"contracts\\BiatecClammPool.algo.ts:1569","pc":[7100,7101,7102]},{"teal":7708,"source":"contracts\\BiatecClammPool.algo.ts:1569","pc":[7103]},{"teal":7709,"source":"contracts\\BiatecClammPool.algo.ts:1569","pc":[7104]},{"teal":7710,"source":"contracts\\BiatecClammPool.algo.ts:1569","pc":[7105]},{"teal":7711,"source":"contracts\\BiatecClammPool.algo.ts:1569","pc":[7106]},{"teal":7714,"source":"contracts\\BiatecClammPool.algo.ts:1569","errorMessage":"argument 2 (priceMinSqrt) for calculateAssetAWithdrawOnAssetBDeposit must be a uint256","pc":[7107]},{"teal":7717,"source":"contracts\\BiatecClammPool.algo.ts:1568","pc":[7108,7109,7110]},{"teal":7718,"source":"contracts\\BiatecClammPool.algo.ts:1568","pc":[7111]},{"teal":7719,"source":"contracts\\BiatecClammPool.algo.ts:1568","pc":[7112]},{"teal":7720,"source":"contracts\\BiatecClammPool.algo.ts:1568","pc":[7113]},{"teal":7721,"source":"contracts\\BiatecClammPool.algo.ts:1568","pc":[7114]},{"teal":7724,"source":"contracts\\BiatecClammPool.algo.ts:1568","errorMessage":"argument 3 (assetBBalance) for calculateAssetAWithdrawOnAssetBDeposit must be a uint256","pc":[7115]},{"teal":7727,"source":"contracts\\BiatecClammPool.algo.ts:1567","pc":[7116,7117,7118]},{"teal":7728,"source":"contracts\\BiatecClammPool.algo.ts:1567","pc":[7119]},{"teal":7729,"source":"contracts\\BiatecClammPool.algo.ts:1567","pc":[7120]},{"teal":7730,"source":"contracts\\BiatecClammPool.algo.ts:1567","pc":[7121]},{"teal":7731,"source":"contracts\\BiatecClammPool.algo.ts:1567","pc":[7122]},{"teal":7734,"source":"contracts\\BiatecClammPool.algo.ts:1567","errorMessage":"argument 4 (assetABalance) for calculateAssetAWithdrawOnAssetBDeposit must be a uint256","pc":[7123]},{"teal":7737,"source":"contracts\\BiatecClammPool.algo.ts:1566","pc":[7124,7125,7126]},{"teal":7738,"source":"contracts\\BiatecClammPool.algo.ts:1566","pc":[7127]},{"teal":7739,"source":"contracts\\BiatecClammPool.algo.ts:1566","pc":[7128]},{"teal":7740,"source":"contracts\\BiatecClammPool.algo.ts:1566","pc":[7129]},{"teal":7741,"source":"contracts\\BiatecClammPool.algo.ts:1566","pc":[7130]},{"teal":7744,"source":"contracts\\BiatecClammPool.algo.ts:1566","errorMessage":"argument 5 (inAmount) for calculateAssetAWithdrawOnAssetBDeposit must be a uint256","pc":[7131]},{"teal":7747,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7132,7133,7134]},{"teal":7748,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7135]},{"teal":7749,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7136]},{"teal":7750,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7137]},{"teal":7751,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7138]},{"teal":7754,"source":"contracts\\BiatecClammPool.algo.ts:1564","errorMessage":"calculateAssetAWithdrawOnAssetBDeposit return value overflowed 256 bits","pc":[7139]},{"teal":7755,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7140]},{"teal":7756,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7141]},{"teal":7757,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7142]},{"teal":7758,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7143]},{"teal":7759,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7144]},{"teal":7760,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7145]},{"teal":7761,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7146]},{"teal":7762,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7147]},{"teal":7763,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7148]},{"teal":7764,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7149]},{"teal":7765,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7150]},{"teal":7766,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7151]},{"teal":7767,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7152]},{"teal":7781,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7153,7154,7155]},{"teal":7784,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7156]},{"teal":7785,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7157,7158]},{"teal":7790,"source":"contracts\\BiatecClammPool.algo.ts:1573","pc":[7159,7160]},{"teal":7791,"source":"contracts\\BiatecClammPool.algo.ts:1573","pc":[7161,7162]},{"teal":7792,"source":"contracts\\BiatecClammPool.algo.ts:1573","pc":[7163]},{"teal":7793,"source":"contracts\\BiatecClammPool.algo.ts:1573","pc":[7164,7165,7166]},{"teal":7798,"source":"contracts\\BiatecClammPool.algo.ts:1574","pc":[7167,7168]},{"teal":7799,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7169]},{"teal":7800,"source":"contracts\\BiatecClammPool.algo.ts:1574","pc":[7170]},{"teal":7801,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7171]},{"teal":7802,"source":"contracts\\BiatecClammPool.algo.ts:1574","pc":[7172]},{"teal":7803,"source":"contracts\\BiatecClammPool.algo.ts:1574","pc":[7173,7174]},{"teal":7804,"source":"contracts\\BiatecClammPool.algo.ts:1574","pc":[7175]},{"teal":7805,"source":"contracts\\BiatecClammPool.algo.ts:1574","pc":[7176,7177]},{"teal":7806,"source":"contracts\\BiatecClammPool.algo.ts:1574","pc":[7178]},{"teal":7807,"source":"contracts\\BiatecClammPool.algo.ts:1574","pc":[7179,7180]},{"teal":7811,"source":"contracts\\BiatecClammPool.algo.ts:1575","pc":[7181,7182]},{"teal":7812,"source":"contracts\\BiatecClammPool.algo.ts:1575","pc":[7183,7184,7185]},{"teal":7817,"source":"contracts\\BiatecClammPool.algo.ts:1590","pc":[7186,7187]},{"teal":7818,"source":"contracts\\BiatecClammPool.algo.ts:1590","pc":[7188,7189]},{"teal":7822,"source":"contracts\\BiatecClammPool.algo.ts:1591","pc":[7190,7191]},{"teal":7823,"source":"contracts\\BiatecClammPool.algo.ts:1591","pc":[7192,7193]},{"teal":7827,"source":"contracts\\BiatecClammPool.algo.ts:1592","pc":[7194,7195]},{"teal":7828,"source":"contracts\\BiatecClammPool.algo.ts:1592","pc":[7196,7197]},{"teal":7832,"source":"contracts\\BiatecClammPool.algo.ts:1593","pc":[7198,7199]},{"teal":7833,"source":"contracts\\BiatecClammPool.algo.ts:1593","pc":[7200,7201]},{"teal":7837,"source":"contracts\\BiatecClammPool.algo.ts:1594","pc":[7202,7203]},{"teal":7838,"source":"contracts\\BiatecClammPool.algo.ts:1594","pc":[7204,7205]},{"teal":7842,"source":"contracts\\BiatecClammPool.algo.ts:1597","pc":[7206,7207]},{"teal":7843,"source":"contracts\\BiatecClammPool.algo.ts:1597","pc":[7208,7209]},{"teal":7844,"source":"contracts\\BiatecClammPool.algo.ts:1597","pc":[7210]},{"teal":7845,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7211]},{"teal":7846,"source":"contracts\\BiatecClammPool.algo.ts:1597","pc":[7212]},{"teal":7847,"source":"contracts\\BiatecClammPool.algo.ts:1597","pc":[7213,7214]},{"teal":7851,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[7215,7216]},{"teal":7852,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[7217,7218]},{"teal":7853,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[7219]},{"teal":7854,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7220]},{"teal":7855,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[7221]},{"teal":7856,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[7222,7223]},{"teal":7857,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[7224]},{"teal":7858,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7225]},{"teal":7859,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[7226]},{"teal":7860,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[7227,7228]},{"teal":7864,"source":"contracts\\BiatecClammPool.algo.ts:1601","pc":[7229,7230]},{"teal":7865,"source":"contracts\\BiatecClammPool.algo.ts:1601","pc":[7231,7232]},{"teal":7866,"source":"contracts\\BiatecClammPool.algo.ts:1601","pc":[7233]},{"teal":7867,"source":"contracts\\BiatecClammPool.algo.ts:1601","pc":[7234,7235]},{"teal":7871,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[7236,7237]},{"teal":7872,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[7238,7239]},{"teal":7873,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[7240]},{"teal":7874,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7241]},{"teal":7875,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[7242]},{"teal":7876,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[7243,7244]},{"teal":7877,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[7245]},{"teal":7878,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7246]},{"teal":7879,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[7247]},{"teal":7880,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[7248,7249]},{"teal":7884,"source":"contracts\\BiatecClammPool.algo.ts:1605","pc":[7250,7251]},{"teal":7885,"source":"contracts\\BiatecClammPool.algo.ts:1605","pc":[7252,7253]},{"teal":7886,"source":"contracts\\BiatecClammPool.algo.ts:1605","pc":[7254]},{"teal":7887,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7255]},{"teal":7888,"source":"contracts\\BiatecClammPool.algo.ts:1605","pc":[7256]},{"teal":7889,"source":"contracts\\BiatecClammPool.algo.ts:1605","pc":[7257,7258]},{"teal":7893,"source":"contracts\\BiatecClammPool.algo.ts:1607","pc":[7259,7260]},{"teal":7894,"source":"contracts\\BiatecClammPool.algo.ts:1607","pc":[7261,7262]},{"teal":7895,"source":"contracts\\BiatecClammPool.algo.ts:1607","pc":[7263]},{"teal":7896,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7264]},{"teal":7897,"source":"contracts\\BiatecClammPool.algo.ts:1607","pc":[7265]},{"teal":7898,"source":"contracts\\BiatecClammPool.algo.ts:1607","pc":[7266,7267]},{"teal":7902,"source":"contracts\\BiatecClammPool.algo.ts:1609","pc":[7268,7269]},{"teal":7903,"source":"contracts\\BiatecClammPool.algo.ts:1609","pc":[7270,7271]},{"teal":7904,"source":"contracts\\BiatecClammPool.algo.ts:1609","pc":[7272]},{"teal":7905,"source":"contracts\\BiatecClammPool.algo.ts:1609","pc":[7273,7274]},{"teal":7906,"source":"contracts\\BiatecClammPool.algo.ts:1609","pc":[7275]},{"teal":7907,"source":"contracts\\BiatecClammPool.algo.ts:1609","pc":[7276,7277]},{"teal":7911,"source":"contracts\\BiatecClammPool.algo.ts:1611","pc":[7278,7279]},{"teal":7912,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[7280]},{"teal":7913,"source":"contracts\\BiatecClammPool.algo.ts:1611","pc":[7281]},{"teal":7914,"source":"contracts\\BiatecClammPool.algo.ts:1611","pc":[7282,7283]},{"teal":7915,"source":"contracts\\BiatecClammPool.algo.ts:1611","pc":[7284]},{"teal":7916,"source":"contracts\\BiatecClammPool.algo.ts:1611","pc":[7285,7286]},{"teal":7920,"source":"contracts\\BiatecClammPool.algo.ts:1612","pc":[7287,7288]},{"teal":7924,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7289,7290]},{"teal":7927,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7291,7292]},{"teal":7928,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[7293]},{"teal":7933,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7294,7295]},{"teal":7936,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7296,7297,7298]},{"teal":7937,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7299]},{"teal":7938,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7300]},{"teal":7939,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7301]},{"teal":7940,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7302]},{"teal":7943,"source":"contracts\\BiatecClammPool.algo.ts:1624","errorMessage":"argument 0 (liqudity) for calculateAssetAWithdrawOnLpDeposit must be a uint256","pc":[7303]},{"teal":7946,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7304,7305,7306]},{"teal":7947,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7307]},{"teal":7948,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7308]},{"teal":7949,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7309]},{"teal":7950,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7310]},{"teal":7953,"source":"contracts\\BiatecClammPool.algo.ts:1624","errorMessage":"argument 1 (assetABalance) for calculateAssetAWithdrawOnLpDeposit must be a uint256","pc":[7311]},{"teal":7956,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7312,7313,7314]},{"teal":7957,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7315]},{"teal":7958,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7316]},{"teal":7959,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7317]},{"teal":7960,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[7318]},{"teal":7963,"source":"contracts\\BiatecClammPool.algo.ts:1624","errorMessage":"argument 2 (inAmount) for calculateAssetAWithdrawOnLpDeposit must be a uint256","pc":[7319]},{"teal":7966,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7320,7321,7322]},{"teal":7967,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7323]},{"teal":7968,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7324]},{"teal":7969,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7325]},{"teal":7970,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7326]},{"teal":7973,"source":"contracts\\BiatecClammPool.algo.ts:1623","errorMessage":"calculateAssetAWithdrawOnLpDeposit return value overflowed 256 bits","pc":[7327]},{"teal":7974,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7328]},{"teal":7975,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7329]},{"teal":7976,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7330]},{"teal":7977,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7331]},{"teal":7978,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7332]},{"teal":7979,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7333]},{"teal":7980,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7334]},{"teal":7981,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7335]},{"teal":7982,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7336]},{"teal":7983,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7337]},{"teal":7984,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7338]},{"teal":7985,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7339]},{"teal":7986,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7340]},{"teal":7997,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7341,7342,7343]},{"teal":8000,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7344]},{"teal":8004,"source":"contracts\\BiatecClammPool.algo.ts:1628","pc":[7345,7346]},{"teal":8005,"source":"contracts\\BiatecClammPool.algo.ts:1628","pc":[7347,7348]},{"teal":8006,"source":"contracts\\BiatecClammPool.algo.ts:1628","pc":[7349]},{"teal":8007,"source":"contracts\\BiatecClammPool.algo.ts:1628","pc":[7350,7351]},{"teal":8008,"source":"contracts\\BiatecClammPool.algo.ts:1628","pc":[7352]},{"teal":8009,"source":"contracts\\BiatecClammPool.algo.ts:1628","pc":[7353,7354]},{"teal":8013,"source":"contracts\\BiatecClammPool.algo.ts:1629","pc":[7355,7356]},{"teal":8016,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7357,7358]},{"teal":8017,"source":"contracts\\BiatecClammPool.algo.ts:1623","pc":[7359]},{"teal":8022,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7360,7361]},{"teal":8025,"source":"contracts\\BiatecClammPool.algo.ts:1649","pc":[7362,7363,7364]},{"teal":8026,"source":"contracts\\BiatecClammPool.algo.ts:1649","pc":[7365]},{"teal":8027,"source":"contracts\\BiatecClammPool.algo.ts:1649","pc":[7366]},{"teal":8028,"source":"contracts\\BiatecClammPool.algo.ts:1649","pc":[7367]},{"teal":8029,"source":"contracts\\BiatecClammPool.algo.ts:1649","pc":[7368]},{"teal":8032,"source":"contracts\\BiatecClammPool.algo.ts:1649","errorMessage":"argument 0 (assetBBalance) for calculateAssetBDepositOnAssetADeposit must be a uint256","pc":[7369]},{"teal":8035,"source":"contracts\\BiatecClammPool.algo.ts:1648","pc":[7370,7371,7372]},{"teal":8036,"source":"contracts\\BiatecClammPool.algo.ts:1648","pc":[7373]},{"teal":8037,"source":"contracts\\BiatecClammPool.algo.ts:1648","pc":[7374]},{"teal":8038,"source":"contracts\\BiatecClammPool.algo.ts:1648","pc":[7375]},{"teal":8039,"source":"contracts\\BiatecClammPool.algo.ts:1648","pc":[7376]},{"teal":8042,"source":"contracts\\BiatecClammPool.algo.ts:1648","errorMessage":"argument 1 (assetABalance) for calculateAssetBDepositOnAssetADeposit must be a uint256","pc":[7377]},{"teal":8045,"source":"contracts\\BiatecClammPool.algo.ts:1647","pc":[7378,7379,7380]},{"teal":8046,"source":"contracts\\BiatecClammPool.algo.ts:1647","pc":[7381]},{"teal":8047,"source":"contracts\\BiatecClammPool.algo.ts:1647","pc":[7382]},{"teal":8048,"source":"contracts\\BiatecClammPool.algo.ts:1647","pc":[7383]},{"teal":8049,"source":"contracts\\BiatecClammPool.algo.ts:1647","pc":[7384]},{"teal":8052,"source":"contracts\\BiatecClammPool.algo.ts:1647","errorMessage":"argument 2 (inAmountB) for calculateAssetBDepositOnAssetADeposit must be a uint256","pc":[7385]},{"teal":8055,"source":"contracts\\BiatecClammPool.algo.ts:1646","pc":[7386,7387,7388]},{"teal":8056,"source":"contracts\\BiatecClammPool.algo.ts:1646","pc":[7389]},{"teal":8057,"source":"contracts\\BiatecClammPool.algo.ts:1646","pc":[7390]},{"teal":8058,"source":"contracts\\BiatecClammPool.algo.ts:1646","pc":[7391]},{"teal":8059,"source":"contracts\\BiatecClammPool.algo.ts:1646","pc":[7392]},{"teal":8062,"source":"contracts\\BiatecClammPool.algo.ts:1646","errorMessage":"argument 3 (inAmountA) for calculateAssetBDepositOnAssetADeposit must be a uint256","pc":[7393]},{"teal":8065,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7394,7395,7396]},{"teal":8066,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7397]},{"teal":8067,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7398]},{"teal":8068,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7399]},{"teal":8069,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7400]},{"teal":8072,"source":"contracts\\BiatecClammPool.algo.ts:1644","errorMessage":"calculateAssetBDepositOnAssetADeposit return value overflowed 256 bits","pc":[7401]},{"teal":8073,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7402]},{"teal":8074,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7403]},{"teal":8075,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7404]},{"teal":8076,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7405]},{"teal":8077,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7406]},{"teal":8078,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7407]},{"teal":8079,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7408]},{"teal":8080,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7409]},{"teal":8081,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7410]},{"teal":8082,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7411]},{"teal":8083,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7412]},{"teal":8084,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7413]},{"teal":8085,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7414]},{"teal":8100,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7415,7416,7417]},{"teal":8105,"source":"contracts\\BiatecClammPool.algo.ts:1651","pc":[7418,7419]},{"teal":8106,"source":"contracts\\BiatecClammPool.algo.ts:1651","pc":[7420,7421]},{"teal":8107,"source":"contracts\\BiatecClammPool.algo.ts:1651","pc":[7422]},{"teal":8108,"source":"contracts\\BiatecClammPool.algo.ts:1651","pc":[7423,7424,7425]},{"teal":8113,"source":"contracts\\BiatecClammPool.algo.ts:1652","pc":[7426,7427]},{"teal":8114,"source":"contracts\\BiatecClammPool.algo.ts:1652","pc":[7428,7429]},{"teal":8115,"source":"contracts\\BiatecClammPool.algo.ts:1652","pc":[7430]},{"teal":8116,"source":"contracts\\BiatecClammPool.algo.ts:1652","pc":[7431,7432]},{"teal":8117,"source":"contracts\\BiatecClammPool.algo.ts:1652","pc":[7433]},{"teal":8118,"source":"contracts\\BiatecClammPool.algo.ts:1652","pc":[7434]},{"teal":8123,"source":"contracts\\BiatecClammPool.algo.ts:1655","pc":[7435,7436]},{"teal":8124,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[7437]},{"teal":8129,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7438,7439]},{"teal":8132,"source":"contracts\\BiatecClammPool.algo.ts:1675","pc":[7440,7441,7442]},{"teal":8133,"source":"contracts\\BiatecClammPool.algo.ts:1675","pc":[7443]},{"teal":8134,"source":"contracts\\BiatecClammPool.algo.ts:1675","pc":[7444]},{"teal":8135,"source":"contracts\\BiatecClammPool.algo.ts:1675","pc":[7445]},{"teal":8136,"source":"contracts\\BiatecClammPool.algo.ts:1675","pc":[7446]},{"teal":8139,"source":"contracts\\BiatecClammPool.algo.ts:1675","errorMessage":"argument 0 (assetBBalance) for calculateAssetADepositOnAssetBDeposit must be a uint256","pc":[7447]},{"teal":8142,"source":"contracts\\BiatecClammPool.algo.ts:1674","pc":[7448,7449,7450]},{"teal":8143,"source":"contracts\\BiatecClammPool.algo.ts:1674","pc":[7451]},{"teal":8144,"source":"contracts\\BiatecClammPool.algo.ts:1674","pc":[7452]},{"teal":8145,"source":"contracts\\BiatecClammPool.algo.ts:1674","pc":[7453]},{"teal":8146,"source":"contracts\\BiatecClammPool.algo.ts:1674","pc":[7454]},{"teal":8149,"source":"contracts\\BiatecClammPool.algo.ts:1674","errorMessage":"argument 1 (assetABalance) for calculateAssetADepositOnAssetBDeposit must be a uint256","pc":[7455]},{"teal":8152,"source":"contracts\\BiatecClammPool.algo.ts:1673","pc":[7456,7457,7458]},{"teal":8153,"source":"contracts\\BiatecClammPool.algo.ts:1673","pc":[7459]},{"teal":8154,"source":"contracts\\BiatecClammPool.algo.ts:1673","pc":[7460]},{"teal":8155,"source":"contracts\\BiatecClammPool.algo.ts:1673","pc":[7461]},{"teal":8156,"source":"contracts\\BiatecClammPool.algo.ts:1673","pc":[7462]},{"teal":8159,"source":"contracts\\BiatecClammPool.algo.ts:1673","errorMessage":"argument 2 (inAmountB) for calculateAssetADepositOnAssetBDeposit must be a uint256","pc":[7463]},{"teal":8162,"source":"contracts\\BiatecClammPool.algo.ts:1672","pc":[7464,7465,7466]},{"teal":8163,"source":"contracts\\BiatecClammPool.algo.ts:1672","pc":[7467]},{"teal":8164,"source":"contracts\\BiatecClammPool.algo.ts:1672","pc":[7468]},{"teal":8165,"source":"contracts\\BiatecClammPool.algo.ts:1672","pc":[7469]},{"teal":8166,"source":"contracts\\BiatecClammPool.algo.ts:1672","pc":[7470]},{"teal":8169,"source":"contracts\\BiatecClammPool.algo.ts:1672","errorMessage":"argument 3 (inAmountA) for calculateAssetADepositOnAssetBDeposit must be a uint256","pc":[7471]},{"teal":8172,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7472,7473,7474]},{"teal":8173,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7475]},{"teal":8174,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7476]},{"teal":8175,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7477]},{"teal":8176,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7478]},{"teal":8179,"source":"contracts\\BiatecClammPool.algo.ts:1670","errorMessage":"calculateAssetADepositOnAssetBDeposit return value overflowed 256 bits","pc":[7479]},{"teal":8180,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7480]},{"teal":8181,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7481]},{"teal":8182,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7482]},{"teal":8183,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7483]},{"teal":8184,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7484]},{"teal":8185,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7485]},{"teal":8186,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7486]},{"teal":8187,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7487]},{"teal":8188,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7488]},{"teal":8189,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7489]},{"teal":8190,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7490]},{"teal":8191,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7491]},{"teal":8192,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7492]},{"teal":8207,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7493,7494,7495]},{"teal":8212,"source":"contracts\\BiatecClammPool.algo.ts:1677","pc":[7496,7497]},{"teal":8213,"source":"contracts\\BiatecClammPool.algo.ts:1677","pc":[7498,7499]},{"teal":8214,"source":"contracts\\BiatecClammPool.algo.ts:1677","pc":[7500]},{"teal":8215,"source":"contracts\\BiatecClammPool.algo.ts:1677","pc":[7501,7502,7503]},{"teal":8220,"source":"contracts\\BiatecClammPool.algo.ts:1678","pc":[7504,7505]},{"teal":8221,"source":"contracts\\BiatecClammPool.algo.ts:1678","pc":[7506,7507]},{"teal":8222,"source":"contracts\\BiatecClammPool.algo.ts:1678","pc":[7508]},{"teal":8223,"source":"contracts\\BiatecClammPool.algo.ts:1678","pc":[7509,7510]},{"teal":8224,"source":"contracts\\BiatecClammPool.algo.ts:1678","pc":[7511]},{"teal":8225,"source":"contracts\\BiatecClammPool.algo.ts:1678","pc":[7512]},{"teal":8230,"source":"contracts\\BiatecClammPool.algo.ts:1681","pc":[7513,7514]},{"teal":8231,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[7515]},{"teal":8236,"source":"contracts\\BiatecClammPool.algo.ts:1684","pc":[7516,7517]},{"teal":8239,"source":"contracts\\BiatecClammPool.algo.ts:1685","pc":[7518,7519,7520]},{"teal":8240,"source":"contracts\\BiatecClammPool.algo.ts:1685","pc":[7521]},{"teal":8243,"source":"contracts\\BiatecClammPool.algo.ts:1685","pc":[7522,7523,7524]},{"teal":8244,"source":"contracts\\BiatecClammPool.algo.ts:1685","pc":[7525]},{"teal":8247,"source":"contracts\\BiatecClammPool.algo.ts:1685","pc":[7526,7527,7528]},{"teal":8248,"source":"contracts\\BiatecClammPool.algo.ts:1685","pc":[7529]},{"teal":8251,"source":"contracts\\BiatecClammPool.algo.ts:1685","pc":[7530,7531,7532]},{"teal":8252,"source":"contracts\\BiatecClammPool.algo.ts:1685","pc":[7533]},{"teal":8255,"source":"contracts\\BiatecClammPool.algo.ts:1684","pc":[7534,7535,7536]},{"teal":8256,"source":"contracts\\BiatecClammPool.algo.ts:1684","pc":[7537]},{"teal":8257,"source":"contracts\\BiatecClammPool.algo.ts:1684","pc":[7538]},{"teal":8258,"source":"contracts\\BiatecClammPool.algo.ts:1684","pc":[7539]},{"teal":8259,"source":"contracts\\BiatecClammPool.algo.ts:1684","pc":[7540]},{"teal":8263,"source":"contracts\\BiatecClammPool.algo.ts:1684","pc":[7541,7542,7543]},{"teal":8266,"source":"contracts\\BiatecClammPool.algo.ts:1684","pc":[7544]},{"teal":8267,"source":"contracts\\BiatecClammPool.algo.ts:1684","pc":[7545,7546]},{"teal":8274,"source":"contracts\\BiatecClammPool.algo.ts:1687","pc":[7547,7548]},{"teal":8275,"source":"contracts\\BiatecClammPool.algo.ts:1687","pc":[7549,7550]},{"teal":8276,"source":"contracts\\BiatecClammPool.algo.ts:1687","pc":[7551]},{"teal":8277,"source":"contracts\\BiatecClammPool.algo.ts:1687","pc":[7552]},{"teal":8280,"source":"contracts\\BiatecClammPool.algo.ts:1686","errorMessage":"E_CONFIG","pc":[7553]},{"teal":8284,"source":"contracts\\BiatecClammPool.algo.ts:1690","pc":[7554,7555]},{"teal":8285,"source":"contracts\\BiatecClammPool.algo.ts:1690","pc":[7556,7557]},{"teal":8286,"source":"contracts\\BiatecClammPool.algo.ts:1690","pc":[7558]},{"teal":8287,"source":"contracts\\BiatecClammPool.algo.ts:1690","pc":[7559]},{"teal":8288,"source":"contracts\\BiatecClammPool.algo.ts:1690","pc":[7560]},{"teal":8292,"source":"contracts\\BiatecClammPool.algo.ts:1691","pc":[7561,7562]},{"teal":8293,"source":"contracts\\BiatecClammPool.algo.ts:1691","pc":[7563,7564]},{"teal":8294,"source":"contracts\\BiatecClammPool.algo.ts:1691","pc":[7565]},{"teal":8295,"source":"contracts\\BiatecClammPool.algo.ts:1691","pc":[7566]},{"teal":8296,"source":"contracts\\BiatecClammPool.algo.ts:1691","pc":[7567]},{"teal":8300,"source":"contracts\\BiatecClammPool.algo.ts:1692","pc":[7568,7569]},{"teal":8301,"source":"contracts\\BiatecClammPool.algo.ts:1692","pc":[7570]},{"teal":8302,"source":"contracts\\BiatecClammPool.algo.ts:1692","pc":[7571,7572]},{"teal":8303,"source":"contracts\\BiatecClammPool.algo.ts:1692","pc":[7573]},{"teal":8306,"source":"contracts\\BiatecClammPool.algo.ts:1692","errorMessage":"E_LP","pc":[7574]},{"teal":8310,"source":"contracts\\BiatecClammPool.algo.ts:1693","pc":[7575,7576]},{"teal":8311,"source":"contracts\\BiatecClammPool.algo.ts:1693","pc":[7577]},{"teal":8312,"source":"contracts\\BiatecClammPool.algo.ts:1693","pc":[7578,7579]},{"teal":8313,"source":"contracts\\BiatecClammPool.algo.ts:1693","pc":[7580]},{"teal":8316,"source":"contracts\\BiatecClammPool.algo.ts:1693","errorMessage":"global state value does not exist: this.appBiatecConfigProvider.value.globalState('f')","pc":[7581]},{"teal":8317,"source":"contracts\\BiatecClammPool.algo.ts:1693","pc":[7582,7583]},{"teal":8324,"source":"contracts\\BiatecClammPool.algo.ts:1695","pc":[7584,7585]},{"teal":8325,"source":"contracts\\BiatecClammPool.algo.ts:1695","pc":[7586]},{"teal":8326,"source":"contracts\\BiatecClammPool.algo.ts:1695","pc":[7587]},{"teal":8327,"source":"contracts\\BiatecClammPool.algo.ts:1695","pc":[7588,7589,7590]},{"teal":8328,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[7591,7592]},{"teal":8329,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[7593,7594]},{"teal":8330,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[7595]},{"teal":8331,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[7596,7597]},{"teal":8332,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[7598,7599]},{"teal":8333,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[7600]},{"teal":8334,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[7601]},{"teal":8335,"source":"contracts\\BiatecClammPool.algo.ts:1695","pc":[7602,7603,7604]},{"teal":8338,"source":"contracts\\BiatecClammPool.algo.ts:1697","pc":[7605,7606]},{"teal":8339,"source":"contracts\\BiatecClammPool.algo.ts:1697","pc":[7607,7608]},{"teal":8340,"source":"contracts\\BiatecClammPool.algo.ts:1697","pc":[7609,7610]},{"teal":8341,"source":"contracts\\BiatecClammPool.algo.ts:1697","pc":[7611]},{"teal":8344,"source":"contracts\\BiatecClammPool.algo.ts:1694","pc":[7612,7613]},{"teal":8351,"source":"contracts\\BiatecClammPool.algo.ts:1699","pc":[7614,7615]},{"teal":8352,"source":"contracts\\BiatecClammPool.algo.ts:1699","pc":[7616]},{"teal":8353,"source":"contracts\\BiatecClammPool.algo.ts:1699","pc":[7617]},{"teal":8354,"source":"contracts\\BiatecClammPool.algo.ts:1699","pc":[7618,7619,7620]},{"teal":8355,"source":"contracts\\BiatecClammPool.algo.ts:1700","pc":[7621,7622]},{"teal":8356,"source":"contracts\\BiatecClammPool.algo.ts:1700","pc":[7623,7624]},{"teal":8357,"source":"contracts\\BiatecClammPool.algo.ts:1700","pc":[7625]},{"teal":8358,"source":"contracts\\BiatecClammPool.algo.ts:1700","pc":[7626,7627]},{"teal":8359,"source":"contracts\\BiatecClammPool.algo.ts:1700","pc":[7628,7629]},{"teal":8360,"source":"contracts\\BiatecClammPool.algo.ts:1700","pc":[7630]},{"teal":8361,"source":"contracts\\BiatecClammPool.algo.ts:1700","pc":[7631]},{"teal":8362,"source":"contracts\\BiatecClammPool.algo.ts:1699","pc":[7632,7633,7634]},{"teal":8365,"source":"contracts\\BiatecClammPool.algo.ts:1701","pc":[7635,7636]},{"teal":8366,"source":"contracts\\BiatecClammPool.algo.ts:1701","pc":[7637,7638]},{"teal":8367,"source":"contracts\\BiatecClammPool.algo.ts:1701","pc":[7639,7640]},{"teal":8368,"source":"contracts\\BiatecClammPool.algo.ts:1701","pc":[7641]},{"teal":8371,"source":"contracts\\BiatecClammPool.algo.ts:1698","pc":[7642,7643]},{"teal":8394,"source":"contracts\\BiatecClammPool.algo.ts:1719","pc":[7644,7645]},{"teal":8395,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[7646]},{"teal":8396,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[7647]},{"teal":8397,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[7648]},{"teal":8398,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[7649]},{"teal":8399,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[7650,7651]},{"teal":8400,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[7652]},{"teal":8403,"source":"contracts\\BiatecClammPool.algo.ts:1706","errorMessage":"this.assetABalance.value as uint64 overflowed 64 bits","pc":[7653]},{"teal":8404,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[7654,7655,7656]},{"teal":8405,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[7657]},{"teal":8406,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[7658]},{"teal":8407,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[7659]},{"teal":8408,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[7660,7661]},{"teal":8409,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[7662]},{"teal":8410,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[7663]},{"teal":8411,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[7664]},{"teal":8412,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[7665,7666]},{"teal":8413,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[7667]},{"teal":8416,"source":"contracts\\BiatecClammPool.algo.ts:1707","errorMessage":"this.assetBBalance.value as uint64 overflowed 64 bits","pc":[7668]},{"teal":8417,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[7669,7670,7671]},{"teal":8418,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[7672]},{"teal":8419,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[7673]},{"teal":8420,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[7674]},{"teal":8421,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[7675,7676]},{"teal":8422,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[7677]},{"teal":8423,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[7678]},{"teal":8424,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[7679,7680]},{"teal":8425,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[7681]},{"teal":8426,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[7682]},{"teal":8427,"source":"contracts\\BiatecClammPool.algo.ts:1717","pc":[7683,7684]},{"teal":8428,"source":"contracts\\BiatecClammPool.algo.ts:1717","pc":[7685]},{"teal":8429,"source":"contracts\\BiatecClammPool.algo.ts:1717","pc":[7686]},{"teal":8430,"source":"contracts\\BiatecClammPool.algo.ts:1717","pc":[7687]},{"teal":8431,"source":"contracts\\BiatecClammPool.algo.ts:1717","pc":[7688,7689]},{"teal":8432,"source":"contracts\\BiatecClammPool.algo.ts:1717","pc":[7690]},{"teal":8435,"source":"contracts\\BiatecClammPool.algo.ts:1717","errorMessage":"this.priceMinSqrt.value as uint64 overflowed 64 bits","pc":[7691]},{"teal":8436,"source":"contracts\\BiatecClammPool.algo.ts:1717","pc":[7692,7693,7694]},{"teal":8437,"source":"contracts\\BiatecClammPool.algo.ts:1717","pc":[7695]},{"teal":8438,"source":"contracts\\BiatecClammPool.algo.ts:1717","pc":[7696]},{"teal":8439,"source":"contracts\\BiatecClammPool.algo.ts:1717","pc":[7697]},{"teal":8440,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[7698,7699]},{"teal":8441,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[7700]},{"teal":8442,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[7701]},{"teal":8443,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[7702]},{"teal":8444,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[7703,7704]},{"teal":8445,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[7705]},{"teal":8448,"source":"contracts\\BiatecClammPool.algo.ts:1716","errorMessage":"this.priceMaxSqrt.value as uint64 overflowed 64 bits","pc":[7706]},{"teal":8449,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[7707,7708,7709]},{"teal":8450,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[7710]},{"teal":8451,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[7711]},{"teal":8452,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[7712]},{"teal":8453,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[7713,7714]},{"teal":8454,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[7715]},{"teal":8455,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[7716]},{"teal":8456,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[7717]},{"teal":8457,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[7718,7719]},{"teal":8458,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[7720]},{"teal":8461,"source":"contracts\\BiatecClammPool.algo.ts:1712","errorMessage":"this.Liqudity.value as uint64 overflowed 64 bits","pc":[7721]},{"teal":8462,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[7722,7723,7724]},{"teal":8463,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[7725]},{"teal":8464,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[7726]},{"teal":8465,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[7727]},{"teal":8466,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7728,7729]},{"teal":8467,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7730,7731]},{"teal":8468,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7732,7733,7734]},{"teal":8469,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7735]},{"teal":8470,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7736]},{"teal":8471,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7737,7738]},{"teal":8472,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7739]},{"teal":8475,"source":"contracts\\BiatecClammPool.algo.ts:1718","errorMessage":"this.calculateDistributedLiquidity(assetLp, <uint256>0) as uint64 overflowed 64 bits","pc":[7740]},{"teal":8476,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7741,7742]},{"teal":8477,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7743]},{"teal":8478,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7744]},{"teal":8479,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7745]},{"teal":8480,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7746]},{"teal":8481,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7747,7748]},{"teal":8482,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7749]},{"teal":8483,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7750]},{"teal":8484,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7751]},{"teal":8485,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7752]},{"teal":8486,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7753]},{"teal":8487,"source":"contracts\\BiatecClammPool.algo.ts:1718","pc":[7754]},{"teal":8488,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[7755,7756]},{"teal":8489,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[7757]},{"teal":8490,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[7758]},{"teal":8491,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[7759]},{"teal":8492,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[7760,7761]},{"teal":8493,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[7762]},{"teal":8496,"source":"contracts\\BiatecClammPool.algo.ts:1714","errorMessage":"this.LiqudityUsersFromFees.value as uint64 overflowed 64 bits","pc":[7763]},{"teal":8497,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[7764,7765,7766]},{"teal":8498,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[7767]},{"teal":8499,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[7768]},{"teal":8500,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[7769]},{"teal":8501,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[7770,7771]},{"teal":8502,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[7772]},{"teal":8503,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[7773]},{"teal":8504,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[7774]},{"teal":8505,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[7775,7776]},{"teal":8506,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[7777]},{"teal":8509,"source":"contracts\\BiatecClammPool.algo.ts:1713","errorMessage":"this.LiqudityBiatecFromFees.value as uint64 overflowed 64 bits","pc":[7778]},{"teal":8510,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[7779,7780,7781]},{"teal":8511,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[7782]},{"teal":8512,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[7783]},{"teal":8513,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[7784]},{"teal":8514,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[7785,7786]},{"teal":8515,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[7787]},{"teal":8516,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[7788]},{"teal":8517,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[7789]},{"teal":8518,"source":"contracts\\BiatecClammPool.algo.ts:1704","pc":[7790,7791]},{"teal":8519,"source":"contracts\\BiatecClammPool.algo.ts:1704","pc":[7792]},{"teal":8520,"source":"contracts\\BiatecClammPool.algo.ts:1704","pc":[7793]},{"teal":8521,"source":"contracts\\BiatecClammPool.algo.ts:1704","pc":[7794]},{"teal":8522,"source":"contracts\\BiatecClammPool.algo.ts:1705","pc":[7795,7796]},{"teal":8523,"source":"contracts\\BiatecClammPool.algo.ts:1705","pc":[7797]},{"teal":8524,"source":"contracts\\BiatecClammPool.algo.ts:1705","pc":[7798]},{"teal":8525,"source":"contracts\\BiatecClammPool.algo.ts:1705","pc":[7799]},{"teal":8526,"source":"contracts\\BiatecClammPool.algo.ts:1715","pc":[7800,7801]},{"teal":8527,"source":"contracts\\BiatecClammPool.algo.ts:1715","pc":[7802]},{"teal":8528,"source":"contracts\\BiatecClammPool.algo.ts:1715","pc":[7803]},{"teal":8529,"source":"contracts\\BiatecClammPool.algo.ts:1715","pc":[7804]},{"teal":8530,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[7805,7806]},{"teal":8531,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[7807]},{"teal":8532,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[7808]},{"teal":8533,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[7809]},{"teal":8534,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[7810,7811]},{"teal":8535,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[7812]},{"teal":8536,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[7813]},{"teal":8537,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[7814,7815]},{"teal":8538,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[7816]},{"teal":8541,"source":"contracts\\BiatecClammPool.algo.ts:1711","errorMessage":"biatecFee as uint64 overflowed 64 bits","pc":[7817]},{"teal":8542,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[7818,7819,7820]},{"teal":8543,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[7821]},{"teal":8544,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[7822]},{"teal":8545,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[7823]},{"teal":8546,"source":"contracts\\BiatecClammPool.algo.ts:1720","pc":[7824,7825]},{"teal":8547,"source":"contracts\\BiatecClammPool.algo.ts:1720","pc":[7826]},{"teal":8548,"source":"contracts\\BiatecClammPool.algo.ts:1720","pc":[7827]},{"teal":8549,"source":"contracts\\BiatecClammPool.algo.ts:1720","pc":[7828]},{"teal":8552,"source":"contracts\\BiatecClammPool.algo.ts:1684","pc":[7829,7830]},{"teal":8555,"source":"contracts\\BiatecClammPool.algo.ts:1684","pc":[7831,7832]},{"teal":8556,"source":"contracts\\BiatecClammPool.algo.ts:1684","pc":[7833]},{"teal":8559,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7834,7835,7836,7837,7838,7839]},{"teal":8560,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7840,7841,7842]},{"teal":8561,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7843,7844,7845,7846]},{"teal":8564,"source":"contracts\\BiatecClammPool.algo.ts:36","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[7847]},{"teal":8567,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7848,7849,7850,7851,7852,7853]},{"teal":8568,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7854,7855,7856,7857,7858,7859]},{"teal":8569,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7860,7861,7862,7863,7864,7865]},{"teal":8570,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7866,7867,7868,7869,7870,7871]},{"teal":8571,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7872,7873,7874,7875,7876,7877]},{"teal":8572,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7878,7879,7880,7881,7882,7883]},{"teal":8573,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7884,7885,7886,7887,7888,7889]},{"teal":8574,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7890,7891,7892,7893,7894,7895]},{"teal":8575,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7896,7897,7898,7899,7900,7901]},{"teal":8576,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7902,7903,7904,7905,7906,7907]},{"teal":8577,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7908,7909,7910,7911,7912,7913]},{"teal":8578,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7914,7915,7916,7917,7918,7919]},{"teal":8579,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7920,7921,7922,7923,7924,7925]},{"teal":8580,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7926,7927,7928,7929,7930,7931]},{"teal":8581,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7932,7933,7934,7935,7936,7937]},{"teal":8582,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7938,7939,7940,7941,7942,7943]},{"teal":8583,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7944,7945,7946,7947,7948,7949]},{"teal":8584,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7950,7951,7952,7953,7954,7955]},{"teal":8585,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7956,7957,7958,7959,7960,7961]},{"teal":8586,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7962,7963,7964,7965,7966,7967]},{"teal":8587,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7968,7969,7970,7971,7972,7973]},{"teal":8588,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7974,7975,7976,7977,7978,7979]},{"teal":8589,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7980,7981,7982,7983,7984,7985]},{"teal":8590,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7986,7987,7988]},{"teal":8591,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7989,7990,7991,7992,7993,7994,7995,7996,7997,7998,7999,8000,8001,8002,8003,8004,8005,8006,8007,8008,8009,8010,8011,8012,8013,8014,8015,8016,8017,8018,8019,8020,8021,8022,8023,8024,8025,8026,8027,8028,8029,8030,8031,8032,8033,8034,8035,8036]},{"teal":8594,"source":"contracts\\BiatecClammPool.algo.ts:36","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[8037]},{"teal":8597,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[8038,8039,8040,8041,8042,8043]},{"teal":8598,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[8044,8045,8046]},{"teal":8599,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[8047,8048,8049,8050]},{"teal":8602,"source":"contracts\\BiatecClammPool.algo.ts:36","errorMessage":"this contract does not implement the given ABI method for call UpdateApplication","pc":[8051]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":1,"patch":2,"commitHash":"088f89dd+"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


// Type definitions for ARC-56 structs

export type AmmStatus = {
  scale: bigint,
  assetABalance: bigint,
  assetBBalance: bigint,
  realABalance: bigint,
  realBBalance: bigint,
  priceMinSqrt: bigint,
  priceMaxSqrt: bigint,
  currentLiqudity: bigint,
  releasedLiqudity: bigint,
  liqudityUsersFromFees: bigint,
  liqudityBiatecFromFees: bigint,
  assetA: bigint,
  assetB: bigint,
  poolToken: bigint,
  price: bigint,
  fee: bigint,
  biatecFee: bigint,
  verificationClass: bigint
}


/**
 * Converts the ABI tuple representation of a AmmStatus to the struct representation
 */
export function AmmStatusFromTuple(abiTuple: [bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint]) {
  return getABIStructFromABITuple(abiTuple, APP_SPEC.structs.AmmStatus, APP_SPEC.structs) as AmmStatus
}

/**
 * The argument types for the BiatecClammPool contract
 */
export type BiatecClammPoolArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'updateApplication(uint64,byte[])void': {
      appBiatecConfigProvider: bigint | number
      newVersion: Uint8Array
    }
    'getCurrentPrice()uint64': Record<string, never>
    'getPriceDivider()uint64': Record<string, never>
    'getLPTokenId()uint64': Record<string, never>
    'bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64': {
      /**
       * Asset A ID must be lower then Asset B ID
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      /**
       * Biatec amm provider
       */
      appBiatecConfigProvider: bigint | number
      /**
       * Pool provider
       */
      appBiatecPoolProvider: bigint | number
      /**
       * Seed transaction so that smart contract can opt in to the assets
       */
      txSeed: AppMethodCallTransactionArgument
      /**
       * Fee in base level (9 decimals). value 1_000_000_000 = 1 = 100%. 10_000_000 = 1%. 1_000_000 = 0.1%
       */
      fee: bigint | number
      /**
       * Min price range. At this point all assets are in asset A.
       */
      priceMin: bigint | number
      /**
       * Max price range. At this point all assets are in asset B.
       */
      priceMax: bigint | number
      /**
       * Deployer can specify the current price for easier deployemnt.
       */
      currentPrice: bigint | number
      /**
       * Minimum verification level from the biatec identity. Level 0 means no kyc.
       */
      verificationClass: bigint | number
    }
    'bootstrapStep2()void': Record<string, never>
    'addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64': {
      /**
       * Configuration reference
       */
      appBiatecConfigProvider: bigint | number
      /**
       * Identity service reference
       */
      appBiatecIdentityProvider: bigint | number
      /**
       * Transfer of asset A to the LP pool
       */
      txAssetADeposit?: AppMethodCallTransactionArgument
      /**
       * Transfer of asset B to the LP pool
       */
      txAssetBDeposit: AppMethodCallTransactionArgument
      /**
       * Asset A
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      /**
       * Liquidity pool asset
       */
      assetLp: bigint | number
    }
    'removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256': {
      /**
       * Configuration reference
       */
      appBiatecConfigProvider: bigint | number
      /**
       * Identity service reference
       */
      appBiatecIdentityProvider: bigint | number
      /**
       * Transfer of the LP token
       */
      txLpXfer: AppMethodCallTransactionArgument
      /**
       * Asset A
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      /**
       * LP pool asset
       */
      assetLp: bigint | number
    }
    'removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256': {
      /**
       * Biatec config app. Only addressExecutiveFee is allowed to execute this method.
       */
      appBiatecConfigProvider: bigint | number
      /**
       * Asset A
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      assetLp: bigint | number
      /**
       * Amount to withdraw. If zero, removes all available lps from fees.
       */
      amount: bigint | number
    }
    'swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256': {
      appBiatecConfigProvider: bigint | number
      appBiatecIdentityProvider: bigint | number
      appBiatecPoolProvider: bigint | number
      /**
       * Transfer of the token to be deposited to the pool. To the owner the other asset will be sent.
       */
      txSwap: AppMethodCallTransactionArgument
      /**
       * Asset A
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      /**
       * If number greater then zero, the check is performed for the output of the other asset
       */
      minimumToReceive: bigint | number
    }
    'distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256': {
      /**
       * Biatec config app. Only addressExecutiveFee is allowed to execute this method.
       */
      appBiatecConfigProvider: bigint | number
      /**
       * Asset A
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      /**
       * Amount of asset A to be deposited to the liquidity. In base decimals (9)
       */
      amountA: bigint | number
      /**
       * Amount of asset B to be deposited to the liquidity. In base decimals (9)
       */
      amountB: bigint | number
    }
    'withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64': {
      /**
       * Biatec config app. Only addressExecutiveFee is allowed to execute this method.
       */
      appBiatecConfigProvider: bigint | number
      /**
       * Asset A
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      /**
       * Amount of asset A to be deposited to the liquidity. In asset a decimals
       */
      amountA: bigint | number
      /**
       * Amount of asset B to be deposited to the liquidity. In asset b decimals
       */
      amountB: bigint | number
    }
    'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void': {
      appBiatecConfigProvider: bigint | number
      votePk: Uint8Array
      selectionPk: Uint8Array
      stateProofPk: Uint8Array
      voteFirst: bigint | number
      voteLast: bigint | number
      voteKeyDilution: bigint | number
    }
    'calculateDistributedLiquidity(uint64,uint256)uint256': {
      assetLp: bigint | number
      currentDeposit: bigint | number
    }
    'calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256': {
      x: bigint | number
      y: bigint | number
      price: bigint | number
    }
    'calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256': {
      /**
       * Asset A position balanced on the curve
       */
      x: bigint | number
      /**
       * Asset B position balanced on the curve
       */
      y: bigint | number
      /**
       * Minimum price variable in base scale decimals (pa)
       */
      priceMin: bigint | number
      /**
       * Maximum price variable in base scale decimals (pb)
       */
      priceMax: bigint | number
      /**
       * sqrt(priceMin) in base scale decimals Variable pas
       */
      priceMinSqrt: bigint | number
      /**
       * sqrt(priceMax) in base scale decimals Variable pbs
       */
      priceMaxSqrt: bigint | number
    }
    'calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256': {
      /**
       * Asset A position balanced on the curve
       */
      x: bigint | number
      /**
       * Asset B position balanced on the curve
       */
      y: bigint | number
      /**
       * sqrt(priceMin) in base scale decimals Variable pas
       */
      priceMinSqrt: bigint | number
      /**
       * sqrt(priceMax) in base scale decimals Variable pbs
       */
      priceMaxSqrt: bigint | number
      dSqrt: bigint | number
    }
    'calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256': {
      /**
       * x
       */
      assetAQuantity: bigint | number
      /**
       * y
       */
      assetBQuantity: bigint | number
      /**
       * sqrt(priceMin)
       */
      priceMinSqrt: bigint | number
      /**
       * sqrt(priceMax)
       */
      priceMaxSqrt: bigint | number
      /**
       * Current pool liquidity - L variable
       */
      liquidity: bigint | number
    }
    'calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256': {
      /**
       * Asset A amount in Base decimal representation.. If asset has 6 decimals, 1 is represented as 1000000000
       */
      inAmount: bigint | number
      /**
       * Asset A balance. Variable ab, in base scale
       */
      assetABalance: bigint | number
      /**
       * Asset B balance. Variable bb, in base scale
       */
      assetBBalance: bigint | number
      /**
       * sqrt(Min price). Variable pMinS, in base scale
       */
      priceMinSqrt: bigint | number
      /**
       * sqrt(Max price). Variable pMaxS, in base scale
       */
      priceMaxSqrt: bigint | number
      /**
       * sqrt(Max price). Variable L, in base scale
       */
      liqudity: bigint | number
    }
    'calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256': {
      /**
       * Asset B amount in Base decimal representation.. If asset has 6 decimals, 1 is represented as 1000000000
       */
      inAmount: bigint | number
      /**
       * Asset A balance. Variable ab, in base scale
       */
      assetABalance: bigint | number
      /**
       * Asset B balance. Variable bb, in base scale
       */
      assetBBalance: bigint | number
      /**
       * sqrt(Min price). Variable pMinS, in base scale
       */
      priceMinSqrt: bigint | number
      /**
       * sqrt(Max price). Variable pMaxS, in base scale
       */
      priceMaxSqrt: bigint | number
      /**
       * sqrt(Max price). Variable L, in base scale
       */
      liqudity: bigint | number
    }
    'calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256': {
      /**
       * LP Asset amount in Base decimal representation..
       */
      inAmount: bigint | number
      /**
       * Asset A balance. Variable ab, in base scale
       */
      assetABalance: bigint | number
      /**
       * Current liqudity. Variable L, in base scale
       */
      liqudity: bigint | number
    }
    'calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256': {
      /**
       * Asset A amount in Base decimal representation
       */
      inAmountA: bigint | number
      /**
       * Asset B amount in Base decimal representation
       */
      inAmountB: bigint | number
      /**
       * Asset A balance. Variable ab, in base scale
       */
      assetABalance: bigint | number
      /**
       * Asset B balance. Variable bb, in base scale
       */
      assetBBalance: bigint | number
    }
    'calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256': {
      /**
       * Asset A amount in Base decimal representation
       */
      inAmountA: bigint | number
      /**
       * Asset B amount in Base decimal representation
       */
      inAmountB: bigint | number
      /**
       * Asset A balance. Variable ab, in base scale
       */
      assetABalance: bigint | number
      /**
       * Asset B balance. Variable bb, in base scale
       */
      assetBBalance: bigint | number
    }
    'status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)': {
      appBiatecConfigProvider: bigint | number
      assetA: bigint | number
      assetB: bigint | number
      assetLp: bigint | number
    }
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'updateApplication(uint64,byte[])void': [appBiatecConfigProvider: bigint | number, newVersion: Uint8Array]
    'getCurrentPrice()uint64': []
    'getPriceDivider()uint64': []
    'getLPTokenId()uint64': []
    'bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64': [assetA: bigint | number, assetB: bigint | number, appBiatecConfigProvider: bigint | number, appBiatecPoolProvider: bigint | number, txSeed: AppMethodCallTransactionArgument, fee: bigint | number, priceMin: bigint | number, priceMax: bigint | number, currentPrice: bigint | number, verificationClass: bigint | number]
    'bootstrapStep2()void': []
    'addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64': [appBiatecConfigProvider: bigint | number, appBiatecIdentityProvider: bigint | number, txAssetADeposit: AppMethodCallTransactionArgument | undefined, txAssetBDeposit: AppMethodCallTransactionArgument, assetA: bigint | number, assetB: bigint | number, assetLp: bigint | number]
    'removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256': [appBiatecConfigProvider: bigint | number, appBiatecIdentityProvider: bigint | number, txLpXfer: AppMethodCallTransactionArgument, assetA: bigint | number, assetB: bigint | number, assetLp: bigint | number]
    'removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256': [appBiatecConfigProvider: bigint | number, assetA: bigint | number, assetB: bigint | number, assetLp: bigint | number, amount: bigint | number]
    'swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256': [appBiatecConfigProvider: bigint | number, appBiatecIdentityProvider: bigint | number, appBiatecPoolProvider: bigint | number, txSwap: AppMethodCallTransactionArgument, assetA: bigint | number, assetB: bigint | number, minimumToReceive: bigint | number]
    'distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256': [appBiatecConfigProvider: bigint | number, assetA: bigint | number, assetB: bigint | number, amountA: bigint | number, amountB: bigint | number]
    'withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64': [appBiatecConfigProvider: bigint | number, assetA: bigint | number, assetB: bigint | number, amountA: bigint | number, amountB: bigint | number]
    'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void': [appBiatecConfigProvider: bigint | number, votePk: Uint8Array, selectionPk: Uint8Array, stateProofPk: Uint8Array, voteFirst: bigint | number, voteLast: bigint | number, voteKeyDilution: bigint | number]
    'calculateDistributedLiquidity(uint64,uint256)uint256': [assetLp: bigint | number, currentDeposit: bigint | number]
    'calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256': [x: bigint | number, y: bigint | number, price: bigint | number]
    'calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256': [x: bigint | number, y: bigint | number, priceMin: bigint | number, priceMax: bigint | number, priceMinSqrt: bigint | number, priceMaxSqrt: bigint | number]
    'calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256': [x: bigint | number, y: bigint | number, priceMinSqrt: bigint | number, priceMaxSqrt: bigint | number, dSqrt: bigint | number]
    'calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256': [assetAQuantity: bigint | number, assetBQuantity: bigint | number, priceMinSqrt: bigint | number, priceMaxSqrt: bigint | number, liquidity: bigint | number]
    'calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256': [inAmount: bigint | number, assetABalance: bigint | number, assetBBalance: bigint | number, priceMinSqrt: bigint | number, priceMaxSqrt: bigint | number, liqudity: bigint | number]
    'calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256': [inAmount: bigint | number, assetABalance: bigint | number, assetBBalance: bigint | number, priceMinSqrt: bigint | number, priceMaxSqrt: bigint | number, liqudity: bigint | number]
    'calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256': [inAmount: bigint | number, assetABalance: bigint | number, liqudity: bigint | number]
    'calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256': [inAmountA: bigint | number, inAmountB: bigint | number, assetABalance: bigint | number, assetBBalance: bigint | number]
    'calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256': [inAmountA: bigint | number, inAmountB: bigint | number, assetABalance: bigint | number, assetBBalance: bigint | number]
    'status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)': [appBiatecConfigProvider: bigint | number, assetA: bigint | number, assetB: bigint | number, assetLp: bigint | number]
  }
}

/**
 * The return type for each method
 */
export type BiatecClammPoolReturns = {
  'createApplication()void': void
  'updateApplication(uint64,byte[])void': void
  'getCurrentPrice()uint64': bigint
  'getPriceDivider()uint64': bigint
  'getLPTokenId()uint64': bigint
  'bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64': bigint
  'bootstrapStep2()void': void
  'addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64': bigint
  'removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256': bigint
  'removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256': bigint
  'swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256': bigint
  'distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256': bigint
  'withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64': bigint
  'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void': void
  'calculateDistributedLiquidity(uint64,uint256)uint256': bigint
  'calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256': bigint
  'calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256': bigint
  'calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256': bigint
  'calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256': bigint
  'calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256': bigint
  'calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256': bigint
  'calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256': bigint
  'calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256': bigint
  'calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256': bigint
  'status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)': AmmStatus
}

/**
 * Defines the types of available calls and state of the BiatecClammPool smart contract.
 */
export type BiatecClammPoolTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: BiatecClammPoolArgs['obj']['createApplication()void']
      argsTuple: BiatecClammPoolArgs['tuple']['createApplication()void']
      returns: BiatecClammPoolReturns['createApplication()void']
    }>
    & Record<'updateApplication(uint64,byte[])void' | 'updateApplication', {
      argsObj: BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void']
      argsTuple: BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']
      returns: BiatecClammPoolReturns['updateApplication(uint64,byte[])void']
    }>
    & Record<'getCurrentPrice()uint64' | 'getCurrentPrice', {
      argsObj: BiatecClammPoolArgs['obj']['getCurrentPrice()uint64']
      argsTuple: BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']
      returns: BiatecClammPoolReturns['getCurrentPrice()uint64']
    }>
    & Record<'getPriceDivider()uint64' | 'getPriceDivider', {
      argsObj: BiatecClammPoolArgs['obj']['getPriceDivider()uint64']
      argsTuple: BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']
      returns: BiatecClammPoolReturns['getPriceDivider()uint64']
    }>
    & Record<'getLPTokenId()uint64' | 'getLPTokenId', {
      argsObj: BiatecClammPoolArgs['obj']['getLPTokenId()uint64']
      argsTuple: BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']
      returns: BiatecClammPoolReturns['getLPTokenId()uint64']
    }>
    & Record<'bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64' | 'bootstrap', {
      argsObj: BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
      argsTuple: BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
      /**
       * LP token ID
       */
      returns: BiatecClammPoolReturns['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
    }>
    & Record<'bootstrapStep2()void' | 'bootstrapStep2', {
      argsObj: BiatecClammPoolArgs['obj']['bootstrapStep2()void']
      argsTuple: BiatecClammPoolArgs['tuple']['bootstrapStep2()void']
      returns: BiatecClammPoolReturns['bootstrapStep2()void']
    }>
    & Record<'addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64' | 'addLiquidity', {
      argsObj: BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']
      argsTuple: BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']
      /**
       * LP Token quantity distributed
       */
      returns: BiatecClammPoolReturns['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']
    }>
    & Record<'removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256' | 'removeLiquidity', {
      argsObj: BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']
      /**
       * LP position reduced
       */
      returns: BiatecClammPoolReturns['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']
    }>
    & Record<'removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256' | 'removeLiquidityAdmin', {
      argsObj: BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']
      /**
       * LP position reduced
       */
      returns: BiatecClammPoolReturns['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']
    }>
    & Record<'swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256' | 'swap', {
      argsObj: BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']
      returns: BiatecClammPoolReturns['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']
    }>
    & Record<'distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256' | 'distributeExcessAssets', {
      argsObj: BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']
      returns: BiatecClammPoolReturns['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']
    }>
    & Record<'withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64' | 'withdrawExcessAssets', {
      argsObj: BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']
      argsTuple: BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']
      returns: BiatecClammPoolReturns['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']
    }>
    & Record<'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void' | 'sendOnlineKeyRegistration', {
      argsObj: BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
      argsTuple: BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
      returns: BiatecClammPoolReturns['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']
    }>
    & Record<'calculateDistributedLiquidity(uint64,uint256)uint256' | 'calculateDistributedLiquidity', {
      argsObj: BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']
      returns: BiatecClammPoolReturns['calculateDistributedLiquidity(uint64,uint256)uint256']
    }>
    & Record<'calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256' | 'calculateLiquidityFlatPrice', {
      argsObj: BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']
      returns: BiatecClammPoolReturns['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256' | 'calculateLiquidityD', {
      argsObj: BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
      /**
       * Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
       */
      returns: BiatecClammPoolReturns['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256' | 'calculateLiquidityWithD', {
      argsObj: BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']
      /**
       * Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
       */
      returns: BiatecClammPoolReturns['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256' | 'calculatePrice', {
      argsObj: BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']
      /**
       * the price with specified quantity with the price range set in the contract
       */
      returns: BiatecClammPoolReturns['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256' | 'calculateAssetBWithdrawOnAssetADeposit', {
      argsObj: BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
      /**
       * Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
       */
      returns: BiatecClammPoolReturns['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256' | 'calculateAssetAWithdrawOnAssetBDeposit', {
      argsObj: BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
      /**
       * Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
       */
      returns: BiatecClammPoolReturns['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256' | 'calculateAssetAWithdrawOnLpDeposit', {
      argsObj: BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']
      /**
       * Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
       */
      returns: BiatecClammPoolReturns['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256' | 'calculateAssetBDepositOnAssetADeposit', {
      argsObj: BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']
      /**
       * Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
       */
      returns: BiatecClammPoolReturns['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256' | 'calculateAssetADepositOnAssetBDeposit', {
      argsObj: BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']
      /**
       * Amount of asset A to be deposited. The result is in Base decimals (9)
       */
      returns: BiatecClammPoolReturns['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)' | 'status', {
      argsObj: BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
      argsTuple: BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
      returns: BiatecClammPoolReturns['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        setupFinished: boolean
        assetA: bigint
        assetADecimals: bigint
        assetB: bigint
        assetBDecimals: bigint
        assetLp: bigint
        assetABalance: bigint
        assetBBalance: bigint
        priceMin: bigint
        priceMax: bigint
        priceMinSqrt: bigint
        priceMaxSqrt: bigint
        liqudity: bigint
        liqudityUsersFromFees: bigint
        liqudityBiatecFromFees: bigint
        fee: bigint
        currentPrice: bigint
        scale: bigint
        appBiatecConfigProvider: bigint
        verificationClass: bigint
        version: BinaryState
      }
      maps: {}
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type BiatecClammPoolSignatures = keyof BiatecClammPoolTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type BiatecClammPoolNonVoidMethodSignatures = keyof BiatecClammPoolTypes['methods'] extends infer T ? T extends keyof BiatecClammPoolTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the BiatecClammPool smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends BiatecClammPoolSignatures> = BiatecClammPoolTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the BiatecClammPool smart contract to the method's return type
 */
export type MethodReturn<TSignature extends BiatecClammPoolSignatures> = BiatecClammPoolTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = BiatecClammPoolTypes['state']['global']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type BiatecClammPoolCreateCallParams =
  | Expand<CallParams<BiatecClammPoolArgs['obj']['createApplication()void'] | BiatecClammPoolArgs['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<BiatecClammPoolArgs['obj']['createApplication()void'] | BiatecClammPoolArgs['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported update method params for this smart contract
 */
export type BiatecClammPoolUpdateCallParams =
  | Expand<CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & {method: 'updateApplication'}>
  | Expand<CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & {method: 'updateApplication(uint64,byte[])void'}>
/**
 * Defines arguments required for the deploy method.
 */
export type BiatecClammPoolDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: BiatecClammPoolCreateCallParams
  /**
   * Update transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  updateParams?: BiatecClammPoolUpdateCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the BiatecClammPool smart contract
 */
export abstract class BiatecClammPoolParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends BiatecClammPoolCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return BiatecClammPoolParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the BiatecClammPool smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<BiatecClammPoolArgs['obj']['createApplication()void'] | BiatecClammPoolArgs['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Gets available update ABI call param factories
   */
  static get update() {
    return {
      _resolveByMethod<TParams extends BiatecClammPoolUpdateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'updateApplication':
          case 'updateApplication(uint64,byte[])void':
            return BiatecClammPoolParamsFactory.update.updateApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs update ABI call params for the BiatecClammPool smart contract using the updateApplication(uint64,byte[])void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      updateApplication(params: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & AppClientCompilationParams): AppClientMethodCallParams & AppClientCompilationParams {
        return {
          ...params,
          method: 'updateApplication(uint64,byte[])void' as const,
          args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.newVersion],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the getCurrentPrice()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getCurrentPrice(params: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getCurrentPrice()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the getPriceDivider()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getPriceDivider(params: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getPriceDivider()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the getLPTokenId()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getLpTokenId(params: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getLPTokenId()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64 ABI method
   *
   * Only Biatec Pool Provider can deploy and bootsrap this smart contract
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static bootstrap(params: CallParams<BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetA, params.args.assetB, params.args.appBiatecConfigProvider, params.args.appBiatecPoolProvider, params.args.txSeed, params.args.fee, params.args.priceMin, params.args.priceMax, params.args.currentPrice, params.args.verificationClass],
    }
  }
  /**
   * Constructs a no op call for the bootstrapStep2()void ABI method
   *
   * When we know the app id of this pool, we can register it properly at the pool provider
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static bootstrapStep2(params: CallParams<BiatecClammPoolArgs['obj']['bootstrapStep2()void'] | BiatecClammPoolArgs['tuple']['bootstrapStep2()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'bootstrapStep2()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64 ABI method
   *
   * This method adds Asset A and Asset B to the Automated Market Maker Concentrated Liqudidity Pool and send to the liqudidty provider the liqudity token
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static addLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.appBiatecIdentityProvider, params.args.txAssetADeposit, params.args.txAssetBDeposit, params.args.assetA, params.args.assetB, params.args.assetLp],
    }
  }
  /**
   * Constructs a no op call for the removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256 ABI method
   *
   * This method retrieves from the liquidity provider LP token and returns Asset A and Asset B from the Automated Market Maker Concentrated Liqudidity Pool
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static removeLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.appBiatecIdentityProvider, params.args.txLpXfer, params.args.assetA, params.args.assetB, params.args.assetLp],
    }
  }
  /**
   * Constructs a no op call for the removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256 ABI method
   *
  * This method allows biatec admin to reduce the lp position created by lp fees allocation.
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static removeLiquidityAdmin(params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.assetA, params.args.assetB, params.args.assetLp, params.args.amount],
    }
  }
  /**
   * Constructs a no op call for the swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256 ABI method
   *
   * Swap Asset A to Asset B or Asset B to Asst A
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static swap(params: CallParams<BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.appBiatecIdentityProvider, params.args.appBiatecPoolProvider, params.args.txSwap, params.args.assetA, params.args.assetB, params.args.minimumToReceive],
    }
  }
  /**
   * Constructs a no op call for the distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256 ABI method
   *
  * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
  If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
  
  
  This method is used to distribute amount a and amount b of asset a and asset b to holders as the fee income.
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static distributeExcessAssets(params: CallParams<BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.assetA, params.args.assetB, params.args.amountA, params.args.amountB],
    }
  }
  /**
   * Constructs a no op call for the withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64 ABI method
   *
  * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
  If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
  
  
  This method is used to distribute amount a and amount b of asset a and asset b to addressExecutiveFee account.
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static withdrawExcessAssets(params: CallParams<BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.assetA, params.args.assetB, params.args.amountA, params.args.amountB],
    }
  }
  /**
   * Constructs a no op call for the sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void ABI method
   *
  * addressExecutiveFee can perfom key registration for this LP pool
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static sendOnlineKeyRegistration(params: CallParams<BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void'] | BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.votePk, params.args.selectionPk, params.args.stateProofPk, params.args.voteFirst, params.args.voteLast, params.args.voteKeyDilution],
    }
  }
  /**
   * Constructs a no op call for the calculateDistributedLiquidity(uint64,uint256)uint256 ABI method
   *
  * addressExecutiveFee can perfom key unregistration for this LP pool
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateDistributedLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateDistributedLiquidity(uint64,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetLp, params.args.currentDeposit],
    }
  }
  /**
   * Constructs a no op call for the calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateLiquidityFlatPrice(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.x, params.args.y, params.args.price],
    }
  }
  /**
   * Constructs a no op call for the calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256 ABI method
   *
  * Calculates the liquidity  from the x - Asset A position and y - Asset B position
  This method calculates discriminant - first part of the calculation.
  It is divided so that the readonly method does not need to charge fees

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateLiquidityD(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.x, params.args.y, params.args.priceMin, params.args.priceMax, params.args.priceMinSqrt, params.args.priceMaxSqrt],
    }
  }
  /**
   * Constructs a no op call for the calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256 ABI method
   *
   * Calculates the liquidity  from the x - Asset A position and y - Asset B position
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateLiquidityWithD(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.x, params.args.y, params.args.priceMinSqrt, params.args.priceMaxSqrt, params.args.dSqrt],
    }
  }
  /**
   * Constructs a no op call for the calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256 ABI method
   *
   * Get the current price when asset a has x
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculatePrice(params: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetAQuantity, params.args.assetBQuantity, params.args.priceMinSqrt, params.args.priceMaxSqrt, params.args.liquidity],
    }
  }
  /**
   * Constructs a no op call for the calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256 ABI method
   *
   * Calculates how much asset B will be taken from the smart contract on asset A deposit
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateAssetBWithdrawOnAssetADeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.inAmount, params.args.assetABalance, params.args.assetBBalance, params.args.priceMinSqrt, params.args.priceMaxSqrt, params.args.liqudity],
    }
  }
  /**
   * Constructs a no op call for the calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256 ABI method
   *
   * Calculates how much asset A will be taken from the smart contract on asset B deposit
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateAssetAWithdrawOnAssetBDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.inAmount, params.args.assetABalance, params.args.assetBBalance, params.args.priceMinSqrt, params.args.priceMaxSqrt, params.args.liqudity],
    }
  }
  /**
   * Constructs a no op call for the calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256 ABI method
   *
   * Calculates how much asset A will be taken from the smart contract on LP asset deposit
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateAssetAWithdrawOnLpDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.inAmount, params.args.assetABalance, params.args.liqudity],
    }
  }
  /**
   * Constructs a no op call for the calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256 ABI method
   *
  * Calculates how much asset B should be deposited when user deposit asset a and b.
  
  
  On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateAssetBDepositOnAssetADeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.inAmountA, params.args.inAmountB, params.args.assetABalance, params.args.assetBBalance],
    }
  }
  /**
   * Constructs a no op call for the calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256 ABI method
   *
  * Calculates how much asset A should be deposited when user deposit asset a and b
  
  
  On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateAssetADepositOnAssetBDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.inAmountA, params.args.inAmountB, params.args.assetABalance, params.args.assetBBalance],
    }
  }
  /**
   * Constructs a no op call for the status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64) ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static status(params: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.assetA, params.args.assetB, params.args.assetLp],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the BiatecClammPool smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class BiatecClammPoolFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `BiatecClammPoolFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClient {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new BiatecClammPoolClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new BiatecClammPoolClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the BiatecClammPool smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: BiatecClammPoolDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? BiatecClammPoolParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (BiatecClammPoolCreateCallParams & { args: Uint8Array[] }) : undefined,
      updateParams: params.updateParams?.method ? BiatecClammPoolParamsFactory.update._resolveByMethod(params.updateParams) : params.updateParams ? params.updateParams as (BiatecClammPoolUpdateCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new BiatecClammPoolClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BiatecClammPool smart contract using the createApplication()void ABI method.
       *
       * Initial setup
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<BiatecClammPoolArgs['obj']['createApplication()void'] | BiatecClammPoolArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(BiatecClammPoolParamsFactory.create.createApplication(params))
      },
    },

    /**
     * Gets available deployUpdate methods
     */
    deployUpdate: {
      /**
       * Updates an existing instance of the BiatecClammPool smart contract using the updateApplication(uint64,byte[])void ABI method.
       *
       * addressUdpater from global biatec configuration is allowed to update application
       *
       * @param params The params for the smart contract call
       * @returns The deployUpdate params
       */
      updateApplication: (params: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & AppClientCompilationParams) => {
        return this.appFactory.params.deployUpdate(BiatecClammPoolParamsFactory.update.updateApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BiatecClammPool smart contract using the createApplication()void ABI method.
       *
       * Initial setup
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<BiatecClammPoolArgs['obj']['createApplication()void'] | BiatecClammPoolArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(BiatecClammPoolParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BiatecClammPool smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * Initial setup
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<BiatecClammPoolArgs['obj']['createApplication()void'] | BiatecClammPoolArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(BiatecClammPoolParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | BiatecClammPoolReturns['createApplication()void']) }, appClient: new BiatecClammPoolClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the BiatecClammPool smart contract
 */
export class BiatecClammPoolClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `BiatecClammPoolClient`
   *
   * @param appClient An `AppClient` instance which has been created with the BiatecClammPool app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `BiatecClammPoolClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends BiatecClammPoolNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `BiatecClammPoolClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<BiatecClammPoolClient> {
    return new BiatecClammPoolClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `BiatecClammPoolClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<BiatecClammPoolClient> {
    return new BiatecClammPoolClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClient {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available update methods
     */
    update: {
      /**
       * Updates an existing instance of the BiatecClammPool smart contract using the `updateApplication(uint64,byte[])void` ABI method.
       *
       * addressUdpater from global biatec configuration is allowed to update application
       *
       * @param params The params for the smart contract call
       * @returns The update params
       */
      updateApplication: (params: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & AppClientCompilationParams) => {
        return this.appClient.params.update(BiatecClammPoolParamsFactory.update.updateApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the BiatecClammPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getCurrentPrice()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getCurrentPrice: (params: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.getCurrentPrice(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getPriceDivider()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getPriceDivider: (params: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.getPriceDivider(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getLPTokenId()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getLpTokenId: (params: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.getLpTokenId(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
     * Only Biatec Pool Provider can deploy and bootsrap this smart contract
     *
     * @param params The params for the smart contract call
     * @returns The call params: LP token ID
     */
    bootstrap: (params: CallParams<BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `bootstrapStep2()void` ABI method.
     *
     * When we know the app id of this pool, we can register it properly at the pool provider
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    bootstrapStep2: (params: CallParams<BiatecClammPoolArgs['obj']['bootstrapStep2()void'] | BiatecClammPoolArgs['tuple']['bootstrapStep2()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.bootstrapStep2(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64` ABI method.
     *
     * This method adds Asset A and Asset B to the Automated Market Maker Concentrated Liqudidity Pool and send to the liqudidty provider the liqudity token
     *
     * @param params The params for the smart contract call
     * @returns The call params: LP Token quantity distributed
     */
    addLiquidity: (params: CallParams<BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256` ABI method.
     *
     * This method retrieves from the liquidity provider LP token and returns Asset A and Asset B from the Automated Market Maker Concentrated Liqudidity Pool
     *
     * @param params The params for the smart contract call
     * @returns The call params: LP position reduced
     */
    removeLiquidity: (params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.removeLiquidity(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256` ABI method.
     *
    * This method allows biatec admin to reduce the lp position created by lp fees allocation.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call params: LP position reduced
     */
    removeLiquidityAdmin: (params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.removeLiquidityAdmin(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256` ABI method.
     *
     * Swap Asset A to Asset B or Asset B to Asst A
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    swap: (params: CallParams<BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256` ABI method.
     *
    * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
    If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
    
    
    This method is used to distribute amount a and amount b of asset a and asset b to holders as the fee income.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    distributeExcessAssets: (params: CallParams<BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.distributeExcessAssets(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
    * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
    If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
    
    
    This method is used to distribute amount a and amount b of asset a and asset b to addressExecutiveFee account.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    withdrawExcessAssets: (params: CallParams<BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.withdrawExcessAssets(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void` ABI method.
     *
    * addressExecutiveFee can perfom key registration for this LP pool
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    sendOnlineKeyRegistration: (params: CallParams<BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void'] | BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.sendOnlineKeyRegistration(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateDistributedLiquidity(uint64,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * addressExecutiveFee can perfom key unregistration for this LP pool
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    calculateDistributedLiquidity: (params: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateDistributedLiquidity(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    calculateLiquidityFlatPrice: (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateLiquidityFlatPrice(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates the liquidity  from the x - Asset A position and y - Asset B position
    This method calculates discriminant - first part of the calculation.
    It is divided so that the readonly method does not need to charge fees

     *
     * @param params The params for the smart contract call
     * @returns The call params: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
     */
    calculateLiquidityD: (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateLiquidityD(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates the liquidity  from the x - Asset A position and y - Asset B position
     *
     * @param params The params for the smart contract call
     * @returns The call params: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
     */
    calculateLiquidityWithD: (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateLiquidityWithD(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Get the current price when asset a has x
     *
     * @param params The params for the smart contract call
     * @returns The call params: the price with specified quantity with the price range set in the contract
     */
    calculatePrice: (params: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculatePrice(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset B will be taken from the smart contract on asset A deposit
     *
     * @param params The params for the smart contract call
     * @returns The call params: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetBWithdrawOnAssetADeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateAssetBWithdrawOnAssetADeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset A will be taken from the smart contract on asset B deposit
     *
     * @param params The params for the smart contract call
     * @returns The call params: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetAWithdrawOnAssetBDeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnAssetBDeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset A will be taken from the smart contract on LP asset deposit
     *
     * @param params The params for the smart contract call
     * @returns The call params: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetAWithdrawOnLpDeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnLpDeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates how much asset B should be deposited when user deposit asset a and b.
    
    
    On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

     *
     * @param params The params for the smart contract call
     * @returns The call params: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetBDepositOnAssetADeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateAssetBDepositOnAssetADeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates how much asset A should be deposited when user deposit asset a and b
    
    
    On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

     *
     * @param params The params for the smart contract call
     * @returns The call params: Amount of asset A to be deposited. The result is in Base decimals (9)
     */
    calculateAssetADepositOnAssetBDeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateAssetADepositOnAssetBDeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    status: (params: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.status(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available update methods
     */
    update: {
      /**
       * Updates an existing instance of the BiatecClammPool smart contract using the `updateApplication(uint64,byte[])void` ABI method.
       *
       * addressUdpater from global biatec configuration is allowed to update application
       *
       * @param params The params for the smart contract call
       * @returns The update transaction
       */
      updateApplication: (params: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & AppClientCompilationParams) => {
        return this.appClient.createTransaction.update(BiatecClammPoolParamsFactory.update.updateApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the BiatecClammPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getCurrentPrice()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getCurrentPrice: (params: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.getCurrentPrice(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getPriceDivider()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getPriceDivider: (params: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.getPriceDivider(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getLPTokenId()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getLpTokenId: (params: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.getLpTokenId(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
     * Only Biatec Pool Provider can deploy and bootsrap this smart contract
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: LP token ID
     */
    bootstrap: (params: CallParams<BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `bootstrapStep2()void` ABI method.
     *
     * When we know the app id of this pool, we can register it properly at the pool provider
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    bootstrapStep2: (params: CallParams<BiatecClammPoolArgs['obj']['bootstrapStep2()void'] | BiatecClammPoolArgs['tuple']['bootstrapStep2()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.bootstrapStep2(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64` ABI method.
     *
     * This method adds Asset A and Asset B to the Automated Market Maker Concentrated Liqudidity Pool and send to the liqudidty provider the liqudity token
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: LP Token quantity distributed
     */
    addLiquidity: (params: CallParams<BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256` ABI method.
     *
     * This method retrieves from the liquidity provider LP token and returns Asset A and Asset B from the Automated Market Maker Concentrated Liqudidity Pool
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: LP position reduced
     */
    removeLiquidity: (params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.removeLiquidity(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256` ABI method.
     *
    * This method allows biatec admin to reduce the lp position created by lp fees allocation.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: LP position reduced
     */
    removeLiquidityAdmin: (params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.removeLiquidityAdmin(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256` ABI method.
     *
     * Swap Asset A to Asset B or Asset B to Asst A
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    swap: (params: CallParams<BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256` ABI method.
     *
    * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
    If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
    
    
    This method is used to distribute amount a and amount b of asset a and asset b to holders as the fee income.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    distributeExcessAssets: (params: CallParams<BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.distributeExcessAssets(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
    * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
    If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
    
    
    This method is used to distribute amount a and amount b of asset a and asset b to addressExecutiveFee account.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    withdrawExcessAssets: (params: CallParams<BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.withdrawExcessAssets(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void` ABI method.
     *
    * addressExecutiveFee can perfom key registration for this LP pool
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    sendOnlineKeyRegistration: (params: CallParams<BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void'] | BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.sendOnlineKeyRegistration(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateDistributedLiquidity(uint64,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * addressExecutiveFee can perfom key unregistration for this LP pool
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    calculateDistributedLiquidity: (params: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateDistributedLiquidity(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    calculateLiquidityFlatPrice: (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateLiquidityFlatPrice(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates the liquidity  from the x - Asset A position and y - Asset B position
    This method calculates discriminant - first part of the calculation.
    It is divided so that the readonly method does not need to charge fees

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
     */
    calculateLiquidityD: (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateLiquidityD(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates the liquidity  from the x - Asset A position and y - Asset B position
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
     */
    calculateLiquidityWithD: (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateLiquidityWithD(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Get the current price when asset a has x
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: the price with specified quantity with the price range set in the contract
     */
    calculatePrice: (params: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculatePrice(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset B will be taken from the smart contract on asset A deposit
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetBWithdrawOnAssetADeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateAssetBWithdrawOnAssetADeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset A will be taken from the smart contract on asset B deposit
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetAWithdrawOnAssetBDeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnAssetBDeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset A will be taken from the smart contract on LP asset deposit
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetAWithdrawOnLpDeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnLpDeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates how much asset B should be deposited when user deposit asset a and b.
    
    
    On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetBDepositOnAssetADeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateAssetBDepositOnAssetADeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates how much asset A should be deposited when user deposit asset a and b
    
    
    On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Amount of asset A to be deposited. The result is in Base decimals (9)
     */
    calculateAssetADepositOnAssetBDeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateAssetADepositOnAssetBDeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    status: (params: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.status(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available update methods
     */
    update: {
      /**
       * Updates an existing instance of the BiatecClammPool smart contract using the `updateApplication(uint64,byte[])void` ABI method.
       *
       * addressUdpater from global biatec configuration is allowed to update application
       *
       * @param params The params for the smart contract call
       * @returns The update result
       */
      updateApplication: async (params: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & AppClientCompilationParams & SendParams) => {
        const result = await this.appClient.send.update(BiatecClammPoolParamsFactory.update.updateApplication(params))
        return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['updateApplication(uint64,byte[])void'])}
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the BiatecClammPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getCurrentPrice()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getCurrentPrice: async (params: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.getCurrentPrice(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['getCurrentPrice()uint64'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getPriceDivider()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getPriceDivider: async (params: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.getPriceDivider(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['getPriceDivider()uint64'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getLPTokenId()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getLpTokenId: async (params: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.getLpTokenId(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['getLPTokenId()uint64'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
     * Only Biatec Pool Provider can deploy and bootsrap this smart contract
     *
     * @param params The params for the smart contract call
     * @returns The call result: LP token ID
     */
    bootstrap: async (params: CallParams<BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.bootstrap(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `bootstrapStep2()void` ABI method.
     *
     * When we know the app id of this pool, we can register it properly at the pool provider
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    bootstrapStep2: async (params: CallParams<BiatecClammPoolArgs['obj']['bootstrapStep2()void'] | BiatecClammPoolArgs['tuple']['bootstrapStep2()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.bootstrapStep2(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['bootstrapStep2()void'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64` ABI method.
     *
     * This method adds Asset A and Asset B to the Automated Market Maker Concentrated Liqudidity Pool and send to the liqudidty provider the liqudity token
     *
     * @param params The params for the smart contract call
     * @returns The call result: LP Token quantity distributed
     */
    addLiquidity: async (params: CallParams<BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.addLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256` ABI method.
     *
     * This method retrieves from the liquidity provider LP token and returns Asset A and Asset B from the Automated Market Maker Concentrated Liqudidity Pool
     *
     * @param params The params for the smart contract call
     * @returns The call result: LP position reduced
     */
    removeLiquidity: async (params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.removeLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256` ABI method.
     *
    * This method allows biatec admin to reduce the lp position created by lp fees allocation.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call result: LP position reduced
     */
    removeLiquidityAdmin: async (params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.removeLiquidityAdmin(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256` ABI method.
     *
     * Swap Asset A to Asset B or Asset B to Asst A
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    swap: async (params: CallParams<BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.swap(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256` ABI method.
     *
    * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
    If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
    
    
    This method is used to distribute amount a and amount b of asset a and asset b to holders as the fee income.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    distributeExcessAssets: async (params: CallParams<BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.distributeExcessAssets(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
    * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
    If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
    
    
    This method is used to distribute amount a and amount b of asset a and asset b to addressExecutiveFee account.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    withdrawExcessAssets: async (params: CallParams<BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.withdrawExcessAssets(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void` ABI method.
     *
    * addressExecutiveFee can perfom key registration for this LP pool
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    sendOnlineKeyRegistration: async (params: CallParams<BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void'] | BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.sendOnlineKeyRegistration(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateDistributedLiquidity(uint64,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * addressExecutiveFee can perfom key unregistration for this LP pool
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    calculateDistributedLiquidity: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateDistributedLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateDistributedLiquidity(uint64,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    calculateLiquidityFlatPrice: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateLiquidityFlatPrice(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates the liquidity  from the x - Asset A position and y - Asset B position
    This method calculates discriminant - first part of the calculation.
    It is divided so that the readonly method does not need to charge fees

     *
     * @param params The params for the smart contract call
     * @returns The call result: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
     */
    calculateLiquidityD: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateLiquidityD(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates the liquidity  from the x - Asset A position and y - Asset B position
     *
     * @param params The params for the smart contract call
     * @returns The call result: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
     */
    calculateLiquidityWithD: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateLiquidityWithD(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Get the current price when asset a has x
     *
     * @param params The params for the smart contract call
     * @returns The call result: the price with specified quantity with the price range set in the contract
     */
    calculatePrice: async (params: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculatePrice(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset B will be taken from the smart contract on asset A deposit
     *
     * @param params The params for the smart contract call
     * @returns The call result: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetBWithdrawOnAssetADeposit: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetBWithdrawOnAssetADeposit(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset A will be taken from the smart contract on asset B deposit
     *
     * @param params The params for the smart contract call
     * @returns The call result: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetAWithdrawOnAssetBDeposit: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnAssetBDeposit(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset A will be taken from the smart contract on LP asset deposit
     *
     * @param params The params for the smart contract call
     * @returns The call result: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetAWithdrawOnLpDeposit: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnLpDeposit(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates how much asset B should be deposited when user deposit asset a and b.
    
    
    On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

     *
     * @param params The params for the smart contract call
     * @returns The call result: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetBDepositOnAssetADeposit: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetBDepositOnAssetADeposit(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates how much asset A should be deposited when user deposit asset a and b
    
    
    On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

     *
     * @param params The params for the smart contract call
     * @returns The call result: Amount of asset A to be deposited. The result is in Base decimals (9)
     */
    calculateAssetADepositOnAssetBDeposit: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetADepositOnAssetBDeposit(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    status: async (params: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.status(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new BiatecClammPoolClient(this.appClient.clone(params))
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `getCurrentPrice()uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async getCurrentPrice(params: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']> = {args: []}) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.getCurrentPrice(params))
    return result.return as unknown as BiatecClammPoolReturns['getCurrentPrice()uint64']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `getPriceDivider()uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async getPriceDivider(params: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']> = {args: []}) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.getPriceDivider(params))
    return result.return as unknown as BiatecClammPoolReturns['getPriceDivider()uint64']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `getLPTokenId()uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async getLpTokenId(params: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']> = {args: []}) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.getLpTokenId(params))
    return result.return as unknown as BiatecClammPoolReturns['getLPTokenId()uint64']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateDistributedLiquidity(uint64,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
  * addressExecutiveFee can perfom key unregistration for this LP pool
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async calculateDistributedLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateDistributedLiquidity(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateDistributedLiquidity(uint64,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async calculateLiquidityFlatPrice(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateLiquidityFlatPrice(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
  * Calculates the liquidity  from the x - Asset A position and y - Asset B position
  This method calculates discriminant - first part of the calculation.
  It is divided so that the readonly method does not need to charge fees

   *
   * @param params The params for the smart contract call
   * @returns The call result: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
   */
  async calculateLiquidityD(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateLiquidityD(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * Calculates the liquidity  from the x - Asset A position and y - Asset B position
   *
   * @param params The params for the smart contract call
   * @returns The call result: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
   */
  async calculateLiquidityWithD(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateLiquidityWithD(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * Get the current price when asset a has x
   *
   * @param params The params for the smart contract call
   * @returns The call result: the price with specified quantity with the price range set in the contract
   */
  async calculatePrice(params: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculatePrice(params))
    return result.return as unknown as BiatecClammPoolReturns['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * Calculates how much asset B will be taken from the smart contract on asset A deposit
   *
   * @param params The params for the smart contract call
   * @returns The call result: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
   */
  async calculateAssetBWithdrawOnAssetADeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetBWithdrawOnAssetADeposit(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * Calculates how much asset A will be taken from the smart contract on asset B deposit
   *
   * @param params The params for the smart contract call
   * @returns The call result: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
   */
  async calculateAssetAWithdrawOnAssetBDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnAssetBDeposit(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * Calculates how much asset A will be taken from the smart contract on LP asset deposit
   *
   * @param params The params for the smart contract call
   * @returns The call result: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
   */
  async calculateAssetAWithdrawOnLpDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnLpDeposit(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
  * Calculates how much asset B should be deposited when user deposit asset a and b.
  
  
  On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

   *
   * @param params The params for the smart contract call
   * @returns The call result: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
   */
  async calculateAssetBDepositOnAssetADeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetBDepositOnAssetADeposit(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
  * Calculates how much asset A should be deposited when user deposit asset a and b
  
  
  On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

   *
   * @param params The params for the smart contract call
   * @returns The call result: Amount of asset A to be deposited. The result is in Base decimals (9)
   */
  async calculateAssetADepositOnAssetBDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetADepositOnAssetBDeposit(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async status(params: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.status(params))
    return result.return as unknown as BiatecClammPoolReturns['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
  }

  /**
   * Methods to access state for the current BiatecClammPool app
   */
  state = {
    /**
     * Methods to access global state for the current BiatecClammPool app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          setupFinished: result.setupFinished,
          assetA: result.assetA,
          assetADecimals: result.assetADecimals,
          assetB: result.assetB,
          assetBDecimals: result.assetBDecimals,
          assetLp: result.assetLp,
          assetABalance: result.assetABalance,
          assetBBalance: result.assetBBalance,
          priceMin: result.priceMin,
          priceMax: result.priceMax,
          priceMinSqrt: result.priceMinSqrt,
          priceMaxSqrt: result.priceMaxSqrt,
          liqudity: result.Liqudity,
          liqudityUsersFromFees: result.LiqudityUsersFromFees,
          liqudityBiatecFromFees: result.LiqudityBiatecFromFees,
          fee: result.fee,
          currentPrice: result.currentPrice,
          scale: result.scale,
          appBiatecConfigProvider: result.appBiatecConfigProvider,
          verificationClass: result.verificationClass,
          version: new BinaryStateValue(result.version),
        }
      },
      /**
       * Get the current value of the setupFinished key in global state
       */
      setupFinished: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("setupFinished")) as boolean | undefined },
      /**
       * Get the current value of the assetA key in global state
       */
      assetA: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetA")) as bigint | undefined },
      /**
       * Get the current value of the assetADecimals key in global state
       */
      assetADecimals: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetADecimals")) as bigint | undefined },
      /**
       * Get the current value of the assetB key in global state
       */
      assetB: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetB")) as bigint | undefined },
      /**
       * Get the current value of the assetBDecimals key in global state
       */
      assetBDecimals: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetBDecimals")) as bigint | undefined },
      /**
       * Get the current value of the assetLp key in global state
       */
      assetLp: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetLp")) as bigint | undefined },
      /**
       * Get the current value of the assetABalance key in global state
       */
      assetABalance: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetABalance")) as bigint | undefined },
      /**
       * Get the current value of the assetBBalance key in global state
       */
      assetBBalance: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetBBalance")) as bigint | undefined },
      /**
       * Get the current value of the priceMin key in global state
       */
      priceMin: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("priceMin")) as bigint | undefined },
      /**
       * Get the current value of the priceMax key in global state
       */
      priceMax: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("priceMax")) as bigint | undefined },
      /**
       * Get the current value of the priceMinSqrt key in global state
       */
      priceMinSqrt: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("priceMinSqrt")) as bigint | undefined },
      /**
       * Get the current value of the priceMaxSqrt key in global state
       */
      priceMaxSqrt: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("priceMaxSqrt")) as bigint | undefined },
      /**
       * Get the current value of the Liqudity key in global state
       */
      liqudity: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("Liqudity")) as bigint | undefined },
      /**
       * Get the current value of the LiqudityUsersFromFees key in global state
       */
      liqudityUsersFromFees: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("LiqudityUsersFromFees")) as bigint | undefined },
      /**
       * Get the current value of the LiqudityBiatecFromFees key in global state
       */
      liqudityBiatecFromFees: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("LiqudityBiatecFromFees")) as bigint | undefined },
      /**
       * Get the current value of the fee key in global state
       */
      fee: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("fee")) as bigint | undefined },
      /**
       * Get the current value of the currentPrice key in global state
       */
      currentPrice: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("currentPrice")) as bigint | undefined },
      /**
       * Get the current value of the scale key in global state
       */
      scale: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("scale")) as bigint | undefined },
      /**
       * Get the current value of the appBiatecConfigProvider key in global state
       */
      appBiatecConfigProvider: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("appBiatecConfigProvider")) as bigint | undefined },
      /**
       * Get the current value of the verificationClass key in global state
       */
      verificationClass: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("verificationClass")) as bigint | undefined },
      /**
       * Get the current value of the version key in global state
       */
      version: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("version")) as Uint8Array | undefined) },
    },
  }

  public newGroup(): BiatecClammPoolComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a getCurrentPrice()uint64 method call against the BiatecClammPool contract
       */
      getCurrentPrice(params: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getCurrentPrice(params)))
        resultMappers.push((v) => client.decodeReturnValue('getCurrentPrice()uint64', v))
        return this
      },
      /**
       * Add a getPriceDivider()uint64 method call against the BiatecClammPool contract
       */
      getPriceDivider(params: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getPriceDivider(params)))
        resultMappers.push((v) => client.decodeReturnValue('getPriceDivider()uint64', v))
        return this
      },
      /**
       * Add a getLPTokenId()uint64 method call against the BiatecClammPool contract
       */
      getLpTokenId(params: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getLpTokenId(params)))
        resultMappers.push((v) => client.decodeReturnValue('getLPTokenId()uint64', v))
        return this
      },
      /**
       * Add a bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64 method call against the BiatecClammPool contract
       */
      bootstrap(params: CallParams<BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.bootstrap(params)))
        resultMappers.push((v) => client.decodeReturnValue('bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64', v))
        return this
      },
      /**
       * Add a bootstrapStep2()void method call against the BiatecClammPool contract
       */
      bootstrapStep2(params: CallParams<BiatecClammPoolArgs['obj']['bootstrapStep2()void'] | BiatecClammPoolArgs['tuple']['bootstrapStep2()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.bootstrapStep2(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64 method call against the BiatecClammPool contract
       */
      addLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.addLiquidity(params)))
        resultMappers.push((v) => client.decodeReturnValue('addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64', v))
        return this
      },
      /**
       * Add a removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256 method call against the BiatecClammPool contract
       */
      removeLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.removeLiquidity(params)))
        resultMappers.push((v) => client.decodeReturnValue('removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256', v))
        return this
      },
      /**
       * Add a removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256 method call against the BiatecClammPool contract
       */
      removeLiquidityAdmin(params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.removeLiquidityAdmin(params)))
        resultMappers.push((v) => client.decodeReturnValue('removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256', v))
        return this
      },
      /**
       * Add a swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256 method call against the BiatecClammPool contract
       */
      swap(params: CallParams<BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.swap(params)))
        resultMappers.push((v) => client.decodeReturnValue('swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256', v))
        return this
      },
      /**
       * Add a distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      distributeExcessAssets(params: CallParams<BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.distributeExcessAssets(params)))
        resultMappers.push((v) => client.decodeReturnValue('distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64 method call against the BiatecClammPool contract
       */
      withdrawExcessAssets(params: CallParams<BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.withdrawExcessAssets(params)))
        resultMappers.push((v) => client.decodeReturnValue('withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64', v))
        return this
      },
      /**
       * Add a sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void method call against the BiatecClammPool contract
       */
      sendOnlineKeyRegistration(params: CallParams<BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void'] | BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.sendOnlineKeyRegistration(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a calculateDistributedLiquidity(uint64,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateDistributedLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateDistributedLiquidity(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateDistributedLiquidity(uint64,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateLiquidityFlatPrice(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateLiquidityFlatPrice(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateLiquidityD(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateLiquidityD(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateLiquidityWithD(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateLiquidityWithD(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculatePrice(params: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculatePrice(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateAssetBWithdrawOnAssetADeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateAssetBWithdrawOnAssetADeposit(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateAssetAWithdrawOnAssetBDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateAssetAWithdrawOnAssetBDeposit(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateAssetAWithdrawOnLpDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateAssetAWithdrawOnLpDeposit(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateAssetBDepositOnAssetADeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateAssetBDepositOnAssetADeposit(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateAssetADepositOnAssetBDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateAssetADepositOnAssetBDeposit(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64) method call against the BiatecClammPool contract
       */
      status(params: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.status(params)))
        resultMappers.push((v) => client.decodeReturnValue('status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)', v))
        return this
      },
      get update() {
        return {
          updateApplication: (params: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & AppClientCompilationParams) => {
            promiseChain = promiseChain.then(async () => composer.addAppUpdateMethodCall(await client.params.update.updateApplication(params)))
            resultMappers.push(undefined)
            return this
          },
        }
      },
      /**
       * Add a clear state call to the BiatecClammPool contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as BiatecClammPoolComposer
  }
}
export type BiatecClammPoolComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the getCurrentPrice()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getCurrentPrice(params?: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['getCurrentPrice()uint64'] | undefined]>

  /**
   * Calls the getPriceDivider()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getPriceDivider(params?: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['getPriceDivider()uint64'] | undefined]>

  /**
   * Calls the getLPTokenId()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getLpTokenId(params?: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['getLPTokenId()uint64'] | undefined]>

  /**
   * Calls the bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64 ABI method.
   *
   * Only Biatec Pool Provider can deploy and bootsrap this smart contract
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  bootstrap(params?: CallParams<BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | undefined]>

  /**
   * Calls the bootstrapStep2()void ABI method.
   *
   * When we know the app id of this pool, we can register it properly at the pool provider
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  bootstrapStep2(params?: CallParams<BiatecClammPoolArgs['obj']['bootstrapStep2()void'] | BiatecClammPoolArgs['tuple']['bootstrapStep2()void']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['bootstrapStep2()void'] | undefined]>

  /**
   * Calls the addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64 ABI method.
   *
   * This method adds Asset A and Asset B to the Automated Market Maker Concentrated Liqudidity Pool and send to the liqudidty provider the liqudity token
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  addLiquidity(params?: CallParams<BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | undefined]>

  /**
   * Calls the removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256 ABI method.
   *
   * This method retrieves from the liquidity provider LP token and returns Asset A and Asset B from the Automated Market Maker Concentrated Liqudidity Pool
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  removeLiquidity(params?: CallParams<BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | undefined]>

  /**
   * Calls the removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256 ABI method.
   *
  * This method allows biatec admin to reduce the lp position created by lp fees allocation.
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  removeLiquidityAdmin(params?: CallParams<BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | undefined]>

  /**
   * Calls the swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256 ABI method.
   *
   * Swap Asset A to Asset B or Asset B to Asst A
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  swap(params?: CallParams<BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | undefined]>

  /**
   * Calls the distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256 ABI method.
   *
  * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
  If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
  
  
  This method is used to distribute amount a and amount b of asset a and asset b to holders as the fee income.
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  distributeExcessAssets(params?: CallParams<BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64 ABI method.
   *
  * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
  If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
  
  
  This method is used to distribute amount a and amount b of asset a and asset b to addressExecutiveFee account.
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  withdrawExcessAssets(params?: CallParams<BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | undefined]>

  /**
   * Calls the sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void ABI method.
   *
  * addressExecutiveFee can perfom key registration for this LP pool
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  sendOnlineKeyRegistration(params?: CallParams<BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void'] | BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64)void'] | undefined]>

  /**
   * Calls the calculateDistributedLiquidity(uint64,uint256)uint256 ABI method.
   *
  * addressExecutiveFee can perfom key unregistration for this LP pool
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateDistributedLiquidity(params?: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateDistributedLiquidity(uint64,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateLiquidityFlatPrice(params?: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256 ABI method.
   *
  * Calculates the liquidity  from the x - Asset A position and y - Asset B position
  This method calculates discriminant - first part of the calculation.
  It is divided so that the readonly method does not need to charge fees

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateLiquidityD(params?: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256 ABI method.
   *
   * Calculates the liquidity  from the x - Asset A position and y - Asset B position
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateLiquidityWithD(params?: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256 ABI method.
   *
   * Get the current price when asset a has x
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculatePrice(params?: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256 ABI method.
   *
   * Calculates how much asset B will be taken from the smart contract on asset A deposit
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateAssetBWithdrawOnAssetADeposit(params?: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256 ABI method.
   *
   * Calculates how much asset A will be taken from the smart contract on asset B deposit
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateAssetAWithdrawOnAssetBDeposit(params?: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256 ABI method.
   *
   * Calculates how much asset A will be taken from the smart contract on LP asset deposit
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateAssetAWithdrawOnLpDeposit(params?: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256 ABI method.
   *
  * Calculates how much asset B should be deposited when user deposit asset a and b.
  
  
  On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateAssetBDepositOnAssetADeposit(params?: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256 ABI method.
   *
  * Calculates how much asset A should be deposited when user deposit asset a and b
  
  
  On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateAssetADepositOnAssetBDeposit(params?: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64) ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  status(params?: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | undefined]>

  /**
   * Gets available update methods
   */
  readonly update: {
    /**
     * Updates an existing instance of the BiatecClammPool smart contract using the updateApplication(uint64,byte[])void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    updateApplication(params?: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['updateApplication(uint64,byte[])void'] | undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the BiatecClammPool smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): BiatecClammPoolComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): BiatecClammPoolComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<BiatecClammPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<BiatecClammPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<BiatecClammPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<BiatecClammPoolComposerResults<TReturns>>
}
export type BiatecClammPoolComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

