/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { type AlgorandClient } from '@algorandfoundation/algokit-utils/types/algorand-client'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"BiatecClammPool","desc":"","methods":[{"name":"createApplication","desc":"Initial setup","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"updateApplication","desc":"addressUdpater from global biatec configuration is allowed to update application","args":[{"name":"appBiatecConfigProvider","type":"uint64"},{"name":"newVersion","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["UpdateApplication"]}},{"name":"getCurrentPrice","readonly":true,"args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getPriceDivider","readonly":true,"args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getLPTokenId","readonly":true,"args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"bootstrap","desc":"Only Biatec Pool Provider can deploy and bootsrap this smart contract","args":[{"name":"assetA","type":"uint64","desc":"Asset A ID must be lower then Asset B ID"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"appBiatecConfigProvider","type":"uint64","desc":"Biatec amm provider"},{"name":"appBiatecPoolProvider","type":"uint64","desc":"Pool provider"},{"name":"txSeed","type":"pay","desc":"Seed transaction so that smart contract can opt in to the assets"},{"name":"fee","type":"uint64","desc":"Fee in base level (9 decimals). value 1_000_000_000 = 1 = 100%. 10_000_000 = 1%. 1_000_000 = 0.1%"},{"name":"priceMin","type":"uint64","desc":"Min price range. At this point all assets are in asset A."},{"name":"priceMax","type":"uint64","desc":"Max price range. At this point all assets are in asset B."},{"name":"currentPrice","type":"uint64","desc":"Deployer can specify the current price for easier deployemnt."},{"name":"verificationClass","type":"uint64","desc":"Minimum verification level from the biatec identity. Level 0 means no kyc."}],"returns":{"type":"uint64","desc":"LP token ID"},"actions":{"create":[],"call":["NoOp"]}},{"name":"bootstrapStep2","desc":"When we know the app id of this pool, we can register it properly at the pool provider","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"addLiquidity","desc":"This method adds Asset A and Asset B to the Automated Market Maker Concentrated Liqudidity Pool and send to the liqudidty provider the liquidity token","args":[{"name":"appBiatecConfigProvider","type":"uint64","desc":"Configuration reference"},{"name":"appBiatecIdentityProvider","type":"uint64","desc":"Identity service reference"},{"name":"txAssetADeposit","type":"txn","desc":"Transfer of asset A to the LP pool"},{"name":"txAssetBDeposit","type":"txn","desc":"Transfer of asset B to the LP pool"},{"name":"assetA","type":"uint64","desc":"Asset A"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"assetLp","type":"uint64","desc":"Liquidity pool asset"}],"returns":{"type":"uint64","desc":"LP Token quantity distributed"},"actions":{"create":[],"call":["NoOp"]}},{"name":"removeLiquidity","desc":"This method retrieves from the liquidity provider LP token and returns Asset A and Asset B from the Automated Market Maker Concentrated Liqudidity Pool","args":[{"name":"appBiatecConfigProvider","type":"uint64","desc":"Configuration reference"},{"name":"appBiatecIdentityProvider","type":"uint64","desc":"Identity service reference"},{"name":"txLpXfer","type":"axfer","desc":"Transfer of the LP token"},{"name":"assetA","type":"uint64","desc":"Asset A"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"assetLp","type":"uint64","desc":"LP pool asset"}],"returns":{"type":"uint256","desc":"LP position reduced"},"actions":{"create":[],"call":["NoOp"]}},{"name":"removeLiquidityAdmin","desc":"This method allows biatec admin to reduce the lp position created by lp fees allocation.\n\n\nOnly addressExecutiveFee is allowed to execute this method.","args":[{"name":"appBiatecConfigProvider","type":"uint64","desc":"Biatec config app. Only addressExecutiveFee is allowed to execute this method."},{"name":"assetA","type":"uint64","desc":"Asset A"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"assetLp","type":"uint64"},{"name":"amount","type":"uint256","desc":"Amount to withdraw. If zero, removes all available lps from fees."}],"returns":{"type":"uint256","desc":"LP position reduced"},"actions":{"create":[],"call":["NoOp"]}},{"name":"swap","desc":"Swap Asset A to Asset B or Asset B to Asst A","args":[{"name":"appBiatecConfigProvider","type":"uint64"},{"name":"appBiatecIdentityProvider","type":"uint64"},{"name":"appBiatecPoolProvider","type":"uint64"},{"name":"txSwap","type":"txn","desc":"Transfer of the token to be deposited to the pool. To the owner the other asset will be sent."},{"name":"assetA","type":"uint64","desc":"Asset A"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"minimumToReceive","type":"uint64","desc":"If number greater then zero, the check is performed for the output of the other asset"}],"returns":{"type":"uint256"},"actions":{"create":[],"call":["NoOp"]}},{"name":"distributeExcessAssets","desc":"If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.\nIf someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.\n\n\nThis method is used to distribute amount a and amount b of asset a and asset b to holders as the fee income.\n\n\nOnly addressExecutiveFee is allowed to execute this method.","args":[{"name":"appBiatecConfigProvider","type":"uint64","desc":"Biatec config app. Only addressExecutiveFee is allowed to execute this method."},{"name":"assetA","type":"uint64","desc":"Asset A"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"amountA","type":"uint256","desc":"Amount of asset A to be deposited to the liquidity. In base decimals (9)"},{"name":"amountB","type":"uint256","desc":"Amount of asset B to be deposited to the liquidity. In base decimals (9)"}],"returns":{"type":"uint256"},"actions":{"create":[],"call":["NoOp"]}},{"name":"withdrawExcessAssets","desc":"If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.\nIf someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.\n\n\nThis method is used to distribute amount a and amount b of asset a and asset b to addressExecutiveFee account.\n\n\nOnly addressExecutiveFee is allowed to execute this method.","args":[{"name":"appBiatecConfigProvider","type":"uint64","desc":"Biatec config app. Only addressExecutiveFee is allowed to execute this method."},{"name":"assetA","type":"uint64","desc":"Asset A"},{"name":"assetB","type":"uint64","desc":"Asset B"},{"name":"amountA","type":"uint64","desc":"Amount of asset A to be deposited to the liquidity. In asset a decimals"},{"name":"amountB","type":"uint64","desc":"Amount of asset B to be deposited to the liquidity. In asset b decimals"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"sendOnlineKeyRegistration","desc":"addressExecutiveFee can perfom key registration for this LP pool\n\n\nOnly addressExecutiveFee is allowed to execute this method.","args":[{"name":"appBiatecConfigProvider","type":"uint64"},{"name":"votePk","type":"byte[]"},{"name":"selectionPk","type":"byte[]"},{"name":"stateProofPk","type":"byte[]"},{"name":"voteFirst","type":"uint64"},{"name":"voteLast","type":"uint64"},{"name":"voteKeyDilution","type":"uint64"},{"name":"fee","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateDistributedLiquidity","desc":"addressExecutiveFee can perfom key unregistration for this LP pool\n\n\nOnly addressExecutiveFee is allowed to execute this method.","readonly":true,"args":[{"name":"assetLp","type":"uint64"},{"name":"currentDeposit","type":"uint256"}],"returns":{"type":"uint256"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateLiquidityFlatPrice","readonly":true,"args":[{"name":"x","type":"uint256"},{"name":"y","type":"uint256"},{"name":"price","type":"uint256"}],"returns":{"type":"uint256"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateLiquidityD","desc":"Calculates the liquidity  from the x - Asset A position and y - Asset B position\nThis method calculates discriminant - first part of the calculation.\nIt is divided so that the readonly method does not need to charge fees","readonly":true,"args":[{"name":"x","type":"uint256","desc":"Asset A position balanced on the curve"},{"name":"y","type":"uint256","desc":"Asset B position balanced on the curve"},{"name":"priceMin","type":"uint256","desc":"Minimum price variable in base scale decimals (pa)"},{"name":"priceMax","type":"uint256","desc":"Maximum price variable in base scale decimals (pb)"},{"name":"priceMinSqrt","type":"uint256","desc":"sqrt(priceMin) in base scale decimals Variable pas"},{"name":"priceMaxSqrt","type":"uint256","desc":"sqrt(priceMax) in base scale decimals Variable pbs"}],"returns":{"type":"uint256","desc":"Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user."},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateLiquidityWithD","desc":"Calculates the liquidity  from the x - Asset A position and y - Asset B position","readonly":true,"args":[{"name":"x","type":"uint256","desc":"Asset A position balanced on the curve"},{"name":"y","type":"uint256","desc":"Asset B position balanced on the curve"},{"name":"priceMinSqrt","type":"uint256","desc":"sqrt(priceMin) in base scale decimals Variable pas"},{"name":"priceMaxSqrt","type":"uint256","desc":"sqrt(priceMax) in base scale decimals Variable pbs"},{"name":"dSqrt","type":"uint256"}],"returns":{"type":"uint256","desc":"Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user."},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculatePrice","desc":"Get the current price when asset a has x","readonly":true,"args":[{"name":"assetAQuantity","type":"uint256","desc":"x"},{"name":"assetBQuantity","type":"uint256","desc":"y"},{"name":"priceMinSqrt","type":"uint256","desc":"sqrt(priceMin)"},{"name":"priceMaxSqrt","type":"uint256","desc":"sqrt(priceMax)"},{"name":"liquidity","type":"uint256","desc":"Current pool liquidity - L variable"}],"returns":{"type":"uint256","desc":"the price with specified quantity with the price range set in the contract"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateAssetBWithdrawOnAssetADeposit","desc":"Calculates how much asset B will be taken from the smart contract on asset A deposit","readonly":true,"args":[{"name":"inAmount","type":"uint256","desc":"Asset A amount in Base decimal representation.. If asset has 6 decimals, 1 is represented as 1000000000"},{"name":"assetABalance","type":"uint256","desc":"Asset A balance. Variable ab, in base scale"},{"name":"assetBBalance","type":"uint256","desc":"Asset B balance. Variable bb, in base scale"},{"name":"priceMinSqrt","type":"uint256","desc":"sqrt(Min price). Variable pMinS, in base scale"},{"name":"priceMaxSqrt","type":"uint256","desc":"sqrt(Max price). Variable pMaxS, in base scale"},{"name":"liquidity","type":"uint256","desc":"sqrt(Max price). Variable L, in base scale"}],"returns":{"type":"uint256","desc":"Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateAssetAWithdrawOnAssetBDeposit","desc":"Calculates how much asset A will be taken from the smart contract on asset B deposit","readonly":true,"args":[{"name":"inAmount","type":"uint256","desc":"Asset B amount in Base decimal representation.. If asset has 6 decimals, 1 is represented as 1000000000"},{"name":"assetABalance","type":"uint256","desc":"Asset A balance. Variable ab, in base scale"},{"name":"assetBBalance","type":"uint256","desc":"Asset B balance. Variable bb, in base scale"},{"name":"priceMinSqrt","type":"uint256","desc":"sqrt(Min price). Variable pMinS, in base scale"},{"name":"priceMaxSqrt","type":"uint256","desc":"sqrt(Max price). Variable pMaxS, in base scale"},{"name":"liquidity","type":"uint256","desc":"sqrt(Max price). Variable L, in base scale"}],"returns":{"type":"uint256","desc":"Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateAssetAWithdrawOnLpDeposit","desc":"Calculates how much asset A will be taken from the smart contract on LP asset deposit","readonly":true,"args":[{"name":"inAmount","type":"uint256","desc":"LP Asset amount in Base decimal representation.."},{"name":"assetABalance","type":"uint256","desc":"Asset A balance. Variable ab, in base scale"},{"name":"liquidity","type":"uint256","desc":"Current liquidity. Variable L, in base scale"}],"returns":{"type":"uint256","desc":"Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateAssetBDepositOnAssetADeposit","desc":"Calculates how much asset B should be deposited when user deposit asset a and b.\n\n\nOn deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user","readonly":true,"args":[{"name":"inAmountA","type":"uint256","desc":"Asset A amount in Base decimal representation"},{"name":"inAmountB","type":"uint256","desc":"Asset B amount in Base decimal representation"},{"name":"assetABalance","type":"uint256","desc":"Asset A balance. Variable ab, in base scale"},{"name":"assetBBalance","type":"uint256","desc":"Asset B balance. Variable bb, in base scale"}],"returns":{"type":"uint256","desc":"Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"calculateAssetADepositOnAssetBDeposit","desc":"Calculates how much asset A should be deposited when user deposit asset a and b\n\n\nOn deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user","readonly":true,"args":[{"name":"inAmountA","type":"uint256","desc":"Asset A amount in Base decimal representation"},{"name":"inAmountB","type":"uint256","desc":"Asset B amount in Base decimal representation"},{"name":"assetABalance","type":"uint256","desc":"Asset A balance. Variable ab, in base scale"},{"name":"assetBBalance","type":"uint256","desc":"Asset B balance. Variable bb, in base scale"}],"returns":{"type":"uint256","desc":"Amount of asset A to be deposited. The result is in Base decimals (9)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"status","readonly":true,"args":[{"name":"appBiatecConfigProvider","type":"uint64"},{"name":"assetA","type":"uint64"},{"name":"assetB","type":"uint64"},{"name":"assetLp","type":"uint64"}],"returns":{"type":"(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)","struct":"AmmStatus"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{"AmmStatus":[{"name":"scale","type":"uint64"},{"name":"assetABalance","type":"uint64"},{"name":"assetBBalance","type":"uint64"},{"name":"realABalance","type":"uint64"},{"name":"realBBalance","type":"uint64"},{"name":"priceMinSqrt","type":"uint64"},{"name":"priceMaxSqrt","type":"uint64"},{"name":"currentLiquidity","type":"uint64"},{"name":"releasedLiquidity","type":"uint64"},{"name":"liquidityUsersFromFees","type":"uint64"},{"name":"liquidityBiatecFromFees","type":"uint64"},{"name":"assetA","type":"uint64"},{"name":"assetB","type":"uint64"},{"name":"poolToken","type":"uint64"},{"name":"price","type":"uint64"},{"name":"fee","type":"uint64"},{"name":"biatecFee","type":"uint64"},{"name":"verificationClass","type":"uint64"}]},"state":{"schema":{"global":{"bytes":11,"ints":10},"local":{"bytes":0,"ints":0}},"keys":{"global":{"setupFinished":{"key":"cw==","keyType":"AVMBytes","valueType":"bool"},"assetA":{"key":"YQ==","keyType":"AVMBytes","valueType":"uint64"},"assetADecimalsScaleFromBase":{"key":"YWQ=","keyType":"AVMBytes","valueType":"uint256"},"assetB":{"key":"Yg==","keyType":"AVMBytes","valueType":"uint64"},"assetBDecimalsScaleFromBase":{"key":"YmQ=","keyType":"AVMBytes","valueType":"uint256"},"assetLp":{"key":"bHA=","keyType":"AVMBytes","valueType":"uint64"},"assetABalanceBaseScale":{"key":"YWI=","keyType":"AVMBytes","valueType":"uint256"},"assetBBalanceBaseScale":{"key":"YmI=","keyType":"AVMBytes","valueType":"uint256"},"priceMin":{"key":"cE1pbg==","keyType":"AVMBytes","valueType":"uint64"},"priceMax":{"key":"cE1heA==","keyType":"AVMBytes","valueType":"uint64"},"priceMinSqrt":{"key":"cE1pblM=","keyType":"AVMBytes","valueType":"uint256"},"priceMaxSqrt":{"key":"cE1heFM=","keyType":"AVMBytes","valueType":"uint256"},"Liquidity":{"key":"TA==","keyType":"AVMBytes","valueType":"uint256"},"LiquidityUsersFromFees":{"key":"THU=","keyType":"AVMBytes","valueType":"uint256"},"LiquidityBiatecFromFees":{"key":"TGI=","keyType":"AVMBytes","valueType":"uint256"},"fee":{"key":"Zg==","keyType":"AVMBytes","valueType":"uint64"},"currentPrice":{"key":"cHJpY2U=","keyType":"AVMBytes","valueType":"uint64"},"scale":{"key":"c2NhbGU=","keyType":"AVMBytes","valueType":"uint64"},"appBiatecConfigProvider":{"key":"YmM=","keyType":"AVMBytes","valueType":"uint64"},"verificationClass":{"key":"Yw==","keyType":"AVMBytes","valueType":"uint64"},"version":{"key":"c2N2ZXI=","keyType":"AVMBytes","valueType":"AVMBytes"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[0]},{"teal":2,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]},{"teal":3,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390]},{"teal":15,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[391,392]},{"teal":16,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[393]},{"teal":17,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[394,395]},{"teal":18,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[396]},{"teal":19,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[397,398]},{"teal":20,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[399]},{"teal":21,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425]},{"teal":25,"source":"contracts\\BiatecClammPool.algo.ts:36","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[426]},{"teal":30,"source":"contracts\\BiatecClammPool.algo.ts:114","pc":[427,428,429]},{"teal":31,"source":"contracts\\BiatecClammPool.algo.ts:114","pc":[430]},{"teal":32,"source":"contracts\\BiatecClammPool.algo.ts:114","pc":[431]},{"teal":38,"source":"contracts\\BiatecClammPool.algo.ts:114","pc":[432,433,434]},{"teal":42,"source":"contracts\\BiatecClammPool.algo.ts:115","pc":[435,436]},{"teal":43,"source":"contracts\\BiatecClammPool.algo.ts:115","pc":[437]},{"teal":47,"source":"contracts\\BiatecClammPool.algo.ts:116","pc":[438,439]},{"teal":48,"source":"contracts\\BiatecClammPool.algo.ts:116","pc":[440,441,442,443,444,445]},{"teal":49,"source":"contracts\\BiatecClammPool.algo.ts:116","pc":[446]},{"teal":53,"source":"contracts\\BiatecClammPool.algo.ts:117","pc":[447,448]},{"teal":54,"source":"contracts\\BiatecClammPool.algo.ts:117","pc":[449]},{"teal":55,"source":"contracts\\BiatecClammPool.algo.ts:117","pc":[450]},{"teal":59,"source":"contracts\\BiatecClammPool.algo.ts:118","pc":[451,452]},{"teal":60,"source":"contracts\\BiatecClammPool.algo.ts:118","pc":[453,454]},{"teal":61,"source":"contracts\\BiatecClammPool.algo.ts:118","pc":[455]},{"teal":65,"source":"contracts\\BiatecClammPool.algo.ts:119","pc":[456,457]},{"teal":66,"source":"contracts\\BiatecClammPool.algo.ts:119","pc":[458,459]},{"teal":67,"source":"contracts\\BiatecClammPool.algo.ts:119","pc":[460]},{"teal":71,"source":"contracts\\BiatecClammPool.algo.ts:120","pc":[461,462]},{"teal":72,"source":"contracts\\BiatecClammPool.algo.ts:120","pc":[463,464]},{"teal":73,"source":"contracts\\BiatecClammPool.algo.ts:120","pc":[465]},{"teal":77,"source":"contracts\\BiatecClammPool.algo.ts:121","pc":[466,467]},{"teal":78,"source":"contracts\\BiatecClammPool.algo.ts:121","pc":[468]},{"teal":79,"source":"contracts\\BiatecClammPool.algo.ts:121","pc":[469]},{"teal":83,"source":"contracts\\BiatecClammPool.algo.ts:122","pc":[470,471]},{"teal":84,"source":"contracts\\BiatecClammPool.algo.ts:122","pc":[472,473]},{"teal":85,"source":"contracts\\BiatecClammPool.algo.ts:122","pc":[474]},{"teal":89,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[475,476]},{"teal":90,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[477]},{"teal":91,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[478,479]},{"teal":92,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[480]},{"teal":93,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[481,482]},{"teal":94,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[483]},{"teal":95,"source":"contracts\\BiatecClammPool.algo.ts:123","pc":[484]},{"teal":96,"source":"contracts\\BiatecClammPool.algo.ts:114","pc":[485]},{"teal":101,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[486,487,488]},{"teal":102,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[489,490,491]},{"teal":105,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[492,493,494]},{"teal":106,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[495]},{"teal":109,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[496,497,498]},{"teal":110,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[499]},{"teal":111,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[500]},{"teal":117,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[501,502,503]},{"teal":120,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[504]},{"teal":124,"source":"contracts\\BiatecClammPool.algo.ts:130","pc":[505,506]},{"teal":125,"source":"contracts\\BiatecClammPool.algo.ts:130","pc":[507,508]},{"teal":126,"source":"contracts\\BiatecClammPool.algo.ts:130","pc":[509]},{"teal":127,"source":"contracts\\BiatecClammPool.algo.ts:130","pc":[510]},{"teal":130,"source":"contracts\\BiatecClammPool.algo.ts:130","errorMessage":"E_CONFIG","pc":[511]},{"teal":134,"source":"contracts\\BiatecClammPool.algo.ts:131","pc":[512,513]},{"teal":135,"source":"contracts\\BiatecClammPool.algo.ts:131","pc":[514,515,516]},{"teal":136,"source":"contracts\\BiatecClammPool.algo.ts:131","pc":[517]},{"teal":139,"source":"contracts\\BiatecClammPool.algo.ts:131","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('u')","pc":[518]},{"teal":140,"source":"contracts\\BiatecClammPool.algo.ts:131","pc":[519,520]},{"teal":144,"source":"contracts\\BiatecClammPool.algo.ts:132","pc":[521,522]},{"teal":145,"source":"contracts\\BiatecClammPool.algo.ts:132","pc":[523,524]},{"teal":146,"source":"contracts\\BiatecClammPool.algo.ts:132","pc":[525]},{"teal":149,"source":"contracts\\BiatecClammPool.algo.ts:132","errorMessage":"E_UPDATER","pc":[526]},{"teal":153,"source":"contracts\\BiatecClammPool.algo.ts:133","pc":[527,528]},{"teal":154,"source":"contracts\\BiatecClammPool.algo.ts:133","pc":[529]},{"teal":158,"source":"contracts\\BiatecClammPool.algo.ts:134","pc":[530,531]},{"teal":159,"source":"contracts\\BiatecClammPool.algo.ts:134","pc":[532]},{"teal":163,"source":"contracts\\BiatecClammPool.algo.ts:135","pc":[533,534]},{"teal":164,"source":"contracts\\BiatecClammPool.algo.ts:135","pc":[535,536]},{"teal":165,"source":"contracts\\BiatecClammPool.algo.ts:135","pc":[537]},{"teal":166,"source":"contracts\\BiatecClammPool.algo.ts:129","pc":[538]},{"teal":171,"source":"contracts\\BiatecClammPool.algo.ts:138","pc":[539,540]},{"teal":174,"source":"contracts\\BiatecClammPool.algo.ts:138","pc":[541,542,543]},{"teal":175,"source":"contracts\\BiatecClammPool.algo.ts:138","pc":[544]},{"teal":176,"source":"contracts\\BiatecClammPool.algo.ts:138","pc":[545]},{"teal":177,"source":"contracts\\BiatecClammPool.algo.ts:138","pc":[546]},{"teal":178,"source":"contracts\\BiatecClammPool.algo.ts:138","pc":[547]},{"teal":179,"source":"contracts\\BiatecClammPool.algo.ts:138","pc":[548]},{"teal":183,"source":"contracts\\BiatecClammPool.algo.ts:138","pc":[549,550,551]},{"teal":187,"source":"contracts\\BiatecClammPool.algo.ts:140","pc":[552,553]},{"teal":188,"source":"contracts\\BiatecClammPool.algo.ts:140","pc":[554]},{"teal":189,"source":"contracts\\BiatecClammPool.algo.ts:138","pc":[555]},{"teal":194,"source":"contracts\\BiatecClammPool.algo.ts:143","pc":[556,557]},{"teal":197,"source":"contracts\\BiatecClammPool.algo.ts:143","pc":[558,559,560]},{"teal":198,"source":"contracts\\BiatecClammPool.algo.ts:143","pc":[561]},{"teal":199,"source":"contracts\\BiatecClammPool.algo.ts:143","pc":[562]},{"teal":200,"source":"contracts\\BiatecClammPool.algo.ts:143","pc":[563]},{"teal":201,"source":"contracts\\BiatecClammPool.algo.ts:143","pc":[564]},{"teal":202,"source":"contracts\\BiatecClammPool.algo.ts:143","pc":[565]},{"teal":206,"source":"contracts\\BiatecClammPool.algo.ts:143","pc":[566,567,568]},{"teal":210,"source":"contracts\\BiatecClammPool.algo.ts:145","pc":[569,570]},{"teal":211,"source":"contracts\\BiatecClammPool.algo.ts:145","pc":[571]},{"teal":212,"source":"contracts\\BiatecClammPool.algo.ts:143","pc":[572]},{"teal":217,"source":"contracts\\BiatecClammPool.algo.ts:148","pc":[573,574]},{"teal":220,"source":"contracts\\BiatecClammPool.algo.ts:148","pc":[575,576,577]},{"teal":221,"source":"contracts\\BiatecClammPool.algo.ts:148","pc":[578]},{"teal":222,"source":"contracts\\BiatecClammPool.algo.ts:148","pc":[579]},{"teal":223,"source":"contracts\\BiatecClammPool.algo.ts:148","pc":[580]},{"teal":224,"source":"contracts\\BiatecClammPool.algo.ts:148","pc":[581]},{"teal":225,"source":"contracts\\BiatecClammPool.algo.ts:148","pc":[582]},{"teal":229,"source":"contracts\\BiatecClammPool.algo.ts:148","pc":[583,584,585]},{"teal":233,"source":"contracts\\BiatecClammPool.algo.ts:150","pc":[586,587]},{"teal":234,"source":"contracts\\BiatecClammPool.algo.ts:150","pc":[588]},{"teal":235,"source":"contracts\\BiatecClammPool.algo.ts:148","pc":[589]},{"teal":240,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[590,591]},{"teal":243,"source":"contracts\\BiatecClammPool.algo.ts:177","pc":[592,593,594]},{"teal":244,"source":"contracts\\BiatecClammPool.algo.ts:177","pc":[595]},{"teal":247,"source":"contracts\\BiatecClammPool.algo.ts:176","pc":[596,597,598]},{"teal":248,"source":"contracts\\BiatecClammPool.algo.ts:176","pc":[599]},{"teal":251,"source":"contracts\\BiatecClammPool.algo.ts:175","pc":[600,601,602]},{"teal":252,"source":"contracts\\BiatecClammPool.algo.ts:175","pc":[603]},{"teal":255,"source":"contracts\\BiatecClammPool.algo.ts:174","pc":[604,605,606]},{"teal":256,"source":"contracts\\BiatecClammPool.algo.ts:174","pc":[607]},{"teal":259,"source":"contracts\\BiatecClammPool.algo.ts:173","pc":[608,609,610]},{"teal":260,"source":"contracts\\BiatecClammPool.algo.ts:173","pc":[611]},{"teal":263,"source":"contracts\\BiatecClammPool.algo.ts:172","pc":[612,613]},{"teal":264,"source":"contracts\\BiatecClammPool.algo.ts:172","pc":[614]},{"teal":265,"source":"contracts\\BiatecClammPool.algo.ts:172","pc":[615]},{"teal":266,"source":"contracts\\BiatecClammPool.algo.ts:172","pc":[616]},{"teal":267,"source":"contracts\\BiatecClammPool.algo.ts:172","pc":[617,618]},{"teal":268,"source":"contracts\\BiatecClammPool.algo.ts:172","pc":[619]},{"teal":269,"source":"contracts\\BiatecClammPool.algo.ts:172","pc":[620]},{"teal":272,"source":"contracts\\BiatecClammPool.algo.ts:172","errorMessage":"argument 5 (txSeed) for bootstrap must be a pay transaction","pc":[621]},{"teal":275,"source":"contracts\\BiatecClammPool.algo.ts:171","pc":[622,623,624]},{"teal":276,"source":"contracts\\BiatecClammPool.algo.ts:171","pc":[625]},{"teal":279,"source":"contracts\\BiatecClammPool.algo.ts:170","pc":[626,627,628]},{"teal":280,"source":"contracts\\BiatecClammPool.algo.ts:170","pc":[629]},{"teal":283,"source":"contracts\\BiatecClammPool.algo.ts:169","pc":[630,631,632]},{"teal":284,"source":"contracts\\BiatecClammPool.algo.ts:169","pc":[633]},{"teal":287,"source":"contracts\\BiatecClammPool.algo.ts:168","pc":[634,635,636]},{"teal":288,"source":"contracts\\BiatecClammPool.algo.ts:168","pc":[637]},{"teal":291,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[638,639,640]},{"teal":292,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[641]},{"teal":293,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[642]},{"teal":294,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[643]},{"teal":295,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[644]},{"teal":296,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[645]},{"teal":313,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[646,647,648]},{"teal":316,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[649]},{"teal":317,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[650,651]},{"teal":321,"source":"contracts\\BiatecClammPool.algo.ts:179","pc":[652,653]},{"teal":322,"source":"contracts\\BiatecClammPool.algo.ts:179","pc":[654,655]},{"teal":323,"source":"contracts\\BiatecClammPool.algo.ts:179","pc":[656]},{"teal":326,"source":"contracts\\BiatecClammPool.algo.ts:179","errorMessage":"Only the pool provider can init this contract","pc":[657]},{"teal":331,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[658,659]},{"teal":332,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[660,661]},{"teal":333,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[662,663]},{"teal":334,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[664]},{"teal":337,"source":"contracts\\BiatecClammPool.algo.ts:180","errorMessage":"transaction verification failed: {\"txn\":\"txSeed\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[665]},{"teal":340,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[666,667]},{"teal":341,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[668,669]},{"teal":342,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[670,671,672,673]},{"teal":343,"source":"contracts\\BiatecClammPool.algo.ts:180","pc":[674]},{"teal":346,"source":"contracts\\BiatecClammPool.algo.ts:180","errorMessage":"transaction verification failed: {\"txn\":\"txSeed\",\"field\":\"amount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=400_000\"}","pc":[675]},{"teal":350,"source":"contracts\\BiatecClammPool.algo.ts:181","pc":[676,677]},{"teal":351,"source":"contracts\\BiatecClammPool.algo.ts:181","pc":[678]},{"teal":352,"source":"contracts\\BiatecClammPool.algo.ts:181","pc":[679]},{"teal":353,"source":"contracts\\BiatecClammPool.algo.ts:181","pc":[680]},{"teal":356,"source":"contracts\\BiatecClammPool.algo.ts:181","errorMessage":"E_PRICE_MAX","pc":[681]},{"teal":360,"source":"contracts\\BiatecClammPool.algo.ts:182","pc":[682,683]},{"teal":361,"source":"contracts\\BiatecClammPool.algo.ts:182","pc":[684,685,686]},{"teal":362,"source":"contracts\\BiatecClammPool.algo.ts:182","pc":[687,688]},{"teal":363,"source":"contracts\\BiatecClammPool.algo.ts:182","pc":[689]},{"teal":364,"source":"contracts\\BiatecClammPool.algo.ts:182","pc":[690]},{"teal":367,"source":"contracts\\BiatecClammPool.algo.ts:182","errorMessage":"E_SENDER","pc":[691]},{"teal":371,"source":"contracts\\BiatecClammPool.algo.ts:183","pc":[692,693]},{"teal":372,"source":"contracts\\BiatecClammPool.algo.ts:183","pc":[694]},{"teal":373,"source":"contracts\\BiatecClammPool.algo.ts:183","pc":[695]},{"teal":376,"source":"contracts\\BiatecClammPool.algo.ts:183","errorMessage":"E_PRICE","pc":[696]},{"teal":380,"source":"contracts\\BiatecClammPool.algo.ts:185","pc":[697,698]},{"teal":381,"source":"contracts\\BiatecClammPool.algo.ts:185","pc":[699,700]},{"teal":382,"source":"contracts\\BiatecClammPool.algo.ts:185","pc":[701]},{"teal":385,"source":"contracts\\BiatecClammPool.algo.ts:185","errorMessage":"Asset A must not be asset B","pc":[702]},{"teal":389,"source":"contracts\\BiatecClammPool.algo.ts:186","pc":[703,704]},{"teal":390,"source":"contracts\\BiatecClammPool.algo.ts:186","pc":[705,706,707,708,709]},{"teal":391,"source":"contracts\\BiatecClammPool.algo.ts:186","pc":[710]},{"teal":392,"source":"contracts\\BiatecClammPool.algo.ts:186","pc":[711]},{"teal":396,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[712,713,714]},{"teal":397,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[715,716]},{"teal":398,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[717]},{"teal":399,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[718]},{"teal":400,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[719]},{"teal":401,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[720]},{"teal":402,"source":"contracts\\BiatecClammPool.algo.ts:188","pc":[721]},{"teal":407,"source":"contracts\\BiatecClammPool.algo.ts:189","pc":[722,723]},{"teal":408,"source":"contracts\\BiatecClammPool.algo.ts:189","pc":[724]},{"teal":409,"source":"contracts\\BiatecClammPool.algo.ts:189","pc":[725]},{"teal":410,"source":"contracts\\BiatecClammPool.algo.ts:189","pc":[726,727,728]},{"teal":415,"source":"contracts\\BiatecClammPool.algo.ts:190","pc":[729,730]},{"teal":416,"source":"contracts\\BiatecClammPool.algo.ts:190","pc":[731,732]},{"teal":417,"source":"contracts\\BiatecClammPool.algo.ts:190","pc":[733]},{"teal":418,"source":"contracts\\BiatecClammPool.algo.ts:190","pc":[734,735]},{"teal":419,"source":"contracts\\BiatecClammPool.algo.ts:190","pc":[736]},{"teal":420,"source":"contracts\\BiatecClammPool.algo.ts:190","pc":[737]},{"teal":426,"source":"contracts\\BiatecClammPool.algo.ts:192","pc":[738,739]},{"teal":427,"source":"contracts\\BiatecClammPool.algo.ts:192","pc":[740]},{"teal":428,"source":"contracts\\BiatecClammPool.algo.ts:192","pc":[741]},{"teal":429,"source":"contracts\\BiatecClammPool.algo.ts:192","pc":[742,743,744]},{"teal":434,"source":"contracts\\BiatecClammPool.algo.ts:193","pc":[745,746]},{"teal":435,"source":"contracts\\BiatecClammPool.algo.ts:193","pc":[747,748]},{"teal":436,"source":"contracts\\BiatecClammPool.algo.ts:193","pc":[749]},{"teal":437,"source":"contracts\\BiatecClammPool.algo.ts:193","pc":[750,751]},{"teal":438,"source":"contracts\\BiatecClammPool.algo.ts:193","pc":[752]},{"teal":439,"source":"contracts\\BiatecClammPool.algo.ts:193","pc":[753]},{"teal":444,"source":"contracts\\BiatecClammPool.algo.ts:196","pc":[754,755]},{"teal":445,"source":"contracts\\BiatecClammPool.algo.ts:196","pc":[756]},{"teal":446,"source":"contracts\\BiatecClammPool.algo.ts:196","pc":[757]},{"teal":447,"source":"contracts\\BiatecClammPool.algo.ts:196","pc":[758]},{"teal":450,"source":"contracts\\BiatecClammPool.algo.ts:196","errorMessage":"E_FEE","pc":[759]},{"teal":454,"source":"contracts\\BiatecClammPool.algo.ts:198","pc":[760,761]},{"teal":455,"source":"contracts\\BiatecClammPool.algo.ts:198","pc":[762,763]},{"teal":456,"source":"contracts\\BiatecClammPool.algo.ts:198","pc":[764]},{"teal":459,"source":"contracts\\BiatecClammPool.algo.ts:198","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('p')","pc":[765]},{"teal":460,"source":"contracts\\BiatecClammPool.algo.ts:198","pc":[766,767]},{"teal":467,"source":"contracts\\BiatecClammPool.algo.ts:200","pc":[768,769]},{"teal":468,"source":"contracts\\BiatecClammPool.algo.ts:200","pc":[770,771]},{"teal":469,"source":"contracts\\BiatecClammPool.algo.ts:200","pc":[772]},{"teal":472,"source":"contracts\\BiatecClammPool.algo.ts:199","errorMessage":"E_CONFIG","pc":[773]},{"teal":476,"source":"contracts\\BiatecClammPool.algo.ts:203","pc":[774,775]},{"teal":477,"source":"contracts\\BiatecClammPool.algo.ts:203","pc":[776,777]},{"teal":478,"source":"contracts\\BiatecClammPool.algo.ts:203","pc":[778]},{"teal":481,"source":"contracts\\BiatecClammPool.algo.ts:203","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('s')","pc":[779]},{"teal":482,"source":"contracts\\BiatecClammPool.algo.ts:203","pc":[780,781]},{"teal":486,"source":"contracts\\BiatecClammPool.algo.ts:204","pc":[782,783]},{"teal":487,"source":"contracts\\BiatecClammPool.algo.ts:204","pc":[784]},{"teal":488,"source":"contracts\\BiatecClammPool.algo.ts:204","pc":[785]},{"teal":491,"source":"contracts\\BiatecClammPool.algo.ts:204","errorMessage":"E_PAUSED","pc":[786]},{"teal":495,"source":"contracts\\BiatecClammPool.algo.ts:206","pc":[787,788]},{"teal":496,"source":"contracts\\BiatecClammPool.algo.ts:206","pc":[789,790]},{"teal":497,"source":"contracts\\BiatecClammPool.algo.ts:206","pc":[791]},{"teal":501,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[792,793]},{"teal":502,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[794,795]},{"teal":503,"source":"contracts\\BiatecClammPool.algo.ts:208","pc":[796]},{"teal":507,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[797,798]},{"teal":508,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[799,800]},{"teal":509,"source":"contracts\\BiatecClammPool.algo.ts:209","pc":[801]},{"teal":513,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[802,803]},{"teal":514,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[804,805]},{"teal":515,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[806]},{"teal":516,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[807]},{"teal":517,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[808]},{"teal":518,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[809]},{"teal":519,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[810]},{"teal":520,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[811]},{"teal":521,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[812]},{"teal":522,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[813]},{"teal":525,"source":"contracts\\BiatecClammPool.algo.ts:210","errorMessage":"sqrt((priceMin as uint256) * s) overflowed 256 bits","pc":[814]},{"teal":526,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[815]},{"teal":527,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[816]},{"teal":528,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[817]},{"teal":529,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[818]},{"teal":530,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[819]},{"teal":531,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[820]},{"teal":532,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[821]},{"teal":533,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[822]},{"teal":534,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[823]},{"teal":535,"source":"contracts\\BiatecClammPool.algo.ts:210","pc":[824]},{"teal":539,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[825,826]},{"teal":540,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[827,828]},{"teal":541,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[829]},{"teal":542,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[830]},{"teal":543,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[831]},{"teal":544,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[832]},{"teal":545,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[833]},{"teal":546,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[834]},{"teal":547,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[835]},{"teal":548,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[836]},{"teal":551,"source":"contracts\\BiatecClammPool.algo.ts:211","errorMessage":"sqrt((priceMax as uint256) * s) overflowed 256 bits","pc":[837]},{"teal":552,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[838]},{"teal":553,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[839]},{"teal":554,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[840]},{"teal":555,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[841]},{"teal":556,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[842]},{"teal":557,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[843]},{"teal":558,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[844]},{"teal":559,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[845]},{"teal":560,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[846]},{"teal":561,"source":"contracts\\BiatecClammPool.algo.ts:211","pc":[847]},{"teal":565,"source":"contracts\\BiatecClammPool.algo.ts:212","pc":[848]},{"teal":566,"source":"contracts\\BiatecClammPool.algo.ts:212","pc":[849,850]},{"teal":567,"source":"contracts\\BiatecClammPool.algo.ts:212","pc":[851]},{"teal":571,"source":"contracts\\BiatecClammPool.algo.ts:213","pc":[852,853]},{"teal":572,"source":"contracts\\BiatecClammPool.algo.ts:213","pc":[854,855]},{"teal":573,"source":"contracts\\BiatecClammPool.algo.ts:213","pc":[856]},{"teal":577,"source":"contracts\\BiatecClammPool.algo.ts:214","pc":[857,858]},{"teal":578,"source":"contracts\\BiatecClammPool.algo.ts:214","pc":[859,860]},{"teal":579,"source":"contracts\\BiatecClammPool.algo.ts:214","pc":[861]},{"teal":583,"source":"contracts\\BiatecClammPool.algo.ts:216","pc":[862,863]},{"teal":584,"source":"contracts\\BiatecClammPool.algo.ts:216","pc":[864,865]},{"teal":585,"source":"contracts\\BiatecClammPool.algo.ts:216","pc":[866]},{"teal":589,"source":"contracts\\BiatecClammPool.algo.ts:217","pc":[867,868]},{"teal":590,"source":"contracts\\BiatecClammPool.algo.ts:217","pc":[869,870]},{"teal":591,"source":"contracts\\BiatecClammPool.algo.ts:217","pc":[871]},{"teal":595,"source":"contracts\\BiatecClammPool.algo.ts:218","pc":[872,873]},{"teal":596,"source":"contracts\\BiatecClammPool.algo.ts:218","pc":[874,875]},{"teal":597,"source":"contracts\\BiatecClammPool.algo.ts:218","pc":[876,877]},{"teal":598,"source":"contracts\\BiatecClammPool.algo.ts:218","pc":[878,879,880]},{"teal":599,"source":"contracts\\BiatecClammPool.algo.ts:218","pc":[881]},{"teal":603,"source":"contracts\\BiatecClammPool.algo.ts:219","pc":[882,883]},{"teal":604,"source":"contracts\\BiatecClammPool.algo.ts:219","pc":[884,885]},{"teal":605,"source":"contracts\\BiatecClammPool.algo.ts:219","pc":[886]},{"teal":609,"source":"contracts\\BiatecClammPool.algo.ts:220","pc":[887,888]},{"teal":610,"source":"contracts\\BiatecClammPool.algo.ts:220","pc":[889,890,891]},{"teal":614,"source":"contracts\\BiatecClammPool.algo.ts:221","pc":[892,893]},{"teal":615,"source":"contracts\\BiatecClammPool.algo.ts:221","pc":[894,895,896]},{"teal":619,"source":"contracts\\BiatecClammPool.algo.ts:222","pc":[897,898]},{"teal":620,"source":"contracts\\BiatecClammPool.algo.ts:222","pc":[899,900]},{"teal":621,"source":"contracts\\BiatecClammPool.algo.ts:222","pc":[901]},{"teal":625,"source":"contracts\\BiatecClammPool.algo.ts:224","pc":[902,903]},{"teal":626,"source":"contracts\\BiatecClammPool.algo.ts:224","pc":[904,905]},{"teal":631,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[906,907]},{"teal":632,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[908]},{"teal":633,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[909]},{"teal":634,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[910,911,912]},{"teal":639,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[913,914]},{"teal":640,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[915,916]},{"teal":641,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[917]},{"teal":642,"source":"contracts\\BiatecClammPool.algo.ts:225","pc":[918,919]},{"teal":647,"source":"contracts\\BiatecClammPool.algo.ts:226","pc":[920,921]},{"teal":648,"source":"contracts\\BiatecClammPool.algo.ts:226","pc":[922,923]},{"teal":653,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[924,925]},{"teal":654,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[926]},{"teal":655,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[927]},{"teal":656,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[928,929,930]},{"teal":661,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[931,932]},{"teal":662,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[933,934]},{"teal":663,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[935]},{"teal":664,"source":"contracts\\BiatecClammPool.algo.ts:227","pc":[936,937]},{"teal":669,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[938,939]},{"teal":670,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[940,941]},{"teal":671,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[942,943]},{"teal":672,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[944]},{"teal":673,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[945]},{"teal":674,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[946]},{"teal":675,"source":"contracts\\BiatecClammPool.algo.ts:229","pc":[947,948]},{"teal":679,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[949,950]},{"teal":680,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[951,952]},{"teal":681,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[953,954]},{"teal":682,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[955]},{"teal":683,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[956]},{"teal":684,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[957]},{"teal":685,"source":"contracts\\BiatecClammPool.algo.ts:231","pc":[958,959]},{"teal":689,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[960,961]},{"teal":690,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[962,963]},{"teal":691,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[964]},{"teal":692,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[965]},{"teal":693,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[966]},{"teal":694,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[967]},{"teal":697,"source":"contracts\\BiatecClammPool.algo.ts:232","errorMessage":"assetADelicmalScale2Scale overflowed 256 bits","pc":[968]},{"teal":698,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[969]},{"teal":699,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[970]},{"teal":700,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[971]},{"teal":701,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[972]},{"teal":702,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[973]},{"teal":703,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[974]},{"teal":704,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[975]},{"teal":705,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[976]},{"teal":706,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[977]},{"teal":707,"source":"contracts\\BiatecClammPool.algo.ts:232","pc":[978]},{"teal":711,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[979,980]},{"teal":712,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[981,982]},{"teal":713,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[983]},{"teal":714,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[984]},{"teal":715,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[985]},{"teal":716,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[986]},{"teal":719,"source":"contracts\\BiatecClammPool.algo.ts:233","errorMessage":"assetBDelicmalScale2Scale overflowed 256 bits","pc":[987]},{"teal":720,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[988]},{"teal":721,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[989]},{"teal":722,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[990]},{"teal":723,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[991]},{"teal":724,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[992]},{"teal":725,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[993]},{"teal":726,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[994]},{"teal":727,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[995]},{"teal":728,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[996]},{"teal":729,"source":"contracts\\BiatecClammPool.algo.ts:233","pc":[997]},{"teal":733,"source":"contracts\\BiatecClammPool.algo.ts:234","pc":[998,999]},{"teal":734,"source":"contracts\\BiatecClammPool.algo.ts:234","pc":[1000]},{"teal":737,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[1001,1002]},{"teal":740,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[1003,1004]},{"teal":741,"source":"contracts\\BiatecClammPool.algo.ts:167","pc":[1005]},{"teal":746,"source":"contracts\\BiatecClammPool.algo.ts:239","pc":[1006,1007,1008]},{"teal":747,"source":"contracts\\BiatecClammPool.algo.ts:239","pc":[1009]},{"teal":748,"source":"contracts\\BiatecClammPool.algo.ts:239","pc":[1010]},{"teal":754,"source":"contracts\\BiatecClammPool.algo.ts:239","pc":[1011,1012,1013]},{"teal":757,"source":"contracts\\BiatecClammPool.algo.ts:239","pc":[1014]},{"teal":758,"source":"contracts\\BiatecClammPool.algo.ts:239","pc":[1015]},{"teal":762,"source":"contracts\\BiatecClammPool.algo.ts:240","pc":[1016,1017]},{"teal":763,"source":"contracts\\BiatecClammPool.algo.ts:240","pc":[1018]},{"teal":764,"source":"contracts\\BiatecClammPool.algo.ts:240","pc":[1019]},{"teal":765,"source":"contracts\\BiatecClammPool.algo.ts:240","pc":[1020]},{"teal":766,"source":"contracts\\BiatecClammPool.algo.ts:240","pc":[1021]},{"teal":767,"source":"contracts\\BiatecClammPool.algo.ts:240","pc":[1022]},{"teal":771,"source":"contracts\\BiatecClammPool.algo.ts:241","pc":[1023,1024]},{"teal":772,"source":"contracts\\BiatecClammPool.algo.ts:241","pc":[1025]},{"teal":773,"source":"contracts\\BiatecClammPool.algo.ts:241","pc":[1026,1027]},{"teal":777,"source":"contracts\\BiatecClammPool.algo.ts:242","pc":[1028,1029]},{"teal":778,"source":"contracts\\BiatecClammPool.algo.ts:242","pc":[1030,1031]},{"teal":779,"source":"contracts\\BiatecClammPool.algo.ts:242","pc":[1032]},{"teal":782,"source":"contracts\\BiatecClammPool.algo.ts:242","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('p')","pc":[1033]},{"teal":783,"source":"contracts\\BiatecClammPool.algo.ts:242","pc":[1034,1035]},{"teal":792,"source":"contracts\\BiatecClammPool.algo.ts:243","pc":[1036]},{"teal":793,"source":"contracts\\BiatecClammPool.algo.ts:243","pc":[1037,1038]},{"teal":794,"source":"contracts\\BiatecClammPool.algo.ts:243","pc":[1039,1040]},{"teal":795,"source":"contracts\\BiatecClammPool.algo.ts:244","pc":[1041,1042,1043,1044,1045,1046]},{"teal":796,"source":"contracts\\BiatecClammPool.algo.ts:244","pc":[1047,1048]},{"teal":802,"source":"contracts\\BiatecClammPool.algo.ts:246","pc":[1049]},{"teal":803,"source":"contracts\\BiatecClammPool.algo.ts:246","pc":[1050,1051]},{"teal":807,"source":"contracts\\BiatecClammPool.algo.ts:247","pc":[1052,1053]},{"teal":808,"source":"contracts\\BiatecClammPool.algo.ts:247","pc":[1054,1055]},{"teal":811,"source":"contracts\\BiatecClammPool.algo.ts:243","pc":[1056]},{"teal":815,"source":"contracts\\BiatecClammPool.algo.ts:249","pc":[1057,1058]},{"teal":816,"source":"contracts\\BiatecClammPool.algo.ts:249","pc":[1059]},{"teal":817,"source":"contracts\\BiatecClammPool.algo.ts:249","pc":[1060,1061]},{"teal":818,"source":"contracts\\BiatecClammPool.algo.ts:249","pc":[1062]},{"teal":819,"source":"contracts\\BiatecClammPool.algo.ts:249","pc":[1063,1064]},{"teal":820,"source":"contracts\\BiatecClammPool.algo.ts:249","pc":[1065]},{"teal":821,"source":"contracts\\BiatecClammPool.algo.ts:249","pc":[1066]},{"teal":822,"source":"contracts\\BiatecClammPool.algo.ts:239","pc":[1067]},{"teal":831,"source":"contracts\\BiatecClammPool.algo.ts:257","pc":[1068,1069,1070]},{"teal":836,"source":"contracts\\BiatecClammPool.algo.ts:258","pc":[1071,1072]},{"teal":837,"source":"contracts\\BiatecClammPool.algo.ts:258","pc":[1073]},{"teal":838,"source":"contracts\\BiatecClammPool.algo.ts:258","pc":[1074]},{"teal":839,"source":"contracts\\BiatecClammPool.algo.ts:258","pc":[1075,1076,1077]},{"teal":848,"source":"contracts\\BiatecClammPool.algo.ts:259","pc":[1078]},{"teal":849,"source":"contracts\\BiatecClammPool.algo.ts:259","pc":[1079]},{"teal":850,"source":"contracts\\BiatecClammPool.algo.ts:259","pc":[1080,1081]},{"teal":854,"source":"contracts\\BiatecClammPool.algo.ts:260","pc":[1082,1083]},{"teal":855,"source":"contracts\\BiatecClammPool.algo.ts:260","pc":[1084,1085]},{"teal":859,"source":"contracts\\BiatecClammPool.algo.ts:261","pc":[1086,1087]},{"teal":860,"source":"contracts\\BiatecClammPool.algo.ts:261","pc":[1088,1089]},{"teal":864,"source":"contracts\\BiatecClammPool.algo.ts:262","pc":[1090]},{"teal":865,"source":"contracts\\BiatecClammPool.algo.ts:262","pc":[1091,1092]},{"teal":868,"source":"contracts\\BiatecClammPool.algo.ts:259","pc":[1093]},{"teal":869,"source":"contracts\\BiatecClammPool.algo.ts:258","pc":[1094,1095,1096]},{"teal":879,"source":"contracts\\BiatecClammPool.algo.ts:265","pc":[1097]},{"teal":880,"source":"contracts\\BiatecClammPool.algo.ts:265","pc":[1098,1099]},{"teal":881,"source":"contracts\\BiatecClammPool.algo.ts:265","pc":[1100,1101]},{"teal":885,"source":"contracts\\BiatecClammPool.algo.ts:266","pc":[1102,1103]},{"teal":886,"source":"contracts\\BiatecClammPool.algo.ts:266","pc":[1104,1105]},{"teal":890,"source":"contracts\\BiatecClammPool.algo.ts:267","pc":[1106,1107]},{"teal":891,"source":"contracts\\BiatecClammPool.algo.ts:267","pc":[1108,1109]},{"teal":895,"source":"contracts\\BiatecClammPool.algo.ts:268","pc":[1110,1111]},{"teal":896,"source":"contracts\\BiatecClammPool.algo.ts:268","pc":[1112,1113]},{"teal":900,"source":"contracts\\BiatecClammPool.algo.ts:269","pc":[1114]},{"teal":901,"source":"contracts\\BiatecClammPool.algo.ts:269","pc":[1115,1116]},{"teal":904,"source":"contracts\\BiatecClammPool.algo.ts:265","pc":[1117]},{"teal":907,"source":"contracts\\BiatecClammPool.algo.ts:257","pc":[1118]},{"teal":914,"source":"contracts\\BiatecClammPool.algo.ts:278","pc":[1119,1120,1121]},{"teal":919,"source":"contracts\\BiatecClammPool.algo.ts:279","pc":[1122,1123]},{"teal":920,"source":"contracts\\BiatecClammPool.algo.ts:279","pc":[1124]},{"teal":921,"source":"contracts\\BiatecClammPool.algo.ts:279","pc":[1125]},{"teal":922,"source":"contracts\\BiatecClammPool.algo.ts:279","pc":[1126,1127,1128]},{"teal":927,"source":"contracts\\BiatecClammPool.algo.ts:281","pc":[1129]},{"teal":928,"source":"contracts\\BiatecClammPool.algo.ts:281","pc":[1130,1131]},{"teal":929,"source":"contracts\\BiatecClammPool.algo.ts:281","pc":[1132,1133]},{"teal":930,"source":"contracts\\BiatecClammPool.algo.ts:281","pc":[1134,1135,1136]},{"teal":933,"source":"contracts\\BiatecClammPool.algo.ts:278","pc":[1137]},{"teal":942,"source":"contracts\\BiatecClammPool.algo.ts:290","pc":[1138,1139,1140]},{"teal":945,"source":"contracts\\BiatecClammPool.algo.ts:290","pc":[1141]},{"teal":946,"source":"contracts\\BiatecClammPool.algo.ts:290","pc":[1142,1143]},{"teal":950,"source":"contracts\\BiatecClammPool.algo.ts:294","pc":[1144,1145]},{"teal":951,"source":"contracts\\BiatecClammPool.algo.ts:294","pc":[1146,1147]},{"teal":956,"source":"contracts\\BiatecClammPool.algo.ts:295","pc":[1148,1149]},{"teal":957,"source":"contracts\\BiatecClammPool.algo.ts:295","pc":[1150]},{"teal":958,"source":"contracts\\BiatecClammPool.algo.ts:295","pc":[1151]},{"teal":959,"source":"contracts\\BiatecClammPool.algo.ts:295","pc":[1152,1153,1154]},{"teal":964,"source":"contracts\\BiatecClammPool.algo.ts:296","pc":[1155,1156]},{"teal":965,"source":"contracts\\BiatecClammPool.algo.ts:296","pc":[1157,1158]},{"teal":966,"source":"contracts\\BiatecClammPool.algo.ts:296","pc":[1159]},{"teal":967,"source":"contracts\\BiatecClammPool.algo.ts:296","pc":[1160,1161]},{"teal":972,"source":"contracts\\BiatecClammPool.algo.ts:298","pc":[1162,1163]},{"teal":973,"source":"contracts\\BiatecClammPool.algo.ts:298","pc":[1164,1165]},{"teal":978,"source":"contracts\\BiatecClammPool.algo.ts:299","pc":[1166,1167]},{"teal":979,"source":"contracts\\BiatecClammPool.algo.ts:299","pc":[1168]},{"teal":980,"source":"contracts\\BiatecClammPool.algo.ts:299","pc":[1169]},{"teal":981,"source":"contracts\\BiatecClammPool.algo.ts:299","pc":[1170,1171,1172]},{"teal":986,"source":"contracts\\BiatecClammPool.algo.ts:300","pc":[1173,1174]},{"teal":987,"source":"contracts\\BiatecClammPool.algo.ts:300","pc":[1175,1176]},{"teal":988,"source":"contracts\\BiatecClammPool.algo.ts:300","pc":[1177]},{"teal":989,"source":"contracts\\BiatecClammPool.algo.ts:300","pc":[1178,1179]},{"teal":1000,"source":"contracts\\BiatecClammPool.algo.ts:304","pc":[1180,1181,1182,1183]},{"teal":1001,"source":"contracts\\BiatecClammPool.algo.ts:307","pc":[1184,1185]},{"teal":1002,"source":"contracts\\BiatecClammPool.algo.ts:304","pc":[1186]},{"teal":1003,"source":"contracts\\BiatecClammPool.algo.ts:308","pc":[1187,1188,1189]},{"teal":1004,"source":"contracts\\BiatecClammPool.algo.ts:307","pc":[1190]},{"teal":1005,"source":"contracts\\BiatecClammPool.algo.ts:309","pc":[1191,1192]},{"teal":1006,"source":"contracts\\BiatecClammPool.algo.ts:308","pc":[1193]},{"teal":1007,"source":"contracts\\BiatecClammPool.algo.ts:303","pc":[1194,1195]},{"teal":1019,"source":"contracts\\BiatecClammPool.algo.ts:313","pc":[1196]},{"teal":1020,"source":"contracts\\BiatecClammPool.algo.ts:313","pc":[1197,1198]},{"teal":1021,"source":"contracts\\BiatecClammPool.algo.ts:313","pc":[1199,1200]},{"teal":1025,"source":"contracts\\BiatecClammPool.algo.ts:314","pc":[1201,1202]},{"teal":1026,"source":"contracts\\BiatecClammPool.algo.ts:314","pc":[1203,1204]},{"teal":1030,"source":"contracts\\BiatecClammPool.algo.ts:315","pc":[1205,1206,1207,1208,1209]},{"teal":1031,"source":"contracts\\BiatecClammPool.algo.ts:315","pc":[1210,1211]},{"teal":1035,"source":"contracts\\BiatecClammPool.algo.ts:317","pc":[1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222]},{"teal":1036,"source":"contracts\\BiatecClammPool.algo.ts:317","pc":[1223,1224]},{"teal":1040,"source":"contracts\\BiatecClammPool.algo.ts:318","pc":[1225,1226]},{"teal":1041,"source":"contracts\\BiatecClammPool.algo.ts:318","pc":[1227,1228]},{"teal":1045,"source":"contracts\\BiatecClammPool.algo.ts:319","pc":[1229,1230]},{"teal":1046,"source":"contracts\\BiatecClammPool.algo.ts:319","pc":[1231,1232]},{"teal":1050,"source":"contracts\\BiatecClammPool.algo.ts:320","pc":[1233,1234]},{"teal":1051,"source":"contracts\\BiatecClammPool.algo.ts:320","pc":[1235,1236]},{"teal":1054,"source":"contracts\\BiatecClammPool.algo.ts:313","pc":[1237]},{"teal":1055,"source":"contracts\\BiatecClammPool.algo.ts:313","pc":[1238,1239]},{"teal":1058,"source":"contracts\\BiatecClammPool.algo.ts:313","pc":[1240]},{"teal":1059,"source":"contracts\\BiatecClammPool.algo.ts:313","pc":[1241,1242]},{"teal":1062,"source":"contracts\\BiatecClammPool.algo.ts:290","pc":[1243,1244]},{"teal":1065,"source":"contracts\\BiatecClammPool.algo.ts:290","pc":[1245,1246]},{"teal":1066,"source":"contracts\\BiatecClammPool.algo.ts:290","pc":[1247]},{"teal":1070,"source":"contracts\\BiatecClammPool.algo.ts:324","pc":[1248,1249,1250]},{"teal":1074,"source":"contracts\\BiatecClammPool.algo.ts:325","pc":[1251,1252]},{"teal":1075,"source":"contracts\\BiatecClammPool.algo.ts:325","pc":[1253,1254]},{"teal":1076,"source":"contracts\\BiatecClammPool.algo.ts:325","pc":[1255]},{"teal":1077,"source":"contracts\\BiatecClammPool.algo.ts:325","pc":[1256]},{"teal":1080,"source":"contracts\\BiatecClammPool.algo.ts:325","errorMessage":"assetA does not match","pc":[1257]},{"teal":1084,"source":"contracts\\BiatecClammPool.algo.ts:326","pc":[1258,1259]},{"teal":1085,"source":"contracts\\BiatecClammPool.algo.ts:326","pc":[1260,1261]},{"teal":1086,"source":"contracts\\BiatecClammPool.algo.ts:326","pc":[1262]},{"teal":1087,"source":"contracts\\BiatecClammPool.algo.ts:326","pc":[1263]},{"teal":1090,"source":"contracts\\BiatecClammPool.algo.ts:326","errorMessage":"assetB does not match","pc":[1264]},{"teal":1091,"source":"contracts\\BiatecClammPool.algo.ts:324","pc":[1265]},{"teal":1095,"source":"contracts\\BiatecClammPool.algo.ts:329","pc":[1266,1267,1268]},{"teal":1099,"source":"contracts\\BiatecClammPool.algo.ts:330","pc":[1269,1270]},{"teal":1100,"source":"contracts\\BiatecClammPool.algo.ts:330","pc":[1271,1272]},{"teal":1101,"source":"contracts\\BiatecClammPool.algo.ts:330","pc":[1273,1274,1275]},{"teal":1105,"source":"contracts\\BiatecClammPool.algo.ts:331","pc":[1276,1277]},{"teal":1106,"source":"contracts\\BiatecClammPool.algo.ts:331","pc":[1278,1279]},{"teal":1107,"source":"contracts\\BiatecClammPool.algo.ts:331","pc":[1280]},{"teal":1108,"source":"contracts\\BiatecClammPool.algo.ts:331","pc":[1281]},{"teal":1111,"source":"contracts\\BiatecClammPool.algo.ts:331","errorMessage":"assetLp does not match","pc":[1282]},{"teal":1112,"source":"contracts\\BiatecClammPool.algo.ts:329","pc":[1283]},{"teal":1117,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1284,1285]},{"teal":1120,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1286,1287,1288]},{"teal":1121,"source":"contracts\\BiatecClammPool.algo.ts:352","pc":[1289]},{"teal":1124,"source":"contracts\\BiatecClammPool.algo.ts:351","pc":[1290,1291,1292]},{"teal":1125,"source":"contracts\\BiatecClammPool.algo.ts:351","pc":[1293]},{"teal":1128,"source":"contracts\\BiatecClammPool.algo.ts:350","pc":[1294,1295,1296]},{"teal":1129,"source":"contracts\\BiatecClammPool.algo.ts:350","pc":[1297]},{"teal":1132,"source":"contracts\\BiatecClammPool.algo.ts:349","pc":[1298,1299]},{"teal":1133,"source":"contracts\\BiatecClammPool.algo.ts:349","pc":[1300]},{"teal":1134,"source":"contracts\\BiatecClammPool.algo.ts:349","pc":[1301]},{"teal":1137,"source":"contracts\\BiatecClammPool.algo.ts:348","pc":[1302,1303]},{"teal":1138,"source":"contracts\\BiatecClammPool.algo.ts:348","pc":[1304,1305]},{"teal":1139,"source":"contracts\\BiatecClammPool.algo.ts:348","pc":[1306]},{"teal":1142,"source":"contracts\\BiatecClammPool.algo.ts:347","pc":[1307,1308,1309]},{"teal":1143,"source":"contracts\\BiatecClammPool.algo.ts:347","pc":[1310]},{"teal":1146,"source":"contracts\\BiatecClammPool.algo.ts:346","pc":[1311,1312,1313]},{"teal":1147,"source":"contracts\\BiatecClammPool.algo.ts:346","pc":[1314]},{"teal":1150,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1315,1316,1317]},{"teal":1151,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1318]},{"teal":1152,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1319]},{"teal":1153,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1320]},{"teal":1154,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1321]},{"teal":1155,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1322]},{"teal":1169,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1323,1324,1325]},{"teal":1172,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1326]},{"teal":1173,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1327,1328]},{"teal":1177,"source":"contracts\\BiatecClammPool.algo.ts:354","pc":[1329]},{"teal":1178,"source":"contracts\\BiatecClammPool.algo.ts:354","pc":[1330,1331]},{"teal":1179,"source":"contracts\\BiatecClammPool.algo.ts:354","pc":[1332,1333]},{"teal":1180,"source":"contracts\\BiatecClammPool.algo.ts:354","pc":[1334]},{"teal":1181,"source":"contracts\\BiatecClammPool.algo.ts:354","pc":[1335,1336]},{"teal":1182,"source":"contracts\\BiatecClammPool.algo.ts:354","pc":[1337,1338]},{"teal":1183,"source":"contracts\\BiatecClammPool.algo.ts:354","pc":[1339]},{"teal":1184,"source":"contracts\\BiatecClammPool.algo.ts:354","pc":[1340,1341]},{"teal":1185,"source":"contracts\\BiatecClammPool.algo.ts:354","pc":[1342,1343]},{"teal":1186,"source":"contracts\\BiatecClammPool.algo.ts:354","pc":[1344,1345]},{"teal":1187,"source":"contracts\\BiatecClammPool.algo.ts:354","pc":[1346,1347]},{"teal":1188,"source":"contracts\\BiatecClammPool.algo.ts:354","pc":[1348]},{"teal":1192,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1349]},{"teal":1193,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1350,1351]},{"teal":1194,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1352,1353]},{"teal":1195,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1354]},{"teal":1196,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1355,1356]},{"teal":1197,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1357,1358]},{"teal":1198,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1359]},{"teal":1199,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1360,1361]},{"teal":1200,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1362,1363]},{"teal":1201,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1364,1365]},{"teal":1202,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1366,1367]},{"teal":1203,"source":"contracts\\BiatecClammPool.algo.ts:355","pc":[1368]},{"teal":1208,"source":"contracts\\BiatecClammPool.algo.ts:357","pc":[1369,1370]},{"teal":1209,"source":"contracts\\BiatecClammPool.algo.ts:357","pc":[1371,1372]},{"teal":1210,"source":"contracts\\BiatecClammPool.algo.ts:357","pc":[1373,1374]},{"teal":1211,"source":"contracts\\BiatecClammPool.algo.ts:357","pc":[1375,1376,1377]},{"teal":1215,"source":"contracts\\BiatecClammPool.algo.ts:359","pc":[1378,1379]},{"teal":1216,"source":"contracts\\BiatecClammPool.algo.ts:359","pc":[1380,1381]},{"teal":1217,"source":"contracts\\BiatecClammPool.algo.ts:359","pc":[1382,1383,1384]},{"teal":1221,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[1385,1386]},{"teal":1222,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[1387,1388]},{"teal":1223,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[1389]},{"teal":1224,"source":"contracts\\BiatecClammPool.algo.ts:361","pc":[1390]},{"teal":1225,"source":"contracts\\BiatecClammPool.algo.ts:361","pc":[1391,1392]},{"teal":1229,"source":"contracts\\BiatecClammPool.algo.ts:363","pc":[1393,1394]},{"teal":1230,"source":"contracts\\BiatecClammPool.algo.ts:363","pc":[1395,1396]},{"teal":1234,"source":"contracts\\BiatecClammPool.algo.ts:364","pc":[1397,1398]},{"teal":1235,"source":"contracts\\BiatecClammPool.algo.ts:364","pc":[1399,1400]},{"teal":1239,"source":"contracts\\BiatecClammPool.algo.ts:365","pc":[1401,1402]},{"teal":1240,"source":"contracts\\BiatecClammPool.algo.ts:365","pc":[1403,1404]},{"teal":1245,"source":"contracts\\BiatecClammPool.algo.ts:366","pc":[1405,1406]},{"teal":1246,"source":"contracts\\BiatecClammPool.algo.ts:366","pc":[1407]},{"teal":1247,"source":"contracts\\BiatecClammPool.algo.ts:366","pc":[1408]},{"teal":1248,"source":"contracts\\BiatecClammPool.algo.ts:366","pc":[1409,1410,1411]},{"teal":1253,"source":"contracts\\BiatecClammPool.algo.ts:367","pc":[1412,1413]},{"teal":1254,"source":"contracts\\BiatecClammPool.algo.ts:367","pc":[1414,1415]},{"teal":1255,"source":"contracts\\BiatecClammPool.algo.ts:367","pc":[1416,1417]},{"teal":1256,"source":"contracts\\BiatecClammPool.algo.ts:367","pc":[1418]},{"teal":1257,"source":"contracts\\BiatecClammPool.algo.ts:367","pc":[1419]},{"teal":1261,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1420,1421]},{"teal":1262,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1422,1423]},{"teal":1263,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1424]},{"teal":1264,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1425,1426]},{"teal":1265,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1427]},{"teal":1266,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1428]},{"teal":1267,"source":"contracts\\BiatecClammPool.algo.ts:368","pc":[1429,1430]},{"teal":1268,"source":"contracts\\BiatecClammPool.algo.ts:366","pc":[1431,1432,1433]},{"teal":1273,"source":"contracts\\BiatecClammPool.algo.ts:370","pc":[1434,1435]},{"teal":1274,"source":"contracts\\BiatecClammPool.algo.ts:370","pc":[1436,1437]},{"teal":1275,"source":"contracts\\BiatecClammPool.algo.ts:370","pc":[1438]},{"teal":1276,"source":"contracts\\BiatecClammPool.algo.ts:370","pc":[1439]},{"teal":1277,"source":"contracts\\BiatecClammPool.algo.ts:370","pc":[1440]},{"teal":1281,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1441,1442]},{"teal":1282,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1443,1444]},{"teal":1283,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1445]},{"teal":1284,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1446,1447]},{"teal":1285,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1448]},{"teal":1286,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1449]},{"teal":1287,"source":"contracts\\BiatecClammPool.algo.ts:371","pc":[1450,1451]},{"teal":1293,"source":"contracts\\BiatecClammPool.algo.ts:374","pc":[1452,1453]},{"teal":1294,"source":"contracts\\BiatecClammPool.algo.ts:374","pc":[1454,1455]},{"teal":1295,"source":"contracts\\BiatecClammPool.algo.ts:374","pc":[1456,1457]},{"teal":1296,"source":"contracts\\BiatecClammPool.algo.ts:374","pc":[1458]},{"teal":1297,"source":"contracts\\BiatecClammPool.algo.ts:374","pc":[1459,1460,1461]},{"teal":1302,"source":"contracts\\BiatecClammPool.algo.ts:375","pc":[1462,1463]},{"teal":1303,"source":"contracts\\BiatecClammPool.algo.ts:375","pc":[1464]},{"teal":1304,"source":"contracts\\BiatecClammPool.algo.ts:375","pc":[1465,1466]},{"teal":1305,"source":"contracts\\BiatecClammPool.algo.ts:375","pc":[1467,1468]},{"teal":1306,"source":"contracts\\BiatecClammPool.algo.ts:375","pc":[1469]},{"teal":1309,"source":"contracts\\BiatecClammPool.algo.ts:375","errorMessage":"failed to cast txAssetADeposit to axfer","pc":[1470]},{"teal":1310,"source":"contracts\\BiatecClammPool.algo.ts:375","pc":[1471,1472]},{"teal":1319,"source":"contracts\\BiatecClammPool.algo.ts:376","pc":[1473,1474]},{"teal":1320,"source":"contracts\\BiatecClammPool.algo.ts:376","pc":[1475,1476]},{"teal":1321,"source":"contracts\\BiatecClammPool.algo.ts:376","pc":[1477,1478]},{"teal":1322,"source":"contracts\\BiatecClammPool.algo.ts:376","pc":[1479]},{"teal":1325,"source":"contracts\\BiatecClammPool.algo.ts:376","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"typeEnum\",\"expected\":\"axfer\"}","pc":[1480]},{"teal":1328,"source":"contracts\\BiatecClammPool.algo.ts:376","pc":[1481,1482]},{"teal":1329,"source":"contracts\\BiatecClammPool.algo.ts:377","pc":[1483,1484]},{"teal":1330,"source":"contracts\\BiatecClammPool.algo.ts:377","pc":[1485,1486]},{"teal":1331,"source":"contracts\\BiatecClammPool.algo.ts:377","pc":[1487]},{"teal":1334,"source":"contracts\\BiatecClammPool.algo.ts:377","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1488]},{"teal":1337,"source":"contracts\\BiatecClammPool.algo.ts:376","pc":[1489,1490]},{"teal":1338,"source":"contracts\\BiatecClammPool.algo.ts:378","pc":[1491,1492]},{"teal":1339,"source":"contracts\\BiatecClammPool.algo.ts:378","pc":[1493,1494]},{"teal":1340,"source":"contracts\\BiatecClammPool.algo.ts:378","pc":[1495]},{"teal":1343,"source":"contracts\\BiatecClammPool.algo.ts:378","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"xferAsset\",\"expected\":\"assetA\"}","pc":[1496]},{"teal":1346,"source":"contracts\\BiatecClammPool.algo.ts:376","pc":[1497,1498]},{"teal":1347,"source":"contracts\\BiatecClammPool.algo.ts:379","pc":[1499,1500]},{"teal":1348,"source":"contracts\\BiatecClammPool.algo.ts:379","pc":[1501]},{"teal":1349,"source":"contracts\\BiatecClammPool.algo.ts:379","pc":[1502]},{"teal":1352,"source":"contracts\\BiatecClammPool.algo.ts:379","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"assetAmount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=0\"}","pc":[1503]},{"teal":1353,"source":"contracts\\BiatecClammPool.algo.ts:374","pc":[1504,1505,1506]},{"teal":1358,"source":"contracts\\BiatecClammPool.algo.ts:381","pc":[1507,1508]},{"teal":1359,"source":"contracts\\BiatecClammPool.algo.ts:381","pc":[1509,1510]},{"teal":1360,"source":"contracts\\BiatecClammPool.algo.ts:381","pc":[1511]},{"teal":1361,"source":"contracts\\BiatecClammPool.algo.ts:381","pc":[1512]},{"teal":1362,"source":"contracts\\BiatecClammPool.algo.ts:381","pc":[1513,1514,1515]},{"teal":1367,"source":"contracts\\BiatecClammPool.algo.ts:382","pc":[1516,1517]},{"teal":1368,"source":"contracts\\BiatecClammPool.algo.ts:382","pc":[1518]},{"teal":1369,"source":"contracts\\BiatecClammPool.algo.ts:382","pc":[1519,1520]},{"teal":1370,"source":"contracts\\BiatecClammPool.algo.ts:382","pc":[1521]},{"teal":1371,"source":"contracts\\BiatecClammPool.algo.ts:382","pc":[1522]},{"teal":1374,"source":"contracts\\BiatecClammPool.algo.ts:382","errorMessage":"failed to cast txAssetADeposit to pay","pc":[1523]},{"teal":1375,"source":"contracts\\BiatecClammPool.algo.ts:382","pc":[1524,1525]},{"teal":1383,"source":"contracts\\BiatecClammPool.algo.ts:383","pc":[1526,1527]},{"teal":1384,"source":"contracts\\BiatecClammPool.algo.ts:383","pc":[1528,1529]},{"teal":1385,"source":"contracts\\BiatecClammPool.algo.ts:383","pc":[1530]},{"teal":1386,"source":"contracts\\BiatecClammPool.algo.ts:383","pc":[1531]},{"teal":1389,"source":"contracts\\BiatecClammPool.algo.ts:383","errorMessage":"transaction verification failed: {\"txn\":\"payTx\",\"field\":\"typeEnum\",\"expected\":\"pay\"}","pc":[1532]},{"teal":1392,"source":"contracts\\BiatecClammPool.algo.ts:383","pc":[1533,1534]},{"teal":1393,"source":"contracts\\BiatecClammPool.algo.ts:384","pc":[1535,1536]},{"teal":1394,"source":"contracts\\BiatecClammPool.algo.ts:384","pc":[1537,1538]},{"teal":1395,"source":"contracts\\BiatecClammPool.algo.ts:384","pc":[1539]},{"teal":1398,"source":"contracts\\BiatecClammPool.algo.ts:384","errorMessage":"transaction verification failed: {\"txn\":\"payTx\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[1540]},{"teal":1401,"source":"contracts\\BiatecClammPool.algo.ts:383","pc":[1541,1542]},{"teal":1402,"source":"contracts\\BiatecClammPool.algo.ts:385","pc":[1543,1544]},{"teal":1403,"source":"contracts\\BiatecClammPool.algo.ts:385","pc":[1545]},{"teal":1404,"source":"contracts\\BiatecClammPool.algo.ts:385","pc":[1546]},{"teal":1407,"source":"contracts\\BiatecClammPool.algo.ts:385","errorMessage":"transaction verification failed: {\"txn\":\"payTx\",\"field\":\"amount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=0\"}","pc":[1547]},{"teal":1408,"source":"contracts\\BiatecClammPool.algo.ts:381","pc":[1548,1549,1550]},{"teal":1413,"source":"contracts\\BiatecClammPool.algo.ts:388","pc":[1551]},{"teal":1416,"source":"contracts\\BiatecClammPool.algo.ts:388","errorMessage":"Unsupported tx type of the asset A","pc":[1552]},{"teal":1422,"source":"contracts\\BiatecClammPool.algo.ts:391","pc":[1553,1554]},{"teal":1423,"source":"contracts\\BiatecClammPool.algo.ts:391","pc":[1555]},{"teal":1424,"source":"contracts\\BiatecClammPool.algo.ts:391","pc":[1556]},{"teal":1425,"source":"contracts\\BiatecClammPool.algo.ts:391","pc":[1557,1558,1559]},{"teal":1430,"source":"contracts\\BiatecClammPool.algo.ts:392","pc":[1560,1561]},{"teal":1431,"source":"contracts\\BiatecClammPool.algo.ts:392","pc":[1562,1563]},{"teal":1432,"source":"contracts\\BiatecClammPool.algo.ts:392","pc":[1564,1565]},{"teal":1433,"source":"contracts\\BiatecClammPool.algo.ts:392","pc":[1566]},{"teal":1434,"source":"contracts\\BiatecClammPool.algo.ts:392","pc":[1567]},{"teal":1438,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1568,1569]},{"teal":1439,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1570,1571]},{"teal":1440,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1572]},{"teal":1441,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1573,1574]},{"teal":1442,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1575]},{"teal":1443,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1576]},{"teal":1444,"source":"contracts\\BiatecClammPool.algo.ts:393","pc":[1577,1578]},{"teal":1445,"source":"contracts\\BiatecClammPool.algo.ts:391","pc":[1579,1580,1581]},{"teal":1450,"source":"contracts\\BiatecClammPool.algo.ts:395","pc":[1582,1583]},{"teal":1451,"source":"contracts\\BiatecClammPool.algo.ts:395","pc":[1584,1585]},{"teal":1452,"source":"contracts\\BiatecClammPool.algo.ts:395","pc":[1586]},{"teal":1453,"source":"contracts\\BiatecClammPool.algo.ts:395","pc":[1587]},{"teal":1454,"source":"contracts\\BiatecClammPool.algo.ts:395","pc":[1588]},{"teal":1458,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1589,1590]},{"teal":1459,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1591,1592]},{"teal":1460,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1593]},{"teal":1461,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1594,1595]},{"teal":1462,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1596]},{"teal":1463,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1597]},{"teal":1464,"source":"contracts\\BiatecClammPool.algo.ts:396","pc":[1598,1599]},{"teal":1470,"source":"contracts\\BiatecClammPool.algo.ts:399","pc":[1600,1601]},{"teal":1471,"source":"contracts\\BiatecClammPool.algo.ts:399","pc":[1602,1603]},{"teal":1472,"source":"contracts\\BiatecClammPool.algo.ts:399","pc":[1604,1605]},{"teal":1473,"source":"contracts\\BiatecClammPool.algo.ts:399","pc":[1606]},{"teal":1474,"source":"contracts\\BiatecClammPool.algo.ts:399","pc":[1607,1608,1609]},{"teal":1479,"source":"contracts\\BiatecClammPool.algo.ts:400","pc":[1610,1611]},{"teal":1480,"source":"contracts\\BiatecClammPool.algo.ts:400","pc":[1612]},{"teal":1481,"source":"contracts\\BiatecClammPool.algo.ts:400","pc":[1613,1614]},{"teal":1482,"source":"contracts\\BiatecClammPool.algo.ts:400","pc":[1615,1616]},{"teal":1483,"source":"contracts\\BiatecClammPool.algo.ts:400","pc":[1617]},{"teal":1486,"source":"contracts\\BiatecClammPool.algo.ts:400","errorMessage":"failed to cast txAssetBDeposit to axfer","pc":[1618]},{"teal":1487,"source":"contracts\\BiatecClammPool.algo.ts:400","pc":[1619,1620]},{"teal":1496,"source":"contracts\\BiatecClammPool.algo.ts:401","pc":[1621,1622]},{"teal":1497,"source":"contracts\\BiatecClammPool.algo.ts:401","pc":[1623,1624]},{"teal":1498,"source":"contracts\\BiatecClammPool.algo.ts:401","pc":[1625,1626]},{"teal":1499,"source":"contracts\\BiatecClammPool.algo.ts:401","pc":[1627]},{"teal":1502,"source":"contracts\\BiatecClammPool.algo.ts:401","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"typeEnum\",\"expected\":\"axfer\"}","pc":[1628]},{"teal":1505,"source":"contracts\\BiatecClammPool.algo.ts:401","pc":[1629,1630]},{"teal":1506,"source":"contracts\\BiatecClammPool.algo.ts:402","pc":[1631,1632]},{"teal":1507,"source":"contracts\\BiatecClammPool.algo.ts:402","pc":[1633,1634]},{"teal":1508,"source":"contracts\\BiatecClammPool.algo.ts:402","pc":[1635]},{"teal":1511,"source":"contracts\\BiatecClammPool.algo.ts:402","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1636]},{"teal":1514,"source":"contracts\\BiatecClammPool.algo.ts:401","pc":[1637,1638]},{"teal":1515,"source":"contracts\\BiatecClammPool.algo.ts:403","pc":[1639,1640]},{"teal":1516,"source":"contracts\\BiatecClammPool.algo.ts:403","pc":[1641,1642]},{"teal":1517,"source":"contracts\\BiatecClammPool.algo.ts:403","pc":[1643]},{"teal":1520,"source":"contracts\\BiatecClammPool.algo.ts:403","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"xferAsset\",\"expected\":\"assetB\"}","pc":[1644]},{"teal":1523,"source":"contracts\\BiatecClammPool.algo.ts:401","pc":[1645,1646]},{"teal":1524,"source":"contracts\\BiatecClammPool.algo.ts:404","pc":[1647,1648]},{"teal":1525,"source":"contracts\\BiatecClammPool.algo.ts:404","pc":[1649]},{"teal":1526,"source":"contracts\\BiatecClammPool.algo.ts:404","pc":[1650]},{"teal":1529,"source":"contracts\\BiatecClammPool.algo.ts:404","errorMessage":"transaction verification failed: {\"txn\":\"xfer\",\"field\":\"assetAmount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=0\"}","pc":[1651]},{"teal":1530,"source":"contracts\\BiatecClammPool.algo.ts:399","pc":[1652,1653,1654]},{"teal":1535,"source":"contracts\\BiatecClammPool.algo.ts:406","pc":[1655,1656]},{"teal":1536,"source":"contracts\\BiatecClammPool.algo.ts:406","pc":[1657,1658]},{"teal":1537,"source":"contracts\\BiatecClammPool.algo.ts:406","pc":[1659]},{"teal":1538,"source":"contracts\\BiatecClammPool.algo.ts:406","pc":[1660]},{"teal":1539,"source":"contracts\\BiatecClammPool.algo.ts:406","pc":[1661,1662,1663]},{"teal":1544,"source":"contracts\\BiatecClammPool.algo.ts:407","pc":[1664,1665]},{"teal":1545,"source":"contracts\\BiatecClammPool.algo.ts:407","pc":[1666]},{"teal":1546,"source":"contracts\\BiatecClammPool.algo.ts:407","pc":[1667,1668]},{"teal":1547,"source":"contracts\\BiatecClammPool.algo.ts:407","pc":[1669]},{"teal":1548,"source":"contracts\\BiatecClammPool.algo.ts:407","pc":[1670]},{"teal":1551,"source":"contracts\\BiatecClammPool.algo.ts:407","errorMessage":"failed to cast txAssetBDeposit to pay","pc":[1671]},{"teal":1552,"source":"contracts\\BiatecClammPool.algo.ts:407","pc":[1672,1673]},{"teal":1560,"source":"contracts\\BiatecClammPool.algo.ts:408","pc":[1674,1675]},{"teal":1561,"source":"contracts\\BiatecClammPool.algo.ts:408","pc":[1676,1677]},{"teal":1562,"source":"contracts\\BiatecClammPool.algo.ts:408","pc":[1678]},{"teal":1563,"source":"contracts\\BiatecClammPool.algo.ts:408","pc":[1679]},{"teal":1566,"source":"contracts\\BiatecClammPool.algo.ts:408","errorMessage":"transaction verification failed: {\"txn\":\"payTx\",\"field\":\"typeEnum\",\"expected\":\"pay\"}","pc":[1680]},{"teal":1569,"source":"contracts\\BiatecClammPool.algo.ts:408","pc":[1681,1682]},{"teal":1570,"source":"contracts\\BiatecClammPool.algo.ts:409","pc":[1683,1684]},{"teal":1571,"source":"contracts\\BiatecClammPool.algo.ts:409","pc":[1685,1686]},{"teal":1572,"source":"contracts\\BiatecClammPool.algo.ts:409","pc":[1687]},{"teal":1575,"source":"contracts\\BiatecClammPool.algo.ts:409","errorMessage":"transaction verification failed: {\"txn\":\"payTx\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[1688]},{"teal":1578,"source":"contracts\\BiatecClammPool.algo.ts:408","pc":[1689,1690]},{"teal":1579,"source":"contracts\\BiatecClammPool.algo.ts:410","pc":[1691,1692]},{"teal":1580,"source":"contracts\\BiatecClammPool.algo.ts:410","pc":[1693]},{"teal":1581,"source":"contracts\\BiatecClammPool.algo.ts:410","pc":[1694]},{"teal":1584,"source":"contracts\\BiatecClammPool.algo.ts:410","errorMessage":"transaction verification failed: {\"txn\":\"payTx\",\"field\":\"amount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=0\"}","pc":[1695]},{"teal":1585,"source":"contracts\\BiatecClammPool.algo.ts:406","pc":[1696,1697,1698]},{"teal":1590,"source":"contracts\\BiatecClammPool.algo.ts:413","pc":[1699]},{"teal":1593,"source":"contracts\\BiatecClammPool.algo.ts:413","errorMessage":"Unsupported tx type of the asset B","pc":[1700]},{"teal":1598,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1701]},{"teal":1599,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1702,1703]},{"teal":1600,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1704,1705]},{"teal":1601,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1706]},{"teal":1602,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1707]},{"teal":1603,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1708]},{"teal":1604,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1709]},{"teal":1607,"source":"contracts\\BiatecClammPool.algo.ts:435","errorMessage":"assetLpDelicmalScale2Scale overflowed 256 bits","pc":[1710]},{"teal":1608,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1711]},{"teal":1609,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1712]},{"teal":1610,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1713]},{"teal":1611,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1714]},{"teal":1612,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1715]},{"teal":1613,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1716]},{"teal":1614,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1717]},{"teal":1615,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1718]},{"teal":1616,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1719]},{"teal":1617,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1720,1721]},{"teal":1618,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1722]},{"teal":1619,"source":"contracts\\BiatecClammPool.algo.ts:435","pc":[1723,1724,1725]},{"teal":1624,"source":"contracts\\BiatecClammPool.algo.ts:439","pc":[1726,1727]},{"teal":1625,"source":"contracts\\BiatecClammPool.algo.ts:439","pc":[1728]},{"teal":1626,"source":"contracts\\BiatecClammPool.algo.ts:439","pc":[1729,1730]},{"teal":1627,"source":"contracts\\BiatecClammPool.algo.ts:439","pc":[1731]},{"teal":1628,"source":"contracts\\BiatecClammPool.algo.ts:439","pc":[1732]},{"teal":1629,"source":"contracts\\BiatecClammPool.algo.ts:439","pc":[1733,1734,1735]},{"teal":1640,"source":"contracts\\BiatecClammPool.algo.ts:445","pc":[1736]},{"teal":1641,"source":"contracts\\BiatecClammPool.algo.ts:444","pc":[1737,1738]},{"teal":1642,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1739,1740]},{"teal":1643,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1741]},{"teal":1644,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1742]},{"teal":1645,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1743]},{"teal":1646,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1744]},{"teal":1649,"source":"contracts\\BiatecClammPool.algo.ts:443","errorMessage":"assetLpDelicmalScale2Scale overflowed 256 bits","pc":[1745]},{"teal":1650,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1746]},{"teal":1651,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1747]},{"teal":1652,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1748]},{"teal":1653,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1749]},{"teal":1654,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1750]},{"teal":1655,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1751]},{"teal":1656,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1752]},{"teal":1657,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1753]},{"teal":1658,"source":"contracts\\BiatecClammPool.algo.ts:443","pc":[1754]},{"teal":1659,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1755,1756]},{"teal":1660,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1757]},{"teal":1661,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1758]},{"teal":1662,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1759]},{"teal":1663,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1760]},{"teal":1666,"source":"contracts\\BiatecClammPool.algo.ts:442","errorMessage":"bDepositInBaseScale overflowed 256 bits","pc":[1761]},{"teal":1667,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1762]},{"teal":1668,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1763]},{"teal":1669,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1764]},{"teal":1670,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1765]},{"teal":1671,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1766]},{"teal":1672,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1767]},{"teal":1673,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1768]},{"teal":1674,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1769]},{"teal":1675,"source":"contracts\\BiatecClammPool.algo.ts:442","pc":[1770]},{"teal":1676,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1771,1772]},{"teal":1677,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1773]},{"teal":1678,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1774]},{"teal":1679,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1775]},{"teal":1680,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1776]},{"teal":1683,"source":"contracts\\BiatecClammPool.algo.ts:441","errorMessage":"aDepositInBaseScale overflowed 256 bits","pc":[1777]},{"teal":1684,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1778]},{"teal":1685,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1779]},{"teal":1686,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1780]},{"teal":1687,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1781]},{"teal":1688,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1782]},{"teal":1689,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1783]},{"teal":1690,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1784]},{"teal":1691,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1785]},{"teal":1692,"source":"contracts\\BiatecClammPool.algo.ts:441","pc":[1786]},{"teal":1693,"source":"contracts\\BiatecClammPool.algo.ts:440","pc":[1787,1788,1789]},{"teal":1694,"source":"contracts\\BiatecClammPool.algo.ts:440","pc":[1790,1791,1792]},{"teal":1705,"source":"contracts\\BiatecClammPool.algo.ts:461","pc":[1793]},{"teal":1706,"source":"contracts\\BiatecClammPool.algo.ts:460","pc":[1794,1795]},{"teal":1707,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1796,1797]},{"teal":1708,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1798]},{"teal":1709,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1799]},{"teal":1710,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1800]},{"teal":1711,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1801]},{"teal":1714,"source":"contracts\\BiatecClammPool.algo.ts:459","errorMessage":"assetLpDelicmalScale2Scale overflowed 256 bits","pc":[1802]},{"teal":1715,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1803]},{"teal":1716,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1804]},{"teal":1717,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1805]},{"teal":1718,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1806]},{"teal":1719,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1807]},{"teal":1720,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1808]},{"teal":1721,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1809]},{"teal":1722,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1810]},{"teal":1723,"source":"contracts\\BiatecClammPool.algo.ts:459","pc":[1811]},{"teal":1724,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1812,1813]},{"teal":1725,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1814]},{"teal":1726,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1815]},{"teal":1727,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1816]},{"teal":1728,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1817]},{"teal":1731,"source":"contracts\\BiatecClammPool.algo.ts:458","errorMessage":"bDepositInBaseScale overflowed 256 bits","pc":[1818]},{"teal":1732,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1819]},{"teal":1733,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1820]},{"teal":1734,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1821]},{"teal":1735,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1822]},{"teal":1736,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1823]},{"teal":1737,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1824]},{"teal":1738,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1825]},{"teal":1739,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1826]},{"teal":1740,"source":"contracts\\BiatecClammPool.algo.ts:458","pc":[1827]},{"teal":1741,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1828,1829]},{"teal":1742,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1830]},{"teal":1743,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1831]},{"teal":1744,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1832]},{"teal":1745,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1833]},{"teal":1748,"source":"contracts\\BiatecClammPool.algo.ts:457","errorMessage":"aDepositInBaseScale overflowed 256 bits","pc":[1834]},{"teal":1749,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1835]},{"teal":1750,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1836]},{"teal":1751,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1837]},{"teal":1752,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1838]},{"teal":1753,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1839]},{"teal":1754,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1840]},{"teal":1755,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1841]},{"teal":1756,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1842]},{"teal":1757,"source":"contracts\\BiatecClammPool.algo.ts:457","pc":[1843]},{"teal":1758,"source":"contracts\\BiatecClammPool.algo.ts:456","pc":[1844,1845,1846]},{"teal":1759,"source":"contracts\\BiatecClammPool.algo.ts:456","pc":[1847,1848]},{"teal":1769,"source":"contracts\\BiatecClammPool.algo.ts:469","pc":[1849,1850]},{"teal":1770,"source":"contracts\\BiatecClammPool.algo.ts:469","pc":[1851]},{"teal":1771,"source":"contracts\\BiatecClammPool.algo.ts:468","pc":[1852,1853]},{"teal":1772,"source":"contracts\\BiatecClammPool.algo.ts:468","pc":[1854]},{"teal":1773,"source":"contracts\\BiatecClammPool.algo.ts:467","pc":[1855,1856]},{"teal":1774,"source":"contracts\\BiatecClammPool.algo.ts:467","pc":[1857]},{"teal":1775,"source":"contracts\\BiatecClammPool.algo.ts:466","pc":[1858,1859]},{"teal":1776,"source":"contracts\\BiatecClammPool.algo.ts:466","pc":[1860]},{"teal":1777,"source":"contracts\\BiatecClammPool.algo.ts:465","pc":[1861]},{"teal":1778,"source":"contracts\\BiatecClammPool.algo.ts:465","pc":[1862]},{"teal":1779,"source":"contracts\\BiatecClammPool.algo.ts:464","pc":[1863,1864,1865]},{"teal":1780,"source":"contracts\\BiatecClammPool.algo.ts:464","pc":[1866,1867]},{"teal":1784,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1868,1869]},{"teal":1785,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1870,1871]},{"teal":1786,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1872]},{"teal":1787,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1873]},{"teal":1788,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1874,1875]},{"teal":1789,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1876]},{"teal":1792,"source":"contracts\\BiatecClammPool.algo.ts:472","errorMessage":"newPrice as uint64 overflowed 64 bits","pc":[1877]},{"teal":1793,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1878,1879]},{"teal":1794,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1880]},{"teal":1795,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1881]},{"teal":1796,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1882]},{"teal":1797,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1883]},{"teal":1798,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1884,1885]},{"teal":1799,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1886]},{"teal":1800,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1887]},{"teal":1801,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1888]},{"teal":1802,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1889]},{"teal":1803,"source":"contracts\\BiatecClammPool.algo.ts:472","pc":[1890]},{"teal":1807,"source":"contracts\\BiatecClammPool.algo.ts:473","pc":[1891,1892]},{"teal":1811,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1893,1894]},{"teal":1814,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1895,1896]},{"teal":1815,"source":"contracts\\BiatecClammPool.algo.ts:345","pc":[1897]},{"teal":1826,"source":"contracts\\BiatecClammPool.algo.ts:587","pc":[1898,1899,1900]},{"teal":1829,"source":"contracts\\BiatecClammPool.algo.ts:587","pc":[1901]},{"teal":1830,"source":"contracts\\BiatecClammPool.algo.ts:587","pc":[1902,1903]},{"teal":1834,"source":"contracts\\BiatecClammPool.algo.ts:594","pc":[1904]},{"teal":1835,"source":"contracts\\BiatecClammPool.algo.ts:594","pc":[1905,1906]},{"teal":1836,"source":"contracts\\BiatecClammPool.algo.ts:594","pc":[1907,1908]},{"teal":1837,"source":"contracts\\BiatecClammPool.algo.ts:594","pc":[1909]},{"teal":1838,"source":"contracts\\BiatecClammPool.algo.ts:594","pc":[1910,1911]},{"teal":1839,"source":"contracts\\BiatecClammPool.algo.ts:594","pc":[1912,1913]},{"teal":1840,"source":"contracts\\BiatecClammPool.algo.ts:594","pc":[1914]},{"teal":1841,"source":"contracts\\BiatecClammPool.algo.ts:594","pc":[1915,1916]},{"teal":1842,"source":"contracts\\BiatecClammPool.algo.ts:594","pc":[1917,1918]},{"teal":1843,"source":"contracts\\BiatecClammPool.algo.ts:594","pc":[1919,1920]},{"teal":1844,"source":"contracts\\BiatecClammPool.algo.ts:594","pc":[1921,1922]},{"teal":1845,"source":"contracts\\BiatecClammPool.algo.ts:594","pc":[1923]},{"teal":1849,"source":"contracts\\BiatecClammPool.algo.ts:595","pc":[1924,1925]},{"teal":1850,"source":"contracts\\BiatecClammPool.algo.ts:595","pc":[1926]},{"teal":1851,"source":"contracts\\BiatecClammPool.algo.ts:595","pc":[1927,1928]},{"teal":1855,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1929]},{"teal":1856,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1930]},{"teal":1857,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1931]},{"teal":1858,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1932,1933]},{"teal":1859,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1934]},{"teal":1860,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1935]},{"teal":1861,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1936]},{"teal":1862,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1937]},{"teal":1863,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1938]},{"teal":1866,"source":"contracts\\BiatecClammPool.algo.ts:597","errorMessage":"this.assetABalanceBaseScale.value + realAssetADeposit overflowed 256 bits","pc":[1939]},{"teal":1867,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1940]},{"teal":1868,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1941]},{"teal":1869,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1942]},{"teal":1870,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1943]},{"teal":1871,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1944]},{"teal":1872,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1945]},{"teal":1873,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1946]},{"teal":1874,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1947]},{"teal":1875,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1948]},{"teal":1876,"source":"contracts\\BiatecClammPool.algo.ts:597","pc":[1949]},{"teal":1880,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1950,1951]},{"teal":1881,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1952]},{"teal":1882,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1953]},{"teal":1883,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1954,1955]},{"teal":1884,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1956]},{"teal":1885,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1957]},{"teal":1886,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1958]},{"teal":1887,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1959]},{"teal":1888,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1960]},{"teal":1891,"source":"contracts\\BiatecClammPool.algo.ts:598","errorMessage":"this.assetBBalanceBaseScale.value + realAssetBDeposit overflowed 256 bits","pc":[1961]},{"teal":1892,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1962]},{"teal":1893,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1963]},{"teal":1894,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1964]},{"teal":1895,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1965]},{"teal":1896,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1966]},{"teal":1897,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1967]},{"teal":1898,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1968]},{"teal":1899,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1969]},{"teal":1900,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1970]},{"teal":1901,"source":"contracts\\BiatecClammPool.algo.ts:598","pc":[1971]},{"teal":1905,"source":"contracts\\BiatecClammPool.algo.ts:601","pc":[1972,1973]},{"teal":1906,"source":"contracts\\BiatecClammPool.algo.ts:601","pc":[1974,1975,1976]},{"teal":1907,"source":"contracts\\BiatecClammPool.algo.ts:601","pc":[1977,1978]},{"teal":1912,"source":"contracts\\BiatecClammPool.algo.ts:603","pc":[1979,1980]},{"teal":1913,"source":"contracts\\BiatecClammPool.algo.ts:603","pc":[1981,1982,1983]},{"teal":1918,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[1984,1985]},{"teal":1919,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[1986,1987]},{"teal":1920,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[1988]},{"teal":1921,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[1989,1990]},{"teal":1922,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[1991]},{"teal":1923,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[1992]},{"teal":1924,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[1993]},{"teal":1925,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[1994,1995]},{"teal":1926,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[1996]},{"teal":1929,"source":"contracts\\BiatecClammPool.algo.ts:605","errorMessage":"((newLiquidity - oldLiquidity) / assetLpDelicmalScale2Scale) as uint64 overflowed 64 bits","pc":[1997]},{"teal":1930,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[1998,1999]},{"teal":1931,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2000]},{"teal":1932,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2001]},{"teal":1933,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2002]},{"teal":1934,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2003]},{"teal":1935,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2004,2005]},{"teal":1936,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2006]},{"teal":1937,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2007]},{"teal":1938,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2008]},{"teal":1939,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2009]},{"teal":1940,"source":"contracts\\BiatecClammPool.algo.ts:605","pc":[2010,2011]},{"teal":1944,"source":"contracts\\BiatecClammPool.algo.ts:607","pc":[2012,2013]},{"teal":1945,"source":"contracts\\BiatecClammPool.algo.ts:607","pc":[2014]},{"teal":1946,"source":"contracts\\BiatecClammPool.algo.ts:607","pc":[2015]},{"teal":1949,"source":"contracts\\BiatecClammPool.algo.ts:607","errorMessage":"LP-ZERO-ERR","pc":[2016]},{"teal":1953,"source":"contracts\\BiatecClammPool.algo.ts:608","pc":[2017,2018]},{"teal":1954,"source":"contracts\\BiatecClammPool.algo.ts:608","pc":[2019,2020]},{"teal":1955,"source":"contracts\\BiatecClammPool.algo.ts:608","pc":[2021,2022]},{"teal":1956,"source":"contracts\\BiatecClammPool.algo.ts:608","pc":[2023,2024,2025]},{"teal":1960,"source":"contracts\\BiatecClammPool.algo.ts:614","pc":[2026,2027]},{"teal":1961,"source":"contracts\\BiatecClammPool.algo.ts:614","pc":[2028,2029,2030]},{"teal":1966,"source":"contracts\\BiatecClammPool.algo.ts:616","pc":[2031]},{"teal":1970,"source":"contracts\\BiatecClammPool.algo.ts:587","pc":[2032,2033]},{"teal":1973,"source":"contracts\\BiatecClammPool.algo.ts:587","pc":[2034,2035]},{"teal":1974,"source":"contracts\\BiatecClammPool.algo.ts:587","pc":[2036]},{"teal":1978,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[2037,2038,2039]},{"teal":1981,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[2040]},{"teal":1982,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[2041,2042]},{"teal":1986,"source":"contracts\\BiatecClammPool.algo.ts:621","pc":[2043]},{"teal":1987,"source":"contracts\\BiatecClammPool.algo.ts:621","pc":[2044]},{"teal":1988,"source":"contracts\\BiatecClammPool.algo.ts:621","pc":[2045,2046]},{"teal":1992,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[2047,2048]},{"teal":1993,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[2049]},{"teal":1994,"source":"contracts\\BiatecClammPool.algo.ts:622","pc":[2050,2051]},{"teal":1998,"source":"contracts\\BiatecClammPool.algo.ts:623","pc":[2052,2053]},{"teal":1999,"source":"contracts\\BiatecClammPool.algo.ts:623","pc":[2054]},{"teal":2000,"source":"contracts\\BiatecClammPool.algo.ts:623","pc":[2055]},{"teal":2001,"source":"contracts\\BiatecClammPool.algo.ts:623","pc":[2056,2057]},{"teal":2005,"source":"contracts\\BiatecClammPool.algo.ts:624","pc":[2058,2059]},{"teal":2006,"source":"contracts\\BiatecClammPool.algo.ts:624","pc":[2060]},{"teal":2007,"source":"contracts\\BiatecClammPool.algo.ts:624","pc":[2061]},{"teal":2008,"source":"contracts\\BiatecClammPool.algo.ts:624","pc":[2062,2063]},{"teal":2012,"source":"contracts\\BiatecClammPool.algo.ts:625","pc":[2064,2065]},{"teal":2013,"source":"contracts\\BiatecClammPool.algo.ts:625","pc":[2066]},{"teal":2014,"source":"contracts\\BiatecClammPool.algo.ts:625","pc":[2067,2068]},{"teal":2018,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[2069,2070]},{"teal":2019,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[2071]},{"teal":2020,"source":"contracts\\BiatecClammPool.algo.ts:626","pc":[2072,2073]},{"teal":2024,"source":"contracts\\BiatecClammPool.algo.ts:627","pc":[2074,2075]},{"teal":2025,"source":"contracts\\BiatecClammPool.algo.ts:627","pc":[2076,2077]},{"teal":2030,"source":"contracts\\BiatecClammPool.algo.ts:628","pc":[2078,2079]},{"teal":2031,"source":"contracts\\BiatecClammPool.algo.ts:628","pc":[2080,2081]},{"teal":2032,"source":"contracts\\BiatecClammPool.algo.ts:628","pc":[2082]},{"teal":2033,"source":"contracts\\BiatecClammPool.algo.ts:628","pc":[2083,2084,2085]},{"teal":2038,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2086,2087]},{"teal":2039,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2088]},{"teal":2040,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2089]},{"teal":2041,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2090]},{"teal":2042,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2091]},{"teal":2045,"source":"contracts\\BiatecClammPool.algo.ts:629","errorMessage":"priceMin overflowed 256 bits","pc":[2092]},{"teal":2046,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2093]},{"teal":2047,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2094]},{"teal":2048,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2095]},{"teal":2049,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2096]},{"teal":2050,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2097]},{"teal":2051,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2098]},{"teal":2052,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2099]},{"teal":2053,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2100]},{"teal":2054,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2101]},{"teal":2055,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2102,2103]},{"teal":2056,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2104,2105]},{"teal":2057,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2106,2107,2108]},{"teal":2058,"source":"contracts\\BiatecClammPool.algo.ts:629","pc":[2109,2110]},{"teal":2059,"source":"contracts\\BiatecClammPool.algo.ts:628","pc":[2111,2112,2113]},{"teal":2064,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2114,2115]},{"teal":2065,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2116,2117]},{"teal":2066,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2118,2119]},{"teal":2067,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2120]},{"teal":2068,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2121]},{"teal":2069,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2122]},{"teal":2070,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2123]},{"teal":2073,"source":"contracts\\BiatecClammPool.algo.ts:631","errorMessage":"priceMax overflowed 256 bits","pc":[2124]},{"teal":2074,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2125]},{"teal":2075,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2126]},{"teal":2076,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2127]},{"teal":2077,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2128]},{"teal":2078,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2129]},{"teal":2079,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2130]},{"teal":2080,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2131]},{"teal":2081,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2132]},{"teal":2082,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2133]},{"teal":2083,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2134,2135]},{"teal":2084,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2136]},{"teal":2085,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2137]},{"teal":2086,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2138]},{"teal":2087,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2139]},{"teal":2090,"source":"contracts\\BiatecClammPool.algo.ts:631","errorMessage":"priceMin overflowed 256 bits","pc":[2140]},{"teal":2091,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2141]},{"teal":2092,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2142]},{"teal":2093,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2143]},{"teal":2094,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2144]},{"teal":2095,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2145]},{"teal":2096,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2146]},{"teal":2097,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2147]},{"teal":2098,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2148]},{"teal":2099,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2149]},{"teal":2100,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2150,2151]},{"teal":2101,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2152,2153]},{"teal":2102,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2154,2155,2156]},{"teal":2103,"source":"contracts\\BiatecClammPool.algo.ts:631","pc":[2157,2158]},{"teal":2107,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2159,2160]},{"teal":2108,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2161]},{"teal":2109,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2162]},{"teal":2110,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2163]},{"teal":2111,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2164]},{"teal":2114,"source":"contracts\\BiatecClammPool.algo.ts:632","errorMessage":"D_SQRT overflowed 256 bits","pc":[2165]},{"teal":2115,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2166]},{"teal":2116,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2167]},{"teal":2117,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2168]},{"teal":2118,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2169]},{"teal":2119,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2170]},{"teal":2120,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2171]},{"teal":2121,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2172]},{"teal":2122,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2173]},{"teal":2123,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2174]},{"teal":2124,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2175,2176]},{"teal":2125,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2177,2178]},{"teal":2126,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2179,2180]},{"teal":2127,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2181,2182]},{"teal":2128,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2183,2184,2185]},{"teal":2129,"source":"contracts\\BiatecClammPool.algo.ts:632","pc":[2186,2187]},{"teal":2134,"source":"contracts\\BiatecClammPool.algo.ts:634","pc":[2188,2189]},{"teal":2137,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[2190,2191]},{"teal":2140,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[2192,2193]},{"teal":2141,"source":"contracts\\BiatecClammPool.algo.ts:619","pc":[2194]},{"teal":2145,"source":"contracts\\BiatecClammPool.algo.ts:637","pc":[2195,2196,2197]},{"teal":2149,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2198,2199]},{"teal":2150,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2200,2201,2202]},{"teal":2151,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2203]},{"teal":2152,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2204]},{"teal":2153,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2205]},{"teal":2154,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2206]},{"teal":2157,"source":"contracts\\BiatecClammPool.algo.ts:638","errorMessage":"this.calculateCurrentLiquidity() overflowed 256 bits","pc":[2207]},{"teal":2158,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2208]},{"teal":2159,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2209]},{"teal":2160,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2210]},{"teal":2161,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2211]},{"teal":2162,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2212]},{"teal":2163,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2213]},{"teal":2164,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2214]},{"teal":2165,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2215]},{"teal":2166,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2216]},{"teal":2167,"source":"contracts\\BiatecClammPool.algo.ts:638","pc":[2217]},{"teal":2168,"source":"contracts\\BiatecClammPool.algo.ts:637","pc":[2218]},{"teal":2172,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[2219,2220,2221]},{"teal":2175,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[2222]},{"teal":2176,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[2223,2224]},{"teal":2180,"source":"contracts\\BiatecClammPool.algo.ts:642","pc":[2225,2226,2227]},{"teal":2181,"source":"contracts\\BiatecClammPool.algo.ts:642","pc":[2228,2229]},{"teal":2186,"source":"contracts\\BiatecClammPool.algo.ts:643","pc":[2230,2231]},{"teal":2187,"source":"contracts\\BiatecClammPool.algo.ts:643","pc":[2232,2233]},{"teal":2188,"source":"contracts\\BiatecClammPool.algo.ts:643","pc":[2234]},{"teal":2189,"source":"contracts\\BiatecClammPool.algo.ts:643","pc":[2235,2236,2237]},{"teal":2194,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2238,2239]},{"teal":2195,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2240,2241]},{"teal":2196,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2242]},{"teal":2197,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2243]},{"teal":2198,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2244]},{"teal":2199,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2245]},{"teal":2202,"source":"contracts\\BiatecClammPool.algo.ts:644","errorMessage":"projectedLiquidity overflowed 256 bits","pc":[2246]},{"teal":2203,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2247]},{"teal":2204,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2248]},{"teal":2205,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2249]},{"teal":2206,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2250]},{"teal":2207,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2251]},{"teal":2208,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2252]},{"teal":2209,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2253]},{"teal":2210,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2254]},{"teal":2211,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2255]},{"teal":2212,"source":"contracts\\BiatecClammPool.algo.ts:644","pc":[2256]},{"teal":2216,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[2257,2258]},{"teal":2217,"source":"contracts\\BiatecClammPool.algo.ts:645","pc":[2259,2260,2261]},{"teal":2222,"source":"contracts\\BiatecClammPool.algo.ts:647","pc":[2262,2263]},{"teal":2223,"source":"contracts\\BiatecClammPool.algo.ts:647","pc":[2264,2265]},{"teal":2224,"source":"contracts\\BiatecClammPool.algo.ts:647","pc":[2266]},{"teal":2225,"source":"contracts\\BiatecClammPool.algo.ts:647","pc":[2267,2268]},{"teal":2229,"source":"contracts\\BiatecClammPool.algo.ts:648","pc":[2269,2270,2271]},{"teal":2230,"source":"contracts\\BiatecClammPool.algo.ts:648","pc":[2272,2273]},{"teal":2234,"source":"contracts\\BiatecClammPool.algo.ts:649","pc":[2274,2275]},{"teal":2235,"source":"contracts\\BiatecClammPool.algo.ts:649","pc":[2276,2277]},{"teal":2236,"source":"contracts\\BiatecClammPool.algo.ts:649","pc":[2278]},{"teal":2239,"source":"contracts\\BiatecClammPool.algo.ts:649","errorMessage":"ERR-LIQ-DROP","pc":[2279]},{"teal":2243,"source":"contracts\\BiatecClammPool.algo.ts:650","pc":[2280,2281]},{"teal":2244,"source":"contracts\\BiatecClammPool.algo.ts:650","pc":[2282,2283]},{"teal":2245,"source":"contracts\\BiatecClammPool.algo.ts:650","pc":[2284]},{"teal":2249,"source":"contracts\\BiatecClammPool.algo.ts:651","pc":[2285,2286]},{"teal":2253,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[2287,2288]},{"teal":2256,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[2289,2290]},{"teal":2257,"source":"contracts\\BiatecClammPool.algo.ts:641","pc":[2291]},{"teal":2261,"source":"contracts\\BiatecClammPool.algo.ts:654","pc":[2292,2293,2294]},{"teal":2264,"source":"contracts\\BiatecClammPool.algo.ts:654","pc":[2295]},{"teal":2265,"source":"contracts\\BiatecClammPool.algo.ts:654","pc":[2296]},{"teal":2269,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[2297,2298]},{"teal":2270,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[2299]},{"teal":2271,"source":"contracts\\BiatecClammPool.algo.ts:655","pc":[2300,2301]},{"teal":2275,"source":"contracts\\BiatecClammPool.algo.ts:656","pc":[2302,2303]},{"teal":2276,"source":"contracts\\BiatecClammPool.algo.ts:656","pc":[2304]},{"teal":2277,"source":"contracts\\BiatecClammPool.algo.ts:656","pc":[2305,2306]},{"teal":2281,"source":"contracts\\BiatecClammPool.algo.ts:657","pc":[2307,2308]},{"teal":2282,"source":"contracts\\BiatecClammPool.algo.ts:657","pc":[2309,2310]},{"teal":2283,"source":"contracts\\BiatecClammPool.algo.ts:657","pc":[2311]},{"teal":2284,"source":"contracts\\BiatecClammPool.algo.ts:657","pc":[2312,2313]},{"teal":2285,"source":"contracts\\BiatecClammPool.algo.ts:657","pc":[2314]},{"teal":2286,"source":"contracts\\BiatecClammPool.algo.ts:657","pc":[2315,2316]},{"teal":2287,"source":"contracts\\BiatecClammPool.algo.ts:657","pc":[2317]},{"teal":2290,"source":"contracts\\BiatecClammPool.algo.ts:654","pc":[2318,2319]},{"teal":2293,"source":"contracts\\BiatecClammPool.algo.ts:654","pc":[2320,2321]},{"teal":2294,"source":"contracts\\BiatecClammPool.algo.ts:654","pc":[2322]},{"teal":2299,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2323,2324]},{"teal":2302,"source":"contracts\\BiatecClammPool.algo.ts:675","pc":[2325,2326,2327]},{"teal":2303,"source":"contracts\\BiatecClammPool.algo.ts:675","pc":[2328]},{"teal":2306,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[2329,2330,2331]},{"teal":2307,"source":"contracts\\BiatecClammPool.algo.ts:674","pc":[2332]},{"teal":2310,"source":"contracts\\BiatecClammPool.algo.ts:673","pc":[2333,2334,2335]},{"teal":2311,"source":"contracts\\BiatecClammPool.algo.ts:673","pc":[2336]},{"teal":2314,"source":"contracts\\BiatecClammPool.algo.ts:672","pc":[2337,2338]},{"teal":2315,"source":"contracts\\BiatecClammPool.algo.ts:672","pc":[2339]},{"teal":2316,"source":"contracts\\BiatecClammPool.algo.ts:672","pc":[2340]},{"teal":2317,"source":"contracts\\BiatecClammPool.algo.ts:672","pc":[2341]},{"teal":2318,"source":"contracts\\BiatecClammPool.algo.ts:672","pc":[2342,2343]},{"teal":2319,"source":"contracts\\BiatecClammPool.algo.ts:672","pc":[2344,2345]},{"teal":2320,"source":"contracts\\BiatecClammPool.algo.ts:672","pc":[2346]},{"teal":2323,"source":"contracts\\BiatecClammPool.algo.ts:672","errorMessage":"argument 3 (txLpXfer) for removeLiquidity must be a axfer transaction","pc":[2347]},{"teal":2326,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[2348,2349,2350]},{"teal":2327,"source":"contracts\\BiatecClammPool.algo.ts:671","pc":[2351]},{"teal":2330,"source":"contracts\\BiatecClammPool.algo.ts:670","pc":[2352,2353,2354]},{"teal":2331,"source":"contracts\\BiatecClammPool.algo.ts:670","pc":[2355]},{"teal":2334,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2356,2357,2358]},{"teal":2335,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2359]},{"teal":2336,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2360]},{"teal":2337,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2361]},{"teal":2338,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2362]},{"teal":2341,"source":"contracts\\BiatecClammPool.algo.ts:669","errorMessage":"removeLiquidity return value overflowed 256 bits","pc":[2363]},{"teal":2342,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2364]},{"teal":2343,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2365]},{"teal":2344,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2366]},{"teal":2345,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2367]},{"teal":2346,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2368]},{"teal":2347,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2369]},{"teal":2348,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2370]},{"teal":2349,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2371]},{"teal":2350,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2372]},{"teal":2351,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2373]},{"teal":2352,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2374]},{"teal":2353,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2375]},{"teal":2354,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2376]},{"teal":2367,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2377,2378,2379]},{"teal":2370,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2380]},{"teal":2371,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2381,2382]},{"teal":2376,"source":"contracts\\BiatecClammPool.algo.ts:678","pc":[2383,2384]},{"teal":2377,"source":"contracts\\BiatecClammPool.algo.ts:678","pc":[2385,2386]},{"teal":2378,"source":"contracts\\BiatecClammPool.algo.ts:678","pc":[2387,2388]},{"teal":2379,"source":"contracts\\BiatecClammPool.algo.ts:678","pc":[2389,2390,2391]},{"teal":2388,"source":"contracts\\BiatecClammPool.algo.ts:679","pc":[2392,2393]},{"teal":2389,"source":"contracts\\BiatecClammPool.algo.ts:680","pc":[2394,2395]},{"teal":2390,"source":"contracts\\BiatecClammPool.algo.ts:680","pc":[2396,2397]},{"teal":2391,"source":"contracts\\BiatecClammPool.algo.ts:680","pc":[2398]},{"teal":2394,"source":"contracts\\BiatecClammPool.algo.ts:680","errorMessage":"transaction verification failed: {\"txn\":\"txLpXfer\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[2399]},{"teal":2397,"source":"contracts\\BiatecClammPool.algo.ts:679","pc":[2400,2401]},{"teal":2398,"source":"contracts\\BiatecClammPool.algo.ts:681","pc":[2402,2403]},{"teal":2399,"source":"contracts\\BiatecClammPool.algo.ts:681","pc":[2404,2405]},{"teal":2400,"source":"contracts\\BiatecClammPool.algo.ts:681","pc":[2406]},{"teal":2403,"source":"contracts\\BiatecClammPool.algo.ts:681","errorMessage":"transaction verification failed: {\"txn\":\"txLpXfer\",\"field\":\"xferAsset\",\"expected\":\"assetLp\"}","pc":[2407]},{"teal":2406,"source":"contracts\\BiatecClammPool.algo.ts:679","pc":[2408,2409]},{"teal":2407,"source":"contracts\\BiatecClammPool.algo.ts:682","pc":[2410,2411]},{"teal":2408,"source":"contracts\\BiatecClammPool.algo.ts:682","pc":[2412]},{"teal":2409,"source":"contracts\\BiatecClammPool.algo.ts:682","pc":[2413]},{"teal":2412,"source":"contracts\\BiatecClammPool.algo.ts:682","errorMessage":"transaction verification failed: {\"txn\":\"txLpXfer\",\"field\":\"assetAmount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=0\"}","pc":[2414]},{"teal":2416,"source":"contracts\\BiatecClammPool.algo.ts:685","pc":[2415,2416]},{"teal":2417,"source":"contracts\\BiatecClammPool.algo.ts:685","pc":[2417,2418]},{"teal":2418,"source":"contracts\\BiatecClammPool.algo.ts:685","pc":[2419,2420,2421]},{"teal":2422,"source":"contracts\\BiatecClammPool.algo.ts:688","pc":[2422]},{"teal":2423,"source":"contracts\\BiatecClammPool.algo.ts:688","pc":[2423,2424]},{"teal":2424,"source":"contracts\\BiatecClammPool.algo.ts:688","pc":[2425,2426]},{"teal":2425,"source":"contracts\\BiatecClammPool.algo.ts:688","pc":[2427]},{"teal":2426,"source":"contracts\\BiatecClammPool.algo.ts:688","pc":[2428,2429]},{"teal":2427,"source":"contracts\\BiatecClammPool.algo.ts:688","pc":[2430,2431]},{"teal":2428,"source":"contracts\\BiatecClammPool.algo.ts:688","pc":[2432]},{"teal":2429,"source":"contracts\\BiatecClammPool.algo.ts:688","pc":[2433,2434]},{"teal":2430,"source":"contracts\\BiatecClammPool.algo.ts:688","pc":[2435,2436]},{"teal":2431,"source":"contracts\\BiatecClammPool.algo.ts:688","pc":[2437,2438]},{"teal":2432,"source":"contracts\\BiatecClammPool.algo.ts:688","pc":[2439,2440]},{"teal":2433,"source":"contracts\\BiatecClammPool.algo.ts:688","pc":[2441]},{"teal":2437,"source":"contracts\\BiatecClammPool.algo.ts:689","pc":[2442]},{"teal":2438,"source":"contracts\\BiatecClammPool.algo.ts:689","pc":[2443,2444]},{"teal":2439,"source":"contracts\\BiatecClammPool.algo.ts:689","pc":[2445,2446]},{"teal":2440,"source":"contracts\\BiatecClammPool.algo.ts:689","pc":[2447]},{"teal":2441,"source":"contracts\\BiatecClammPool.algo.ts:689","pc":[2448,2449]},{"teal":2442,"source":"contracts\\BiatecClammPool.algo.ts:689","pc":[2450,2451]},{"teal":2443,"source":"contracts\\BiatecClammPool.algo.ts:689","pc":[2452]},{"teal":2444,"source":"contracts\\BiatecClammPool.algo.ts:689","pc":[2453,2454]},{"teal":2445,"source":"contracts\\BiatecClammPool.algo.ts:689","pc":[2455,2456]},{"teal":2446,"source":"contracts\\BiatecClammPool.algo.ts:689","pc":[2457,2458]},{"teal":2447,"source":"contracts\\BiatecClammPool.algo.ts:689","pc":[2459,2460]},{"teal":2448,"source":"contracts\\BiatecClammPool.algo.ts:689","pc":[2461]},{"teal":2452,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[2462,2463]},{"teal":2453,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[2464,2465]},{"teal":2454,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[2466]},{"teal":2455,"source":"contracts\\BiatecClammPool.algo.ts:691","pc":[2467]},{"teal":2456,"source":"contracts\\BiatecClammPool.algo.ts:691","pc":[2468,2469]},{"teal":2460,"source":"contracts\\BiatecClammPool.algo.ts:693","pc":[2470,2471]},{"teal":2461,"source":"contracts\\BiatecClammPool.algo.ts:693","pc":[2472,2473]},{"teal":2462,"source":"contracts\\BiatecClammPool.algo.ts:693","pc":[2474]},{"teal":2463,"source":"contracts\\BiatecClammPool.algo.ts:693","pc":[2475,2476]},{"teal":2467,"source":"contracts\\BiatecClammPool.algo.ts:694","pc":[2477,2478]},{"teal":2468,"source":"contracts\\BiatecClammPool.algo.ts:694","pc":[2479,2480]},{"teal":2469,"source":"contracts\\BiatecClammPool.algo.ts:694","pc":[2481]},{"teal":2470,"source":"contracts\\BiatecClammPool.algo.ts:694","pc":[2482,2483]},{"teal":2474,"source":"contracts\\BiatecClammPool.algo.ts:695","pc":[2484,2485]},{"teal":2475,"source":"contracts\\BiatecClammPool.algo.ts:695","pc":[2486,2487]},{"teal":2479,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2488,2489]},{"teal":2480,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2490]},{"teal":2481,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2491]},{"teal":2482,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2492]},{"teal":2483,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2493]},{"teal":2486,"source":"contracts\\BiatecClammPool.algo.ts:696","errorMessage":"lpDelta overflowed 256 bits","pc":[2494]},{"teal":2487,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2495]},{"teal":2488,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2496]},{"teal":2489,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2497]},{"teal":2490,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2498]},{"teal":2491,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2499]},{"teal":2492,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2500]},{"teal":2493,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2501]},{"teal":2494,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2502]},{"teal":2495,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2503]},{"teal":2496,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2504,2505]},{"teal":2497,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2506,2507,2508]},{"teal":2498,"source":"contracts\\BiatecClammPool.algo.ts:696","pc":[2509,2510]},{"teal":2503,"source":"contracts\\BiatecClammPool.algo.ts:697","pc":[2511,2512]},{"teal":2504,"source":"contracts\\BiatecClammPool.algo.ts:697","pc":[2513,2514]},{"teal":2505,"source":"contracts\\BiatecClammPool.algo.ts:697","pc":[2515]},{"teal":2506,"source":"contracts\\BiatecClammPool.algo.ts:697","pc":[2516,2517,2518]},{"teal":2511,"source":"contracts\\BiatecClammPool.algo.ts:699","pc":[2519,2520]},{"teal":2512,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[2521]},{"teal":2513,"source":"contracts\\BiatecClammPool.algo.ts:699","pc":[2522]},{"teal":2514,"source":"contracts\\BiatecClammPool.algo.ts:699","pc":[2523,2524]},{"teal":2515,"source":"contracts\\BiatecClammPool.algo.ts:699","pc":[2525]},{"teal":2516,"source":"contracts\\BiatecClammPool.algo.ts:699","pc":[2526,2527]},{"teal":2520,"source":"contracts\\BiatecClammPool.algo.ts:700","pc":[2528,2529]},{"teal":2521,"source":"contracts\\BiatecClammPool.algo.ts:700","pc":[2530]},{"teal":2522,"source":"contracts\\BiatecClammPool.algo.ts:700","pc":[2531,2532]},{"teal":2523,"source":"contracts\\BiatecClammPool.algo.ts:700","pc":[2533]},{"teal":2524,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[2534]},{"teal":2525,"source":"contracts\\BiatecClammPool.algo.ts:700","pc":[2535]},{"teal":2526,"source":"contracts\\BiatecClammPool.algo.ts:700","pc":[2536,2537]},{"teal":2530,"source":"contracts\\BiatecClammPool.algo.ts:701","pc":[2538,2539]},{"teal":2531,"source":"contracts\\BiatecClammPool.algo.ts:701","pc":[2540,2541]},{"teal":2532,"source":"contracts\\BiatecClammPool.algo.ts:701","pc":[2542]},{"teal":2533,"source":"contracts\\BiatecClammPool.algo.ts:701","pc":[2543,2544]},{"teal":2537,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2545,2546]},{"teal":2538,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2547]},{"teal":2539,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2548]},{"teal":2540,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2549,2550]},{"teal":2541,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2551]},{"teal":2542,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2552]},{"teal":2543,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2553]},{"teal":2544,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2554]},{"teal":2545,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2555]},{"teal":2548,"source":"contracts\\BiatecClammPool.algo.ts:702","errorMessage":"this.LiquidityUsersFromFees.value - myPortionOfFeesCollected overflowed 256 bits","pc":[2556]},{"teal":2549,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2557]},{"teal":2550,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2558]},{"teal":2551,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2559]},{"teal":2552,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2560]},{"teal":2553,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2561]},{"teal":2554,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2562]},{"teal":2555,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2563]},{"teal":2556,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2564]},{"teal":2557,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2565]},{"teal":2558,"source":"contracts\\BiatecClammPool.algo.ts:702","pc":[2566]},{"teal":2567,"source":"contracts\\BiatecClammPool.algo.ts:707","pc":[2567,2568]},{"teal":2568,"source":"contracts\\BiatecClammPool.algo.ts:707","pc":[2569]},{"teal":2569,"source":"contracts\\BiatecClammPool.algo.ts:706","pc":[2570]},{"teal":2570,"source":"contracts\\BiatecClammPool.algo.ts:706","pc":[2571]},{"teal":2571,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2572,2573]},{"teal":2572,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2574]},{"teal":2573,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2575]},{"teal":2574,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2576]},{"teal":2575,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2577]},{"teal":2578,"source":"contracts\\BiatecClammPool.algo.ts:705","errorMessage":"lpDeltaWithFees overflowed 256 bits","pc":[2578]},{"teal":2579,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2579]},{"teal":2580,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2580]},{"teal":2581,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2581]},{"teal":2582,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2582]},{"teal":2583,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2583]},{"teal":2584,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2584]},{"teal":2585,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2585]},{"teal":2586,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2586]},{"teal":2587,"source":"contracts\\BiatecClammPool.algo.ts:705","pc":[2587]},{"teal":2588,"source":"contracts\\BiatecClammPool.algo.ts:704","pc":[2588,2589,2590]},{"teal":2589,"source":"contracts\\BiatecClammPool.algo.ts:704","pc":[2591,2592]},{"teal":2593,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2593,2594]},{"teal":2594,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2595,2596]},{"teal":2595,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2597]},{"teal":2596,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2598]},{"teal":2597,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2599]},{"teal":2598,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2600]},{"teal":2599,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2601,2602]},{"teal":2600,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2603]},{"teal":2603,"source":"contracts\\BiatecClammPool.algo.ts:709","errorMessage":"(aToSend / this.assetADecimalsScaleFromBase.value) as uint64 overflowed 64 bits","pc":[2604]},{"teal":2604,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2605,2606]},{"teal":2605,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2607]},{"teal":2606,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2608]},{"teal":2607,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2609]},{"teal":2608,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2610]},{"teal":2609,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2611,2612]},{"teal":2610,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2613]},{"teal":2611,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2614]},{"teal":2612,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2615]},{"teal":2613,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2616]},{"teal":2614,"source":"contracts\\BiatecClammPool.algo.ts:709","pc":[2617,2618]},{"teal":2619,"source":"contracts\\BiatecClammPool.algo.ts:710","pc":[2619,2620]},{"teal":2620,"source":"contracts\\BiatecClammPool.algo.ts:710","pc":[2621]},{"teal":2621,"source":"contracts\\BiatecClammPool.algo.ts:710","pc":[2622]},{"teal":2622,"source":"contracts\\BiatecClammPool.algo.ts:710","pc":[2623,2624,2625]},{"teal":2627,"source":"contracts\\BiatecClammPool.algo.ts:711","pc":[2626,2627]},{"teal":2628,"source":"contracts\\BiatecClammPool.algo.ts:711","pc":[2628,2629]},{"teal":2629,"source":"contracts\\BiatecClammPool.algo.ts:711","pc":[2630,2631]},{"teal":2630,"source":"contracts\\BiatecClammPool.algo.ts:711","pc":[2632,2633,2634]},{"teal":2639,"source":"contracts\\BiatecClammPool.algo.ts:716","pc":[2635,2636]},{"teal":2640,"source":"contracts\\BiatecClammPool.algo.ts:716","pc":[2637]},{"teal":2641,"source":"contracts\\BiatecClammPool.algo.ts:715","pc":[2638,2639]},{"teal":2642,"source":"contracts\\BiatecClammPool.algo.ts:715","pc":[2640]},{"teal":2643,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2641,2642]},{"teal":2644,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2643]},{"teal":2645,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2644]},{"teal":2646,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2645]},{"teal":2647,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2646]},{"teal":2650,"source":"contracts\\BiatecClammPool.algo.ts:714","errorMessage":"lpDeltaWithFees overflowed 256 bits","pc":[2647]},{"teal":2651,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2648]},{"teal":2652,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2649]},{"teal":2653,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2650]},{"teal":2654,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2651]},{"teal":2655,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2652]},{"teal":2656,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2653]},{"teal":2657,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2654]},{"teal":2658,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2655]},{"teal":2659,"source":"contracts\\BiatecClammPool.algo.ts:714","pc":[2656]},{"teal":2660,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[2657,2658,2659]},{"teal":2661,"source":"contracts\\BiatecClammPool.algo.ts:713","pc":[2660,2661]},{"teal":2665,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2662,2663]},{"teal":2666,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2664,2665]},{"teal":2667,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2666]},{"teal":2668,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2667]},{"teal":2669,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2668]},{"teal":2670,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2669]},{"teal":2671,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2670,2671]},{"teal":2672,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2672]},{"teal":2675,"source":"contracts\\BiatecClammPool.algo.ts:718","errorMessage":"(bToSend / this.assetBDecimalsScaleFromBase.value) as uint64 overflowed 64 bits","pc":[2673]},{"teal":2676,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2674,2675]},{"teal":2677,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2676]},{"teal":2678,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2677]},{"teal":2679,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2678]},{"teal":2680,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2679]},{"teal":2681,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2680,2681]},{"teal":2682,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2682]},{"teal":2683,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2683]},{"teal":2684,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2684]},{"teal":2685,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2685]},{"teal":2686,"source":"contracts\\BiatecClammPool.algo.ts:718","pc":[2686,2687]},{"teal":2691,"source":"contracts\\BiatecClammPool.algo.ts:719","pc":[2688,2689]},{"teal":2692,"source":"contracts\\BiatecClammPool.algo.ts:719","pc":[2690]},{"teal":2693,"source":"contracts\\BiatecClammPool.algo.ts:719","pc":[2691]},{"teal":2694,"source":"contracts\\BiatecClammPool.algo.ts:719","pc":[2692,2693,2694]},{"teal":2699,"source":"contracts\\BiatecClammPool.algo.ts:720","pc":[2695,2696]},{"teal":2700,"source":"contracts\\BiatecClammPool.algo.ts:720","pc":[2697,2698]},{"teal":2701,"source":"contracts\\BiatecClammPool.algo.ts:720","pc":[2699,2700]},{"teal":2702,"source":"contracts\\BiatecClammPool.algo.ts:720","pc":[2701,2702,2703]},{"teal":2707,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[2704,2705]},{"teal":2708,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[2706]},{"teal":2709,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[2707]},{"teal":2710,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[2708]},{"teal":2711,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[2709,2710,2711]},{"teal":2712,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[2712,2713]},{"teal":2713,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[2714]},{"teal":2714,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[2715]},{"teal":2715,"source":"contracts\\BiatecClammPool.algo.ts:724","pc":[2716]},{"teal":2719,"source":"contracts\\BiatecClammPool.algo.ts:724","errorMessage":"ERR-REM-ZERO","pc":[2717]},{"teal":2723,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[2718]},{"teal":2724,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[2719]},{"teal":2725,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[2720,2721]},{"teal":2726,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[2722]},{"teal":2727,"source":"contracts\\BiatecClammPool.algo.ts:726","pc":[2723,2724]},{"teal":2731,"source":"contracts\\BiatecClammPool.algo.ts:727","pc":[2725,2726]},{"teal":2732,"source":"contracts\\BiatecClammPool.algo.ts:727","pc":[2727]},{"teal":2733,"source":"contracts\\BiatecClammPool.algo.ts:727","pc":[2728,2729]},{"teal":2734,"source":"contracts\\BiatecClammPool.algo.ts:727","pc":[2730]},{"teal":2735,"source":"contracts\\BiatecClammPool.algo.ts:727","pc":[2731,2732]},{"teal":2739,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2733]},{"teal":2740,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2734,2735]},{"teal":2741,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2736]},{"teal":2742,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2737]},{"teal":2743,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2738]},{"teal":2744,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2739]},{"teal":2747,"source":"contracts\\BiatecClammPool.algo.ts:728","errorMessage":"newAssetA overflowed 256 bits","pc":[2740]},{"teal":2748,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2741]},{"teal":2749,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2742]},{"teal":2750,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2743]},{"teal":2751,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2744]},{"teal":2752,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2745]},{"teal":2753,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2746]},{"teal":2754,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2747]},{"teal":2755,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2748]},{"teal":2756,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2749]},{"teal":2757,"source":"contracts\\BiatecClammPool.algo.ts:728","pc":[2750]},{"teal":2761,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2751,2752]},{"teal":2762,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2753,2754]},{"teal":2763,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2755]},{"teal":2764,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2756]},{"teal":2765,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2757]},{"teal":2766,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2758]},{"teal":2769,"source":"contracts\\BiatecClammPool.algo.ts:729","errorMessage":"newAssetB overflowed 256 bits","pc":[2759]},{"teal":2770,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2760]},{"teal":2771,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2761]},{"teal":2772,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2762]},{"teal":2773,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2763]},{"teal":2774,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2764]},{"teal":2775,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2765]},{"teal":2776,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2766]},{"teal":2777,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2767]},{"teal":2778,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2768]},{"teal":2779,"source":"contracts\\BiatecClammPool.algo.ts:729","pc":[2769]},{"teal":2783,"source":"contracts\\BiatecClammPool.algo.ts:730","pc":[2770,2771,2772]},{"teal":2787,"source":"contracts\\BiatecClammPool.algo.ts:731","pc":[2773,2774]},{"teal":2788,"source":"contracts\\BiatecClammPool.algo.ts:731","pc":[2775,2776]},{"teal":2789,"source":"contracts\\BiatecClammPool.algo.ts:731","pc":[2777]},{"teal":2792,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2778,2779]},{"teal":2795,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2780,2781]},{"teal":2796,"source":"contracts\\BiatecClammPool.algo.ts:669","pc":[2782]},{"teal":2801,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2783,2784]},{"teal":2804,"source":"contracts\\BiatecClammPool.algo.ts:751","pc":[2785,2786,2787]},{"teal":2805,"source":"contracts\\BiatecClammPool.algo.ts:751","pc":[2788]},{"teal":2806,"source":"contracts\\BiatecClammPool.algo.ts:751","pc":[2789]},{"teal":2807,"source":"contracts\\BiatecClammPool.algo.ts:751","pc":[2790]},{"teal":2808,"source":"contracts\\BiatecClammPool.algo.ts:751","pc":[2791]},{"teal":2811,"source":"contracts\\BiatecClammPool.algo.ts:751","errorMessage":"argument 0 (amount) for removeLiquidityAdmin must be a uint256","pc":[2792]},{"teal":2814,"source":"contracts\\BiatecClammPool.algo.ts:750","pc":[2793,2794,2795]},{"teal":2815,"source":"contracts\\BiatecClammPool.algo.ts:750","pc":[2796]},{"teal":2818,"source":"contracts\\BiatecClammPool.algo.ts:749","pc":[2797,2798,2799]},{"teal":2819,"source":"contracts\\BiatecClammPool.algo.ts:749","pc":[2800]},{"teal":2822,"source":"contracts\\BiatecClammPool.algo.ts:748","pc":[2801,2802,2803]},{"teal":2823,"source":"contracts\\BiatecClammPool.algo.ts:748","pc":[2804]},{"teal":2826,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[2805,2806,2807]},{"teal":2827,"source":"contracts\\BiatecClammPool.algo.ts:747","pc":[2808]},{"teal":2830,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2809,2810,2811]},{"teal":2831,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2812]},{"teal":2832,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2813]},{"teal":2833,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2814]},{"teal":2834,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2815]},{"teal":2837,"source":"contracts\\BiatecClammPool.algo.ts:746","errorMessage":"removeLiquidityAdmin return value overflowed 256 bits","pc":[2816]},{"teal":2838,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2817]},{"teal":2839,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2818]},{"teal":2840,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2819]},{"teal":2841,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2820]},{"teal":2842,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2821]},{"teal":2843,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2822]},{"teal":2844,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2823]},{"teal":2845,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2824]},{"teal":2846,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2825]},{"teal":2847,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2826]},{"teal":2848,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2827]},{"teal":2849,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2828]},{"teal":2850,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2829]},{"teal":2865,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2830,2831,2832]},{"teal":2868,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2833]},{"teal":2869,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[2834,2835]},{"teal":2874,"source":"contracts\\BiatecClammPool.algo.ts:754","pc":[2836,2837]},{"teal":2875,"source":"contracts\\BiatecClammPool.algo.ts:754","pc":[2838,2839]},{"teal":2876,"source":"contracts\\BiatecClammPool.algo.ts:754","pc":[2840,2841]},{"teal":2877,"source":"contracts\\BiatecClammPool.algo.ts:754","pc":[2842,2843,2844]},{"teal":2881,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[2845,2846]},{"teal":2882,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[2847,2848]},{"teal":2883,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[2849]},{"teal":2884,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[2850]},{"teal":2885,"source":"contracts\\BiatecClammPool.algo.ts:756","pc":[2851]},{"teal":2889,"source":"contracts\\BiatecClammPool.algo.ts:757","pc":[2852,2853]},{"teal":2890,"source":"contracts\\BiatecClammPool.algo.ts:757","pc":[2854,2855]},{"teal":2891,"source":"contracts\\BiatecClammPool.algo.ts:757","pc":[2856]},{"teal":2894,"source":"contracts\\BiatecClammPool.algo.ts:757","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('ef')","pc":[2857]},{"teal":2895,"source":"contracts\\BiatecClammPool.algo.ts:757","pc":[2858,2859]},{"teal":2899,"source":"contracts\\BiatecClammPool.algo.ts:759","pc":[2860,2861]},{"teal":2900,"source":"contracts\\BiatecClammPool.algo.ts:759","pc":[2862,2863]},{"teal":2901,"source":"contracts\\BiatecClammPool.algo.ts:759","pc":[2864]},{"teal":2904,"source":"contracts\\BiatecClammPool.algo.ts:759","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('s')","pc":[2865]},{"teal":2905,"source":"contracts\\BiatecClammPool.algo.ts:759","pc":[2866,2867]},{"teal":2909,"source":"contracts\\BiatecClammPool.algo.ts:760","pc":[2868,2869]},{"teal":2910,"source":"contracts\\BiatecClammPool.algo.ts:760","pc":[2870]},{"teal":2911,"source":"contracts\\BiatecClammPool.algo.ts:760","pc":[2871]},{"teal":2914,"source":"contracts\\BiatecClammPool.algo.ts:760","errorMessage":"E_PAUSED","pc":[2872]},{"teal":2918,"source":"contracts\\BiatecClammPool.algo.ts:766","pc":[2873,2874]},{"teal":2919,"source":"contracts\\BiatecClammPool.algo.ts:766","pc":[2875,2876]},{"teal":2920,"source":"contracts\\BiatecClammPool.algo.ts:766","pc":[2877]},{"teal":2923,"source":"contracts\\BiatecClammPool.algo.ts:766","errorMessage":"ERR-EXEC-ONLY","pc":[2878]},{"teal":2927,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[2879]},{"teal":2928,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[2880,2881]},{"teal":2929,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[2882,2883]},{"teal":2930,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[2884]},{"teal":2931,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[2885,2886]},{"teal":2932,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[2887,2888]},{"teal":2933,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[2889]},{"teal":2934,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[2890,2891]},{"teal":2935,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[2892,2893]},{"teal":2936,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[2894,2895]},{"teal":2937,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[2896,2897]},{"teal":2938,"source":"contracts\\BiatecClammPool.algo.ts:768","pc":[2898]},{"teal":2942,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[2899]},{"teal":2943,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[2900,2901]},{"teal":2944,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[2902,2903]},{"teal":2945,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[2904]},{"teal":2946,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[2905,2906]},{"teal":2947,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[2907,2908]},{"teal":2948,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[2909]},{"teal":2949,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[2910,2911]},{"teal":2950,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[2912,2913]},{"teal":2951,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[2914,2915]},{"teal":2952,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[2916,2917]},{"teal":2953,"source":"contracts\\BiatecClammPool.algo.ts:769","pc":[2918]},{"teal":2957,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[2919,2920]},{"teal":2958,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[2921,2922]},{"teal":2959,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[2923]},{"teal":2960,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[2924]},{"teal":2961,"source":"contracts\\BiatecClammPool.algo.ts:772","pc":[2925,2926]},{"teal":2965,"source":"contracts\\BiatecClammPool.algo.ts:774","pc":[2927,2928]},{"teal":2966,"source":"contracts\\BiatecClammPool.algo.ts:774","pc":[2929,2930]},{"teal":2971,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[2931,2932]},{"teal":2972,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[2933,2934]},{"teal":2973,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[2935]},{"teal":2974,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[2936,2937,2938]},{"teal":2979,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[2939,2940]},{"teal":2980,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[2941]},{"teal":2981,"source":"contracts\\BiatecClammPool.algo.ts:775","pc":[2942,2943]},{"teal":2989,"source":"contracts\\BiatecClammPool.algo.ts:777","pc":[2944,2945]},{"teal":2990,"source":"contracts\\BiatecClammPool.algo.ts:777","pc":[2946,2947]},{"teal":2991,"source":"contracts\\BiatecClammPool.algo.ts:777","pc":[2948]},{"teal":2992,"source":"contracts\\BiatecClammPool.algo.ts:777","pc":[2949]},{"teal":2995,"source":"contracts\\BiatecClammPool.algo.ts:776","errorMessage":"ERR-TOO-MUCH","pc":[2950]},{"teal":2999,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2951,2952]},{"teal":3000,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2953]},{"teal":3001,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2954]},{"teal":3002,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2955,2956]},{"teal":3003,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2957]},{"teal":3004,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2958]},{"teal":3005,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2959]},{"teal":3006,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2960]},{"teal":3007,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2961]},{"teal":3010,"source":"contracts\\BiatecClammPool.algo.ts:780","errorMessage":"this.LiquidityBiatecFromFees.value - lpDeltaWithFees overflowed 256 bits","pc":[2962]},{"teal":3011,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2963]},{"teal":3012,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2964]},{"teal":3013,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2965]},{"teal":3014,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2966]},{"teal":3015,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2967]},{"teal":3016,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2968]},{"teal":3017,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2969]},{"teal":3018,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2970]},{"teal":3019,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2971]},{"teal":3020,"source":"contracts\\BiatecClammPool.algo.ts:780","pc":[2972]},{"teal":3028,"source":"contracts\\BiatecClammPool.algo.ts:784","pc":[2973,2974]},{"teal":3029,"source":"contracts\\BiatecClammPool.algo.ts:784","pc":[2975]},{"teal":3030,"source":"contracts\\BiatecClammPool.algo.ts:783","pc":[2976]},{"teal":3031,"source":"contracts\\BiatecClammPool.algo.ts:783","pc":[2977]},{"teal":3032,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2978,2979]},{"teal":3033,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2980]},{"teal":3034,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2981]},{"teal":3035,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2982]},{"teal":3036,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2983]},{"teal":3039,"source":"contracts\\BiatecClammPool.algo.ts:782","errorMessage":"lpDeltaWithFees overflowed 256 bits","pc":[2984]},{"teal":3040,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2985]},{"teal":3041,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2986]},{"teal":3042,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2987]},{"teal":3043,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2988]},{"teal":3044,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2989]},{"teal":3045,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2990]},{"teal":3046,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2991]},{"teal":3047,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2992]},{"teal":3048,"source":"contracts\\BiatecClammPool.algo.ts:782","pc":[2993]},{"teal":3049,"source":"contracts\\BiatecClammPool.algo.ts:781","pc":[2994,2995,2996]},{"teal":3050,"source":"contracts\\BiatecClammPool.algo.ts:781","pc":[2997,2998]},{"teal":3054,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[2999,3000]},{"teal":3055,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3001,3002]},{"teal":3056,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3003]},{"teal":3057,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3004]},{"teal":3058,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3005]},{"teal":3059,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3006]},{"teal":3060,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3007,3008]},{"teal":3061,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3009]},{"teal":3064,"source":"contracts\\BiatecClammPool.algo.ts:786","errorMessage":"(aToSend / this.assetADecimalsScaleFromBase.value) as uint64 overflowed 64 bits","pc":[3010]},{"teal":3065,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3011,3012]},{"teal":3066,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3013]},{"teal":3067,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3014]},{"teal":3068,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3015]},{"teal":3069,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3016]},{"teal":3070,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3017,3018]},{"teal":3071,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3019]},{"teal":3072,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3020]},{"teal":3073,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3021]},{"teal":3074,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3022]},{"teal":3075,"source":"contracts\\BiatecClammPool.algo.ts:786","pc":[3023,3024]},{"teal":3080,"source":"contracts\\BiatecClammPool.algo.ts:787","pc":[3025,3026]},{"teal":3081,"source":"contracts\\BiatecClammPool.algo.ts:787","pc":[3027]},{"teal":3082,"source":"contracts\\BiatecClammPool.algo.ts:787","pc":[3028]},{"teal":3083,"source":"contracts\\BiatecClammPool.algo.ts:787","pc":[3029,3030,3031]},{"teal":3088,"source":"contracts\\BiatecClammPool.algo.ts:788","pc":[3032,3033]},{"teal":3089,"source":"contracts\\BiatecClammPool.algo.ts:788","pc":[3034,3035]},{"teal":3090,"source":"contracts\\BiatecClammPool.algo.ts:788","pc":[3036,3037]},{"teal":3091,"source":"contracts\\BiatecClammPool.algo.ts:788","pc":[3038,3039,3040]},{"teal":3100,"source":"contracts\\BiatecClammPool.algo.ts:793","pc":[3041,3042]},{"teal":3101,"source":"contracts\\BiatecClammPool.algo.ts:793","pc":[3043]},{"teal":3102,"source":"contracts\\BiatecClammPool.algo.ts:792","pc":[3044,3045]},{"teal":3103,"source":"contracts\\BiatecClammPool.algo.ts:792","pc":[3046]},{"teal":3104,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3047,3048]},{"teal":3105,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3049]},{"teal":3106,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3050]},{"teal":3107,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3051]},{"teal":3108,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3052]},{"teal":3111,"source":"contracts\\BiatecClammPool.algo.ts:791","errorMessage":"lpDeltaWithFees overflowed 256 bits","pc":[3053]},{"teal":3112,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3054]},{"teal":3113,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3055]},{"teal":3114,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3056]},{"teal":3115,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3057]},{"teal":3116,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3058]},{"teal":3117,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3059]},{"teal":3118,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3060]},{"teal":3119,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3061]},{"teal":3120,"source":"contracts\\BiatecClammPool.algo.ts:791","pc":[3062]},{"teal":3121,"source":"contracts\\BiatecClammPool.algo.ts:790","pc":[3063,3064,3065]},{"teal":3122,"source":"contracts\\BiatecClammPool.algo.ts:790","pc":[3066,3067]},{"teal":3126,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3068,3069]},{"teal":3127,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3070,3071]},{"teal":3128,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3072]},{"teal":3129,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3073]},{"teal":3130,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3074]},{"teal":3131,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3075]},{"teal":3132,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3076,3077]},{"teal":3133,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3078]},{"teal":3136,"source":"contracts\\BiatecClammPool.algo.ts:795","errorMessage":"(bToSend / this.assetBDecimalsScaleFromBase.value) as uint64 overflowed 64 bits","pc":[3079]},{"teal":3137,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3080,3081]},{"teal":3138,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3082]},{"teal":3139,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3083]},{"teal":3140,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3084]},{"teal":3141,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3085]},{"teal":3142,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3086,3087]},{"teal":3143,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3088]},{"teal":3144,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3089]},{"teal":3145,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3090]},{"teal":3146,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3091]},{"teal":3147,"source":"contracts\\BiatecClammPool.algo.ts:795","pc":[3092,3093]},{"teal":3152,"source":"contracts\\BiatecClammPool.algo.ts:796","pc":[3094,3095]},{"teal":3153,"source":"contracts\\BiatecClammPool.algo.ts:796","pc":[3096]},{"teal":3154,"source":"contracts\\BiatecClammPool.algo.ts:796","pc":[3097]},{"teal":3155,"source":"contracts\\BiatecClammPool.algo.ts:796","pc":[3098,3099,3100]},{"teal":3160,"source":"contracts\\BiatecClammPool.algo.ts:797","pc":[3101,3102]},{"teal":3161,"source":"contracts\\BiatecClammPool.algo.ts:797","pc":[3103,3104]},{"teal":3162,"source":"contracts\\BiatecClammPool.algo.ts:797","pc":[3105,3106]},{"teal":3163,"source":"contracts\\BiatecClammPool.algo.ts:797","pc":[3107,3108,3109]},{"teal":3168,"source":"contracts\\BiatecClammPool.algo.ts:800","pc":[3110]},{"teal":3169,"source":"contracts\\BiatecClammPool.algo.ts:800","pc":[3111]},{"teal":3170,"source":"contracts\\BiatecClammPool.algo.ts:800","pc":[3112,3113]},{"teal":3171,"source":"contracts\\BiatecClammPool.algo.ts:800","pc":[3114]},{"teal":3172,"source":"contracts\\BiatecClammPool.algo.ts:800","pc":[3115,3116]},{"teal":3176,"source":"contracts\\BiatecClammPool.algo.ts:801","pc":[3117,3118]},{"teal":3177,"source":"contracts\\BiatecClammPool.algo.ts:801","pc":[3119]},{"teal":3178,"source":"contracts\\BiatecClammPool.algo.ts:801","pc":[3120,3121]},{"teal":3179,"source":"contracts\\BiatecClammPool.algo.ts:801","pc":[3122]},{"teal":3180,"source":"contracts\\BiatecClammPool.algo.ts:801","pc":[3123,3124]},{"teal":3184,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3125]},{"teal":3185,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3126,3127]},{"teal":3186,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3128]},{"teal":3187,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3129]},{"teal":3188,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3130]},{"teal":3189,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3131]},{"teal":3192,"source":"contracts\\BiatecClammPool.algo.ts:802","errorMessage":"newAssetA overflowed 256 bits","pc":[3132]},{"teal":3193,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3133]},{"teal":3194,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3134]},{"teal":3195,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3135]},{"teal":3196,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3136]},{"teal":3197,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3137]},{"teal":3198,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3138]},{"teal":3199,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3139]},{"teal":3200,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3140]},{"teal":3201,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3141]},{"teal":3202,"source":"contracts\\BiatecClammPool.algo.ts:802","pc":[3142]},{"teal":3206,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3143,3144]},{"teal":3207,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3145,3146]},{"teal":3208,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3147]},{"teal":3209,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3148]},{"teal":3210,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3149]},{"teal":3211,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3150]},{"teal":3214,"source":"contracts\\BiatecClammPool.algo.ts:803","errorMessage":"newAssetB overflowed 256 bits","pc":[3151]},{"teal":3215,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3152]},{"teal":3216,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3153]},{"teal":3217,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3154]},{"teal":3218,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3155]},{"teal":3219,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3156]},{"teal":3220,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3157]},{"teal":3221,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3158]},{"teal":3222,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3159]},{"teal":3223,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3160]},{"teal":3224,"source":"contracts\\BiatecClammPool.algo.ts:803","pc":[3161]},{"teal":3228,"source":"contracts\\BiatecClammPool.algo.ts:804","pc":[3162,3163,3164]},{"teal":3232,"source":"contracts\\BiatecClammPool.algo.ts:805","pc":[3165,3166]},{"teal":3233,"source":"contracts\\BiatecClammPool.algo.ts:805","pc":[3167,3168]},{"teal":3234,"source":"contracts\\BiatecClammPool.algo.ts:805","pc":[3169]},{"teal":3237,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3170,3171]},{"teal":3240,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3172,3173]},{"teal":3241,"source":"contracts\\BiatecClammPool.algo.ts:746","pc":[3174]},{"teal":3253,"source":"contracts\\BiatecClammPool.algo.ts:817","pc":[3175,3176,3177]},{"teal":3256,"source":"contracts\\BiatecClammPool.algo.ts:817","pc":[3178]},{"teal":3257,"source":"contracts\\BiatecClammPool.algo.ts:817","pc":[3179,3180]},{"teal":3264,"source":"contracts\\BiatecClammPool.algo.ts:819","pc":[3181,3182]},{"teal":3265,"source":"contracts\\BiatecClammPool.algo.ts:819","pc":[3183,3184]},{"teal":3266,"source":"contracts\\BiatecClammPool.algo.ts:819","pc":[3185]},{"teal":3267,"source":"contracts\\BiatecClammPool.algo.ts:819","pc":[3186]},{"teal":3270,"source":"contracts\\BiatecClammPool.algo.ts:818","errorMessage":"ERR-INVALID-CONFIG","pc":[3187]},{"teal":3274,"source":"contracts\\BiatecClammPool.algo.ts:822","pc":[3188,3189]},{"teal":3275,"source":"contracts\\BiatecClammPool.algo.ts:822","pc":[3190,3191,3192]},{"teal":3276,"source":"contracts\\BiatecClammPool.algo.ts:822","pc":[3193]},{"teal":3279,"source":"contracts\\BiatecClammPool.algo.ts:822","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('i')","pc":[3194]},{"teal":3280,"source":"contracts\\BiatecClammPool.algo.ts:822","pc":[3195,3196]},{"teal":3287,"source":"contracts\\BiatecClammPool.algo.ts:824","pc":[3197,3198]},{"teal":3288,"source":"contracts\\BiatecClammPool.algo.ts:824","pc":[3199,3200]},{"teal":3289,"source":"contracts\\BiatecClammPool.algo.ts:824","pc":[3201]},{"teal":3292,"source":"contracts\\BiatecClammPool.algo.ts:823","errorMessage":"ERR-WRONG-IDENT","pc":[3202]},{"teal":3301,"source":"contracts\\BiatecClammPool.algo.ts:828","pc":[3203]},{"teal":3302,"source":"contracts\\BiatecClammPool.algo.ts:828","pc":[3204,3205]},{"teal":3303,"source":"contracts\\BiatecClammPool.algo.ts:828","pc":[3206,3207]},{"teal":3304,"source":"contracts\\BiatecClammPool.algo.ts:829","pc":[3208,3209,3210,3211,3212,3213]},{"teal":3305,"source":"contracts\\BiatecClammPool.algo.ts:829","pc":[3214,3215]},{"teal":3309,"source":"contracts\\BiatecClammPool.algo.ts:830","pc":[3216,3217]},{"teal":3310,"source":"contracts\\BiatecClammPool.algo.ts:830","pc":[3218,3219]},{"teal":3311,"source":"contracts\\BiatecClammPool.algo.ts:830","pc":[3220,3221,3222]},{"teal":3312,"source":"contracts\\BiatecClammPool.algo.ts:830","pc":[3223,3224]},{"teal":3316,"source":"contracts\\BiatecClammPool.algo.ts:831","pc":[3225]},{"teal":3317,"source":"contracts\\BiatecClammPool.algo.ts:831","pc":[3226,3227]},{"teal":3321,"source":"contracts\\BiatecClammPool.algo.ts:832","pc":[3228,3229]},{"teal":3322,"source":"contracts\\BiatecClammPool.algo.ts:832","pc":[3230,3231]},{"teal":3325,"source":"contracts\\BiatecClammPool.algo.ts:828","pc":[3232]},{"teal":3326,"source":"contracts\\BiatecClammPool.algo.ts:828","pc":[3233,3234]},{"teal":3327,"source":"contracts\\BiatecClammPool.algo.ts:828","pc":[3235]},{"teal":3328,"source":"contracts\\BiatecClammPool.algo.ts:828","pc":[3236]},{"teal":3329,"source":"contracts\\BiatecClammPool.algo.ts:828","pc":[3237,3238]},{"teal":3330,"source":"contracts\\BiatecClammPool.algo.ts:828","pc":[3239,3240,3241]},{"teal":3331,"source":"contracts\\BiatecClammPool.algo.ts:828","pc":[3242,3243]},{"teal":3338,"source":"contracts\\BiatecClammPool.algo.ts:835","pc":[3244,3245]},{"teal":3339,"source":"contracts\\BiatecClammPool.algo.ts:835","pc":[3246,3247]},{"teal":3340,"source":"contracts\\BiatecClammPool.algo.ts:835","pc":[3248,3249]},{"teal":3341,"source":"contracts\\BiatecClammPool.algo.ts:835","pc":[3250,3251,3252]},{"teal":3342,"source":"contracts\\BiatecClammPool.algo.ts:835","pc":[3253]},{"teal":3343,"source":"contracts\\BiatecClammPool.algo.ts:835","pc":[3254]},{"teal":3346,"source":"contracts\\BiatecClammPool.algo.ts:834","errorMessage":"ERR-USER-LOCKED","pc":[3255]},{"teal":3353,"source":"contracts\\BiatecClammPool.algo.ts:839","pc":[3256,3257]},{"teal":3354,"source":"contracts\\BiatecClammPool.algo.ts:839","pc":[3258,3259]},{"teal":3355,"source":"contracts\\BiatecClammPool.algo.ts:839","pc":[3260,3261]},{"teal":3356,"source":"contracts\\BiatecClammPool.algo.ts:839","pc":[3262,3263,3264]},{"teal":3357,"source":"contracts\\BiatecClammPool.algo.ts:839","pc":[3265]},{"teal":3358,"source":"contracts\\BiatecClammPool.algo.ts:839","pc":[3266,3267]},{"teal":3359,"source":"contracts\\BiatecClammPool.algo.ts:839","pc":[3268]},{"teal":3360,"source":"contracts\\BiatecClammPool.algo.ts:839","pc":[3269]},{"teal":3363,"source":"contracts\\BiatecClammPool.algo.ts:838","errorMessage":"ERR-LOW-VER","pc":[3270]},{"teal":3367,"source":"contracts\\BiatecClammPool.algo.ts:843","pc":[3271,3272]},{"teal":3368,"source":"contracts\\BiatecClammPool.algo.ts:843","pc":[3273,3274]},{"teal":3369,"source":"contracts\\BiatecClammPool.algo.ts:843","pc":[3275]},{"teal":3372,"source":"contracts\\BiatecClammPool.algo.ts:843","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('s')","pc":[3276]},{"teal":3373,"source":"contracts\\BiatecClammPool.algo.ts:843","pc":[3277,3278]},{"teal":3377,"source":"contracts\\BiatecClammPool.algo.ts:844","pc":[3279,3280]},{"teal":3378,"source":"contracts\\BiatecClammPool.algo.ts:844","pc":[3281]},{"teal":3379,"source":"contracts\\BiatecClammPool.algo.ts:844","pc":[3282]},{"teal":3382,"source":"contracts\\BiatecClammPool.algo.ts:844","errorMessage":"E_PAUSED","pc":[3283]},{"teal":3386,"source":"contracts\\BiatecClammPool.algo.ts:846","pc":[3284,3285]},{"teal":3389,"source":"contracts\\BiatecClammPool.algo.ts:817","pc":[3286,3287]},{"teal":3392,"source":"contracts\\BiatecClammPool.algo.ts:817","pc":[3288,3289]},{"teal":3393,"source":"contracts\\BiatecClammPool.algo.ts:817","pc":[3290]},{"teal":3398,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3291,3292]},{"teal":3401,"source":"contracts\\BiatecClammPool.algo.ts:863","pc":[3293,3294,3295]},{"teal":3402,"source":"contracts\\BiatecClammPool.algo.ts:863","pc":[3296]},{"teal":3405,"source":"contracts\\BiatecClammPool.algo.ts:862","pc":[3297,3298,3299]},{"teal":3406,"source":"contracts\\BiatecClammPool.algo.ts:862","pc":[3300]},{"teal":3409,"source":"contracts\\BiatecClammPool.algo.ts:861","pc":[3301,3302,3303]},{"teal":3410,"source":"contracts\\BiatecClammPool.algo.ts:861","pc":[3304]},{"teal":3413,"source":"contracts\\BiatecClammPool.algo.ts:860","pc":[3305,3306]},{"teal":3414,"source":"contracts\\BiatecClammPool.algo.ts:860","pc":[3307]},{"teal":3415,"source":"contracts\\BiatecClammPool.algo.ts:860","pc":[3308]},{"teal":3418,"source":"contracts\\BiatecClammPool.algo.ts:859","pc":[3309,3310,3311]},{"teal":3419,"source":"contracts\\BiatecClammPool.algo.ts:859","pc":[3312]},{"teal":3422,"source":"contracts\\BiatecClammPool.algo.ts:858","pc":[3313,3314,3315]},{"teal":3423,"source":"contracts\\BiatecClammPool.algo.ts:858","pc":[3316]},{"teal":3426,"source":"contracts\\BiatecClammPool.algo.ts:857","pc":[3317,3318,3319]},{"teal":3427,"source":"contracts\\BiatecClammPool.algo.ts:857","pc":[3320]},{"teal":3430,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3321,3322,3323]},{"teal":3431,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3324]},{"teal":3432,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3325]},{"teal":3433,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3326]},{"teal":3434,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3327]},{"teal":3437,"source":"contracts\\BiatecClammPool.algo.ts:856","errorMessage":"swap return value overflowed 256 bits","pc":[3328]},{"teal":3438,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3329]},{"teal":3439,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3330]},{"teal":3440,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3331]},{"teal":3441,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3332]},{"teal":3442,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3333]},{"teal":3443,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3334]},{"teal":3444,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3335]},{"teal":3445,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3336]},{"teal":3446,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3337]},{"teal":3447,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3338]},{"teal":3448,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3339]},{"teal":3449,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3340]},{"teal":3450,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3341]},{"teal":3460,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3342,3343,3344]},{"teal":3463,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3345]},{"teal":3464,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[3346,3347]},{"teal":3468,"source":"contracts\\BiatecClammPool.algo.ts:865","pc":[3348]},{"teal":3469,"source":"contracts\\BiatecClammPool.algo.ts:865","pc":[3349,3350]},{"teal":3470,"source":"contracts\\BiatecClammPool.algo.ts:865","pc":[3351,3352]},{"teal":3471,"source":"contracts\\BiatecClammPool.algo.ts:865","pc":[3353]},{"teal":3472,"source":"contracts\\BiatecClammPool.algo.ts:865","pc":[3354,3355]},{"teal":3473,"source":"contracts\\BiatecClammPool.algo.ts:865","pc":[3356,3357]},{"teal":3474,"source":"contracts\\BiatecClammPool.algo.ts:865","pc":[3358]},{"teal":3475,"source":"contracts\\BiatecClammPool.algo.ts:865","pc":[3359,3360]},{"teal":3476,"source":"contracts\\BiatecClammPool.algo.ts:865","pc":[3361,3362]},{"teal":3477,"source":"contracts\\BiatecClammPool.algo.ts:865","pc":[3363,3364]},{"teal":3478,"source":"contracts\\BiatecClammPool.algo.ts:865","pc":[3365,3366]},{"teal":3479,"source":"contracts\\BiatecClammPool.algo.ts:865","pc":[3367]},{"teal":3483,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[3368]},{"teal":3484,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[3369,3370]},{"teal":3485,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[3371,3372]},{"teal":3486,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[3373]},{"teal":3487,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[3374,3375]},{"teal":3488,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[3376,3377]},{"teal":3489,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[3378]},{"teal":3490,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[3379,3380]},{"teal":3491,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[3381,3382]},{"teal":3492,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[3383,3384]},{"teal":3493,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[3385,3386]},{"teal":3494,"source":"contracts\\BiatecClammPool.algo.ts:866","pc":[3387]},{"teal":3498,"source":"contracts\\BiatecClammPool.algo.ts:867","pc":[3388]},{"teal":3499,"source":"contracts\\BiatecClammPool.algo.ts:867","pc":[3389,3390]},{"teal":3500,"source":"contracts\\BiatecClammPool.algo.ts:867","pc":[3391,3392]},{"teal":3501,"source":"contracts\\BiatecClammPool.algo.ts:867","pc":[3393]},{"teal":3502,"source":"contracts\\BiatecClammPool.algo.ts:867","pc":[3394,3395]},{"teal":3503,"source":"contracts\\BiatecClammPool.algo.ts:867","pc":[3396,3397]},{"teal":3504,"source":"contracts\\BiatecClammPool.algo.ts:867","pc":[3398]},{"teal":3505,"source":"contracts\\BiatecClammPool.algo.ts:867","pc":[3399,3400]},{"teal":3506,"source":"contracts\\BiatecClammPool.algo.ts:867","pc":[3401,3402]},{"teal":3507,"source":"contracts\\BiatecClammPool.algo.ts:867","pc":[3403,3404]},{"teal":3508,"source":"contracts\\BiatecClammPool.algo.ts:867","pc":[3405,3406]},{"teal":3509,"source":"contracts\\BiatecClammPool.algo.ts:867","pc":[3407]},{"teal":3514,"source":"contracts\\BiatecClammPool.algo.ts:869","pc":[3408,3409]},{"teal":3515,"source":"contracts\\BiatecClammPool.algo.ts:869","pc":[3410,3411]},{"teal":3516,"source":"contracts\\BiatecClammPool.algo.ts:869","pc":[3412,3413,3414]},{"teal":3521,"source":"contracts\\BiatecClammPool.algo.ts:871","pc":[3415,3416]},{"teal":3522,"source":"contracts\\BiatecClammPool.algo.ts:871","pc":[3417,3418]},{"teal":3523,"source":"contracts\\BiatecClammPool.algo.ts:871","pc":[3419]},{"teal":3524,"source":"contracts\\BiatecClammPool.algo.ts:871","pc":[3420]},{"teal":3525,"source":"contracts\\BiatecClammPool.algo.ts:871","pc":[3421,3422,3423]},{"teal":3533,"source":"contracts\\BiatecClammPool.algo.ts:873","pc":[3424,3425]},{"teal":3534,"source":"contracts\\BiatecClammPool.algo.ts:873","pc":[3426]},{"teal":3535,"source":"contracts\\BiatecClammPool.algo.ts:873","pc":[3427]},{"teal":3536,"source":"contracts\\BiatecClammPool.algo.ts:873","pc":[3428]},{"teal":3537,"source":"contracts\\BiatecClammPool.algo.ts:873","pc":[3429,3430,3431]},{"teal":3538,"source":"contracts\\BiatecClammPool.algo.ts:873","pc":[3432,3433]},{"teal":3539,"source":"contracts\\BiatecClammPool.algo.ts:873","pc":[3434]},{"teal":3540,"source":"contracts\\BiatecClammPool.algo.ts:873","pc":[3435]},{"teal":3541,"source":"contracts\\BiatecClammPool.algo.ts:873","pc":[3436]},{"teal":3545,"source":"contracts\\BiatecClammPool.algo.ts:872","errorMessage":"Payment can be done only when one of the pool assets is native token","pc":[3437]},{"teal":3554,"source":"contracts\\BiatecClammPool.algo.ts:877","pc":[3438,3439]},{"teal":3555,"source":"contracts\\BiatecClammPool.algo.ts:877","pc":[3440,3441]},{"teal":3556,"source":"contracts\\BiatecClammPool.algo.ts:877","pc":[3442]},{"teal":3557,"source":"contracts\\BiatecClammPool.algo.ts:877","pc":[3443]},{"teal":3560,"source":"contracts\\BiatecClammPool.algo.ts:877","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"typeEnum\",\"expected\":\"pay\"}","pc":[3444]},{"teal":3563,"source":"contracts\\BiatecClammPool.algo.ts:877","pc":[3445,3446]},{"teal":3564,"source":"contracts\\BiatecClammPool.algo.ts:878","pc":[3447,3448]},{"teal":3565,"source":"contracts\\BiatecClammPool.algo.ts:878","pc":[3449]},{"teal":3566,"source":"contracts\\BiatecClammPool.algo.ts:878","pc":[3450]},{"teal":3569,"source":"contracts\\BiatecClammPool.algo.ts:878","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"amount\",\"condition\":\"greaterThan\",\"expected\":\">0\"}","pc":[3451]},{"teal":3572,"source":"contracts\\BiatecClammPool.algo.ts:877","pc":[3452,3453]},{"teal":3573,"source":"contracts\\BiatecClammPool.algo.ts:879","pc":[3454,3455]},{"teal":3574,"source":"contracts\\BiatecClammPool.algo.ts:879","pc":[3456,3457]},{"teal":3575,"source":"contracts\\BiatecClammPool.algo.ts:879","pc":[3458]},{"teal":3578,"source":"contracts\\BiatecClammPool.algo.ts:879","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[3459]},{"teal":3581,"source":"contracts\\BiatecClammPool.algo.ts:877","pc":[3460,3461]},{"teal":3582,"source":"contracts\\BiatecClammPool.algo.ts:880","pc":[3462,3463]},{"teal":3583,"source":"contracts\\BiatecClammPool.algo.ts:880","pc":[3464,3465]},{"teal":3584,"source":"contracts\\BiatecClammPool.algo.ts:880","pc":[3466]},{"teal":3587,"source":"contracts\\BiatecClammPool.algo.ts:880","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"sender\",\"expected\":\"this.txn.sender\"}","pc":[3467]},{"teal":3588,"source":"contracts\\BiatecClammPool.algo.ts:871","pc":[3468,3469,3470]},{"teal":3593,"source":"contracts\\BiatecClammPool.algo.ts:883","pc":[3471,3472]},{"teal":3594,"source":"contracts\\BiatecClammPool.algo.ts:883","pc":[3473,3474]},{"teal":3595,"source":"contracts\\BiatecClammPool.algo.ts:883","pc":[3475,3476]},{"teal":3596,"source":"contracts\\BiatecClammPool.algo.ts:883","pc":[3477]},{"teal":3597,"source":"contracts\\BiatecClammPool.algo.ts:883","pc":[3478]},{"teal":3607,"source":"contracts\\BiatecClammPool.algo.ts:885","pc":[3479,3480]},{"teal":3608,"source":"contracts\\BiatecClammPool.algo.ts:885","pc":[3481,3482]},{"teal":3609,"source":"contracts\\BiatecClammPool.algo.ts:885","pc":[3483,3484]},{"teal":3610,"source":"contracts\\BiatecClammPool.algo.ts:885","pc":[3485]},{"teal":3613,"source":"contracts\\BiatecClammPool.algo.ts:885","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"typeEnum\",\"expected\":\"axfer\"}","pc":[3486]},{"teal":3616,"source":"contracts\\BiatecClammPool.algo.ts:885","pc":[3487,3488]},{"teal":3617,"source":"contracts\\BiatecClammPool.algo.ts:886","pc":[3489,3490]},{"teal":3618,"source":"contracts\\BiatecClammPool.algo.ts:886","pc":[3491]},{"teal":3619,"source":"contracts\\BiatecClammPool.algo.ts:886","pc":[3492]},{"teal":3622,"source":"contracts\\BiatecClammPool.algo.ts:886","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"assetAmount\",\"condition\":\"greaterThan\",\"expected\":\">0\"}","pc":[3493]},{"teal":3625,"source":"contracts\\BiatecClammPool.algo.ts:885","pc":[3494,3495]},{"teal":3626,"source":"contracts\\BiatecClammPool.algo.ts:887","pc":[3496,3497]},{"teal":3627,"source":"contracts\\BiatecClammPool.algo.ts:887","pc":[3498,3499]},{"teal":3628,"source":"contracts\\BiatecClammPool.algo.ts:887","pc":[3500]},{"teal":3631,"source":"contracts\\BiatecClammPool.algo.ts:887","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[3501]},{"teal":3634,"source":"contracts\\BiatecClammPool.algo.ts:885","pc":[3502,3503]},{"teal":3635,"source":"contracts\\BiatecClammPool.algo.ts:888","pc":[3504,3505]},{"teal":3636,"source":"contracts\\BiatecClammPool.algo.ts:888","pc":[3506,3507]},{"teal":3637,"source":"contracts\\BiatecClammPool.algo.ts:888","pc":[3508]},{"teal":3640,"source":"contracts\\BiatecClammPool.algo.ts:888","errorMessage":"transaction verification failed: {\"txn\":\"txSwap\",\"field\":\"sender\",\"expected\":\"this.txn.sender\"}","pc":[3509]},{"teal":3643,"source":"contracts\\BiatecClammPool.algo.ts:885","pc":[3510,3511]},{"teal":3644,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[3512,3513]},{"teal":3645,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[3514,3515]},{"teal":3646,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[3516]},{"teal":3647,"source":"contracts\\BiatecClammPool.algo.ts:885","pc":[3517,3518]},{"teal":3648,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[3519,3520]},{"teal":3649,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[3521,3522]},{"teal":3650,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[3523]},{"teal":3651,"source":"contracts\\BiatecClammPool.algo.ts:889","pc":[3524]},{"teal":3654,"source":"contracts\\BiatecClammPool.algo.ts:889","errorMessage":"transaction verification failed: {\"txn\":{\"txnText\":\"txSwap\"},\"field\":\"xferAsset\",\"condition\":\"includedIn\",\"expected\":\"[assetA, assetB]\"}","pc":[3525]},{"teal":3659,"source":"contracts\\BiatecClammPool.algo.ts:893","pc":[3526,3527]},{"teal":3660,"source":"contracts\\BiatecClammPool.algo.ts:893","pc":[3528,3529]},{"teal":3661,"source":"contracts\\BiatecClammPool.algo.ts:893","pc":[3530]},{"teal":3664,"source":"contracts\\BiatecClammPool.algo.ts:893","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('p')","pc":[3531]},{"teal":3665,"source":"contracts\\BiatecClammPool.algo.ts:893","pc":[3532,3533]},{"teal":3672,"source":"contracts\\BiatecClammPool.algo.ts:895","pc":[3534,3535]},{"teal":3673,"source":"contracts\\BiatecClammPool.algo.ts:895","pc":[3536,3537]},{"teal":3674,"source":"contracts\\BiatecClammPool.algo.ts:895","pc":[3538]},{"teal":3677,"source":"contracts\\BiatecClammPool.algo.ts:894","errorMessage":"ERR-INVALID-PP","pc":[3539]},{"teal":3681,"source":"contracts\\BiatecClammPool.algo.ts:898","pc":[3540,3541]},{"teal":3682,"source":"contracts\\BiatecClammPool.algo.ts:898","pc":[3542,3543]},{"teal":3683,"source":"contracts\\BiatecClammPool.algo.ts:898","pc":[3544,3545,3546]},{"teal":3684,"source":"contracts\\BiatecClammPool.algo.ts:898","pc":[3547,3548]},{"teal":3689,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[3549]},{"teal":3690,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3550,3551]},{"teal":3691,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3552]},{"teal":3692,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3553]},{"teal":3693,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3554,3555]},{"teal":3694,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3556,3557]},{"teal":3695,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3558,3559]},{"teal":3696,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3560,3561,3562]},{"teal":3697,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3563]},{"teal":3698,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3564]},{"teal":3699,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3565]},{"teal":3700,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3566,3567]},{"teal":3701,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3568,3569]},{"teal":3702,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3570,3571]},{"teal":3703,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3572,3573,3574]},{"teal":3704,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3575]},{"teal":3705,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3576]},{"teal":3706,"source":"contracts\\BiatecClammPool.algo.ts:901","pc":[3577]},{"teal":3707,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[3578]},{"teal":3708,"source":"contracts\\BiatecClammPool.algo.ts:900","pc":[3579,3580]},{"teal":3712,"source":"contracts\\BiatecClammPool.algo.ts:902","pc":[3581]},{"teal":3713,"source":"contracts\\BiatecClammPool.algo.ts:902","pc":[3582,3583]},{"teal":3717,"source":"contracts\\BiatecClammPool.algo.ts:903","pc":[3584]},{"teal":3718,"source":"contracts\\BiatecClammPool.algo.ts:903","pc":[3585,3586]},{"teal":3722,"source":"contracts\\BiatecClammPool.algo.ts:904","pc":[3587]},{"teal":3723,"source":"contracts\\BiatecClammPool.algo.ts:904","pc":[3588,3589]},{"teal":3727,"source":"contracts\\BiatecClammPool.algo.ts:905","pc":[3590]},{"teal":3728,"source":"contracts\\BiatecClammPool.algo.ts:905","pc":[3591,3592]},{"teal":3732,"source":"contracts\\BiatecClammPool.algo.ts:906","pc":[3593]},{"teal":3733,"source":"contracts\\BiatecClammPool.algo.ts:906","pc":[3594,3595]},{"teal":3737,"source":"contracts\\BiatecClammPool.algo.ts:908","pc":[3596]},{"teal":3738,"source":"contracts\\BiatecClammPool.algo.ts:908","pc":[3597,3598]},{"teal":3743,"source":"contracts\\BiatecClammPool.algo.ts:909","pc":[3599,3600]},{"teal":3744,"source":"contracts\\BiatecClammPool.algo.ts:909","pc":[3601,3602]},{"teal":3745,"source":"contracts\\BiatecClammPool.algo.ts:909","pc":[3603]},{"teal":3746,"source":"contracts\\BiatecClammPool.algo.ts:909","pc":[3604]},{"teal":3747,"source":"contracts\\BiatecClammPool.algo.ts:909","pc":[3605,3606,3607]},{"teal":3752,"source":"contracts\\BiatecClammPool.algo.ts:910","pc":[3608,3609]},{"teal":3753,"source":"contracts\\BiatecClammPool.algo.ts:910","pc":[3610]},{"teal":3754,"source":"contracts\\BiatecClammPool.algo.ts:910","pc":[3611]},{"teal":3755,"source":"contracts\\BiatecClammPool.algo.ts:910","pc":[3612,3613]},{"teal":3756,"source":"contracts\\BiatecClammPool.algo.ts:909","pc":[3614,3615,3616]},{"teal":3761,"source":"contracts\\BiatecClammPool.algo.ts:912","pc":[3617,3618]},{"teal":3762,"source":"contracts\\BiatecClammPool.algo.ts:912","pc":[3619,3620]},{"teal":3763,"source":"contracts\\BiatecClammPool.algo.ts:912","pc":[3621,3622]},{"teal":3764,"source":"contracts\\BiatecClammPool.algo.ts:912","pc":[3623]},{"teal":3765,"source":"contracts\\BiatecClammPool.algo.ts:912","pc":[3624,3625]},{"teal":3770,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[3626,3627]},{"teal":3771,"source":"contracts\\BiatecClammPool.algo.ts:914","pc":[3628,3629]},{"teal":3775,"source":"contracts\\BiatecClammPool.algo.ts:915","pc":[3630,3631]},{"teal":3776,"source":"contracts\\BiatecClammPool.algo.ts:915","pc":[3632,3633]},{"teal":3781,"source":"contracts\\BiatecClammPool.algo.ts:916","pc":[3634,3635]},{"teal":3782,"source":"contracts\\BiatecClammPool.algo.ts:916","pc":[3636,3637,3638]},{"teal":3787,"source":"contracts\\BiatecClammPool.algo.ts:917","pc":[3639,3640]},{"teal":3788,"source":"contracts\\BiatecClammPool.algo.ts:917","pc":[3641,3642]},{"teal":3793,"source":"contracts\\BiatecClammPool.algo.ts:918","pc":[3643,3644]},{"teal":3794,"source":"contracts\\BiatecClammPool.algo.ts:918","pc":[3645,3646]},{"teal":3795,"source":"contracts\\BiatecClammPool.algo.ts:918","pc":[3647]},{"teal":3796,"source":"contracts\\BiatecClammPool.algo.ts:918","pc":[3648]},{"teal":3797,"source":"contracts\\BiatecClammPool.algo.ts:918","pc":[3649,3650,3651]},{"teal":3802,"source":"contracts\\BiatecClammPool.algo.ts:919","pc":[3652,3653]},{"teal":3803,"source":"contracts\\BiatecClammPool.algo.ts:919","pc":[3654,3655]},{"teal":3804,"source":"contracts\\BiatecClammPool.algo.ts:919","pc":[3656]},{"teal":3805,"source":"contracts\\BiatecClammPool.algo.ts:919","pc":[3657,3658]},{"teal":3809,"source":"contracts\\BiatecClammPool.algo.ts:920","pc":[3659,3660]},{"teal":3810,"source":"contracts\\BiatecClammPool.algo.ts:920","pc":[3661,3662]},{"teal":3811,"source":"contracts\\BiatecClammPool.algo.ts:920","pc":[3663,3664]},{"teal":3812,"source":"contracts\\BiatecClammPool.algo.ts:918","pc":[3665,3666,3667]},{"teal":3817,"source":"contracts\\BiatecClammPool.algo.ts:922","pc":[3668,3669]},{"teal":3818,"source":"contracts\\BiatecClammPool.algo.ts:922","pc":[3670,3671]},{"teal":3819,"source":"contracts\\BiatecClammPool.algo.ts:922","pc":[3672]},{"teal":3820,"source":"contracts\\BiatecClammPool.algo.ts:922","pc":[3673,3674]},{"teal":3824,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[3675,3676]},{"teal":3825,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[3677,3678]},{"teal":3826,"source":"contracts\\BiatecClammPool.algo.ts:923","pc":[3679,3680]},{"teal":3831,"source":"contracts\\BiatecClammPool.algo.ts:925","pc":[3681,3682]},{"teal":3832,"source":"contracts\\BiatecClammPool.algo.ts:925","pc":[3683,3684]},{"teal":3833,"source":"contracts\\BiatecClammPool.algo.ts:925","pc":[3685]},{"teal":3834,"source":"contracts\\BiatecClammPool.algo.ts:925","pc":[3686]},{"teal":3835,"source":"contracts\\BiatecClammPool.algo.ts:925","pc":[3687,3688]},{"teal":3839,"source":"contracts\\BiatecClammPool.algo.ts:926","pc":[3689,3690]},{"teal":3840,"source":"contracts\\BiatecClammPool.algo.ts:926","pc":[3691,3692]},{"teal":3841,"source":"contracts\\BiatecClammPool.algo.ts:926","pc":[3693]},{"teal":3842,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[3694]},{"teal":3843,"source":"contracts\\BiatecClammPool.algo.ts:926","pc":[3695]},{"teal":3844,"source":"contracts\\BiatecClammPool.algo.ts:926","pc":[3696,3697]},{"teal":3855,"source":"contracts\\BiatecClammPool.algo.ts:934","pc":[3698,3699]},{"teal":3856,"source":"contracts\\BiatecClammPool.algo.ts:934","pc":[3700]},{"teal":3857,"source":"contracts\\BiatecClammPool.algo.ts:933","pc":[3701,3702]},{"teal":3858,"source":"contracts\\BiatecClammPool.algo.ts:933","pc":[3703]},{"teal":3859,"source":"contracts\\BiatecClammPool.algo.ts:932","pc":[3704,3705]},{"teal":3860,"source":"contracts\\BiatecClammPool.algo.ts:932","pc":[3706]},{"teal":3861,"source":"contracts\\BiatecClammPool.algo.ts:931","pc":[3707,3708]},{"teal":3862,"source":"contracts\\BiatecClammPool.algo.ts:931","pc":[3709]},{"teal":3863,"source":"contracts\\BiatecClammPool.algo.ts:930","pc":[3710]},{"teal":3864,"source":"contracts\\BiatecClammPool.algo.ts:930","pc":[3711]},{"teal":3865,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3712,3713]},{"teal":3866,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3714]},{"teal":3867,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3715]},{"teal":3868,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3716]},{"teal":3869,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3717]},{"teal":3872,"source":"contracts\\BiatecClammPool.algo.ts:929","errorMessage":"inAssetAfterFee overflowed 256 bits","pc":[3718]},{"teal":3873,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3719]},{"teal":3874,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3720]},{"teal":3875,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3721]},{"teal":3876,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3722]},{"teal":3877,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3723]},{"teal":3878,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3724]},{"teal":3879,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3725]},{"teal":3880,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3726]},{"teal":3881,"source":"contracts\\BiatecClammPool.algo.ts:929","pc":[3727]},{"teal":3882,"source":"contracts\\BiatecClammPool.algo.ts:928","pc":[3728,3729,3730]},{"teal":3883,"source":"contracts\\BiatecClammPool.algo.ts:928","pc":[3731,3732]},{"teal":3887,"source":"contracts\\BiatecClammPool.algo.ts:936","pc":[3733,3734]},{"teal":3888,"source":"contracts\\BiatecClammPool.algo.ts:936","pc":[3735,3736]},{"teal":3892,"source":"contracts\\BiatecClammPool.algo.ts:937","pc":[3737,3738]},{"teal":3893,"source":"contracts\\BiatecClammPool.algo.ts:937","pc":[3739,3740]},{"teal":3894,"source":"contracts\\BiatecClammPool.algo.ts:937","pc":[3741]},{"teal":3895,"source":"contracts\\BiatecClammPool.algo.ts:937","pc":[3742]},{"teal":3896,"source":"contracts\\BiatecClammPool.algo.ts:937","pc":[3743,3744]},{"teal":3901,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[3745,3746]},{"teal":3902,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[3747,3748]},{"teal":3903,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[3749]},{"teal":3904,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[3750]},{"teal":3905,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[3751,3752]},{"teal":3906,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[3753]},{"teal":3907,"source":"contracts\\BiatecClammPool.algo.ts:939","pc":[3754,3755,3756]},{"teal":3912,"source":"contracts\\BiatecClammPool.algo.ts:940","pc":[3757,3758]},{"teal":3913,"source":"contracts\\BiatecClammPool.algo.ts:940","pc":[3759,3760]},{"teal":3914,"source":"contracts\\BiatecClammPool.algo.ts:940","pc":[3761]},{"teal":3915,"source":"contracts\\BiatecClammPool.algo.ts:940","pc":[3762,3763]},{"teal":3919,"source":"contracts\\BiatecClammPool.algo.ts:941","pc":[3764,3765]},{"teal":3920,"source":"contracts\\BiatecClammPool.algo.ts:941","pc":[3766,3767]},{"teal":3921,"source":"contracts\\BiatecClammPool.algo.ts:941","pc":[3768]},{"teal":3922,"source":"contracts\\BiatecClammPool.algo.ts:941","pc":[3769]},{"teal":3923,"source":"contracts\\BiatecClammPool.algo.ts:941","pc":[3770,3771]},{"teal":3928,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3772,3773]},{"teal":3929,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3774]},{"teal":3930,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3775]},{"teal":3931,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3776,3777]},{"teal":3932,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3778]},{"teal":3935,"source":"contracts\\BiatecClammPool.algo.ts:943","errorMessage":"realSwapBDecimals as uint64 overflowed 64 bits","pc":[3779]},{"teal":3936,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3780,3781]},{"teal":3937,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3782]},{"teal":3938,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3783]},{"teal":3939,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3784]},{"teal":3940,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3785]},{"teal":3941,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3786,3787]},{"teal":3942,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3788]},{"teal":3943,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3789]},{"teal":3944,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3790]},{"teal":3945,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3791]},{"teal":3946,"source":"contracts\\BiatecClammPool.algo.ts:943","pc":[3792,3793]},{"teal":3950,"source":"contracts\\BiatecClammPool.algo.ts:944","pc":[3794,3795]},{"teal":3951,"source":"contracts\\BiatecClammPool.algo.ts:944","pc":[3796,3797]},{"teal":3956,"source":"contracts\\BiatecClammPool.algo.ts:945","pc":[3798,3799]},{"teal":3957,"source":"contracts\\BiatecClammPool.algo.ts:945","pc":[3800]},{"teal":3958,"source":"contracts\\BiatecClammPool.algo.ts:945","pc":[3801]},{"teal":3959,"source":"contracts\\BiatecClammPool.algo.ts:945","pc":[3802,3803,3804]},{"teal":3964,"source":"contracts\\BiatecClammPool.algo.ts:947","pc":[3805,3806]},{"teal":3965,"source":"contracts\\BiatecClammPool.algo.ts:947","pc":[3807,3808]},{"teal":3966,"source":"contracts\\BiatecClammPool.algo.ts:947","pc":[3809]},{"teal":3969,"source":"contracts\\BiatecClammPool.algo.ts:947","errorMessage":"Minimum to receive is not met","pc":[3810]},{"teal":3974,"source":"contracts\\BiatecClammPool.algo.ts:949","pc":[3811,3812]},{"teal":3975,"source":"contracts\\BiatecClammPool.algo.ts:949","pc":[3813,3814]},{"teal":3979,"source":"contracts\\BiatecClammPool.algo.ts:950","pc":[3815,3816]},{"teal":3980,"source":"contracts\\BiatecClammPool.algo.ts:950","pc":[3817,3818]},{"teal":3981,"source":"contracts\\BiatecClammPool.algo.ts:950","pc":[3819,3820]},{"teal":3982,"source":"contracts\\BiatecClammPool.algo.ts:950","pc":[3821,3822,3823]},{"teal":3986,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3824]},{"teal":3987,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3825]},{"teal":3988,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3826]},{"teal":3989,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3827,3828]},{"teal":3990,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3829]},{"teal":3991,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3830]},{"teal":3992,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3831]},{"teal":3993,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3832]},{"teal":3994,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3833]},{"teal":3997,"source":"contracts\\BiatecClammPool.algo.ts:952","errorMessage":"this.assetABalanceBaseScale.value + inAssetInBaseScale overflowed 256 bits","pc":[3834]},{"teal":3998,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3835]},{"teal":3999,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3836]},{"teal":4000,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3837]},{"teal":4001,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3838]},{"teal":4002,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3839]},{"teal":4003,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3840]},{"teal":4004,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3841]},{"teal":4005,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3842]},{"teal":4006,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3843]},{"teal":4007,"source":"contracts\\BiatecClammPool.algo.ts:952","pc":[3844]},{"teal":4011,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3845,3846]},{"teal":4012,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3847]},{"teal":4013,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3848]},{"teal":4014,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3849,3850]},{"teal":4015,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3851]},{"teal":4016,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3852]},{"teal":4017,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3853]},{"teal":4018,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3854]},{"teal":4019,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3855]},{"teal":4022,"source":"contracts\\BiatecClammPool.algo.ts:953","errorMessage":"this.assetBBalanceBaseScale.value - realSwapBaseDecimals overflowed 256 bits","pc":[3856]},{"teal":4023,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3857]},{"teal":4024,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3858]},{"teal":4025,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3859]},{"teal":4026,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3860]},{"teal":4027,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3861]},{"teal":4028,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3862]},{"teal":4029,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3863]},{"teal":4030,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3864]},{"teal":4031,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3865]},{"teal":4032,"source":"contracts\\BiatecClammPool.algo.ts:953","pc":[3866]},{"teal":4038,"source":"contracts\\BiatecClammPool.algo.ts:956","pc":[3867,3868]},{"teal":4039,"source":"contracts\\BiatecClammPool.algo.ts:956","pc":[3869]},{"teal":4040,"source":"contracts\\BiatecClammPool.algo.ts:956","pc":[3870,3871,3872]},{"teal":4045,"source":"contracts\\BiatecClammPool.algo.ts:957","pc":[3873,3874]},{"teal":4046,"source":"contracts\\BiatecClammPool.algo.ts:957","pc":[3875,3876]},{"teal":4051,"source":"contracts\\BiatecClammPool.algo.ts:958","pc":[3877,3878]},{"teal":4052,"source":"contracts\\BiatecClammPool.algo.ts:958","pc":[3879,3880]},{"teal":4053,"source":"contracts\\BiatecClammPool.algo.ts:958","pc":[3881]},{"teal":4054,"source":"contracts\\BiatecClammPool.algo.ts:958","pc":[3882]},{"teal":4055,"source":"contracts\\BiatecClammPool.algo.ts:958","pc":[3883,3884,3885]},{"teal":4060,"source":"contracts\\BiatecClammPool.algo.ts:959","pc":[3886,3887]},{"teal":4061,"source":"contracts\\BiatecClammPool.algo.ts:959","pc":[3888,3889]},{"teal":4062,"source":"contracts\\BiatecClammPool.algo.ts:959","pc":[3890]},{"teal":4063,"source":"contracts\\BiatecClammPool.algo.ts:959","pc":[3891,3892]},{"teal":4067,"source":"contracts\\BiatecClammPool.algo.ts:960","pc":[3893,3894]},{"teal":4068,"source":"contracts\\BiatecClammPool.algo.ts:960","pc":[3895,3896]},{"teal":4069,"source":"contracts\\BiatecClammPool.algo.ts:960","pc":[3897,3898]},{"teal":4070,"source":"contracts\\BiatecClammPool.algo.ts:958","pc":[3899,3900,3901]},{"teal":4075,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[3902,3903]},{"teal":4076,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[3904,3905]},{"teal":4077,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[3906]},{"teal":4078,"source":"contracts\\BiatecClammPool.algo.ts:962","pc":[3907,3908]},{"teal":4082,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[3909,3910]},{"teal":4083,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[3911,3912]},{"teal":4084,"source":"contracts\\BiatecClammPool.algo.ts:963","pc":[3913,3914]},{"teal":4089,"source":"contracts\\BiatecClammPool.algo.ts:965","pc":[3915,3916]},{"teal":4090,"source":"contracts\\BiatecClammPool.algo.ts:965","pc":[3917,3918]},{"teal":4091,"source":"contracts\\BiatecClammPool.algo.ts:965","pc":[3919]},{"teal":4092,"source":"contracts\\BiatecClammPool.algo.ts:965","pc":[3920]},{"teal":4093,"source":"contracts\\BiatecClammPool.algo.ts:965","pc":[3921,3922]},{"teal":4097,"source":"contracts\\BiatecClammPool.algo.ts:966","pc":[3923,3924]},{"teal":4098,"source":"contracts\\BiatecClammPool.algo.ts:966","pc":[3925,3926]},{"teal":4099,"source":"contracts\\BiatecClammPool.algo.ts:966","pc":[3927]},{"teal":4100,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[3928]},{"teal":4101,"source":"contracts\\BiatecClammPool.algo.ts:966","pc":[3929]},{"teal":4102,"source":"contracts\\BiatecClammPool.algo.ts:966","pc":[3930,3931]},{"teal":4113,"source":"contracts\\BiatecClammPool.algo.ts:973","pc":[3932,3933]},{"teal":4114,"source":"contracts\\BiatecClammPool.algo.ts:973","pc":[3934]},{"teal":4115,"source":"contracts\\BiatecClammPool.algo.ts:972","pc":[3935,3936]},{"teal":4116,"source":"contracts\\BiatecClammPool.algo.ts:972","pc":[3937]},{"teal":4117,"source":"contracts\\BiatecClammPool.algo.ts:971","pc":[3938,3939]},{"teal":4118,"source":"contracts\\BiatecClammPool.algo.ts:971","pc":[3940]},{"teal":4119,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[3941,3942]},{"teal":4120,"source":"contracts\\BiatecClammPool.algo.ts:970","pc":[3943]},{"teal":4121,"source":"contracts\\BiatecClammPool.algo.ts:969","pc":[3944]},{"teal":4122,"source":"contracts\\BiatecClammPool.algo.ts:969","pc":[3945]},{"teal":4123,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3946,3947]},{"teal":4124,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3948]},{"teal":4125,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3949]},{"teal":4126,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3950]},{"teal":4127,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3951]},{"teal":4130,"source":"contracts\\BiatecClammPool.algo.ts:968","errorMessage":"inAssetAfterFee overflowed 256 bits","pc":[3952]},{"teal":4131,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3953]},{"teal":4132,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3954]},{"teal":4133,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3955]},{"teal":4134,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3956]},{"teal":4135,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3957]},{"teal":4136,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3958]},{"teal":4137,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3959]},{"teal":4138,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3960]},{"teal":4139,"source":"contracts\\BiatecClammPool.algo.ts:968","pc":[3961]},{"teal":4140,"source":"contracts\\BiatecClammPool.algo.ts:967","pc":[3962,3963,3964]},{"teal":4141,"source":"contracts\\BiatecClammPool.algo.ts:967","pc":[3965,3966]},{"teal":4145,"source":"contracts\\BiatecClammPool.algo.ts:975","pc":[3967,3968]},{"teal":4146,"source":"contracts\\BiatecClammPool.algo.ts:975","pc":[3969,3970]},{"teal":4150,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[3971,3972]},{"teal":4151,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[3973,3974]},{"teal":4152,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[3975]},{"teal":4153,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[3976]},{"teal":4154,"source":"contracts\\BiatecClammPool.algo.ts:976","pc":[3977,3978]},{"teal":4159,"source":"contracts\\BiatecClammPool.algo.ts:978","pc":[3979,3980]},{"teal":4160,"source":"contracts\\BiatecClammPool.algo.ts:978","pc":[3981,3982]},{"teal":4161,"source":"contracts\\BiatecClammPool.algo.ts:978","pc":[3983]},{"teal":4162,"source":"contracts\\BiatecClammPool.algo.ts:978","pc":[3984]},{"teal":4163,"source":"contracts\\BiatecClammPool.algo.ts:978","pc":[3985,3986]},{"teal":4164,"source":"contracts\\BiatecClammPool.algo.ts:978","pc":[3987]},{"teal":4165,"source":"contracts\\BiatecClammPool.algo.ts:978","pc":[3988,3989,3990]},{"teal":4170,"source":"contracts\\BiatecClammPool.algo.ts:979","pc":[3991,3992]},{"teal":4171,"source":"contracts\\BiatecClammPool.algo.ts:979","pc":[3993,3994]},{"teal":4172,"source":"contracts\\BiatecClammPool.algo.ts:979","pc":[3995]},{"teal":4173,"source":"contracts\\BiatecClammPool.algo.ts:979","pc":[3996,3997]},{"teal":4177,"source":"contracts\\BiatecClammPool.algo.ts:980","pc":[3998,3999]},{"teal":4178,"source":"contracts\\BiatecClammPool.algo.ts:980","pc":[4000,4001]},{"teal":4179,"source":"contracts\\BiatecClammPool.algo.ts:980","pc":[4002]},{"teal":4180,"source":"contracts\\BiatecClammPool.algo.ts:980","pc":[4003]},{"teal":4181,"source":"contracts\\BiatecClammPool.algo.ts:980","pc":[4004,4005]},{"teal":4186,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4006,4007]},{"teal":4187,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4008]},{"teal":4188,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4009]},{"teal":4189,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4010,4011]},{"teal":4190,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4012]},{"teal":4193,"source":"contracts\\BiatecClammPool.algo.ts:982","errorMessage":"realSwapADecimals as uint64 overflowed 64 bits","pc":[4013]},{"teal":4194,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4014,4015]},{"teal":4195,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4016]},{"teal":4196,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4017]},{"teal":4197,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4018]},{"teal":4198,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4019]},{"teal":4199,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4020,4021]},{"teal":4200,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4022]},{"teal":4201,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4023]},{"teal":4202,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4024]},{"teal":4203,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4025]},{"teal":4204,"source":"contracts\\BiatecClammPool.algo.ts:982","pc":[4026,4027]},{"teal":4208,"source":"contracts\\BiatecClammPool.algo.ts:983","pc":[4028,4029]},{"teal":4209,"source":"contracts\\BiatecClammPool.algo.ts:983","pc":[4030,4031]},{"teal":4214,"source":"contracts\\BiatecClammPool.algo.ts:984","pc":[4032,4033]},{"teal":4215,"source":"contracts\\BiatecClammPool.algo.ts:984","pc":[4034]},{"teal":4216,"source":"contracts\\BiatecClammPool.algo.ts:984","pc":[4035]},{"teal":4217,"source":"contracts\\BiatecClammPool.algo.ts:984","pc":[4036,4037,4038]},{"teal":4222,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4039,4040]},{"teal":4223,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4041,4042]},{"teal":4224,"source":"contracts\\BiatecClammPool.algo.ts:986","pc":[4043]},{"teal":4227,"source":"contracts\\BiatecClammPool.algo.ts:986","errorMessage":"Minimum to receive is not met","pc":[4044]},{"teal":4232,"source":"contracts\\BiatecClammPool.algo.ts:988","pc":[4045,4046]},{"teal":4233,"source":"contracts\\BiatecClammPool.algo.ts:988","pc":[4047,4048]},{"teal":4237,"source":"contracts\\BiatecClammPool.algo.ts:989","pc":[4049,4050]},{"teal":4238,"source":"contracts\\BiatecClammPool.algo.ts:989","pc":[4051,4052]},{"teal":4239,"source":"contracts\\BiatecClammPool.algo.ts:989","pc":[4053,4054]},{"teal":4240,"source":"contracts\\BiatecClammPool.algo.ts:989","pc":[4055,4056,4057]},{"teal":4244,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4058,4059]},{"teal":4245,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4060]},{"teal":4246,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4061]},{"teal":4247,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4062,4063]},{"teal":4248,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4064]},{"teal":4249,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4065]},{"teal":4250,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4066]},{"teal":4251,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4067]},{"teal":4252,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4068]},{"teal":4255,"source":"contracts\\BiatecClammPool.algo.ts:991","errorMessage":"this.assetBBalanceBaseScale.value + inAssetInBaseScale overflowed 256 bits","pc":[4069]},{"teal":4256,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4070]},{"teal":4257,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4071]},{"teal":4258,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4072]},{"teal":4259,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4073]},{"teal":4260,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4074]},{"teal":4261,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4075]},{"teal":4262,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4076]},{"teal":4263,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4077]},{"teal":4264,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4078]},{"teal":4265,"source":"contracts\\BiatecClammPool.algo.ts:991","pc":[4079]},{"teal":4269,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4080]},{"teal":4270,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4081]},{"teal":4271,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4082]},{"teal":4272,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4083,4084]},{"teal":4273,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4085]},{"teal":4274,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4086]},{"teal":4275,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4087]},{"teal":4276,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4088]},{"teal":4277,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4089]},{"teal":4280,"source":"contracts\\BiatecClammPool.algo.ts:992","errorMessage":"this.assetABalanceBaseScale.value - realSwapBaseDecimals overflowed 256 bits","pc":[4090]},{"teal":4281,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4091]},{"teal":4282,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4092]},{"teal":4283,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4093]},{"teal":4284,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4094]},{"teal":4285,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4095]},{"teal":4286,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4096]},{"teal":4287,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4097]},{"teal":4288,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4098]},{"teal":4289,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4099]},{"teal":4290,"source":"contracts\\BiatecClammPool.algo.ts:992","pc":[4100]},{"teal":4295,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4101,4102]},{"teal":4296,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4103]},{"teal":4297,"source":"contracts\\BiatecClammPool.algo.ts:994","pc":[4104,4105]},{"teal":4301,"source":"contracts\\BiatecClammPool.algo.ts:995","pc":[4106,4107]},{"teal":4302,"source":"contracts\\BiatecClammPool.algo.ts:995","pc":[4108,4109,4110]},{"teal":4303,"source":"contracts\\BiatecClammPool.algo.ts:995","pc":[4111,4112]},{"teal":4307,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[4113,4114]},{"teal":4308,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[4115,4116]},{"teal":4309,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[4117]},{"teal":4310,"source":"contracts\\BiatecClammPool.algo.ts:999","pc":[4118,4119]},{"teal":4315,"source":"contracts\\BiatecClammPool.algo.ts:1001","pc":[4120,4121]},{"teal":4316,"source":"contracts\\BiatecClammPool.algo.ts:1001","pc":[4122,4123,4124]},{"teal":4321,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[4125]},{"teal":4322,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[4126]},{"teal":4323,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[4127,4128]},{"teal":4324,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[4129]},{"teal":4325,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[4130,4131]},{"teal":4326,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[4132]},{"teal":4327,"source":"contracts\\BiatecClammPool.algo.ts:1003","pc":[4133,4134]},{"teal":4331,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4135,4136]},{"teal":4332,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4137]},{"teal":4333,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4138]},{"teal":4334,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4139,4140]},{"teal":4335,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4141]},{"teal":4338,"source":"contracts\\BiatecClammPool.algo.ts:1004","errorMessage":"feeB256 as uint64 overflowed 64 bits","pc":[4142]},{"teal":4339,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4143,4144]},{"teal":4340,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4145]},{"teal":4341,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4146]},{"teal":4342,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4147]},{"teal":4343,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4148]},{"teal":4344,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4149,4150]},{"teal":4345,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4151]},{"teal":4346,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4152]},{"teal":4347,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4153]},{"teal":4348,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4154]},{"teal":4349,"source":"contracts\\BiatecClammPool.algo.ts:1004","pc":[4155,4156]},{"teal":4353,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[4157]},{"teal":4354,"source":"contracts\\BiatecClammPool.algo.ts:1005","pc":[4158,4159]},{"teal":4355,"source":"contracts\\BiatecClammPool.algo.ts:1001","pc":[4160,4161,4162]},{"teal":4360,"source":"contracts\\BiatecClammPool.algo.ts:1008","pc":[4163,4164]},{"teal":4361,"source":"contracts\\BiatecClammPool.algo.ts:1008","pc":[4165]},{"teal":4362,"source":"contracts\\BiatecClammPool.algo.ts:1008","pc":[4166,4167]},{"teal":4363,"source":"contracts\\BiatecClammPool.algo.ts:1008","pc":[4168]},{"teal":4364,"source":"contracts\\BiatecClammPool.algo.ts:1008","pc":[4169,4170]},{"teal":4365,"source":"contracts\\BiatecClammPool.algo.ts:1008","pc":[4171]},{"teal":4366,"source":"contracts\\BiatecClammPool.algo.ts:1008","pc":[4172,4173]},{"teal":4370,"source":"contracts\\BiatecClammPool.algo.ts:1009","pc":[4174]},{"teal":4371,"source":"contracts\\BiatecClammPool.algo.ts:1009","pc":[4175,4176]},{"teal":4375,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4177,4178]},{"teal":4376,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4179]},{"teal":4377,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4180]},{"teal":4378,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4181,4182]},{"teal":4379,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4183]},{"teal":4382,"source":"contracts\\BiatecClammPool.algo.ts:1010","errorMessage":"feeB256 as uint64 overflowed 64 bits","pc":[4184]},{"teal":4383,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4185,4186]},{"teal":4384,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4187]},{"teal":4385,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4188]},{"teal":4386,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4189]},{"teal":4387,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4190]},{"teal":4388,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4191,4192]},{"teal":4389,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4193]},{"teal":4390,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4194]},{"teal":4391,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4195]},{"teal":4392,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4196]},{"teal":4393,"source":"contracts\\BiatecClammPool.algo.ts:1010","pc":[4197,4198]},{"teal":4398,"source":"contracts\\BiatecClammPool.algo.ts:1013","pc":[4199,4200]},{"teal":4399,"source":"contracts\\BiatecClammPool.algo.ts:1013","pc":[4201]},{"teal":4400,"source":"contracts\\BiatecClammPool.algo.ts:1013","pc":[4202,4203]},{"teal":4401,"source":"contracts\\BiatecClammPool.algo.ts:1013","pc":[4204]},{"teal":4404,"source":"contracts\\BiatecClammPool.algo.ts:1013","errorMessage":"global state value does not exist: this.appBiatecConfigProvider.value.globalState('f')","pc":[4205]},{"teal":4405,"source":"contracts\\BiatecClammPool.algo.ts:1013","pc":[4206,4207]},{"teal":4410,"source":"contracts\\BiatecClammPool.algo.ts:1014","pc":[4208,4209]},{"teal":4411,"source":"contracts\\BiatecClammPool.algo.ts:1014","pc":[4210,4211]},{"teal":4412,"source":"contracts\\BiatecClammPool.algo.ts:1014","pc":[4212]},{"teal":4413,"source":"contracts\\BiatecClammPool.algo.ts:1014","pc":[4213,4214,4215]},{"teal":4418,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[4216,4217]},{"teal":4419,"source":"contracts\\BiatecClammPool.algo.ts:1015","pc":[4218,4219]},{"teal":4423,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4220,4221]},{"teal":4424,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4222]},{"teal":4425,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4223]},{"teal":4426,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4224,4225]},{"teal":4427,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4226]},{"teal":4428,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4227]},{"teal":4429,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4228]},{"teal":4430,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4229]},{"teal":4431,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4230]},{"teal":4434,"source":"contracts\\BiatecClammPool.algo.ts:1016","errorMessage":"this.LiquidityUsersFromFees.value + usersLiquidityFromFeeIncrement overflowed 256 bits","pc":[4231]},{"teal":4435,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4232]},{"teal":4436,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4233]},{"teal":4437,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4234]},{"teal":4438,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4235]},{"teal":4439,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4236]},{"teal":4440,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4237]},{"teal":4441,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4238]},{"teal":4442,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4239]},{"teal":4443,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4240]},{"teal":4444,"source":"contracts\\BiatecClammPool.algo.ts:1016","pc":[4241]},{"teal":4445,"source":"contracts\\BiatecClammPool.algo.ts:1014","pc":[4242,4243,4244]},{"teal":4450,"source":"contracts\\BiatecClammPool.algo.ts:1018","pc":[4245,4246]},{"teal":4451,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[4247]},{"teal":4452,"source":"contracts\\BiatecClammPool.algo.ts:1018","pc":[4248,4249]},{"teal":4453,"source":"contracts\\BiatecClammPool.algo.ts:1018","pc":[4250]},{"teal":4454,"source":"contracts\\BiatecClammPool.algo.ts:1018","pc":[4251]},{"teal":4455,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[4252]},{"teal":4456,"source":"contracts\\BiatecClammPool.algo.ts:1018","pc":[4253]},{"teal":4457,"source":"contracts\\BiatecClammPool.algo.ts:1018","pc":[4254,4255]},{"teal":4461,"source":"contracts\\BiatecClammPool.algo.ts:1019","pc":[4256,4257]},{"teal":4462,"source":"contracts\\BiatecClammPool.algo.ts:1019","pc":[4258,4259]},{"teal":4463,"source":"contracts\\BiatecClammPool.algo.ts:1019","pc":[4260]},{"teal":4464,"source":"contracts\\BiatecClammPool.algo.ts:1019","pc":[4261,4262]},{"teal":4468,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4263,4264]},{"teal":4469,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4265]},{"teal":4470,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4266]},{"teal":4471,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4267,4268]},{"teal":4472,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4269]},{"teal":4473,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4270]},{"teal":4474,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4271]},{"teal":4475,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4272]},{"teal":4476,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4273]},{"teal":4479,"source":"contracts\\BiatecClammPool.algo.ts:1020","errorMessage":"this.LiquidityUsersFromFees.value + usersLiquidityFromFeeIncrement overflowed 256 bits","pc":[4274]},{"teal":4480,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4275]},{"teal":4481,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4276]},{"teal":4482,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4277]},{"teal":4483,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4278]},{"teal":4484,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4279]},{"teal":4485,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4280]},{"teal":4486,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4281]},{"teal":4487,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4282]},{"teal":4488,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4283]},{"teal":4489,"source":"contracts\\BiatecClammPool.algo.ts:1020","pc":[4284]},{"teal":4493,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4285,4286]},{"teal":4494,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4287]},{"teal":4495,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4288]},{"teal":4496,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4289,4290]},{"teal":4497,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4291]},{"teal":4498,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4292]},{"teal":4499,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4293]},{"teal":4500,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4294]},{"teal":4501,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4295]},{"teal":4504,"source":"contracts\\BiatecClammPool.algo.ts:1021","errorMessage":"this.LiquidityBiatecFromFees.value + biatecLiquidityFromFeeIncrement overflowed 256 bits","pc":[4296]},{"teal":4505,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4297]},{"teal":4506,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4298]},{"teal":4507,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4299]},{"teal":4508,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4300]},{"teal":4509,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4301]},{"teal":4510,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4302]},{"teal":4511,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4303]},{"teal":4512,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4304]},{"teal":4513,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4305]},{"teal":4514,"source":"contracts\\BiatecClammPool.algo.ts:1021","pc":[4306]},{"teal":4525,"source":"contracts\\BiatecClammPool.algo.ts:1029","pc":[4307,4308]},{"teal":4526,"source":"contracts\\BiatecClammPool.algo.ts:1029","pc":[4309]},{"teal":4527,"source":"contracts\\BiatecClammPool.algo.ts:1028","pc":[4310,4311]},{"teal":4528,"source":"contracts\\BiatecClammPool.algo.ts:1028","pc":[4312]},{"teal":4529,"source":"contracts\\BiatecClammPool.algo.ts:1027","pc":[4313,4314]},{"teal":4530,"source":"contracts\\BiatecClammPool.algo.ts:1027","pc":[4315]},{"teal":4531,"source":"contracts\\BiatecClammPool.algo.ts:1026","pc":[4316,4317]},{"teal":4532,"source":"contracts\\BiatecClammPool.algo.ts:1026","pc":[4318]},{"teal":4533,"source":"contracts\\BiatecClammPool.algo.ts:1025","pc":[4319]},{"teal":4534,"source":"contracts\\BiatecClammPool.algo.ts:1025","pc":[4320]},{"teal":4535,"source":"contracts\\BiatecClammPool.algo.ts:1024","pc":[4321,4322,4323]},{"teal":4536,"source":"contracts\\BiatecClammPool.algo.ts:1024","pc":[4324,4325]},{"teal":4543,"source":"contracts\\BiatecClammPool.algo.ts:1032","pc":[4326,4327]},{"teal":4544,"source":"contracts\\BiatecClammPool.algo.ts:1032","pc":[4328]},{"teal":4545,"source":"contracts\\BiatecClammPool.algo.ts:1032","pc":[4329]},{"teal":4546,"source":"contracts\\BiatecClammPool.algo.ts:1032","pc":[4330]},{"teal":4547,"source":"contracts\\BiatecClammPool.algo.ts:1032","pc":[4331,4332,4333]},{"teal":4548,"source":"contracts\\BiatecClammPool.algo.ts:1032","pc":[4334,4335]},{"teal":4549,"source":"contracts\\BiatecClammPool.algo.ts:1032","pc":[4336]},{"teal":4550,"source":"contracts\\BiatecClammPool.algo.ts:1032","pc":[4337]},{"teal":4551,"source":"contracts\\BiatecClammPool.algo.ts:1032","pc":[4338]},{"teal":4555,"source":"contracts\\BiatecClammPool.algo.ts:1031","errorMessage":"Stats to register must not be empty","pc":[4339]},{"teal":4559,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[4340,4341]},{"teal":4560,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[4342]},{"teal":4561,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[4343]},{"teal":4562,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[4344]},{"teal":4563,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[4345,4346]},{"teal":4564,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[4347]},{"teal":4567,"source":"contracts\\BiatecClammPool.algo.ts:1036","errorMessage":"this.assetADecimalsScaleFromBase.value as uint64 overflowed 64 bits","pc":[4348]},{"teal":4568,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[4349,4350,4351]},{"teal":4569,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[4352]},{"teal":4570,"source":"contracts\\BiatecClammPool.algo.ts:1036","pc":[4353,4354]},{"teal":4574,"source":"contracts\\BiatecClammPool.algo.ts:1037","pc":[4355,4356]},{"teal":4575,"source":"contracts\\BiatecClammPool.algo.ts:1037","pc":[4357]},{"teal":4576,"source":"contracts\\BiatecClammPool.algo.ts:1037","pc":[4358]},{"teal":4577,"source":"contracts\\BiatecClammPool.algo.ts:1037","pc":[4359]},{"teal":4578,"source":"contracts\\BiatecClammPool.algo.ts:1037","pc":[4360,4361]},{"teal":4579,"source":"contracts\\BiatecClammPool.algo.ts:1037","pc":[4362]},{"teal":4582,"source":"contracts\\BiatecClammPool.algo.ts:1037","errorMessage":"this.assetBDecimalsScaleFromBase.value as uint64 overflowed 64 bits","pc":[4363]},{"teal":4583,"source":"contracts\\BiatecClammPool.algo.ts:1037","pc":[4364,4365,4366]},{"teal":4584,"source":"contracts\\BiatecClammPool.algo.ts:1037","pc":[4367]},{"teal":4585,"source":"contracts\\BiatecClammPool.algo.ts:1037","pc":[4368,4369]},{"teal":4605,"source":"contracts\\BiatecClammPool.algo.ts:1038","pc":[4370]},{"teal":4606,"source":"contracts\\BiatecClammPool.algo.ts:1038","pc":[4371,4372]},{"teal":4607,"source":"contracts\\BiatecClammPool.algo.ts:1038","pc":[4373,4374]},{"teal":4608,"source":"contracts\\BiatecClammPool.algo.ts:1039","pc":[4375,4376,4377,4378,4379,4380]},{"teal":4609,"source":"contracts\\BiatecClammPool.algo.ts:1039","pc":[4381,4382]},{"teal":4624,"source":"contracts\\BiatecClammPool.algo.ts:1041","pc":[4383,4384]},{"teal":4625,"source":"contracts\\BiatecClammPool.algo.ts:1041","pc":[4385]},{"teal":4626,"source":"contracts\\BiatecClammPool.algo.ts:1041","pc":[4386,4387]},{"teal":4627,"source":"contracts\\BiatecClammPool.algo.ts:1042","pc":[4388,4389]},{"teal":4628,"source":"contracts\\BiatecClammPool.algo.ts:1042","pc":[4390]},{"teal":4629,"source":"contracts\\BiatecClammPool.algo.ts:1042","pc":[4391,4392]},{"teal":4630,"source":"contracts\\BiatecClammPool.algo.ts:1043","pc":[4393,4394]},{"teal":4631,"source":"contracts\\BiatecClammPool.algo.ts:1043","pc":[4395]},{"teal":4632,"source":"contracts\\BiatecClammPool.algo.ts:1043","pc":[4396,4397]},{"teal":4633,"source":"contracts\\BiatecClammPool.algo.ts:1044","pc":[4398,4399]},{"teal":4634,"source":"contracts\\BiatecClammPool.algo.ts:1044","pc":[4400]},{"teal":4635,"source":"contracts\\BiatecClammPool.algo.ts:1044","pc":[4401]},{"teal":4636,"source":"contracts\\BiatecClammPool.algo.ts:1044","pc":[4402,4403]},{"teal":4637,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4404,4405]},{"teal":4638,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4406]},{"teal":4639,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4407]},{"teal":4640,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4408,4409]},{"teal":4641,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4410]},{"teal":4644,"source":"contracts\\BiatecClammPool.algo.ts:1045","errorMessage":"newPrice as uint64 overflowed 64 bits","pc":[4411]},{"teal":4645,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4412,4413]},{"teal":4646,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4414]},{"teal":4647,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4415]},{"teal":4648,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4416]},{"teal":4649,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4417]},{"teal":4650,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4418,4419]},{"teal":4651,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4420]},{"teal":4652,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4421]},{"teal":4653,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4422]},{"teal":4654,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4423]},{"teal":4655,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4424]},{"teal":4656,"source":"contracts\\BiatecClammPool.algo.ts:1045","pc":[4425,4426]},{"teal":4657,"source":"contracts\\BiatecClammPool.algo.ts:1046","pc":[4427,4428]},{"teal":4658,"source":"contracts\\BiatecClammPool.algo.ts:1046","pc":[4429,4430]},{"teal":4659,"source":"contracts\\BiatecClammPool.algo.ts:1046","pc":[4431]},{"teal":4660,"source":"contracts\\BiatecClammPool.algo.ts:1046","pc":[4432]},{"teal":4661,"source":"contracts\\BiatecClammPool.algo.ts:1046","pc":[4433,4434]},{"teal":4662,"source":"contracts\\BiatecClammPool.algo.ts:1047","pc":[4435,4436]},{"teal":4663,"source":"contracts\\BiatecClammPool.algo.ts:1047","pc":[4437,4438]},{"teal":4664,"source":"contracts\\BiatecClammPool.algo.ts:1047","pc":[4439]},{"teal":4665,"source":"contracts\\BiatecClammPool.algo.ts:1047","pc":[4440]},{"teal":4666,"source":"contracts\\BiatecClammPool.algo.ts:1047","pc":[4441,4442]},{"teal":4667,"source":"contracts\\BiatecClammPool.algo.ts:1048","pc":[4443,4444]},{"teal":4668,"source":"contracts\\BiatecClammPool.algo.ts:1048","pc":[4445]},{"teal":4669,"source":"contracts\\BiatecClammPool.algo.ts:1048","pc":[4446,4447]},{"teal":4670,"source":"contracts\\BiatecClammPool.algo.ts:1049","pc":[4448,4449]},{"teal":4671,"source":"contracts\\BiatecClammPool.algo.ts:1049","pc":[4450]},{"teal":4672,"source":"contracts\\BiatecClammPool.algo.ts:1049","pc":[4451,4452]},{"teal":4673,"source":"contracts\\BiatecClammPool.algo.ts:1050","pc":[4453,4454]},{"teal":4674,"source":"contracts\\BiatecClammPool.algo.ts:1050","pc":[4455,4456]},{"teal":4678,"source":"contracts\\BiatecClammPool.algo.ts:1052","pc":[4457]},{"teal":4679,"source":"contracts\\BiatecClammPool.algo.ts:1052","pc":[4458,4459]},{"teal":4683,"source":"contracts\\BiatecClammPool.algo.ts:1053","pc":[4460,4461]},{"teal":4684,"source":"contracts\\BiatecClammPool.algo.ts:1053","pc":[4462,4463]},{"teal":4687,"source":"contracts\\BiatecClammPool.algo.ts:1038","pc":[4464]},{"teal":4691,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4465,4466]},{"teal":4692,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4467,4468]},{"teal":4693,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4469]},{"teal":4694,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4470]},{"teal":4695,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4471,4472]},{"teal":4696,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4473]},{"teal":4699,"source":"contracts\\BiatecClammPool.algo.ts:1056","errorMessage":"newPrice as uint64 overflowed 64 bits","pc":[4474]},{"teal":4700,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4475,4476]},{"teal":4701,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4477]},{"teal":4702,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4478]},{"teal":4703,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4479]},{"teal":4704,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4480]},{"teal":4705,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4481,4482]},{"teal":4706,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4483]},{"teal":4707,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4484]},{"teal":4708,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4485]},{"teal":4709,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4486]},{"teal":4710,"source":"contracts\\BiatecClammPool.algo.ts:1056","pc":[4487]},{"teal":4714,"source":"contracts\\BiatecClammPool.algo.ts:1078","pc":[4488,4489]},{"teal":4715,"source":"contracts\\BiatecClammPool.algo.ts:1078","pc":[4490]},{"teal":4718,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[4491,4492]},{"teal":4721,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[4493,4494]},{"teal":4722,"source":"contracts\\BiatecClammPool.algo.ts:856","pc":[4495]},{"teal":4727,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4496,4497]},{"teal":4730,"source":"contracts\\BiatecClammPool.algo.ts:1100","pc":[4498,4499,4500]},{"teal":4731,"source":"contracts\\BiatecClammPool.algo.ts:1100","pc":[4501]},{"teal":4732,"source":"contracts\\BiatecClammPool.algo.ts:1100","pc":[4502]},{"teal":4733,"source":"contracts\\BiatecClammPool.algo.ts:1100","pc":[4503]},{"teal":4734,"source":"contracts\\BiatecClammPool.algo.ts:1100","pc":[4504]},{"teal":4737,"source":"contracts\\BiatecClammPool.algo.ts:1100","errorMessage":"argument 0 (amountB) for distributeExcessAssets must be a uint256","pc":[4505]},{"teal":4740,"source":"contracts\\BiatecClammPool.algo.ts:1099","pc":[4506,4507,4508]},{"teal":4741,"source":"contracts\\BiatecClammPool.algo.ts:1099","pc":[4509]},{"teal":4742,"source":"contracts\\BiatecClammPool.algo.ts:1099","pc":[4510]},{"teal":4743,"source":"contracts\\BiatecClammPool.algo.ts:1099","pc":[4511]},{"teal":4744,"source":"contracts\\BiatecClammPool.algo.ts:1099","pc":[4512]},{"teal":4747,"source":"contracts\\BiatecClammPool.algo.ts:1099","errorMessage":"argument 1 (amountA) for distributeExcessAssets must be a uint256","pc":[4513]},{"teal":4750,"source":"contracts\\BiatecClammPool.algo.ts:1098","pc":[4514,4515,4516]},{"teal":4751,"source":"contracts\\BiatecClammPool.algo.ts:1098","pc":[4517]},{"teal":4754,"source":"contracts\\BiatecClammPool.algo.ts:1097","pc":[4518,4519,4520]},{"teal":4755,"source":"contracts\\BiatecClammPool.algo.ts:1097","pc":[4521]},{"teal":4758,"source":"contracts\\BiatecClammPool.algo.ts:1096","pc":[4522,4523,4524]},{"teal":4759,"source":"contracts\\BiatecClammPool.algo.ts:1096","pc":[4525]},{"teal":4762,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4526,4527,4528]},{"teal":4763,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4529]},{"teal":4764,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4530]},{"teal":4765,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4531]},{"teal":4766,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4532]},{"teal":4769,"source":"contracts\\BiatecClammPool.algo.ts:1095","errorMessage":"distributeExcessAssets return value overflowed 256 bits","pc":[4533]},{"teal":4770,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4534]},{"teal":4771,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4535]},{"teal":4772,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4536]},{"teal":4773,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4537]},{"teal":4774,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4538]},{"teal":4775,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4539]},{"teal":4776,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4540]},{"teal":4777,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4541]},{"teal":4778,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4542]},{"teal":4779,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4543]},{"teal":4780,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4544]},{"teal":4781,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4545]},{"teal":4782,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4546]},{"teal":4799,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4547,4548,4549]},{"teal":4802,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4550]},{"teal":4803,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4551,4552]},{"teal":4807,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[4553]},{"teal":4808,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[4554,4555]},{"teal":4809,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[4556,4557]},{"teal":4810,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[4558]},{"teal":4811,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[4559,4560]},{"teal":4812,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[4561,4562]},{"teal":4813,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[4563]},{"teal":4814,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[4564,4565]},{"teal":4815,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[4566,4567]},{"teal":4816,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[4568,4569]},{"teal":4817,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[4570,4571]},{"teal":4818,"source":"contracts\\BiatecClammPool.algo.ts:1102","pc":[4572]},{"teal":4822,"source":"contracts\\BiatecClammPool.algo.ts:1103","pc":[4573]},{"teal":4823,"source":"contracts\\BiatecClammPool.algo.ts:1103","pc":[4574,4575]},{"teal":4824,"source":"contracts\\BiatecClammPool.algo.ts:1103","pc":[4576,4577]},{"teal":4825,"source":"contracts\\BiatecClammPool.algo.ts:1103","pc":[4578]},{"teal":4826,"source":"contracts\\BiatecClammPool.algo.ts:1103","pc":[4579,4580]},{"teal":4827,"source":"contracts\\BiatecClammPool.algo.ts:1103","pc":[4581,4582]},{"teal":4828,"source":"contracts\\BiatecClammPool.algo.ts:1103","pc":[4583]},{"teal":4829,"source":"contracts\\BiatecClammPool.algo.ts:1103","pc":[4584,4585]},{"teal":4830,"source":"contracts\\BiatecClammPool.algo.ts:1103","pc":[4586,4587]},{"teal":4831,"source":"contracts\\BiatecClammPool.algo.ts:1103","pc":[4588,4589]},{"teal":4832,"source":"contracts\\BiatecClammPool.algo.ts:1103","pc":[4590,4591]},{"teal":4833,"source":"contracts\\BiatecClammPool.algo.ts:1103","pc":[4592]},{"teal":4837,"source":"contracts\\BiatecClammPool.algo.ts:1104","pc":[4593,4594]},{"teal":4838,"source":"contracts\\BiatecClammPool.algo.ts:1104","pc":[4595,4596]},{"teal":4839,"source":"contracts\\BiatecClammPool.algo.ts:1104","pc":[4597,4598,4599]},{"teal":4843,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[4600,4601]},{"teal":4844,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[4602,4603]},{"teal":4845,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[4604]},{"teal":4846,"source":"contracts\\BiatecClammPool.algo.ts:1106","pc":[4605]},{"teal":4849,"source":"contracts\\BiatecClammPool.algo.ts:1106","errorMessage":"E_CONFIG","pc":[4606]},{"teal":4853,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[4607,4608]},{"teal":4854,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[4609,4610]},{"teal":4855,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[4611]},{"teal":4858,"source":"contracts\\BiatecClammPool.algo.ts:1107","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('ef')","pc":[4612]},{"teal":4859,"source":"contracts\\BiatecClammPool.algo.ts:1107","pc":[4613,4614]},{"teal":4863,"source":"contracts\\BiatecClammPool.algo.ts:1109","pc":[4615,4616]},{"teal":4864,"source":"contracts\\BiatecClammPool.algo.ts:1109","pc":[4617,4618]},{"teal":4865,"source":"contracts\\BiatecClammPool.algo.ts:1109","pc":[4619]},{"teal":4868,"source":"contracts\\BiatecClammPool.algo.ts:1109","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('s')","pc":[4620]},{"teal":4869,"source":"contracts\\BiatecClammPool.algo.ts:1109","pc":[4621,4622]},{"teal":4873,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[4623,4624]},{"teal":4874,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[4625]},{"teal":4875,"source":"contracts\\BiatecClammPool.algo.ts:1110","pc":[4626]},{"teal":4878,"source":"contracts\\BiatecClammPool.algo.ts:1110","errorMessage":"E_PAUSED","pc":[4627]},{"teal":4885,"source":"contracts\\BiatecClammPool.algo.ts:1113","pc":[4628,4629]},{"teal":4886,"source":"contracts\\BiatecClammPool.algo.ts:1113","pc":[4630,4631]},{"teal":4887,"source":"contracts\\BiatecClammPool.algo.ts:1113","pc":[4632]},{"teal":4890,"source":"contracts\\BiatecClammPool.algo.ts:1112","errorMessage":"E_SENDER","pc":[4633]},{"teal":4894,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4634]},{"teal":4895,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4635]},{"teal":4896,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4636]},{"teal":4897,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4637,4638]},{"teal":4898,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4639]},{"teal":4899,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4640]},{"teal":4900,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4641]},{"teal":4901,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4642]},{"teal":4902,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4643]},{"teal":4905,"source":"contracts\\BiatecClammPool.algo.ts:1117","errorMessage":"this.assetABalanceBaseScale.value + amountA overflowed 256 bits","pc":[4644]},{"teal":4906,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4645]},{"teal":4907,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4646]},{"teal":4908,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4647]},{"teal":4909,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4648]},{"teal":4910,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4649]},{"teal":4911,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4650]},{"teal":4912,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4651]},{"teal":4913,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4652]},{"teal":4914,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4653]},{"teal":4915,"source":"contracts\\BiatecClammPool.algo.ts:1117","pc":[4654]},{"teal":4919,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4655,4656]},{"teal":4920,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4657]},{"teal":4921,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4658]},{"teal":4922,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4659,4660]},{"teal":4923,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4661]},{"teal":4924,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4662]},{"teal":4925,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4663]},{"teal":4926,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4664]},{"teal":4927,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4665]},{"teal":4930,"source":"contracts\\BiatecClammPool.algo.ts:1118","errorMessage":"this.assetBBalanceBaseScale.value + amountB overflowed 256 bits","pc":[4666]},{"teal":4931,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4667]},{"teal":4932,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4668]},{"teal":4933,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4669]},{"teal":4934,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4670]},{"teal":4935,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4671]},{"teal":4936,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4672]},{"teal":4937,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4673]},{"teal":4938,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4674]},{"teal":4939,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4675]},{"teal":4940,"source":"contracts\\BiatecClammPool.algo.ts:1118","pc":[4676]},{"teal":4945,"source":"contracts\\BiatecClammPool.algo.ts:1119","pc":[4677,4678]},{"teal":4946,"source":"contracts\\BiatecClammPool.algo.ts:1119","pc":[4679]},{"teal":4947,"source":"contracts\\BiatecClammPool.algo.ts:1119","pc":[4680]},{"teal":4948,"source":"contracts\\BiatecClammPool.algo.ts:1119","pc":[4681,4682,4683]},{"teal":4957,"source":"contracts\\BiatecClammPool.algo.ts:1121","pc":[4684,4685]},{"teal":4958,"source":"contracts\\BiatecClammPool.algo.ts:1121","pc":[4686,4687]},{"teal":4959,"source":"contracts\\BiatecClammPool.algo.ts:1121","pc":[4688]},{"teal":4960,"source":"contracts\\BiatecClammPool.algo.ts:1121","pc":[4689,4690]},{"teal":4961,"source":"contracts\\BiatecClammPool.algo.ts:1121","pc":[4691]},{"teal":4962,"source":"contracts\\BiatecClammPool.algo.ts:1121","pc":[4692]},{"teal":4963,"source":"contracts\\BiatecClammPool.algo.ts:1121","pc":[4693,4694]},{"teal":4964,"source":"contracts\\BiatecClammPool.algo.ts:1121","pc":[4695]},{"teal":4965,"source":"contracts\\BiatecClammPool.algo.ts:1121","pc":[4696]},{"teal":4966,"source":"contracts\\BiatecClammPool.algo.ts:1122","pc":[4697]},{"teal":4967,"source":"contracts\\BiatecClammPool.algo.ts:1122","pc":[4698]},{"teal":4968,"source":"contracts\\BiatecClammPool.algo.ts:1121","pc":[4699]},{"teal":4971,"source":"contracts\\BiatecClammPool.algo.ts:1120","errorMessage":"E_A0_B","pc":[4700]},{"teal":4972,"source":"contracts\\BiatecClammPool.algo.ts:1119","pc":[4701,4702,4703]},{"teal":4981,"source":"contracts\\BiatecClammPool.algo.ts:1127","pc":[4704,4705]},{"teal":4982,"source":"contracts\\BiatecClammPool.algo.ts:1127","pc":[4706,4707]},{"teal":4983,"source":"contracts\\BiatecClammPool.algo.ts:1127","pc":[4708,4709]},{"teal":4984,"source":"contracts\\BiatecClammPool.algo.ts:1127","pc":[4710]},{"teal":4985,"source":"contracts\\BiatecClammPool.algo.ts:1127","pc":[4711]},{"teal":4986,"source":"contracts\\BiatecClammPool.algo.ts:1127","pc":[4712,4713]},{"teal":4987,"source":"contracts\\BiatecClammPool.algo.ts:1127","pc":[4714]},{"teal":4988,"source":"contracts\\BiatecClammPool.algo.ts:1127","pc":[4715]},{"teal":4989,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[4716]},{"teal":4990,"source":"contracts\\BiatecClammPool.algo.ts:1128","pc":[4717]},{"teal":4991,"source":"contracts\\BiatecClammPool.algo.ts:1127","pc":[4718]},{"teal":4994,"source":"contracts\\BiatecClammPool.algo.ts:1126","errorMessage":"E_A_B","pc":[4719]},{"teal":5003,"source":"contracts\\BiatecClammPool.algo.ts:1133","pc":[4720,4721]},{"teal":5004,"source":"contracts\\BiatecClammPool.algo.ts:1133","pc":[4722,4723]},{"teal":5005,"source":"contracts\\BiatecClammPool.algo.ts:1133","pc":[4724,4725]},{"teal":5006,"source":"contracts\\BiatecClammPool.algo.ts:1133","pc":[4726]},{"teal":5007,"source":"contracts\\BiatecClammPool.algo.ts:1133","pc":[4727]},{"teal":5008,"source":"contracts\\BiatecClammPool.algo.ts:1133","pc":[4728,4729]},{"teal":5009,"source":"contracts\\BiatecClammPool.algo.ts:1133","pc":[4730]},{"teal":5010,"source":"contracts\\BiatecClammPool.algo.ts:1133","pc":[4731]},{"teal":5011,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[4732,4733]},{"teal":5012,"source":"contracts\\BiatecClammPool.algo.ts:1134","pc":[4734]},{"teal":5013,"source":"contracts\\BiatecClammPool.algo.ts:1133","pc":[4735]},{"teal":5016,"source":"contracts\\BiatecClammPool.algo.ts:1132","errorMessage":"E_B_B","pc":[4736]},{"teal":5020,"source":"contracts\\BiatecClammPool.algo.ts:1137","pc":[4737,4738]},{"teal":5021,"source":"contracts\\BiatecClammPool.algo.ts:1137","pc":[4739]},{"teal":5022,"source":"contracts\\BiatecClammPool.algo.ts:1137","pc":[4740,4741]},{"teal":5026,"source":"contracts\\BiatecClammPool.algo.ts:1138","pc":[4742,4743]},{"teal":5027,"source":"contracts\\BiatecClammPool.algo.ts:1138","pc":[4744,4745,4746]},{"teal":5028,"source":"contracts\\BiatecClammPool.algo.ts:1138","pc":[4747,4748]},{"teal":5032,"source":"contracts\\BiatecClammPool.algo.ts:1140","pc":[4749,4750]},{"teal":5033,"source":"contracts\\BiatecClammPool.algo.ts:1140","pc":[4751,4752]},{"teal":5034,"source":"contracts\\BiatecClammPool.algo.ts:1140","pc":[4753]},{"teal":5035,"source":"contracts\\BiatecClammPool.algo.ts:1140","pc":[4754,4755]},{"teal":5039,"source":"contracts\\BiatecClammPool.algo.ts:1142","pc":[4756,4757]},{"teal":5040,"source":"contracts\\BiatecClammPool.algo.ts:1142","pc":[4758]},{"teal":5041,"source":"contracts\\BiatecClammPool.algo.ts:1142","pc":[4759,4760]},{"teal":5042,"source":"contracts\\BiatecClammPool.algo.ts:1142","pc":[4761]},{"teal":5045,"source":"contracts\\BiatecClammPool.algo.ts:1142","errorMessage":"global state value does not exist: this.appBiatecConfigProvider.value.globalState('f')","pc":[4762]},{"teal":5046,"source":"contracts\\BiatecClammPool.algo.ts:1142","pc":[4763,4764]},{"teal":5051,"source":"contracts\\BiatecClammPool.algo.ts:1143","pc":[4765,4766]},{"teal":5052,"source":"contracts\\BiatecClammPool.algo.ts:1143","pc":[4767,4768]},{"teal":5053,"source":"contracts\\BiatecClammPool.algo.ts:1143","pc":[4769]},{"teal":5054,"source":"contracts\\BiatecClammPool.algo.ts:1143","pc":[4770,4771,4772]},{"teal":5059,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[4773,4774]},{"teal":5060,"source":"contracts\\BiatecClammPool.algo.ts:1144","pc":[4775,4776]},{"teal":5064,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4777,4778]},{"teal":5065,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4779]},{"teal":5066,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4780]},{"teal":5067,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4781,4782]},{"teal":5068,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4783]},{"teal":5069,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4784]},{"teal":5070,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4785]},{"teal":5071,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4786]},{"teal":5072,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4787]},{"teal":5075,"source":"contracts\\BiatecClammPool.algo.ts:1145","errorMessage":"this.LiquidityUsersFromFees.value + usersLiquidityFromFeeIncrement overflowed 256 bits","pc":[4788]},{"teal":5076,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4789]},{"teal":5077,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4790]},{"teal":5078,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4791]},{"teal":5079,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4792]},{"teal":5080,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4793]},{"teal":5081,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4794]},{"teal":5082,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4795]},{"teal":5083,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4796]},{"teal":5084,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4797]},{"teal":5085,"source":"contracts\\BiatecClammPool.algo.ts:1145","pc":[4798]},{"teal":5086,"source":"contracts\\BiatecClammPool.algo.ts:1143","pc":[4799,4800,4801]},{"teal":5091,"source":"contracts\\BiatecClammPool.algo.ts:1147","pc":[4802,4803]},{"teal":5092,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[4804]},{"teal":5093,"source":"contracts\\BiatecClammPool.algo.ts:1147","pc":[4805,4806]},{"teal":5094,"source":"contracts\\BiatecClammPool.algo.ts:1147","pc":[4807]},{"teal":5095,"source":"contracts\\BiatecClammPool.algo.ts:1147","pc":[4808]},{"teal":5096,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[4809]},{"teal":5097,"source":"contracts\\BiatecClammPool.algo.ts:1147","pc":[4810]},{"teal":5098,"source":"contracts\\BiatecClammPool.algo.ts:1147","pc":[4811,4812]},{"teal":5102,"source":"contracts\\BiatecClammPool.algo.ts:1148","pc":[4813,4814]},{"teal":5103,"source":"contracts\\BiatecClammPool.algo.ts:1148","pc":[4815,4816]},{"teal":5104,"source":"contracts\\BiatecClammPool.algo.ts:1148","pc":[4817]},{"teal":5105,"source":"contracts\\BiatecClammPool.algo.ts:1148","pc":[4818,4819]},{"teal":5109,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4820,4821]},{"teal":5110,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4822]},{"teal":5111,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4823]},{"teal":5112,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4824,4825]},{"teal":5113,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4826]},{"teal":5114,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4827]},{"teal":5115,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4828]},{"teal":5116,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4829]},{"teal":5117,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4830]},{"teal":5120,"source":"contracts\\BiatecClammPool.algo.ts:1149","errorMessage":"this.LiquidityUsersFromFees.value + usersLiquidityFromFeeIncrement overflowed 256 bits","pc":[4831]},{"teal":5121,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4832]},{"teal":5122,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4833]},{"teal":5123,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4834]},{"teal":5124,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4835]},{"teal":5125,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4836]},{"teal":5126,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4837]},{"teal":5127,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4838]},{"teal":5128,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4839]},{"teal":5129,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4840]},{"teal":5130,"source":"contracts\\BiatecClammPool.algo.ts:1149","pc":[4841]},{"teal":5134,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4842,4843]},{"teal":5135,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4844]},{"teal":5136,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4845]},{"teal":5137,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4846,4847]},{"teal":5138,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4848]},{"teal":5139,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4849]},{"teal":5140,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4850]},{"teal":5141,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4851]},{"teal":5142,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4852]},{"teal":5145,"source":"contracts\\BiatecClammPool.algo.ts:1150","errorMessage":"this.LiquidityBiatecFromFees.value + biatecLiquidityFromFeeIncrement overflowed 256 bits","pc":[4853]},{"teal":5146,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4854]},{"teal":5147,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4855]},{"teal":5148,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4856]},{"teal":5149,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4857]},{"teal":5150,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4858]},{"teal":5151,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4859]},{"teal":5152,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4860]},{"teal":5153,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4861]},{"teal":5154,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4862]},{"teal":5155,"source":"contracts\\BiatecClammPool.algo.ts:1150","pc":[4863]},{"teal":5166,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[4864,4865]},{"teal":5167,"source":"contracts\\BiatecClammPool.algo.ts:1158","pc":[4866]},{"teal":5168,"source":"contracts\\BiatecClammPool.algo.ts:1157","pc":[4867,4868]},{"teal":5169,"source":"contracts\\BiatecClammPool.algo.ts:1157","pc":[4869]},{"teal":5170,"source":"contracts\\BiatecClammPool.algo.ts:1156","pc":[4870,4871]},{"teal":5171,"source":"contracts\\BiatecClammPool.algo.ts:1156","pc":[4872]},{"teal":5172,"source":"contracts\\BiatecClammPool.algo.ts:1155","pc":[4873,4874]},{"teal":5173,"source":"contracts\\BiatecClammPool.algo.ts:1155","pc":[4875]},{"teal":5174,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[4876]},{"teal":5175,"source":"contracts\\BiatecClammPool.algo.ts:1154","pc":[4877]},{"teal":5176,"source":"contracts\\BiatecClammPool.algo.ts:1153","pc":[4878,4879,4880]},{"teal":5177,"source":"contracts\\BiatecClammPool.algo.ts:1153","pc":[4881,4882]},{"teal":5181,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4883,4884]},{"teal":5182,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4885,4886]},{"teal":5183,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4887]},{"teal":5184,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4888]},{"teal":5185,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4889,4890]},{"teal":5186,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4891]},{"teal":5189,"source":"contracts\\BiatecClammPool.algo.ts:1160","errorMessage":"newPrice as uint64 overflowed 64 bits","pc":[4892]},{"teal":5190,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4893,4894]},{"teal":5191,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4895]},{"teal":5192,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4896]},{"teal":5193,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4897]},{"teal":5194,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4898]},{"teal":5195,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4899,4900]},{"teal":5196,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4901]},{"teal":5197,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4902]},{"teal":5198,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4903]},{"teal":5199,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4904]},{"teal":5200,"source":"contracts\\BiatecClammPool.algo.ts:1160","pc":[4905]},{"teal":5204,"source":"contracts\\BiatecClammPool.algo.ts:1161","pc":[4906,4907]},{"teal":5207,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4908,4909]},{"teal":5210,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4910,4911]},{"teal":5211,"source":"contracts\\BiatecClammPool.algo.ts:1095","pc":[4912]},{"teal":5216,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[4913,4914]},{"teal":5219,"source":"contracts\\BiatecClammPool.algo.ts:1183","pc":[4915,4916,4917]},{"teal":5220,"source":"contracts\\BiatecClammPool.algo.ts:1183","pc":[4918]},{"teal":5223,"source":"contracts\\BiatecClammPool.algo.ts:1182","pc":[4919,4920,4921]},{"teal":5224,"source":"contracts\\BiatecClammPool.algo.ts:1182","pc":[4922]},{"teal":5227,"source":"contracts\\BiatecClammPool.algo.ts:1181","pc":[4923,4924,4925]},{"teal":5228,"source":"contracts\\BiatecClammPool.algo.ts:1181","pc":[4926]},{"teal":5231,"source":"contracts\\BiatecClammPool.algo.ts:1180","pc":[4927,4928,4929]},{"teal":5232,"source":"contracts\\BiatecClammPool.algo.ts:1180","pc":[4930]},{"teal":5235,"source":"contracts\\BiatecClammPool.algo.ts:1179","pc":[4931,4932,4933]},{"teal":5236,"source":"contracts\\BiatecClammPool.algo.ts:1179","pc":[4934]},{"teal":5239,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[4935,4936,4937]},{"teal":5240,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[4938]},{"teal":5241,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[4939]},{"teal":5242,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[4940]},{"teal":5243,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[4941]},{"teal":5244,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[4942]},{"teal":5261,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[4943,4944,4945]},{"teal":5264,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[4946]},{"teal":5265,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[4947]},{"teal":5269,"source":"contracts\\BiatecClammPool.algo.ts:1185","pc":[4948,4949]},{"teal":5270,"source":"contracts\\BiatecClammPool.algo.ts:1185","pc":[4950,4951]},{"teal":5271,"source":"contracts\\BiatecClammPool.algo.ts:1185","pc":[4952,4953,4954]},{"teal":5275,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[4955,4956]},{"teal":5276,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[4957,4958]},{"teal":5277,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[4959]},{"teal":5278,"source":"contracts\\BiatecClammPool.algo.ts:1187","pc":[4960]},{"teal":5281,"source":"contracts\\BiatecClammPool.algo.ts:1187","errorMessage":"E_CONFIG","pc":[4961]},{"teal":5285,"source":"contracts\\BiatecClammPool.algo.ts:1188","pc":[4962,4963]},{"teal":5286,"source":"contracts\\BiatecClammPool.algo.ts:1188","pc":[4964,4965]},{"teal":5287,"source":"contracts\\BiatecClammPool.algo.ts:1188","pc":[4966]},{"teal":5290,"source":"contracts\\BiatecClammPool.algo.ts:1188","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('ef')","pc":[4967]},{"teal":5291,"source":"contracts\\BiatecClammPool.algo.ts:1188","pc":[4968,4969]},{"teal":5295,"source":"contracts\\BiatecClammPool.algo.ts:1190","pc":[4970,4971]},{"teal":5296,"source":"contracts\\BiatecClammPool.algo.ts:1190","pc":[4972,4973]},{"teal":5297,"source":"contracts\\BiatecClammPool.algo.ts:1190","pc":[4974]},{"teal":5300,"source":"contracts\\BiatecClammPool.algo.ts:1190","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('s')","pc":[4975]},{"teal":5301,"source":"contracts\\BiatecClammPool.algo.ts:1190","pc":[4976,4977]},{"teal":5305,"source":"contracts\\BiatecClammPool.algo.ts:1191","pc":[4978,4979]},{"teal":5306,"source":"contracts\\BiatecClammPool.algo.ts:1191","pc":[4980]},{"teal":5307,"source":"contracts\\BiatecClammPool.algo.ts:1191","pc":[4981]},{"teal":5310,"source":"contracts\\BiatecClammPool.algo.ts:1191","errorMessage":"E_PAUSED","pc":[4982]},{"teal":5317,"source":"contracts\\BiatecClammPool.algo.ts:1194","pc":[4983,4984]},{"teal":5318,"source":"contracts\\BiatecClammPool.algo.ts:1194","pc":[4985,4986]},{"teal":5319,"source":"contracts\\BiatecClammPool.algo.ts:1194","pc":[4987]},{"teal":5322,"source":"contracts\\BiatecClammPool.algo.ts:1193","errorMessage":"E_SENDER","pc":[4988]},{"teal":5327,"source":"contracts\\BiatecClammPool.algo.ts:1198","pc":[4989,4990]},{"teal":5328,"source":"contracts\\BiatecClammPool.algo.ts:1198","pc":[4991]},{"teal":5329,"source":"contracts\\BiatecClammPool.algo.ts:1198","pc":[4992]},{"teal":5330,"source":"contracts\\BiatecClammPool.algo.ts:1198","pc":[4993,4994,4995]},{"teal":5335,"source":"contracts\\BiatecClammPool.algo.ts:1199","pc":[4996,4997]},{"teal":5336,"source":"contracts\\BiatecClammPool.algo.ts:1199","pc":[4998,4999]},{"teal":5337,"source":"contracts\\BiatecClammPool.algo.ts:1199","pc":[5000,5001]},{"teal":5338,"source":"contracts\\BiatecClammPool.algo.ts:1199","pc":[5002,5003,5004]},{"teal":5344,"source":"contracts\\BiatecClammPool.algo.ts:1201","pc":[5005,5006]},{"teal":5345,"source":"contracts\\BiatecClammPool.algo.ts:1201","pc":[5007]},{"teal":5346,"source":"contracts\\BiatecClammPool.algo.ts:1201","pc":[5008]},{"teal":5347,"source":"contracts\\BiatecClammPool.algo.ts:1201","pc":[5009,5010,5011]},{"teal":5352,"source":"contracts\\BiatecClammPool.algo.ts:1202","pc":[5012,5013]},{"teal":5353,"source":"contracts\\BiatecClammPool.algo.ts:1202","pc":[5014,5015]},{"teal":5354,"source":"contracts\\BiatecClammPool.algo.ts:1202","pc":[5016,5017]},{"teal":5355,"source":"contracts\\BiatecClammPool.algo.ts:1202","pc":[5018,5019,5020]},{"teal":5361,"source":"contracts\\BiatecClammPool.algo.ts:1205","pc":[5021,5022]},{"teal":5362,"source":"contracts\\BiatecClammPool.algo.ts:1205","pc":[5023]},{"teal":5363,"source":"contracts\\BiatecClammPool.algo.ts:1205","pc":[5024]},{"teal":5364,"source":"contracts\\BiatecClammPool.algo.ts:1205","pc":[5025,5026,5027]},{"teal":5373,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[5028,5029]},{"teal":5374,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[5030,5031]},{"teal":5375,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[5032]},{"teal":5376,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[5033,5034]},{"teal":5377,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[5035]},{"teal":5378,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[5036]},{"teal":5379,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[5037,5038]},{"teal":5380,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[5039]},{"teal":5381,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[5040]},{"teal":5382,"source":"contracts\\BiatecClammPool.algo.ts:1208","pc":[5041]},{"teal":5383,"source":"contracts\\BiatecClammPool.algo.ts:1208","pc":[5042]},{"teal":5384,"source":"contracts\\BiatecClammPool.algo.ts:1207","pc":[5043]},{"teal":5387,"source":"contracts\\BiatecClammPool.algo.ts:1206","errorMessage":"E_A0_B","pc":[5044]},{"teal":5388,"source":"contracts\\BiatecClammPool.algo.ts:1205","pc":[5045,5046,5047]},{"teal":5397,"source":"contracts\\BiatecClammPool.algo.ts:1213","pc":[5048,5049]},{"teal":5398,"source":"contracts\\BiatecClammPool.algo.ts:1213","pc":[5050,5051]},{"teal":5399,"source":"contracts\\BiatecClammPool.algo.ts:1213","pc":[5052,5053]},{"teal":5400,"source":"contracts\\BiatecClammPool.algo.ts:1213","pc":[5054]},{"teal":5401,"source":"contracts\\BiatecClammPool.algo.ts:1213","pc":[5055]},{"teal":5402,"source":"contracts\\BiatecClammPool.algo.ts:1213","pc":[5056,5057]},{"teal":5403,"source":"contracts\\BiatecClammPool.algo.ts:1213","pc":[5058]},{"teal":5404,"source":"contracts\\BiatecClammPool.algo.ts:1213","pc":[5059]},{"teal":5405,"source":"contracts\\BiatecClammPool.algo.ts:1214","pc":[5060]},{"teal":5406,"source":"contracts\\BiatecClammPool.algo.ts:1214","pc":[5061]},{"teal":5407,"source":"contracts\\BiatecClammPool.algo.ts:1213","pc":[5062]},{"teal":5410,"source":"contracts\\BiatecClammPool.algo.ts:1212","errorMessage":"E_A_B","pc":[5063]},{"teal":5419,"source":"contracts\\BiatecClammPool.algo.ts:1219","pc":[5064,5065]},{"teal":5420,"source":"contracts\\BiatecClammPool.algo.ts:1219","pc":[5066,5067]},{"teal":5421,"source":"contracts\\BiatecClammPool.algo.ts:1219","pc":[5068,5069]},{"teal":5422,"source":"contracts\\BiatecClammPool.algo.ts:1219","pc":[5070]},{"teal":5423,"source":"contracts\\BiatecClammPool.algo.ts:1219","pc":[5071]},{"teal":5424,"source":"contracts\\BiatecClammPool.algo.ts:1219","pc":[5072,5073]},{"teal":5425,"source":"contracts\\BiatecClammPool.algo.ts:1219","pc":[5074]},{"teal":5426,"source":"contracts\\BiatecClammPool.algo.ts:1219","pc":[5075]},{"teal":5427,"source":"contracts\\BiatecClammPool.algo.ts:1220","pc":[5076,5077]},{"teal":5428,"source":"contracts\\BiatecClammPool.algo.ts:1220","pc":[5078]},{"teal":5429,"source":"contracts\\BiatecClammPool.algo.ts:1219","pc":[5079]},{"teal":5432,"source":"contracts\\BiatecClammPool.algo.ts:1218","errorMessage":"E_B_B","pc":[5080]},{"teal":5436,"source":"contracts\\BiatecClammPool.algo.ts:1224","pc":[5081,5082]},{"teal":5437,"source":"contracts\\BiatecClammPool.algo.ts:1224","pc":[5083,5084]},{"teal":5438,"source":"contracts\\BiatecClammPool.algo.ts:1224","pc":[5085]},{"teal":5441,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[5086,5087]},{"teal":5444,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[5088,5089]},{"teal":5445,"source":"contracts\\BiatecClammPool.algo.ts:1178","pc":[5090]},{"teal":5450,"source":"contracts\\BiatecClammPool.algo.ts:1240","pc":[5091,5092,5093]},{"teal":5451,"source":"contracts\\BiatecClammPool.algo.ts:1240","pc":[5094]},{"teal":5454,"source":"contracts\\BiatecClammPool.algo.ts:1239","pc":[5095,5096,5097]},{"teal":5455,"source":"contracts\\BiatecClammPool.algo.ts:1239","pc":[5098]},{"teal":5458,"source":"contracts\\BiatecClammPool.algo.ts:1238","pc":[5099,5100,5101]},{"teal":5459,"source":"contracts\\BiatecClammPool.algo.ts:1238","pc":[5102]},{"teal":5462,"source":"contracts\\BiatecClammPool.algo.ts:1237","pc":[5103,5104,5105]},{"teal":5463,"source":"contracts\\BiatecClammPool.algo.ts:1237","pc":[5106]},{"teal":5466,"source":"contracts\\BiatecClammPool.algo.ts:1236","pc":[5107,5108,5109]},{"teal":5467,"source":"contracts\\BiatecClammPool.algo.ts:1236","pc":[5110,5111,5112]},{"teal":5470,"source":"contracts\\BiatecClammPool.algo.ts:1235","pc":[5113,5114,5115]},{"teal":5471,"source":"contracts\\BiatecClammPool.algo.ts:1235","pc":[5116,5117,5118]},{"teal":5474,"source":"contracts\\BiatecClammPool.algo.ts:1234","pc":[5119,5120,5121]},{"teal":5475,"source":"contracts\\BiatecClammPool.algo.ts:1234","pc":[5122,5123,5124]},{"teal":5478,"source":"contracts\\BiatecClammPool.algo.ts:1233","pc":[5125,5126,5127]},{"teal":5479,"source":"contracts\\BiatecClammPool.algo.ts:1233","pc":[5128]},{"teal":5482,"source":"contracts\\BiatecClammPool.algo.ts:1232","pc":[5129,5130,5131]},{"teal":5483,"source":"contracts\\BiatecClammPool.algo.ts:1232","pc":[5132]},{"teal":5484,"source":"contracts\\BiatecClammPool.algo.ts:1232","pc":[5133]},{"teal":5492,"source":"contracts\\BiatecClammPool.algo.ts:1232","pc":[5134,5135,5136]},{"teal":5495,"source":"contracts\\BiatecClammPool.algo.ts:1232","pc":[5137]},{"teal":5499,"source":"contracts\\BiatecClammPool.algo.ts:1242","pc":[5138,5139]},{"teal":5500,"source":"contracts\\BiatecClammPool.algo.ts:1242","pc":[5140,5141]},{"teal":5501,"source":"contracts\\BiatecClammPool.algo.ts:1242","pc":[5142]},{"teal":5502,"source":"contracts\\BiatecClammPool.algo.ts:1242","pc":[5143]},{"teal":5505,"source":"contracts\\BiatecClammPool.algo.ts:1242","errorMessage":"E_CONFIG","pc":[5144]},{"teal":5509,"source":"contracts\\BiatecClammPool.algo.ts:1243","pc":[5145,5146]},{"teal":5510,"source":"contracts\\BiatecClammPool.algo.ts:1243","pc":[5147,5148]},{"teal":5511,"source":"contracts\\BiatecClammPool.algo.ts:1243","pc":[5149]},{"teal":5514,"source":"contracts\\BiatecClammPool.algo.ts:1243","errorMessage":"global state value does not exist: appBiatecConfigProvider.globalState('ef')","pc":[5150]},{"teal":5515,"source":"contracts\\BiatecClammPool.algo.ts:1243","pc":[5151,5152]},{"teal":5522,"source":"contracts\\BiatecClammPool.algo.ts:1245","pc":[5153,5154]},{"teal":5523,"source":"contracts\\BiatecClammPool.algo.ts:1245","pc":[5155,5156]},{"teal":5524,"source":"contracts\\BiatecClammPool.algo.ts:1245","pc":[5157]},{"teal":5527,"source":"contracts\\BiatecClammPool.algo.ts:1244","errorMessage":"E_SENDER","pc":[5158]},{"teal":5539,"source":"contracts\\BiatecClammPool.algo.ts:1248","pc":[5159]},{"teal":5540,"source":"contracts\\BiatecClammPool.algo.ts:1248","pc":[5160,5161]},{"teal":5541,"source":"contracts\\BiatecClammPool.algo.ts:1248","pc":[5162,5163]},{"teal":5545,"source":"contracts\\BiatecClammPool.algo.ts:1249","pc":[5164,5165]},{"teal":5546,"source":"contracts\\BiatecClammPool.algo.ts:1249","pc":[5166,5167]},{"teal":5550,"source":"contracts\\BiatecClammPool.algo.ts:1250","pc":[5168,5169]},{"teal":5551,"source":"contracts\\BiatecClammPool.algo.ts:1250","pc":[5170,5171]},{"teal":5555,"source":"contracts\\BiatecClammPool.algo.ts:1251","pc":[5172,5173]},{"teal":5556,"source":"contracts\\BiatecClammPool.algo.ts:1251","pc":[5174,5175]},{"teal":5560,"source":"contracts\\BiatecClammPool.algo.ts:1252","pc":[5176,5177]},{"teal":5561,"source":"contracts\\BiatecClammPool.algo.ts:1252","pc":[5178,5179]},{"teal":5565,"source":"contracts\\BiatecClammPool.algo.ts:1253","pc":[5180,5181]},{"teal":5566,"source":"contracts\\BiatecClammPool.algo.ts:1253","pc":[5182,5183]},{"teal":5570,"source":"contracts\\BiatecClammPool.algo.ts:1254","pc":[5184,5185]},{"teal":5571,"source":"contracts\\BiatecClammPool.algo.ts:1254","pc":[5186,5187]},{"teal":5575,"source":"contracts\\BiatecClammPool.algo.ts:1255","pc":[5188,5189]},{"teal":5576,"source":"contracts\\BiatecClammPool.algo.ts:1255","pc":[5190,5191]},{"teal":5579,"source":"contracts\\BiatecClammPool.algo.ts:1248","pc":[5192]},{"teal":5580,"source":"contracts\\BiatecClammPool.algo.ts:1232","pc":[5193]},{"teal":5585,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5194,5195]},{"teal":5588,"source":"contracts\\BiatecClammPool.algo.ts:1282","pc":[5196,5197,5198]},{"teal":5589,"source":"contracts\\BiatecClammPool.algo.ts:1282","pc":[5199]},{"teal":5590,"source":"contracts\\BiatecClammPool.algo.ts:1282","pc":[5200]},{"teal":5591,"source":"contracts\\BiatecClammPool.algo.ts:1282","pc":[5201]},{"teal":5592,"source":"contracts\\BiatecClammPool.algo.ts:1282","pc":[5202]},{"teal":5595,"source":"contracts\\BiatecClammPool.algo.ts:1282","errorMessage":"argument 0 (currentDeposit) for calculateDistributedLiquidity must be a uint256","pc":[5203]},{"teal":5598,"source":"contracts\\BiatecClammPool.algo.ts:1282","pc":[5204,5205,5206]},{"teal":5599,"source":"contracts\\BiatecClammPool.algo.ts:1282","pc":[5207]},{"teal":5602,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5208,5209,5210]},{"teal":5603,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5211]},{"teal":5604,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5212]},{"teal":5605,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5213]},{"teal":5606,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5214]},{"teal":5609,"source":"contracts\\BiatecClammPool.algo.ts:1281","errorMessage":"calculateDistributedLiquidity return value overflowed 256 bits","pc":[5215]},{"teal":5610,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5216]},{"teal":5611,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5217]},{"teal":5612,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5218]},{"teal":5613,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5219]},{"teal":5614,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5220]},{"teal":5615,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5221]},{"teal":5616,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5222]},{"teal":5617,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5223]},{"teal":5618,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5224]},{"teal":5619,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5225]},{"teal":5620,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5226]},{"teal":5621,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5227]},{"teal":5622,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5228]},{"teal":5633,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5229,5230,5231]},{"teal":5636,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5232]},{"teal":5637,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5233,5234]},{"teal":5641,"source":"contracts\\BiatecClammPool.algo.ts:1283","pc":[5235,5236]},{"teal":5642,"source":"contracts\\BiatecClammPool.algo.ts:1283","pc":[5237,5238]},{"teal":5643,"source":"contracts\\BiatecClammPool.algo.ts:1283","pc":[5239,5240]},{"teal":5644,"source":"contracts\\BiatecClammPool.algo.ts:1283","pc":[5241]},{"teal":5645,"source":"contracts\\BiatecClammPool.algo.ts:1283","pc":[5242]},{"teal":5646,"source":"contracts\\BiatecClammPool.algo.ts:1283","pc":[5243,5244]},{"teal":5647,"source":"contracts\\BiatecClammPool.algo.ts:1283","pc":[5245]},{"teal":5648,"source":"contracts\\BiatecClammPool.algo.ts:1283","pc":[5246,5247]},{"teal":5652,"source":"contracts\\BiatecClammPool.algo.ts:1284","pc":[5248,5249]},{"teal":5653,"source":"contracts\\BiatecClammPool.algo.ts:1284","pc":[5250,5251]},{"teal":5657,"source":"contracts\\BiatecClammPool.algo.ts:1285","pc":[5252,5253]},{"teal":5658,"source":"contracts\\BiatecClammPool.algo.ts:1285","pc":[5254,5255]},{"teal":5659,"source":"contracts\\BiatecClammPool.algo.ts:1285","pc":[5256]},{"teal":5660,"source":"contracts\\BiatecClammPool.algo.ts:1285","pc":[5257,5258]},{"teal":5664,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[5259,5260]},{"teal":5665,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[5261,5262]},{"teal":5666,"source":"contracts\\BiatecClammPool.algo.ts:13","pc":[5263]},{"teal":5667,"source":"contracts\\BiatecClammPool.algo.ts:1287","pc":[5264]},{"teal":5668,"source":"contracts\\BiatecClammPool.algo.ts:1287","pc":[5265,5266]},{"teal":5672,"source":"contracts\\BiatecClammPool.algo.ts:1288","pc":[5267,5268]},{"teal":5673,"source":"contracts\\BiatecClammPool.algo.ts:1288","pc":[5269,5270]},{"teal":5674,"source":"contracts\\BiatecClammPool.algo.ts:1288","pc":[5271]},{"teal":5675,"source":"contracts\\BiatecClammPool.algo.ts:1288","pc":[5272,5273]},{"teal":5679,"source":"contracts\\BiatecClammPool.algo.ts:1289","pc":[5274,5275]},{"teal":5682,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5276,5277]},{"teal":5685,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5278,5279]},{"teal":5686,"source":"contracts\\BiatecClammPool.algo.ts:1281","pc":[5280]},{"teal":5691,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5281,5282]},{"teal":5694,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5283,5284,5285]},{"teal":5695,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5286]},{"teal":5696,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5287]},{"teal":5697,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5288]},{"teal":5698,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5289]},{"teal":5701,"source":"contracts\\BiatecClammPool.algo.ts:1293","errorMessage":"argument 0 (price) for calculateLiquidityFlatPrice must be a uint256","pc":[5290]},{"teal":5704,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5291,5292,5293]},{"teal":5705,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5294]},{"teal":5706,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5295]},{"teal":5707,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5296]},{"teal":5708,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5297]},{"teal":5711,"source":"contracts\\BiatecClammPool.algo.ts:1293","errorMessage":"argument 1 (y) for calculateLiquidityFlatPrice must be a uint256","pc":[5298]},{"teal":5714,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5299,5300,5301]},{"teal":5715,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5302]},{"teal":5716,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5303]},{"teal":5717,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5304]},{"teal":5718,"source":"contracts\\BiatecClammPool.algo.ts:1293","pc":[5305]},{"teal":5721,"source":"contracts\\BiatecClammPool.algo.ts:1293","errorMessage":"argument 2 (x) for calculateLiquidityFlatPrice must be a uint256","pc":[5306]},{"teal":5724,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5307,5308,5309]},{"teal":5725,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5310]},{"teal":5726,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5311]},{"teal":5727,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5312]},{"teal":5728,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5313]},{"teal":5731,"source":"contracts\\BiatecClammPool.algo.ts:1292","errorMessage":"calculateLiquidityFlatPrice return value overflowed 256 bits","pc":[5314]},{"teal":5732,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5315]},{"teal":5733,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5316]},{"teal":5734,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5317]},{"teal":5735,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5318]},{"teal":5736,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5319]},{"teal":5737,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5320]},{"teal":5738,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5321]},{"teal":5739,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5322]},{"teal":5740,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5323]},{"teal":5741,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5324]},{"teal":5742,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5325]},{"teal":5743,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5326]},{"teal":5744,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5327]},{"teal":5748,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5328,5329,5330]},{"teal":5752,"source":"contracts\\BiatecClammPool.algo.ts:1308","pc":[5331,5332]},{"teal":5753,"source":"contracts\\BiatecClammPool.algo.ts:1308","pc":[5333,5334]},{"teal":5754,"source":"contracts\\BiatecClammPool.algo.ts:1308","pc":[5335]},{"teal":5755,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5336]},{"teal":5756,"source":"contracts\\BiatecClammPool.algo.ts:1308","pc":[5337]},{"teal":5757,"source":"contracts\\BiatecClammPool.algo.ts:1308","pc":[5338,5339]},{"teal":5758,"source":"contracts\\BiatecClammPool.algo.ts:1308","pc":[5340]},{"teal":5759,"source":"contracts\\BiatecClammPool.algo.ts:1292","pc":[5341]},{"teal":5764,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5342,5343]},{"teal":5767,"source":"contracts\\BiatecClammPool.algo.ts:1331","pc":[5344,5345,5346]},{"teal":5768,"source":"contracts\\BiatecClammPool.algo.ts:1331","pc":[5347]},{"teal":5769,"source":"contracts\\BiatecClammPool.algo.ts:1331","pc":[5348]},{"teal":5770,"source":"contracts\\BiatecClammPool.algo.ts:1331","pc":[5349]},{"teal":5771,"source":"contracts\\BiatecClammPool.algo.ts:1331","pc":[5350]},{"teal":5774,"source":"contracts\\BiatecClammPool.algo.ts:1331","errorMessage":"argument 0 (priceMaxSqrt) for calculateLiquidityD must be a uint256","pc":[5351]},{"teal":5777,"source":"contracts\\BiatecClammPool.algo.ts:1330","pc":[5352,5353,5354]},{"teal":5778,"source":"contracts\\BiatecClammPool.algo.ts:1330","pc":[5355]},{"teal":5779,"source":"contracts\\BiatecClammPool.algo.ts:1330","pc":[5356]},{"teal":5780,"source":"contracts\\BiatecClammPool.algo.ts:1330","pc":[5357]},{"teal":5781,"source":"contracts\\BiatecClammPool.algo.ts:1330","pc":[5358]},{"teal":5784,"source":"contracts\\BiatecClammPool.algo.ts:1330","errorMessage":"argument 1 (priceMinSqrt) for calculateLiquidityD must be a uint256","pc":[5359]},{"teal":5787,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[5360,5361,5362]},{"teal":5788,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[5363]},{"teal":5789,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[5364]},{"teal":5790,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[5365]},{"teal":5791,"source":"contracts\\BiatecClammPool.algo.ts:1329","pc":[5366]},{"teal":5794,"source":"contracts\\BiatecClammPool.algo.ts:1329","errorMessage":"argument 2 (priceMax) for calculateLiquidityD must be a uint256","pc":[5367]},{"teal":5797,"source":"contracts\\BiatecClammPool.algo.ts:1328","pc":[5368,5369,5370]},{"teal":5798,"source":"contracts\\BiatecClammPool.algo.ts:1328","pc":[5371]},{"teal":5799,"source":"contracts\\BiatecClammPool.algo.ts:1328","pc":[5372]},{"teal":5800,"source":"contracts\\BiatecClammPool.algo.ts:1328","pc":[5373]},{"teal":5801,"source":"contracts\\BiatecClammPool.algo.ts:1328","pc":[5374]},{"teal":5804,"source":"contracts\\BiatecClammPool.algo.ts:1328","errorMessage":"argument 3 (priceMin) for calculateLiquidityD must be a uint256","pc":[5375]},{"teal":5807,"source":"contracts\\BiatecClammPool.algo.ts:1327","pc":[5376,5377,5378]},{"teal":5808,"source":"contracts\\BiatecClammPool.algo.ts:1327","pc":[5379]},{"teal":5809,"source":"contracts\\BiatecClammPool.algo.ts:1327","pc":[5380]},{"teal":5810,"source":"contracts\\BiatecClammPool.algo.ts:1327","pc":[5381]},{"teal":5811,"source":"contracts\\BiatecClammPool.algo.ts:1327","pc":[5382]},{"teal":5814,"source":"contracts\\BiatecClammPool.algo.ts:1327","errorMessage":"argument 4 (y) for calculateLiquidityD must be a uint256","pc":[5383]},{"teal":5817,"source":"contracts\\BiatecClammPool.algo.ts:1326","pc":[5384,5385,5386]},{"teal":5818,"source":"contracts\\BiatecClammPool.algo.ts:1326","pc":[5387]},{"teal":5819,"source":"contracts\\BiatecClammPool.algo.ts:1326","pc":[5388]},{"teal":5820,"source":"contracts\\BiatecClammPool.algo.ts:1326","pc":[5389]},{"teal":5821,"source":"contracts\\BiatecClammPool.algo.ts:1326","pc":[5390]},{"teal":5824,"source":"contracts\\BiatecClammPool.algo.ts:1326","errorMessage":"argument 5 (x) for calculateLiquidityD must be a uint256","pc":[5391]},{"teal":5827,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5392,5393,5394]},{"teal":5828,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5395]},{"teal":5829,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5396]},{"teal":5830,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5397]},{"teal":5831,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5398]},{"teal":5834,"source":"contracts\\BiatecClammPool.algo.ts:1324","errorMessage":"calculateLiquidityD return value overflowed 256 bits","pc":[5399]},{"teal":5835,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5400]},{"teal":5836,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5401]},{"teal":5837,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5402]},{"teal":5838,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5403]},{"teal":5839,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5404]},{"teal":5840,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5405]},{"teal":5841,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5406]},{"teal":5842,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5407]},{"teal":5843,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5408]},{"teal":5844,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5409]},{"teal":5845,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5410]},{"teal":5846,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5411]},{"teal":5847,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5412]},{"teal":5863,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5413,5414,5415]},{"teal":5866,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5416]},{"teal":5867,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5417,5418]},{"teal":5871,"source":"contracts\\BiatecClammPool.algo.ts:1362","pc":[5419,5420]},{"teal":5872,"source":"contracts\\BiatecClammPool.algo.ts:1362","pc":[5421,5422]},{"teal":5873,"source":"contracts\\BiatecClammPool.algo.ts:1362","pc":[5423]},{"teal":5874,"source":"contracts\\BiatecClammPool.algo.ts:1362","pc":[5424,5425]},{"teal":5875,"source":"contracts\\BiatecClammPool.algo.ts:1362","pc":[5426]},{"teal":5876,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5427]},{"teal":5877,"source":"contracts\\BiatecClammPool.algo.ts:1362","pc":[5428]},{"teal":5878,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5429]},{"teal":5879,"source":"contracts\\BiatecClammPool.algo.ts:1362","pc":[5430]},{"teal":5880,"source":"contracts\\BiatecClammPool.algo.ts:1362","pc":[5431,5432]},{"teal":5884,"source":"contracts\\BiatecClammPool.algo.ts:1364","pc":[5433,5434]},{"teal":5885,"source":"contracts\\BiatecClammPool.algo.ts:1364","pc":[5435,5436]},{"teal":5886,"source":"contracts\\BiatecClammPool.algo.ts:1364","pc":[5437]},{"teal":5887,"source":"contracts\\BiatecClammPool.algo.ts:1364","pc":[5438,5439]},{"teal":5888,"source":"contracts\\BiatecClammPool.algo.ts:1364","pc":[5440]},{"teal":5889,"source":"contracts\\BiatecClammPool.algo.ts:1364","pc":[5441,5442]},{"teal":5893,"source":"contracts\\BiatecClammPool.algo.ts:1366","pc":[5443,5444]},{"teal":5894,"source":"contracts\\BiatecClammPool.algo.ts:1366","pc":[5445,5446]},{"teal":5895,"source":"contracts\\BiatecClammPool.algo.ts:1366","pc":[5447]},{"teal":5896,"source":"contracts\\BiatecClammPool.algo.ts:1366","pc":[5448,5449]},{"teal":5897,"source":"contracts\\BiatecClammPool.algo.ts:1366","pc":[5450]},{"teal":5898,"source":"contracts\\BiatecClammPool.algo.ts:1366","pc":[5451,5452]},{"teal":5899,"source":"contracts\\BiatecClammPool.algo.ts:1366","pc":[5453]},{"teal":5900,"source":"contracts\\BiatecClammPool.algo.ts:1366","pc":[5454,5455]},{"teal":5904,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[5456,5457]},{"teal":5905,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[5458,5459]},{"teal":5906,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[5460]},{"teal":5907,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5461]},{"teal":5908,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[5462]},{"teal":5909,"source":"contracts\\BiatecClammPool.algo.ts:1367","pc":[5463,5464]},{"teal":5913,"source":"contracts\\BiatecClammPool.algo.ts:1370","pc":[5465,5466]},{"teal":5914,"source":"contracts\\BiatecClammPool.algo.ts:1370","pc":[5467,5468]},{"teal":5915,"source":"contracts\\BiatecClammPool.algo.ts:1370","pc":[5469]},{"teal":5916,"source":"contracts\\BiatecClammPool.algo.ts:1370","pc":[5470,5471]},{"teal":5917,"source":"contracts\\BiatecClammPool.algo.ts:1370","pc":[5472]},{"teal":5918,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5473]},{"teal":5919,"source":"contracts\\BiatecClammPool.algo.ts:1370","pc":[5474]},{"teal":5920,"source":"contracts\\BiatecClammPool.algo.ts:1370","pc":[5475,5476]},{"teal":5924,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[5477,5478]},{"teal":5925,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[5479,5480]},{"teal":5926,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[5481]},{"teal":5927,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[5482,5483]},{"teal":5928,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[5484]},{"teal":5929,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[5485,5486]},{"teal":5930,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[5487]},{"teal":5931,"source":"contracts\\BiatecClammPool.algo.ts:1372","pc":[5488,5489]},{"teal":5935,"source":"contracts\\BiatecClammPool.algo.ts:1373","pc":[5490,5491]},{"teal":5936,"source":"contracts\\BiatecClammPool.algo.ts:1373","pc":[5492,5493]},{"teal":5937,"source":"contracts\\BiatecClammPool.algo.ts:1373","pc":[5494]},{"teal":5938,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5495]},{"teal":5939,"source":"contracts\\BiatecClammPool.algo.ts:1373","pc":[5496]},{"teal":5940,"source":"contracts\\BiatecClammPool.algo.ts:1373","pc":[5497,5498]},{"teal":5944,"source":"contracts\\BiatecClammPool.algo.ts:1374","pc":[5499,5500]},{"teal":5945,"source":"contracts\\BiatecClammPool.algo.ts:1374","pc":[5501,5502]},{"teal":5946,"source":"contracts\\BiatecClammPool.algo.ts:1374","pc":[5503]},{"teal":5947,"source":"contracts\\BiatecClammPool.algo.ts:1374","pc":[5504,5505]},{"teal":5948,"source":"contracts\\BiatecClammPool.algo.ts:1374","pc":[5506]},{"teal":5949,"source":"contracts\\BiatecClammPool.algo.ts:1374","pc":[5507,5508]},{"teal":5950,"source":"contracts\\BiatecClammPool.algo.ts:1374","pc":[5509]},{"teal":5951,"source":"contracts\\BiatecClammPool.algo.ts:1374","pc":[5510,5511]},{"teal":5952,"source":"contracts\\BiatecClammPool.algo.ts:1374","pc":[5512]},{"teal":5953,"source":"contracts\\BiatecClammPool.algo.ts:1374","pc":[5513,5514]},{"teal":5957,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5515]},{"teal":5958,"source":"contracts\\BiatecClammPool.algo.ts:1375","pc":[5516,5517]},{"teal":5959,"source":"contracts\\BiatecClammPool.algo.ts:1375","pc":[5518]},{"teal":5960,"source":"contracts\\BiatecClammPool.algo.ts:1375","pc":[5519]},{"teal":5961,"source":"contracts\\BiatecClammPool.algo.ts:1375","pc":[5520,5521]},{"teal":5965,"source":"contracts\\BiatecClammPool.algo.ts:1376","pc":[5522,5523]},{"teal":5968,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5524,5525]},{"teal":5971,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5526,5527]},{"teal":5972,"source":"contracts\\BiatecClammPool.algo.ts:1324","pc":[5528]},{"teal":5977,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5529,5530]},{"teal":5980,"source":"contracts\\BiatecClammPool.algo.ts:1394","pc":[5531,5532,5533]},{"teal":5981,"source":"contracts\\BiatecClammPool.algo.ts:1394","pc":[5534]},{"teal":5982,"source":"contracts\\BiatecClammPool.algo.ts:1394","pc":[5535]},{"teal":5983,"source":"contracts\\BiatecClammPool.algo.ts:1394","pc":[5536]},{"teal":5984,"source":"contracts\\BiatecClammPool.algo.ts:1394","pc":[5537]},{"teal":5987,"source":"contracts\\BiatecClammPool.algo.ts:1394","errorMessage":"argument 0 (dSqrt) for calculateLiquidityWithD must be a uint256","pc":[5538]},{"teal":5990,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[5539,5540,5541]},{"teal":5991,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[5542]},{"teal":5992,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[5543]},{"teal":5993,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[5544]},{"teal":5994,"source":"contracts\\BiatecClammPool.algo.ts:1393","pc":[5545]},{"teal":5997,"source":"contracts\\BiatecClammPool.algo.ts:1393","errorMessage":"argument 1 (priceMaxSqrt) for calculateLiquidityWithD must be a uint256","pc":[5546]},{"teal":6000,"source":"contracts\\BiatecClammPool.algo.ts:1392","pc":[5547,5548,5549]},{"teal":6001,"source":"contracts\\BiatecClammPool.algo.ts:1392","pc":[5550]},{"teal":6002,"source":"contracts\\BiatecClammPool.algo.ts:1392","pc":[5551]},{"teal":6003,"source":"contracts\\BiatecClammPool.algo.ts:1392","pc":[5552]},{"teal":6004,"source":"contracts\\BiatecClammPool.algo.ts:1392","pc":[5553]},{"teal":6007,"source":"contracts\\BiatecClammPool.algo.ts:1392","errorMessage":"argument 2 (priceMinSqrt) for calculateLiquidityWithD must be a uint256","pc":[5554]},{"teal":6010,"source":"contracts\\BiatecClammPool.algo.ts:1391","pc":[5555,5556,5557]},{"teal":6011,"source":"contracts\\BiatecClammPool.algo.ts:1391","pc":[5558]},{"teal":6012,"source":"contracts\\BiatecClammPool.algo.ts:1391","pc":[5559]},{"teal":6013,"source":"contracts\\BiatecClammPool.algo.ts:1391","pc":[5560]},{"teal":6014,"source":"contracts\\BiatecClammPool.algo.ts:1391","pc":[5561]},{"teal":6017,"source":"contracts\\BiatecClammPool.algo.ts:1391","errorMessage":"argument 3 (y) for calculateLiquidityWithD must be a uint256","pc":[5562]},{"teal":6020,"source":"contracts\\BiatecClammPool.algo.ts:1390","pc":[5563,5564,5565]},{"teal":6021,"source":"contracts\\BiatecClammPool.algo.ts:1390","pc":[5566]},{"teal":6022,"source":"contracts\\BiatecClammPool.algo.ts:1390","pc":[5567]},{"teal":6023,"source":"contracts\\BiatecClammPool.algo.ts:1390","pc":[5568]},{"teal":6024,"source":"contracts\\BiatecClammPool.algo.ts:1390","pc":[5569]},{"teal":6027,"source":"contracts\\BiatecClammPool.algo.ts:1390","errorMessage":"argument 4 (x) for calculateLiquidityWithD must be a uint256","pc":[5570]},{"teal":6030,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5571,5572,5573]},{"teal":6031,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5574]},{"teal":6032,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5575]},{"teal":6033,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5576]},{"teal":6034,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5577]},{"teal":6037,"source":"contracts\\BiatecClammPool.algo.ts:1388","errorMessage":"calculateLiquidityWithD return value overflowed 256 bits","pc":[5578]},{"teal":6038,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5579]},{"teal":6039,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5580]},{"teal":6040,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5581]},{"teal":6041,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5582]},{"teal":6042,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5583]},{"teal":6043,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5584]},{"teal":6044,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5585]},{"teal":6045,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5586]},{"teal":6046,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5587]},{"teal":6047,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5588]},{"teal":6048,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5589]},{"teal":6049,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5590]},{"teal":6050,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5591]},{"teal":6062,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5592,5593,5594]},{"teal":6065,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5595]},{"teal":6066,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5596,5597]},{"teal":6070,"source":"contracts\\BiatecClammPool.algo.ts:1426","pc":[5598,5599]},{"teal":6071,"source":"contracts\\BiatecClammPool.algo.ts:1426","pc":[5600,5601]},{"teal":6072,"source":"contracts\\BiatecClammPool.algo.ts:1426","pc":[5602]},{"teal":6073,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5603]},{"teal":6074,"source":"contracts\\BiatecClammPool.algo.ts:1426","pc":[5604]},{"teal":6075,"source":"contracts\\BiatecClammPool.algo.ts:1426","pc":[5605,5606]},{"teal":6079,"source":"contracts\\BiatecClammPool.algo.ts:1429","pc":[5607,5608]},{"teal":6080,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5609]},{"teal":6081,"source":"contracts\\BiatecClammPool.algo.ts:1429","pc":[5610]},{"teal":6082,"source":"contracts\\BiatecClammPool.algo.ts:1429","pc":[5611,5612]},{"teal":6083,"source":"contracts\\BiatecClammPool.algo.ts:1429","pc":[5613]},{"teal":6084,"source":"contracts\\BiatecClammPool.algo.ts:1429","pc":[5614,5615]},{"teal":6088,"source":"contracts\\BiatecClammPool.algo.ts:1434","pc":[5616,5617]},{"teal":6089,"source":"contracts\\BiatecClammPool.algo.ts:1434","pc":[5618,5619]},{"teal":6093,"source":"contracts\\BiatecClammPool.algo.ts:1435","pc":[5620,5621]},{"teal":6094,"source":"contracts\\BiatecClammPool.algo.ts:1435","pc":[5622,5623]},{"teal":6095,"source":"contracts\\BiatecClammPool.algo.ts:1435","pc":[5624]},{"teal":6096,"source":"contracts\\BiatecClammPool.algo.ts:1435","pc":[5625,5626]},{"teal":6100,"source":"contracts\\BiatecClammPool.algo.ts:1436","pc":[5627,5628]},{"teal":6101,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5629]},{"teal":6102,"source":"contracts\\BiatecClammPool.algo.ts:1436","pc":[5630]},{"teal":6103,"source":"contracts\\BiatecClammPool.algo.ts:1436","pc":[5631,5632]},{"teal":6107,"source":"contracts\\BiatecClammPool.algo.ts:1437","pc":[5633,5634]},{"teal":6108,"source":"contracts\\BiatecClammPool.algo.ts:1437","pc":[5635,5636]},{"teal":6109,"source":"contracts\\BiatecClammPool.algo.ts:1437","pc":[5637]},{"teal":6110,"source":"contracts\\BiatecClammPool.algo.ts:1437","pc":[5638,5639]},{"teal":6115,"source":"contracts\\BiatecClammPool.algo.ts:1438","pc":[5640,5641]},{"teal":6116,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5642]},{"teal":6117,"source":"contracts\\BiatecClammPool.algo.ts:1438","pc":[5643]},{"teal":6118,"source":"contracts\\BiatecClammPool.algo.ts:1438","pc":[5644,5645]},{"teal":6119,"source":"contracts\\BiatecClammPool.algo.ts:1438","pc":[5646]},{"teal":6120,"source":"contracts\\BiatecClammPool.algo.ts:1438","pc":[5647,5648,5649]},{"teal":6125,"source":"contracts\\BiatecClammPool.algo.ts:1439","pc":[5650,5651]},{"teal":6126,"source":"contracts\\BiatecClammPool.algo.ts:1439","pc":[5652,5653]},{"teal":6127,"source":"contracts\\BiatecClammPool.algo.ts:1439","pc":[5654]},{"teal":6128,"source":"contracts\\BiatecClammPool.algo.ts:1439","pc":[5655,5656]},{"teal":6129,"source":"contracts\\BiatecClammPool.algo.ts:1439","pc":[5657]},{"teal":6130,"source":"contracts\\BiatecClammPool.algo.ts:1439","pc":[5658,5659]},{"teal":6134,"source":"contracts\\BiatecClammPool.algo.ts:1440","pc":[5660,5661]},{"teal":6135,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5662]},{"teal":6136,"source":"contracts\\BiatecClammPool.algo.ts:1440","pc":[5663]},{"teal":6137,"source":"contracts\\BiatecClammPool.algo.ts:1440","pc":[5664,5665]},{"teal":6138,"source":"contracts\\BiatecClammPool.algo.ts:1440","pc":[5666]},{"teal":6139,"source":"contracts\\BiatecClammPool.algo.ts:1440","pc":[5667,5668]},{"teal":6143,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5669]},{"teal":6144,"source":"contracts\\BiatecClammPool.algo.ts:1441","pc":[5670,5671]},{"teal":6145,"source":"contracts\\BiatecClammPool.algo.ts:1441","pc":[5672]},{"teal":6146,"source":"contracts\\BiatecClammPool.algo.ts:1441","pc":[5673,5674]},{"teal":6147,"source":"contracts\\BiatecClammPool.algo.ts:1441","pc":[5675]},{"teal":6148,"source":"contracts\\BiatecClammPool.algo.ts:1441","pc":[5676,5677]},{"teal":6152,"source":"contracts\\BiatecClammPool.algo.ts:1442","pc":[5678,5679]},{"teal":6153,"source":"contracts\\BiatecClammPool.algo.ts:1442","pc":[5680,5681,5682]},{"teal":6158,"source":"contracts\\BiatecClammPool.algo.ts:1444","pc":[5683,5684]},{"teal":6159,"source":"contracts\\BiatecClammPool.algo.ts:1444","pc":[5685,5686]},{"teal":6160,"source":"contracts\\BiatecClammPool.algo.ts:1444","pc":[5687]},{"teal":6161,"source":"contracts\\BiatecClammPool.algo.ts:1444","pc":[5688,5689]},{"teal":6162,"source":"contracts\\BiatecClammPool.algo.ts:1444","pc":[5690]},{"teal":6163,"source":"contracts\\BiatecClammPool.algo.ts:1444","pc":[5691,5692]},{"teal":6167,"source":"contracts\\BiatecClammPool.algo.ts:1445","pc":[5693,5694]},{"teal":6168,"source":"contracts\\BiatecClammPool.algo.ts:1445","pc":[5695,5696]},{"teal":6169,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5697]},{"teal":6170,"source":"contracts\\BiatecClammPool.algo.ts:1445","pc":[5698]},{"teal":6171,"source":"contracts\\BiatecClammPool.algo.ts:1445","pc":[5699]},{"teal":6172,"source":"contracts\\BiatecClammPool.algo.ts:1445","pc":[5700,5701]},{"teal":6176,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5702]},{"teal":6177,"source":"contracts\\BiatecClammPool.algo.ts:1446","pc":[5703,5704]},{"teal":6178,"source":"contracts\\BiatecClammPool.algo.ts:1446","pc":[5705]},{"teal":6179,"source":"contracts\\BiatecClammPool.algo.ts:1446","pc":[5706,5707]},{"teal":6180,"source":"contracts\\BiatecClammPool.algo.ts:1446","pc":[5708]},{"teal":6181,"source":"contracts\\BiatecClammPool.algo.ts:1446","pc":[5709,5710]},{"teal":6185,"source":"contracts\\BiatecClammPool.algo.ts:1447","pc":[5711,5712]},{"teal":6189,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5713,5714]},{"teal":6192,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5715,5716]},{"teal":6193,"source":"contracts\\BiatecClammPool.algo.ts:1388","pc":[5717]},{"teal":6198,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5718,5719]},{"teal":6201,"source":"contracts\\BiatecClammPool.algo.ts:1468","pc":[5720,5721,5722]},{"teal":6202,"source":"contracts\\BiatecClammPool.algo.ts:1468","pc":[5723]},{"teal":6203,"source":"contracts\\BiatecClammPool.algo.ts:1468","pc":[5724]},{"teal":6204,"source":"contracts\\BiatecClammPool.algo.ts:1468","pc":[5725]},{"teal":6205,"source":"contracts\\BiatecClammPool.algo.ts:1468","pc":[5726]},{"teal":6208,"source":"contracts\\BiatecClammPool.algo.ts:1468","errorMessage":"argument 0 (liquidity) for calculatePrice must be a uint256","pc":[5727]},{"teal":6211,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[5728,5729,5730]},{"teal":6212,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[5731]},{"teal":6213,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[5732]},{"teal":6214,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[5733]},{"teal":6215,"source":"contracts\\BiatecClammPool.algo.ts:1467","pc":[5734]},{"teal":6218,"source":"contracts\\BiatecClammPool.algo.ts:1467","errorMessage":"argument 1 (priceMaxSqrt) for calculatePrice must be a uint256","pc":[5735]},{"teal":6221,"source":"contracts\\BiatecClammPool.algo.ts:1466","pc":[5736,5737,5738]},{"teal":6222,"source":"contracts\\BiatecClammPool.algo.ts:1466","pc":[5739]},{"teal":6223,"source":"contracts\\BiatecClammPool.algo.ts:1466","pc":[5740]},{"teal":6224,"source":"contracts\\BiatecClammPool.algo.ts:1466","pc":[5741]},{"teal":6225,"source":"contracts\\BiatecClammPool.algo.ts:1466","pc":[5742]},{"teal":6228,"source":"contracts\\BiatecClammPool.algo.ts:1466","errorMessage":"argument 2 (priceMinSqrt) for calculatePrice must be a uint256","pc":[5743]},{"teal":6231,"source":"contracts\\BiatecClammPool.algo.ts:1465","pc":[5744,5745,5746]},{"teal":6232,"source":"contracts\\BiatecClammPool.algo.ts:1465","pc":[5747]},{"teal":6233,"source":"contracts\\BiatecClammPool.algo.ts:1465","pc":[5748]},{"teal":6234,"source":"contracts\\BiatecClammPool.algo.ts:1465","pc":[5749]},{"teal":6235,"source":"contracts\\BiatecClammPool.algo.ts:1465","pc":[5750]},{"teal":6238,"source":"contracts\\BiatecClammPool.algo.ts:1465","errorMessage":"argument 3 (assetBQuantity) for calculatePrice must be a uint256","pc":[5751]},{"teal":6241,"source":"contracts\\BiatecClammPool.algo.ts:1464","pc":[5752,5753,5754]},{"teal":6242,"source":"contracts\\BiatecClammPool.algo.ts:1464","pc":[5755]},{"teal":6243,"source":"contracts\\BiatecClammPool.algo.ts:1464","pc":[5756]},{"teal":6244,"source":"contracts\\BiatecClammPool.algo.ts:1464","pc":[5757]},{"teal":6245,"source":"contracts\\BiatecClammPool.algo.ts:1464","pc":[5758]},{"teal":6248,"source":"contracts\\BiatecClammPool.algo.ts:1464","errorMessage":"argument 4 (assetAQuantity) for calculatePrice must be a uint256","pc":[5759]},{"teal":6251,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5760,5761,5762]},{"teal":6252,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5763]},{"teal":6253,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5764]},{"teal":6254,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5765]},{"teal":6255,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5766]},{"teal":6258,"source":"contracts\\BiatecClammPool.algo.ts:1462","errorMessage":"calculatePrice return value overflowed 256 bits","pc":[5767]},{"teal":6259,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5768]},{"teal":6260,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5769]},{"teal":6261,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5770]},{"teal":6262,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5771]},{"teal":6263,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5772]},{"teal":6264,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5773]},{"teal":6265,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5774]},{"teal":6266,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5775]},{"teal":6267,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5776]},{"teal":6268,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5777]},{"teal":6269,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5778]},{"teal":6270,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5779]},{"teal":6271,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5780]},{"teal":6283,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5781,5782,5783]},{"teal":6286,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5784]},{"teal":6287,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5785,5786]},{"teal":6292,"source":"contracts\\BiatecClammPool.algo.ts:1471","pc":[5787,5788]},{"teal":6293,"source":"contracts\\BiatecClammPool.algo.ts:1471","pc":[5789,5790]},{"teal":6294,"source":"contracts\\BiatecClammPool.algo.ts:1471","pc":[5791]},{"teal":6295,"source":"contracts\\BiatecClammPool.algo.ts:1471","pc":[5792,5793,5794]},{"teal":6300,"source":"contracts\\BiatecClammPool.algo.ts:1472","pc":[5795,5796]},{"teal":6301,"source":"contracts\\BiatecClammPool.algo.ts:1472","pc":[5797,5798]},{"teal":6302,"source":"contracts\\BiatecClammPool.algo.ts:1472","pc":[5799]},{"teal":6303,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5800]},{"teal":6304,"source":"contracts\\BiatecClammPool.algo.ts:1472","pc":[5801]},{"teal":6305,"source":"contracts\\BiatecClammPool.algo.ts:1472","pc":[5802,5803]},{"teal":6309,"source":"contracts\\BiatecClammPool.algo.ts:1473","pc":[5804,5805]},{"teal":6310,"source":"contracts\\BiatecClammPool.algo.ts:1473","pc":[5806,5807,5808]},{"teal":6315,"source":"contracts\\BiatecClammPool.algo.ts:1476","pc":[5809,5810]},{"teal":6316,"source":"contracts\\BiatecClammPool.algo.ts:1476","pc":[5811,5812]},{"teal":6320,"source":"contracts\\BiatecClammPool.algo.ts:1477","pc":[5813,5814]},{"teal":6321,"source":"contracts\\BiatecClammPool.algo.ts:1477","pc":[5815,5816]},{"teal":6325,"source":"contracts\\BiatecClammPool.algo.ts:1478","pc":[5817,5818]},{"teal":6326,"source":"contracts\\BiatecClammPool.algo.ts:1478","pc":[5819,5820]},{"teal":6327,"source":"contracts\\BiatecClammPool.algo.ts:1478","pc":[5821]},{"teal":6328,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5822]},{"teal":6329,"source":"contracts\\BiatecClammPool.algo.ts:1478","pc":[5823]},{"teal":6330,"source":"contracts\\BiatecClammPool.algo.ts:1478","pc":[5824,5825]},{"teal":6334,"source":"contracts\\BiatecClammPool.algo.ts:1479","pc":[5826,5827]},{"teal":6335,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5828]},{"teal":6336,"source":"contracts\\BiatecClammPool.algo.ts:1479","pc":[5829]},{"teal":6337,"source":"contracts\\BiatecClammPool.algo.ts:1479","pc":[5830,5831]},{"teal":6338,"source":"contracts\\BiatecClammPool.algo.ts:1479","pc":[5832]},{"teal":6339,"source":"contracts\\BiatecClammPool.algo.ts:1479","pc":[5833,5834]},{"teal":6343,"source":"contracts\\BiatecClammPool.algo.ts:1480","pc":[5835,5836]},{"teal":6344,"source":"contracts\\BiatecClammPool.algo.ts:1480","pc":[5837,5838]},{"teal":6345,"source":"contracts\\BiatecClammPool.algo.ts:1480","pc":[5839]},{"teal":6346,"source":"contracts\\BiatecClammPool.algo.ts:1480","pc":[5840,5841]},{"teal":6350,"source":"contracts\\BiatecClammPool.algo.ts:1481","pc":[5842,5843]},{"teal":6351,"source":"contracts\\BiatecClammPool.algo.ts:1481","pc":[5844,5845]},{"teal":6352,"source":"contracts\\BiatecClammPool.algo.ts:1481","pc":[5846]},{"teal":6353,"source":"contracts\\BiatecClammPool.algo.ts:1481","pc":[5847,5848]},{"teal":6357,"source":"contracts\\BiatecClammPool.algo.ts:1482","pc":[5849,5850]},{"teal":6358,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5851]},{"teal":6359,"source":"contracts\\BiatecClammPool.algo.ts:1482","pc":[5852]},{"teal":6360,"source":"contracts\\BiatecClammPool.algo.ts:1482","pc":[5853,5854]},{"teal":6361,"source":"contracts\\BiatecClammPool.algo.ts:1482","pc":[5855]},{"teal":6362,"source":"contracts\\BiatecClammPool.algo.ts:1482","pc":[5856,5857]},{"teal":6366,"source":"contracts\\BiatecClammPool.algo.ts:1483","pc":[5858,5859]},{"teal":6370,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5860,5861]},{"teal":6373,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5862,5863]},{"teal":6374,"source":"contracts\\BiatecClammPool.algo.ts:1462","pc":[5864]},{"teal":6379,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5865,5866]},{"teal":6382,"source":"contracts\\BiatecClammPool.algo.ts:1503","pc":[5867,5868,5869]},{"teal":6383,"source":"contracts\\BiatecClammPool.algo.ts:1503","pc":[5870]},{"teal":6384,"source":"contracts\\BiatecClammPool.algo.ts:1503","pc":[5871]},{"teal":6385,"source":"contracts\\BiatecClammPool.algo.ts:1503","pc":[5872]},{"teal":6386,"source":"contracts\\BiatecClammPool.algo.ts:1503","pc":[5873]},{"teal":6389,"source":"contracts\\BiatecClammPool.algo.ts:1503","errorMessage":"argument 0 (liquidity) for calculateAssetBWithdrawOnAssetADeposit must be a uint256","pc":[5874]},{"teal":6392,"source":"contracts\\BiatecClammPool.algo.ts:1502","pc":[5875,5876,5877]},{"teal":6393,"source":"contracts\\BiatecClammPool.algo.ts:1502","pc":[5878]},{"teal":6394,"source":"contracts\\BiatecClammPool.algo.ts:1502","pc":[5879]},{"teal":6395,"source":"contracts\\BiatecClammPool.algo.ts:1502","pc":[5880]},{"teal":6396,"source":"contracts\\BiatecClammPool.algo.ts:1502","pc":[5881]},{"teal":6399,"source":"contracts\\BiatecClammPool.algo.ts:1502","errorMessage":"argument 1 (priceMaxSqrt) for calculateAssetBWithdrawOnAssetADeposit must be a uint256","pc":[5882]},{"teal":6402,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[5883,5884,5885]},{"teal":6403,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[5886]},{"teal":6404,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[5887]},{"teal":6405,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[5888]},{"teal":6406,"source":"contracts\\BiatecClammPool.algo.ts:1501","pc":[5889]},{"teal":6409,"source":"contracts\\BiatecClammPool.algo.ts:1501","errorMessage":"argument 2 (priceMinSqrt) for calculateAssetBWithdrawOnAssetADeposit must be a uint256","pc":[5890]},{"teal":6412,"source":"contracts\\BiatecClammPool.algo.ts:1500","pc":[5891,5892,5893]},{"teal":6413,"source":"contracts\\BiatecClammPool.algo.ts:1500","pc":[5894]},{"teal":6414,"source":"contracts\\BiatecClammPool.algo.ts:1500","pc":[5895]},{"teal":6415,"source":"contracts\\BiatecClammPool.algo.ts:1500","pc":[5896]},{"teal":6416,"source":"contracts\\BiatecClammPool.algo.ts:1500","pc":[5897]},{"teal":6419,"source":"contracts\\BiatecClammPool.algo.ts:1500","errorMessage":"argument 3 (assetBBalance) for calculateAssetBWithdrawOnAssetADeposit must be a uint256","pc":[5898]},{"teal":6422,"source":"contracts\\BiatecClammPool.algo.ts:1499","pc":[5899,5900,5901]},{"teal":6423,"source":"contracts\\BiatecClammPool.algo.ts:1499","pc":[5902]},{"teal":6424,"source":"contracts\\BiatecClammPool.algo.ts:1499","pc":[5903]},{"teal":6425,"source":"contracts\\BiatecClammPool.algo.ts:1499","pc":[5904]},{"teal":6426,"source":"contracts\\BiatecClammPool.algo.ts:1499","pc":[5905]},{"teal":6429,"source":"contracts\\BiatecClammPool.algo.ts:1499","errorMessage":"argument 4 (assetABalance) for calculateAssetBWithdrawOnAssetADeposit must be a uint256","pc":[5906]},{"teal":6432,"source":"contracts\\BiatecClammPool.algo.ts:1498","pc":[5907,5908,5909]},{"teal":6433,"source":"contracts\\BiatecClammPool.algo.ts:1498","pc":[5910]},{"teal":6434,"source":"contracts\\BiatecClammPool.algo.ts:1498","pc":[5911]},{"teal":6435,"source":"contracts\\BiatecClammPool.algo.ts:1498","pc":[5912]},{"teal":6436,"source":"contracts\\BiatecClammPool.algo.ts:1498","pc":[5913]},{"teal":6439,"source":"contracts\\BiatecClammPool.algo.ts:1498","errorMessage":"argument 5 (inAmount) for calculateAssetBWithdrawOnAssetADeposit must be a uint256","pc":[5914]},{"teal":6442,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5915,5916,5917]},{"teal":6443,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5918]},{"teal":6444,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5919]},{"teal":6445,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5920]},{"teal":6446,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5921]},{"teal":6449,"source":"contracts\\BiatecClammPool.algo.ts:1496","errorMessage":"calculateAssetBWithdrawOnAssetADeposit return value overflowed 256 bits","pc":[5922]},{"teal":6450,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5923]},{"teal":6451,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5924]},{"teal":6452,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5925]},{"teal":6453,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5926]},{"teal":6454,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5927]},{"teal":6455,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5928]},{"teal":6456,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5929]},{"teal":6457,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5930]},{"teal":6458,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5931]},{"teal":6459,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5932]},{"teal":6460,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5933]},{"teal":6461,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5934]},{"teal":6462,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5935]},{"teal":6475,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5936,5937,5938]},{"teal":6478,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5939]},{"teal":6479,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[5940,5941]},{"teal":6484,"source":"contracts\\BiatecClammPool.algo.ts:1506","pc":[5942,5943]},{"teal":6485,"source":"contracts\\BiatecClammPool.algo.ts:1506","pc":[5944,5945]},{"teal":6486,"source":"contracts\\BiatecClammPool.algo.ts:1506","pc":[5946]},{"teal":6487,"source":"contracts\\BiatecClammPool.algo.ts:1506","pc":[5947,5948,5949]},{"teal":6492,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[5950,5951]},{"teal":6493,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[5952,5953]},{"teal":6494,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[5954]},{"teal":6495,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[5955,5956]},{"teal":6496,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[5957]},{"teal":6497,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5958]},{"teal":6498,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[5959]},{"teal":6499,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5960]},{"teal":6500,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[5961]},{"teal":6501,"source":"contracts\\BiatecClammPool.algo.ts:1507","pc":[5962,5963]},{"teal":6505,"source":"contracts\\BiatecClammPool.algo.ts:1508","pc":[5964,5965]},{"teal":6506,"source":"contracts\\BiatecClammPool.algo.ts:1508","pc":[5966,5967,5968]},{"teal":6512,"source":"contracts\\BiatecClammPool.algo.ts:1533","pc":[5969,5970]},{"teal":6513,"source":"contracts\\BiatecClammPool.algo.ts:1533","pc":[5971,5972]},{"teal":6514,"source":"contracts\\BiatecClammPool.algo.ts:1533","pc":[5973]},{"teal":6515,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5974]},{"teal":6516,"source":"contracts\\BiatecClammPool.algo.ts:1533","pc":[5975]},{"teal":6517,"source":"contracts\\BiatecClammPool.algo.ts:1533","pc":[5976,5977]},{"teal":6518,"source":"contracts\\BiatecClammPool.algo.ts:1533","pc":[5978]},{"teal":6519,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5979]},{"teal":6520,"source":"contracts\\BiatecClammPool.algo.ts:1533","pc":[5980]},{"teal":6521,"source":"contracts\\BiatecClammPool.algo.ts:1533","pc":[5981,5982]},{"teal":6522,"source":"contracts\\BiatecClammPool.algo.ts:1533","pc":[5983]},{"teal":6523,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5984]},{"teal":6524,"source":"contracts\\BiatecClammPool.algo.ts:1533","pc":[5985]},{"teal":6525,"source":"contracts\\BiatecClammPool.algo.ts:1532","pc":[5986,5987]},{"teal":6529,"source":"contracts\\BiatecClammPool.algo.ts:1535","pc":[5988,5989]},{"teal":6530,"source":"contracts\\BiatecClammPool.algo.ts:1535","pc":[5990,5991]},{"teal":6531,"source":"contracts\\BiatecClammPool.algo.ts:1535","pc":[5992]},{"teal":6532,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5993]},{"teal":6533,"source":"contracts\\BiatecClammPool.algo.ts:1535","pc":[5994]},{"teal":6534,"source":"contracts\\BiatecClammPool.algo.ts:1535","pc":[5995,5996]},{"teal":6535,"source":"contracts\\BiatecClammPool.algo.ts:1535","pc":[5997]},{"teal":6536,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[5998]},{"teal":6537,"source":"contracts\\BiatecClammPool.algo.ts:1535","pc":[5999]},{"teal":6538,"source":"contracts\\BiatecClammPool.algo.ts:1535","pc":[6000,6001]},{"teal":6542,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[6002,6003]},{"teal":6543,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[6004,6005]},{"teal":6544,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[6006]},{"teal":6545,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6007]},{"teal":6546,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[6008]},{"teal":6547,"source":"contracts\\BiatecClammPool.algo.ts:1537","pc":[6009,6010]},{"teal":6551,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[6011,6012]},{"teal":6552,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[6013,6014]},{"teal":6553,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[6015]},{"teal":6554,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6016]},{"teal":6555,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[6017]},{"teal":6556,"source":"contracts\\BiatecClammPool.algo.ts:1539","pc":[6018,6019]},{"teal":6560,"source":"contracts\\BiatecClammPool.algo.ts:1541","pc":[6020,6021]},{"teal":6561,"source":"contracts\\BiatecClammPool.algo.ts:1541","pc":[6022,6023]},{"teal":6562,"source":"contracts\\BiatecClammPool.algo.ts:1541","pc":[6024]},{"teal":6563,"source":"contracts\\BiatecClammPool.algo.ts:1541","pc":[6025,6026]},{"teal":6567,"source":"contracts\\BiatecClammPool.algo.ts:1543","pc":[6027,6028]},{"teal":6568,"source":"contracts\\BiatecClammPool.algo.ts:1543","pc":[6029,6030]},{"teal":6569,"source":"contracts\\BiatecClammPool.algo.ts:1543","pc":[6031]},{"teal":6570,"source":"contracts\\BiatecClammPool.algo.ts:1543","pc":[6032,6033]},{"teal":6571,"source":"contracts\\BiatecClammPool.algo.ts:1543","pc":[6034]},{"teal":6572,"source":"contracts\\BiatecClammPool.algo.ts:1543","pc":[6035,6036]},{"teal":6576,"source":"contracts\\BiatecClammPool.algo.ts:1545","pc":[6037,6038]},{"teal":6577,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6039]},{"teal":6578,"source":"contracts\\BiatecClammPool.algo.ts:1545","pc":[6040]},{"teal":6579,"source":"contracts\\BiatecClammPool.algo.ts:1545","pc":[6041,6042]},{"teal":6580,"source":"contracts\\BiatecClammPool.algo.ts:1545","pc":[6043]},{"teal":6581,"source":"contracts\\BiatecClammPool.algo.ts:1545","pc":[6044,6045]},{"teal":6585,"source":"contracts\\BiatecClammPool.algo.ts:1546","pc":[6046,6047]},{"teal":6589,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[6048,6049]},{"teal":6592,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[6050,6051]},{"teal":6593,"source":"contracts\\BiatecClammPool.algo.ts:1496","pc":[6052]},{"teal":6598,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6053,6054]},{"teal":6601,"source":"contracts\\BiatecClammPool.algo.ts:1567","pc":[6055,6056,6057]},{"teal":6602,"source":"contracts\\BiatecClammPool.algo.ts:1567","pc":[6058]},{"teal":6603,"source":"contracts\\BiatecClammPool.algo.ts:1567","pc":[6059]},{"teal":6604,"source":"contracts\\BiatecClammPool.algo.ts:1567","pc":[6060]},{"teal":6605,"source":"contracts\\BiatecClammPool.algo.ts:1567","pc":[6061]},{"teal":6608,"source":"contracts\\BiatecClammPool.algo.ts:1567","errorMessage":"argument 0 (liquidity) for calculateAssetAWithdrawOnAssetBDeposit must be a uint256","pc":[6062]},{"teal":6611,"source":"contracts\\BiatecClammPool.algo.ts:1566","pc":[6063,6064,6065]},{"teal":6612,"source":"contracts\\BiatecClammPool.algo.ts:1566","pc":[6066]},{"teal":6613,"source":"contracts\\BiatecClammPool.algo.ts:1566","pc":[6067]},{"teal":6614,"source":"contracts\\BiatecClammPool.algo.ts:1566","pc":[6068]},{"teal":6615,"source":"contracts\\BiatecClammPool.algo.ts:1566","pc":[6069]},{"teal":6618,"source":"contracts\\BiatecClammPool.algo.ts:1566","errorMessage":"argument 1 (priceMaxSqrt) for calculateAssetAWithdrawOnAssetBDeposit must be a uint256","pc":[6070]},{"teal":6621,"source":"contracts\\BiatecClammPool.algo.ts:1565","pc":[6071,6072,6073]},{"teal":6622,"source":"contracts\\BiatecClammPool.algo.ts:1565","pc":[6074]},{"teal":6623,"source":"contracts\\BiatecClammPool.algo.ts:1565","pc":[6075]},{"teal":6624,"source":"contracts\\BiatecClammPool.algo.ts:1565","pc":[6076]},{"teal":6625,"source":"contracts\\BiatecClammPool.algo.ts:1565","pc":[6077]},{"teal":6628,"source":"contracts\\BiatecClammPool.algo.ts:1565","errorMessage":"argument 2 (priceMinSqrt) for calculateAssetAWithdrawOnAssetBDeposit must be a uint256","pc":[6078]},{"teal":6631,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[6079,6080,6081]},{"teal":6632,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[6082]},{"teal":6633,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[6083]},{"teal":6634,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[6084]},{"teal":6635,"source":"contracts\\BiatecClammPool.algo.ts:1564","pc":[6085]},{"teal":6638,"source":"contracts\\BiatecClammPool.algo.ts:1564","errorMessage":"argument 3 (assetBBalance) for calculateAssetAWithdrawOnAssetBDeposit must be a uint256","pc":[6086]},{"teal":6641,"source":"contracts\\BiatecClammPool.algo.ts:1563","pc":[6087,6088,6089]},{"teal":6642,"source":"contracts\\BiatecClammPool.algo.ts:1563","pc":[6090]},{"teal":6643,"source":"contracts\\BiatecClammPool.algo.ts:1563","pc":[6091]},{"teal":6644,"source":"contracts\\BiatecClammPool.algo.ts:1563","pc":[6092]},{"teal":6645,"source":"contracts\\BiatecClammPool.algo.ts:1563","pc":[6093]},{"teal":6648,"source":"contracts\\BiatecClammPool.algo.ts:1563","errorMessage":"argument 4 (assetABalance) for calculateAssetAWithdrawOnAssetBDeposit must be a uint256","pc":[6094]},{"teal":6651,"source":"contracts\\BiatecClammPool.algo.ts:1562","pc":[6095,6096,6097]},{"teal":6652,"source":"contracts\\BiatecClammPool.algo.ts:1562","pc":[6098]},{"teal":6653,"source":"contracts\\BiatecClammPool.algo.ts:1562","pc":[6099]},{"teal":6654,"source":"contracts\\BiatecClammPool.algo.ts:1562","pc":[6100]},{"teal":6655,"source":"contracts\\BiatecClammPool.algo.ts:1562","pc":[6101]},{"teal":6658,"source":"contracts\\BiatecClammPool.algo.ts:1562","errorMessage":"argument 5 (inAmount) for calculateAssetAWithdrawOnAssetBDeposit must be a uint256","pc":[6102]},{"teal":6661,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6103,6104,6105]},{"teal":6662,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6106]},{"teal":6663,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6107]},{"teal":6664,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6108]},{"teal":6665,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6109]},{"teal":6668,"source":"contracts\\BiatecClammPool.algo.ts:1560","errorMessage":"calculateAssetAWithdrawOnAssetBDeposit return value overflowed 256 bits","pc":[6110]},{"teal":6669,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6111]},{"teal":6670,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6112]},{"teal":6671,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6113]},{"teal":6672,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6114]},{"teal":6673,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6115]},{"teal":6674,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6116]},{"teal":6675,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6117]},{"teal":6676,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6118]},{"teal":6677,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6119]},{"teal":6678,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6120]},{"teal":6679,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6121]},{"teal":6680,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6122]},{"teal":6681,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6123]},{"teal":6695,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6124,6125,6126]},{"teal":6698,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6127]},{"teal":6699,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6128,6129]},{"teal":6704,"source":"contracts\\BiatecClammPool.algo.ts:1569","pc":[6130,6131]},{"teal":6705,"source":"contracts\\BiatecClammPool.algo.ts:1569","pc":[6132,6133]},{"teal":6706,"source":"contracts\\BiatecClammPool.algo.ts:1569","pc":[6134]},{"teal":6707,"source":"contracts\\BiatecClammPool.algo.ts:1569","pc":[6135,6136,6137]},{"teal":6712,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[6138,6139]},{"teal":6713,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6140]},{"teal":6714,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[6141]},{"teal":6715,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6142]},{"teal":6716,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[6143]},{"teal":6717,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[6144,6145]},{"teal":6718,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[6146]},{"teal":6719,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[6147,6148]},{"teal":6720,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[6149]},{"teal":6721,"source":"contracts\\BiatecClammPool.algo.ts:1570","pc":[6150,6151]},{"teal":6725,"source":"contracts\\BiatecClammPool.algo.ts:1571","pc":[6152,6153]},{"teal":6726,"source":"contracts\\BiatecClammPool.algo.ts:1571","pc":[6154,6155,6156]},{"teal":6731,"source":"contracts\\BiatecClammPool.algo.ts:1586","pc":[6157,6158]},{"teal":6732,"source":"contracts\\BiatecClammPool.algo.ts:1586","pc":[6159,6160]},{"teal":6736,"source":"contracts\\BiatecClammPool.algo.ts:1587","pc":[6161,6162]},{"teal":6737,"source":"contracts\\BiatecClammPool.algo.ts:1587","pc":[6163,6164]},{"teal":6741,"source":"contracts\\BiatecClammPool.algo.ts:1588","pc":[6165,6166]},{"teal":6742,"source":"contracts\\BiatecClammPool.algo.ts:1588","pc":[6167,6168]},{"teal":6746,"source":"contracts\\BiatecClammPool.algo.ts:1589","pc":[6169,6170]},{"teal":6747,"source":"contracts\\BiatecClammPool.algo.ts:1589","pc":[6171,6172]},{"teal":6751,"source":"contracts\\BiatecClammPool.algo.ts:1590","pc":[6173,6174]},{"teal":6752,"source":"contracts\\BiatecClammPool.algo.ts:1590","pc":[6175,6176]},{"teal":6756,"source":"contracts\\BiatecClammPool.algo.ts:1593","pc":[6177,6178]},{"teal":6757,"source":"contracts\\BiatecClammPool.algo.ts:1593","pc":[6179,6180]},{"teal":6758,"source":"contracts\\BiatecClammPool.algo.ts:1593","pc":[6181]},{"teal":6759,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6182]},{"teal":6760,"source":"contracts\\BiatecClammPool.algo.ts:1593","pc":[6183]},{"teal":6761,"source":"contracts\\BiatecClammPool.algo.ts:1593","pc":[6184,6185]},{"teal":6765,"source":"contracts\\BiatecClammPool.algo.ts:1595","pc":[6186,6187]},{"teal":6766,"source":"contracts\\BiatecClammPool.algo.ts:1595","pc":[6188,6189]},{"teal":6767,"source":"contracts\\BiatecClammPool.algo.ts:1595","pc":[6190]},{"teal":6768,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6191]},{"teal":6769,"source":"contracts\\BiatecClammPool.algo.ts:1595","pc":[6192]},{"teal":6770,"source":"contracts\\BiatecClammPool.algo.ts:1595","pc":[6193,6194]},{"teal":6771,"source":"contracts\\BiatecClammPool.algo.ts:1595","pc":[6195]},{"teal":6772,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6196]},{"teal":6773,"source":"contracts\\BiatecClammPool.algo.ts:1595","pc":[6197]},{"teal":6774,"source":"contracts\\BiatecClammPool.algo.ts:1595","pc":[6198,6199]},{"teal":6778,"source":"contracts\\BiatecClammPool.algo.ts:1597","pc":[6200,6201]},{"teal":6779,"source":"contracts\\BiatecClammPool.algo.ts:1597","pc":[6202,6203]},{"teal":6780,"source":"contracts\\BiatecClammPool.algo.ts:1597","pc":[6204]},{"teal":6781,"source":"contracts\\BiatecClammPool.algo.ts:1597","pc":[6205,6206]},{"teal":6785,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[6207,6208]},{"teal":6786,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[6209,6210]},{"teal":6787,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[6211]},{"teal":6788,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6212]},{"teal":6789,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[6213]},{"teal":6790,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[6214,6215]},{"teal":6791,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[6216]},{"teal":6792,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6217]},{"teal":6793,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[6218]},{"teal":6794,"source":"contracts\\BiatecClammPool.algo.ts:1599","pc":[6219,6220]},{"teal":6798,"source":"contracts\\BiatecClammPool.algo.ts:1601","pc":[6221,6222]},{"teal":6799,"source":"contracts\\BiatecClammPool.algo.ts:1601","pc":[6223,6224]},{"teal":6800,"source":"contracts\\BiatecClammPool.algo.ts:1601","pc":[6225]},{"teal":6801,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6226]},{"teal":6802,"source":"contracts\\BiatecClammPool.algo.ts:1601","pc":[6227]},{"teal":6803,"source":"contracts\\BiatecClammPool.algo.ts:1601","pc":[6228,6229]},{"teal":6807,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[6230,6231]},{"teal":6808,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[6232,6233]},{"teal":6809,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[6234]},{"teal":6810,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6235]},{"teal":6811,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[6236]},{"teal":6812,"source":"contracts\\BiatecClammPool.algo.ts:1603","pc":[6237,6238]},{"teal":6816,"source":"contracts\\BiatecClammPool.algo.ts:1605","pc":[6239,6240]},{"teal":6817,"source":"contracts\\BiatecClammPool.algo.ts:1605","pc":[6241,6242]},{"teal":6818,"source":"contracts\\BiatecClammPool.algo.ts:1605","pc":[6243]},{"teal":6819,"source":"contracts\\BiatecClammPool.algo.ts:1605","pc":[6244,6245]},{"teal":6820,"source":"contracts\\BiatecClammPool.algo.ts:1605","pc":[6246]},{"teal":6821,"source":"contracts\\BiatecClammPool.algo.ts:1605","pc":[6247,6248]},{"teal":6825,"source":"contracts\\BiatecClammPool.algo.ts:1607","pc":[6249,6250]},{"teal":6826,"source":"contracts\\BiatecClammPool.algo.ts:10","pc":[6251]},{"teal":6827,"source":"contracts\\BiatecClammPool.algo.ts:1607","pc":[6252]},{"teal":6828,"source":"contracts\\BiatecClammPool.algo.ts:1607","pc":[6253,6254]},{"teal":6829,"source":"contracts\\BiatecClammPool.algo.ts:1607","pc":[6255]},{"teal":6830,"source":"contracts\\BiatecClammPool.algo.ts:1607","pc":[6256,6257]},{"teal":6834,"source":"contracts\\BiatecClammPool.algo.ts:1608","pc":[6258,6259]},{"teal":6838,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6260,6261]},{"teal":6841,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6262,6263]},{"teal":6842,"source":"contracts\\BiatecClammPool.algo.ts:1560","pc":[6264]},{"teal":6847,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6265,6266]},{"teal":6850,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6267,6268,6269]},{"teal":6851,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6270]},{"teal":6852,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6271]},{"teal":6853,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6272]},{"teal":6854,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6273]},{"teal":6857,"source":"contracts\\BiatecClammPool.algo.ts:1620","errorMessage":"argument 0 (liquidity) for calculateAssetAWithdrawOnLpDeposit must be a uint256","pc":[6274]},{"teal":6860,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6275,6276,6277]},{"teal":6861,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6278]},{"teal":6862,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6279]},{"teal":6863,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6280]},{"teal":6864,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6281]},{"teal":6867,"source":"contracts\\BiatecClammPool.algo.ts:1620","errorMessage":"argument 1 (assetABalance) for calculateAssetAWithdrawOnLpDeposit must be a uint256","pc":[6282]},{"teal":6870,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6283,6284,6285]},{"teal":6871,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6286]},{"teal":6872,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6287]},{"teal":6873,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6288]},{"teal":6874,"source":"contracts\\BiatecClammPool.algo.ts:1620","pc":[6289]},{"teal":6877,"source":"contracts\\BiatecClammPool.algo.ts:1620","errorMessage":"argument 2 (inAmount) for calculateAssetAWithdrawOnLpDeposit must be a uint256","pc":[6290]},{"teal":6880,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6291,6292,6293]},{"teal":6881,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6294]},{"teal":6882,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6295]},{"teal":6883,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6296]},{"teal":6884,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6297]},{"teal":6887,"source":"contracts\\BiatecClammPool.algo.ts:1619","errorMessage":"calculateAssetAWithdrawOnLpDeposit return value overflowed 256 bits","pc":[6298]},{"teal":6888,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6299]},{"teal":6889,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6300]},{"teal":6890,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6301]},{"teal":6891,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6302]},{"teal":6892,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6303]},{"teal":6893,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6304]},{"teal":6894,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6305]},{"teal":6895,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6306]},{"teal":6896,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6307]},{"teal":6897,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6308]},{"teal":6898,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6309]},{"teal":6899,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6310]},{"teal":6900,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6311]},{"teal":6911,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6312,6313,6314]},{"teal":6914,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6315]},{"teal":6918,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[6316,6317]},{"teal":6919,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[6318,6319]},{"teal":6920,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[6320]},{"teal":6921,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[6321,6322]},{"teal":6922,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[6323]},{"teal":6923,"source":"contracts\\BiatecClammPool.algo.ts:1624","pc":[6324,6325]},{"teal":6927,"source":"contracts\\BiatecClammPool.algo.ts:1625","pc":[6326,6327]},{"teal":6930,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6328,6329]},{"teal":6931,"source":"contracts\\BiatecClammPool.algo.ts:1619","pc":[6330]},{"teal":6936,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6331,6332]},{"teal":6939,"source":"contracts\\BiatecClammPool.algo.ts:1645","pc":[6333,6334,6335]},{"teal":6940,"source":"contracts\\BiatecClammPool.algo.ts:1645","pc":[6336]},{"teal":6941,"source":"contracts\\BiatecClammPool.algo.ts:1645","pc":[6337]},{"teal":6942,"source":"contracts\\BiatecClammPool.algo.ts:1645","pc":[6338]},{"teal":6943,"source":"contracts\\BiatecClammPool.algo.ts:1645","pc":[6339]},{"teal":6946,"source":"contracts\\BiatecClammPool.algo.ts:1645","errorMessage":"argument 0 (assetBBalance) for calculateAssetBDepositOnAssetADeposit must be a uint256","pc":[6340]},{"teal":6949,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[6341,6342,6343]},{"teal":6950,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[6344]},{"teal":6951,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[6345]},{"teal":6952,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[6346]},{"teal":6953,"source":"contracts\\BiatecClammPool.algo.ts:1644","pc":[6347]},{"teal":6956,"source":"contracts\\BiatecClammPool.algo.ts:1644","errorMessage":"argument 1 (assetABalance) for calculateAssetBDepositOnAssetADeposit must be a uint256","pc":[6348]},{"teal":6959,"source":"contracts\\BiatecClammPool.algo.ts:1643","pc":[6349,6350,6351]},{"teal":6960,"source":"contracts\\BiatecClammPool.algo.ts:1643","pc":[6352]},{"teal":6961,"source":"contracts\\BiatecClammPool.algo.ts:1643","pc":[6353]},{"teal":6962,"source":"contracts\\BiatecClammPool.algo.ts:1643","pc":[6354]},{"teal":6963,"source":"contracts\\BiatecClammPool.algo.ts:1643","pc":[6355]},{"teal":6966,"source":"contracts\\BiatecClammPool.algo.ts:1643","errorMessage":"argument 2 (inAmountB) for calculateAssetBDepositOnAssetADeposit must be a uint256","pc":[6356]},{"teal":6969,"source":"contracts\\BiatecClammPool.algo.ts:1642","pc":[6357,6358,6359]},{"teal":6970,"source":"contracts\\BiatecClammPool.algo.ts:1642","pc":[6360]},{"teal":6971,"source":"contracts\\BiatecClammPool.algo.ts:1642","pc":[6361]},{"teal":6972,"source":"contracts\\BiatecClammPool.algo.ts:1642","pc":[6362]},{"teal":6973,"source":"contracts\\BiatecClammPool.algo.ts:1642","pc":[6363]},{"teal":6976,"source":"contracts\\BiatecClammPool.algo.ts:1642","errorMessage":"argument 3 (inAmountA) for calculateAssetBDepositOnAssetADeposit must be a uint256","pc":[6364]},{"teal":6979,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6365,6366,6367]},{"teal":6980,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6368]},{"teal":6981,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6369]},{"teal":6982,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6370]},{"teal":6983,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6371]},{"teal":6986,"source":"contracts\\BiatecClammPool.algo.ts:1640","errorMessage":"calculateAssetBDepositOnAssetADeposit return value overflowed 256 bits","pc":[6372]},{"teal":6987,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6373]},{"teal":6988,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6374]},{"teal":6989,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6375]},{"teal":6990,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6376]},{"teal":6991,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6377]},{"teal":6992,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6378]},{"teal":6993,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6379]},{"teal":6994,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6380]},{"teal":6995,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6381]},{"teal":6996,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6382]},{"teal":6997,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6383]},{"teal":6998,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6384]},{"teal":6999,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6385]},{"teal":7014,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6386,6387,6388]},{"teal":7019,"source":"contracts\\BiatecClammPool.algo.ts:1647","pc":[6389,6390]},{"teal":7020,"source":"contracts\\BiatecClammPool.algo.ts:1647","pc":[6391,6392]},{"teal":7021,"source":"contracts\\BiatecClammPool.algo.ts:1647","pc":[6393]},{"teal":7022,"source":"contracts\\BiatecClammPool.algo.ts:1647","pc":[6394,6395,6396]},{"teal":7027,"source":"contracts\\BiatecClammPool.algo.ts:1648","pc":[6397,6398]},{"teal":7028,"source":"contracts\\BiatecClammPool.algo.ts:1648","pc":[6399,6400]},{"teal":7029,"source":"contracts\\BiatecClammPool.algo.ts:1648","pc":[6401]},{"teal":7030,"source":"contracts\\BiatecClammPool.algo.ts:1648","pc":[6402,6403]},{"teal":7031,"source":"contracts\\BiatecClammPool.algo.ts:1648","pc":[6404]},{"teal":7032,"source":"contracts\\BiatecClammPool.algo.ts:1648","pc":[6405]},{"teal":7037,"source":"contracts\\BiatecClammPool.algo.ts:1651","pc":[6406,6407]},{"teal":7038,"source":"contracts\\BiatecClammPool.algo.ts:1640","pc":[6408]},{"teal":7043,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6409,6410]},{"teal":7046,"source":"contracts\\BiatecClammPool.algo.ts:1671","pc":[6411,6412,6413]},{"teal":7047,"source":"contracts\\BiatecClammPool.algo.ts:1671","pc":[6414]},{"teal":7048,"source":"contracts\\BiatecClammPool.algo.ts:1671","pc":[6415]},{"teal":7049,"source":"contracts\\BiatecClammPool.algo.ts:1671","pc":[6416]},{"teal":7050,"source":"contracts\\BiatecClammPool.algo.ts:1671","pc":[6417]},{"teal":7053,"source":"contracts\\BiatecClammPool.algo.ts:1671","errorMessage":"argument 0 (assetBBalance) for calculateAssetADepositOnAssetBDeposit must be a uint256","pc":[6418]},{"teal":7056,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[6419,6420,6421]},{"teal":7057,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[6422]},{"teal":7058,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[6423]},{"teal":7059,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[6424]},{"teal":7060,"source":"contracts\\BiatecClammPool.algo.ts:1670","pc":[6425]},{"teal":7063,"source":"contracts\\BiatecClammPool.algo.ts:1670","errorMessage":"argument 1 (assetABalance) for calculateAssetADepositOnAssetBDeposit must be a uint256","pc":[6426]},{"teal":7066,"source":"contracts\\BiatecClammPool.algo.ts:1669","pc":[6427,6428,6429]},{"teal":7067,"source":"contracts\\BiatecClammPool.algo.ts:1669","pc":[6430]},{"teal":7068,"source":"contracts\\BiatecClammPool.algo.ts:1669","pc":[6431]},{"teal":7069,"source":"contracts\\BiatecClammPool.algo.ts:1669","pc":[6432]},{"teal":7070,"source":"contracts\\BiatecClammPool.algo.ts:1669","pc":[6433]},{"teal":7073,"source":"contracts\\BiatecClammPool.algo.ts:1669","errorMessage":"argument 2 (inAmountB) for calculateAssetADepositOnAssetBDeposit must be a uint256","pc":[6434]},{"teal":7076,"source":"contracts\\BiatecClammPool.algo.ts:1668","pc":[6435,6436,6437]},{"teal":7077,"source":"contracts\\BiatecClammPool.algo.ts:1668","pc":[6438]},{"teal":7078,"source":"contracts\\BiatecClammPool.algo.ts:1668","pc":[6439]},{"teal":7079,"source":"contracts\\BiatecClammPool.algo.ts:1668","pc":[6440]},{"teal":7080,"source":"contracts\\BiatecClammPool.algo.ts:1668","pc":[6441]},{"teal":7083,"source":"contracts\\BiatecClammPool.algo.ts:1668","errorMessage":"argument 3 (inAmountA) for calculateAssetADepositOnAssetBDeposit must be a uint256","pc":[6442]},{"teal":7086,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6443,6444,6445]},{"teal":7087,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6446]},{"teal":7088,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6447]},{"teal":7089,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6448]},{"teal":7090,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6449]},{"teal":7093,"source":"contracts\\BiatecClammPool.algo.ts:1666","errorMessage":"calculateAssetADepositOnAssetBDeposit return value overflowed 256 bits","pc":[6450]},{"teal":7094,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6451]},{"teal":7095,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6452]},{"teal":7096,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6453]},{"teal":7097,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6454]},{"teal":7098,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6455]},{"teal":7099,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6456]},{"teal":7100,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6457]},{"teal":7101,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6458]},{"teal":7102,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6459]},{"teal":7103,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6460]},{"teal":7104,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6461]},{"teal":7105,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6462]},{"teal":7106,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6463]},{"teal":7121,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6464,6465,6466]},{"teal":7126,"source":"contracts\\BiatecClammPool.algo.ts:1673","pc":[6467,6468]},{"teal":7127,"source":"contracts\\BiatecClammPool.algo.ts:1673","pc":[6469,6470]},{"teal":7128,"source":"contracts\\BiatecClammPool.algo.ts:1673","pc":[6471]},{"teal":7129,"source":"contracts\\BiatecClammPool.algo.ts:1673","pc":[6472,6473,6474]},{"teal":7134,"source":"contracts\\BiatecClammPool.algo.ts:1674","pc":[6475,6476]},{"teal":7135,"source":"contracts\\BiatecClammPool.algo.ts:1674","pc":[6477,6478]},{"teal":7136,"source":"contracts\\BiatecClammPool.algo.ts:1674","pc":[6479]},{"teal":7137,"source":"contracts\\BiatecClammPool.algo.ts:1674","pc":[6480,6481]},{"teal":7138,"source":"contracts\\BiatecClammPool.algo.ts:1674","pc":[6482]},{"teal":7139,"source":"contracts\\BiatecClammPool.algo.ts:1674","pc":[6483]},{"teal":7144,"source":"contracts\\BiatecClammPool.algo.ts:1677","pc":[6484,6485]},{"teal":7145,"source":"contracts\\BiatecClammPool.algo.ts:1666","pc":[6486]},{"teal":7150,"source":"contracts\\BiatecClammPool.algo.ts:1680","pc":[6487,6488]},{"teal":7153,"source":"contracts\\BiatecClammPool.algo.ts:1681","pc":[6489,6490,6491]},{"teal":7154,"source":"contracts\\BiatecClammPool.algo.ts:1681","pc":[6492]},{"teal":7157,"source":"contracts\\BiatecClammPool.algo.ts:1681","pc":[6493,6494,6495]},{"teal":7158,"source":"contracts\\BiatecClammPool.algo.ts:1681","pc":[6496]},{"teal":7161,"source":"contracts\\BiatecClammPool.algo.ts:1681","pc":[6497,6498,6499]},{"teal":7162,"source":"contracts\\BiatecClammPool.algo.ts:1681","pc":[6500]},{"teal":7165,"source":"contracts\\BiatecClammPool.algo.ts:1681","pc":[6501,6502,6503]},{"teal":7166,"source":"contracts\\BiatecClammPool.algo.ts:1681","pc":[6504]},{"teal":7169,"source":"contracts\\BiatecClammPool.algo.ts:1680","pc":[6505,6506,6507]},{"teal":7170,"source":"contracts\\BiatecClammPool.algo.ts:1680","pc":[6508]},{"teal":7171,"source":"contracts\\BiatecClammPool.algo.ts:1680","pc":[6509]},{"teal":7172,"source":"contracts\\BiatecClammPool.algo.ts:1680","pc":[6510]},{"teal":7173,"source":"contracts\\BiatecClammPool.algo.ts:1680","pc":[6511]},{"teal":7177,"source":"contracts\\BiatecClammPool.algo.ts:1680","pc":[6512,6513,6514]},{"teal":7180,"source":"contracts\\BiatecClammPool.algo.ts:1680","pc":[6515]},{"teal":7181,"source":"contracts\\BiatecClammPool.algo.ts:1680","pc":[6516,6517]},{"teal":7188,"source":"contracts\\BiatecClammPool.algo.ts:1683","pc":[6518,6519]},{"teal":7189,"source":"contracts\\BiatecClammPool.algo.ts:1683","pc":[6520,6521]},{"teal":7190,"source":"contracts\\BiatecClammPool.algo.ts:1683","pc":[6522]},{"teal":7191,"source":"contracts\\BiatecClammPool.algo.ts:1683","pc":[6523]},{"teal":7194,"source":"contracts\\BiatecClammPool.algo.ts:1682","errorMessage":"E_CONFIG","pc":[6524]},{"teal":7198,"source":"contracts\\BiatecClammPool.algo.ts:1686","pc":[6525,6526]},{"teal":7199,"source":"contracts\\BiatecClammPool.algo.ts:1686","pc":[6527,6528]},{"teal":7200,"source":"contracts\\BiatecClammPool.algo.ts:1686","pc":[6529]},{"teal":7201,"source":"contracts\\BiatecClammPool.algo.ts:1686","pc":[6530]},{"teal":7202,"source":"contracts\\BiatecClammPool.algo.ts:1686","pc":[6531]},{"teal":7206,"source":"contracts\\BiatecClammPool.algo.ts:1687","pc":[6532,6533]},{"teal":7207,"source":"contracts\\BiatecClammPool.algo.ts:1687","pc":[6534,6535]},{"teal":7208,"source":"contracts\\BiatecClammPool.algo.ts:1687","pc":[6536]},{"teal":7209,"source":"contracts\\BiatecClammPool.algo.ts:1687","pc":[6537]},{"teal":7210,"source":"contracts\\BiatecClammPool.algo.ts:1687","pc":[6538]},{"teal":7214,"source":"contracts\\BiatecClammPool.algo.ts:1688","pc":[6539,6540]},{"teal":7215,"source":"contracts\\BiatecClammPool.algo.ts:1688","pc":[6541]},{"teal":7216,"source":"contracts\\BiatecClammPool.algo.ts:1688","pc":[6542,6543]},{"teal":7217,"source":"contracts\\BiatecClammPool.algo.ts:1688","pc":[6544]},{"teal":7220,"source":"contracts\\BiatecClammPool.algo.ts:1688","errorMessage":"E_LP","pc":[6545]},{"teal":7224,"source":"contracts\\BiatecClammPool.algo.ts:1689","pc":[6546,6547]},{"teal":7225,"source":"contracts\\BiatecClammPool.algo.ts:1689","pc":[6548]},{"teal":7226,"source":"contracts\\BiatecClammPool.algo.ts:1689","pc":[6549,6550]},{"teal":7227,"source":"contracts\\BiatecClammPool.algo.ts:1689","pc":[6551]},{"teal":7230,"source":"contracts\\BiatecClammPool.algo.ts:1689","errorMessage":"global state value does not exist: this.appBiatecConfigProvider.value.globalState('f')","pc":[6552]},{"teal":7231,"source":"contracts\\BiatecClammPool.algo.ts:1689","pc":[6553,6554]},{"teal":7238,"source":"contracts\\BiatecClammPool.algo.ts:1691","pc":[6555,6556]},{"teal":7239,"source":"contracts\\BiatecClammPool.algo.ts:1691","pc":[6557]},{"teal":7240,"source":"contracts\\BiatecClammPool.algo.ts:1691","pc":[6558]},{"teal":7241,"source":"contracts\\BiatecClammPool.algo.ts:1691","pc":[6559,6560,6561]},{"teal":7242,"source":"contracts\\BiatecClammPool.algo.ts:1692","pc":[6562,6563]},{"teal":7243,"source":"contracts\\BiatecClammPool.algo.ts:1692","pc":[6564,6565]},{"teal":7244,"source":"contracts\\BiatecClammPool.algo.ts:1692","pc":[6566]},{"teal":7245,"source":"contracts\\BiatecClammPool.algo.ts:1692","pc":[6567,6568]},{"teal":7246,"source":"contracts\\BiatecClammPool.algo.ts:1692","pc":[6569,6570]},{"teal":7247,"source":"contracts\\BiatecClammPool.algo.ts:1692","pc":[6571]},{"teal":7248,"source":"contracts\\BiatecClammPool.algo.ts:1692","pc":[6572]},{"teal":7249,"source":"contracts\\BiatecClammPool.algo.ts:1691","pc":[6573,6574,6575]},{"teal":7252,"source":"contracts\\BiatecClammPool.algo.ts:1693","pc":[6576,6577]},{"teal":7253,"source":"contracts\\BiatecClammPool.algo.ts:1693","pc":[6578,6579]},{"teal":7254,"source":"contracts\\BiatecClammPool.algo.ts:1693","pc":[6580,6581]},{"teal":7255,"source":"contracts\\BiatecClammPool.algo.ts:1693","pc":[6582]},{"teal":7258,"source":"contracts\\BiatecClammPool.algo.ts:1690","pc":[6583,6584]},{"teal":7265,"source":"contracts\\BiatecClammPool.algo.ts:1695","pc":[6585,6586]},{"teal":7266,"source":"contracts\\BiatecClammPool.algo.ts:1695","pc":[6587]},{"teal":7267,"source":"contracts\\BiatecClammPool.algo.ts:1695","pc":[6588]},{"teal":7268,"source":"contracts\\BiatecClammPool.algo.ts:1695","pc":[6589,6590,6591]},{"teal":7269,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[6592,6593]},{"teal":7270,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[6594,6595]},{"teal":7271,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[6596]},{"teal":7272,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[6597,6598]},{"teal":7273,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[6599,6600]},{"teal":7274,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[6601]},{"teal":7275,"source":"contracts\\BiatecClammPool.algo.ts:1696","pc":[6602]},{"teal":7276,"source":"contracts\\BiatecClammPool.algo.ts:1695","pc":[6603,6604,6605]},{"teal":7279,"source":"contracts\\BiatecClammPool.algo.ts:1697","pc":[6606,6607]},{"teal":7280,"source":"contracts\\BiatecClammPool.algo.ts:1697","pc":[6608,6609]},{"teal":7281,"source":"contracts\\BiatecClammPool.algo.ts:1697","pc":[6610,6611]},{"teal":7282,"source":"contracts\\BiatecClammPool.algo.ts:1697","pc":[6612]},{"teal":7285,"source":"contracts\\BiatecClammPool.algo.ts:1694","pc":[6613,6614]},{"teal":7308,"source":"contracts\\BiatecClammPool.algo.ts:1715","pc":[6615,6616]},{"teal":7309,"source":"contracts\\BiatecClammPool.algo.ts:1702","pc":[6617]},{"teal":7310,"source":"contracts\\BiatecClammPool.algo.ts:1702","pc":[6618]},{"teal":7311,"source":"contracts\\BiatecClammPool.algo.ts:1702","pc":[6619]},{"teal":7312,"source":"contracts\\BiatecClammPool.algo.ts:1702","pc":[6620]},{"teal":7313,"source":"contracts\\BiatecClammPool.algo.ts:1702","pc":[6621,6622]},{"teal":7314,"source":"contracts\\BiatecClammPool.algo.ts:1702","pc":[6623]},{"teal":7317,"source":"contracts\\BiatecClammPool.algo.ts:1702","errorMessage":"this.assetABalanceBaseScale.value as uint64 overflowed 64 bits","pc":[6624]},{"teal":7318,"source":"contracts\\BiatecClammPool.algo.ts:1702","pc":[6625,6626,6627]},{"teal":7319,"source":"contracts\\BiatecClammPool.algo.ts:1702","pc":[6628]},{"teal":7320,"source":"contracts\\BiatecClammPool.algo.ts:1702","pc":[6629]},{"teal":7321,"source":"contracts\\BiatecClammPool.algo.ts:1702","pc":[6630]},{"teal":7322,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[6631,6632]},{"teal":7323,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[6633]},{"teal":7324,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[6634]},{"teal":7325,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[6635]},{"teal":7326,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[6636,6637]},{"teal":7327,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[6638]},{"teal":7330,"source":"contracts\\BiatecClammPool.algo.ts:1703","errorMessage":"this.assetBBalanceBaseScale.value as uint64 overflowed 64 bits","pc":[6639]},{"teal":7331,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[6640,6641,6642]},{"teal":7332,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[6643]},{"teal":7333,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[6644]},{"teal":7334,"source":"contracts\\BiatecClammPool.algo.ts:1703","pc":[6645]},{"teal":7335,"source":"contracts\\BiatecClammPool.algo.ts:1704","pc":[6646,6647]},{"teal":7336,"source":"contracts\\BiatecClammPool.algo.ts:1704","pc":[6648]},{"teal":7337,"source":"contracts\\BiatecClammPool.algo.ts:1704","pc":[6649]},{"teal":7338,"source":"contracts\\BiatecClammPool.algo.ts:1705","pc":[6650,6651]},{"teal":7339,"source":"contracts\\BiatecClammPool.algo.ts:1705","pc":[6652]},{"teal":7340,"source":"contracts\\BiatecClammPool.algo.ts:1705","pc":[6653]},{"teal":7341,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[6654,6655]},{"teal":7342,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[6656]},{"teal":7343,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[6657]},{"teal":7344,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[6658]},{"teal":7345,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[6659,6660]},{"teal":7346,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[6661]},{"teal":7349,"source":"contracts\\BiatecClammPool.algo.ts:1713","errorMessage":"this.priceMinSqrt.value as uint64 overflowed 64 bits","pc":[6662]},{"teal":7350,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[6663,6664,6665]},{"teal":7351,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[6666]},{"teal":7352,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[6667]},{"teal":7353,"source":"contracts\\BiatecClammPool.algo.ts:1713","pc":[6668]},{"teal":7354,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[6669,6670]},{"teal":7355,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[6671]},{"teal":7356,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[6672]},{"teal":7357,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[6673]},{"teal":7358,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[6674,6675]},{"teal":7359,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[6676]},{"teal":7362,"source":"contracts\\BiatecClammPool.algo.ts:1712","errorMessage":"this.priceMaxSqrt.value as uint64 overflowed 64 bits","pc":[6677]},{"teal":7363,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[6678,6679,6680]},{"teal":7364,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[6681]},{"teal":7365,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[6682]},{"teal":7366,"source":"contracts\\BiatecClammPool.algo.ts:1712","pc":[6683]},{"teal":7367,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[6684,6685]},{"teal":7368,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[6686]},{"teal":7369,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[6687]},{"teal":7370,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[6688]},{"teal":7371,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[6689,6690]},{"teal":7372,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[6691]},{"teal":7375,"source":"contracts\\BiatecClammPool.algo.ts:1708","errorMessage":"this.Liquidity.value as uint64 overflowed 64 bits","pc":[6692]},{"teal":7376,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[6693,6694,6695]},{"teal":7377,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[6696]},{"teal":7378,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[6697]},{"teal":7379,"source":"contracts\\BiatecClammPool.algo.ts:1708","pc":[6698]},{"teal":7380,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6699,6700]},{"teal":7381,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6701,6702]},{"teal":7382,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6703,6704,6705]},{"teal":7383,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6706]},{"teal":7384,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6707]},{"teal":7385,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6708,6709]},{"teal":7386,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6710]},{"teal":7389,"source":"contracts\\BiatecClammPool.algo.ts:1714","errorMessage":"this.calculateDistributedLiquidity(assetLp, <uint256>0) as uint64 overflowed 64 bits","pc":[6711]},{"teal":7390,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6712,6713]},{"teal":7391,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6714]},{"teal":7392,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6715]},{"teal":7393,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6716]},{"teal":7394,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6717]},{"teal":7395,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6718,6719]},{"teal":7396,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6720]},{"teal":7397,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6721]},{"teal":7398,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6722]},{"teal":7399,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6723]},{"teal":7400,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6724]},{"teal":7401,"source":"contracts\\BiatecClammPool.algo.ts:1714","pc":[6725]},{"teal":7402,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[6726,6727]},{"teal":7403,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[6728]},{"teal":7404,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[6729]},{"teal":7405,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[6730]},{"teal":7406,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[6731,6732]},{"teal":7407,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[6733]},{"teal":7410,"source":"contracts\\BiatecClammPool.algo.ts:1710","errorMessage":"this.LiquidityUsersFromFees.value as uint64 overflowed 64 bits","pc":[6734]},{"teal":7411,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[6735,6736,6737]},{"teal":7412,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[6738]},{"teal":7413,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[6739]},{"teal":7414,"source":"contracts\\BiatecClammPool.algo.ts:1710","pc":[6740]},{"teal":7415,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[6741,6742]},{"teal":7416,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[6743]},{"teal":7417,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[6744]},{"teal":7418,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[6745]},{"teal":7419,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[6746,6747]},{"teal":7420,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[6748]},{"teal":7423,"source":"contracts\\BiatecClammPool.algo.ts:1709","errorMessage":"this.LiquidityBiatecFromFees.value as uint64 overflowed 64 bits","pc":[6749]},{"teal":7424,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[6750,6751,6752]},{"teal":7425,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[6753]},{"teal":7426,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[6754]},{"teal":7427,"source":"contracts\\BiatecClammPool.algo.ts:1709","pc":[6755]},{"teal":7428,"source":"contracts\\BiatecClammPool.algo.ts:1699","pc":[6756,6757]},{"teal":7429,"source":"contracts\\BiatecClammPool.algo.ts:1699","pc":[6758]},{"teal":7430,"source":"contracts\\BiatecClammPool.algo.ts:1699","pc":[6759]},{"teal":7431,"source":"contracts\\BiatecClammPool.algo.ts:1699","pc":[6760]},{"teal":7432,"source":"contracts\\BiatecClammPool.algo.ts:1700","pc":[6761,6762]},{"teal":7433,"source":"contracts\\BiatecClammPool.algo.ts:1700","pc":[6763]},{"teal":7434,"source":"contracts\\BiatecClammPool.algo.ts:1700","pc":[6764]},{"teal":7435,"source":"contracts\\BiatecClammPool.algo.ts:1700","pc":[6765]},{"teal":7436,"source":"contracts\\BiatecClammPool.algo.ts:1701","pc":[6766,6767]},{"teal":7437,"source":"contracts\\BiatecClammPool.algo.ts:1701","pc":[6768]},{"teal":7438,"source":"contracts\\BiatecClammPool.algo.ts:1701","pc":[6769]},{"teal":7439,"source":"contracts\\BiatecClammPool.algo.ts:1701","pc":[6770]},{"teal":7440,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[6771,6772]},{"teal":7441,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[6773]},{"teal":7442,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[6774]},{"teal":7443,"source":"contracts\\BiatecClammPool.algo.ts:1711","pc":[6775]},{"teal":7444,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[6776,6777]},{"teal":7445,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[6778]},{"teal":7446,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[6779]},{"teal":7447,"source":"contracts\\BiatecClammPool.algo.ts:1706","pc":[6780]},{"teal":7448,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[6781,6782]},{"teal":7449,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[6783]},{"teal":7450,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[6784]},{"teal":7451,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[6785,6786]},{"teal":7452,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[6787]},{"teal":7455,"source":"contracts\\BiatecClammPool.algo.ts:1707","errorMessage":"biatecFee as uint64 overflowed 64 bits","pc":[6788]},{"teal":7456,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[6789,6790,6791]},{"teal":7457,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[6792]},{"teal":7458,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[6793]},{"teal":7459,"source":"contracts\\BiatecClammPool.algo.ts:1707","pc":[6794]},{"teal":7460,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[6795,6796]},{"teal":7461,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[6797]},{"teal":7462,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[6798]},{"teal":7463,"source":"contracts\\BiatecClammPool.algo.ts:1716","pc":[6799]},{"teal":7466,"source":"contracts\\BiatecClammPool.algo.ts:1680","pc":[6800,6801]},{"teal":7469,"source":"contracts\\BiatecClammPool.algo.ts:1680","pc":[6802,6803]},{"teal":7470,"source":"contracts\\BiatecClammPool.algo.ts:1680","pc":[6804]},{"teal":7473,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6805,6806,6807,6808,6809,6810]},{"teal":7474,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6811,6812,6813]},{"teal":7475,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6814,6815,6816,6817]},{"teal":7478,"source":"contracts\\BiatecClammPool.algo.ts:36","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[6818]},{"teal":7481,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6819,6820,6821,6822,6823,6824]},{"teal":7482,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6825,6826,6827,6828,6829,6830]},{"teal":7483,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6831,6832,6833,6834,6835,6836]},{"teal":7484,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6837,6838,6839,6840,6841,6842]},{"teal":7485,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6843,6844,6845,6846,6847,6848]},{"teal":7486,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6849,6850,6851,6852,6853,6854]},{"teal":7487,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6855,6856,6857,6858,6859,6860]},{"teal":7488,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6861,6862,6863,6864,6865,6866]},{"teal":7489,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6867,6868,6869,6870,6871,6872]},{"teal":7490,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6873,6874,6875,6876,6877,6878]},{"teal":7491,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6879,6880,6881,6882,6883,6884]},{"teal":7492,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6885,6886,6887,6888,6889,6890]},{"teal":7493,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6891,6892,6893,6894,6895,6896]},{"teal":7494,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6897,6898,6899,6900,6901,6902]},{"teal":7495,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6903,6904,6905,6906,6907,6908]},{"teal":7496,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6909,6910,6911,6912,6913,6914]},{"teal":7497,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6915,6916,6917,6918,6919,6920]},{"teal":7498,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6921,6922,6923,6924,6925,6926]},{"teal":7499,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6927,6928,6929,6930,6931,6932]},{"teal":7500,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6933,6934,6935,6936,6937,6938]},{"teal":7501,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6939,6940,6941,6942,6943,6944]},{"teal":7502,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6945,6946,6947,6948,6949,6950]},{"teal":7503,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6951,6952,6953,6954,6955,6956]},{"teal":7504,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6957,6958,6959]},{"teal":7505,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[6960,6961,6962,6963,6964,6965,6966,6967,6968,6969,6970,6971,6972,6973,6974,6975,6976,6977,6978,6979,6980,6981,6982,6983,6984,6985,6986,6987,6988,6989,6990,6991,6992,6993,6994,6995,6996,6997,6998,6999,7000,7001,7002,7003,7004,7005,7006,7007]},{"teal":7508,"source":"contracts\\BiatecClammPool.algo.ts:36","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[7008]},{"teal":7511,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7009,7010,7011,7012,7013,7014]},{"teal":7512,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7015,7016,7017]},{"teal":7513,"source":"contracts\\BiatecClammPool.algo.ts:36","pc":[7018,7019,7020,7021]},{"teal":7516,"source":"contracts\\BiatecClammPool.algo.ts:36","errorMessage":"this contract does not implement the given ABI method for call UpdateApplication","pc":[7022]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":3,"patch":0,"commitHash":"3e5d694b+"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


// Type definitions for ARC-56 structs

export type AmmStatus = {
  scale: bigint,
  assetABalance: bigint,
  assetBBalance: bigint,
  realABalance: bigint,
  realBBalance: bigint,
  priceMinSqrt: bigint,
  priceMaxSqrt: bigint,
  currentLiquidity: bigint,
  releasedLiquidity: bigint,
  liquidityUsersFromFees: bigint,
  liquidityBiatecFromFees: bigint,
  assetA: bigint,
  assetB: bigint,
  poolToken: bigint,
  price: bigint,
  fee: bigint,
  biatecFee: bigint,
  verificationClass: bigint
}


/**
 * Converts the ABI tuple representation of a AmmStatus to the struct representation
 */
export function AmmStatusFromTuple(abiTuple: [bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint]) {
  return getABIStructFromABITuple(abiTuple, APP_SPEC.structs.AmmStatus, APP_SPEC.structs) as AmmStatus
}

/**
 * The argument types for the BiatecClammPool contract
 */
export type BiatecClammPoolArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'updateApplication(uint64,byte[])void': {
      appBiatecConfigProvider: bigint | number
      newVersion: Uint8Array
    }
    'getCurrentPrice()uint64': Record<string, never>
    'getPriceDivider()uint64': Record<string, never>
    'getLPTokenId()uint64': Record<string, never>
    'bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64': {
      /**
       * Asset A ID must be lower then Asset B ID
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      /**
       * Biatec amm provider
       */
      appBiatecConfigProvider: bigint | number
      /**
       * Pool provider
       */
      appBiatecPoolProvider: bigint | number
      /**
       * Seed transaction so that smart contract can opt in to the assets
       */
      txSeed: AppMethodCallTransactionArgument
      /**
       * Fee in base level (9 decimals). value 1_000_000_000 = 1 = 100%. 10_000_000 = 1%. 1_000_000 = 0.1%
       */
      fee: bigint | number
      /**
       * Min price range. At this point all assets are in asset A.
       */
      priceMin: bigint | number
      /**
       * Max price range. At this point all assets are in asset B.
       */
      priceMax: bigint | number
      /**
       * Deployer can specify the current price for easier deployemnt.
       */
      currentPrice: bigint | number
      /**
       * Minimum verification level from the biatec identity. Level 0 means no kyc.
       */
      verificationClass: bigint | number
    }
    'bootstrapStep2()void': Record<string, never>
    'addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64': {
      /**
       * Configuration reference
       */
      appBiatecConfigProvider: bigint | number
      /**
       * Identity service reference
       */
      appBiatecIdentityProvider: bigint | number
      /**
       * Transfer of asset A to the LP pool
       */
      txAssetADeposit?: AppMethodCallTransactionArgument
      /**
       * Transfer of asset B to the LP pool
       */
      txAssetBDeposit: AppMethodCallTransactionArgument
      /**
       * Asset A
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      /**
       * Liquidity pool asset
       */
      assetLp: bigint | number
    }
    'removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256': {
      /**
       * Configuration reference
       */
      appBiatecConfigProvider: bigint | number
      /**
       * Identity service reference
       */
      appBiatecIdentityProvider: bigint | number
      /**
       * Transfer of the LP token
       */
      txLpXfer: AppMethodCallTransactionArgument
      /**
       * Asset A
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      /**
       * LP pool asset
       */
      assetLp: bigint | number
    }
    'removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256': {
      /**
       * Biatec config app. Only addressExecutiveFee is allowed to execute this method.
       */
      appBiatecConfigProvider: bigint | number
      /**
       * Asset A
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      assetLp: bigint | number
      /**
       * Amount to withdraw. If zero, removes all available lps from fees.
       */
      amount: bigint | number
    }
    'swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256': {
      appBiatecConfigProvider: bigint | number
      appBiatecIdentityProvider: bigint | number
      appBiatecPoolProvider: bigint | number
      /**
       * Transfer of the token to be deposited to the pool. To the owner the other asset will be sent.
       */
      txSwap: AppMethodCallTransactionArgument
      /**
       * Asset A
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      /**
       * If number greater then zero, the check is performed for the output of the other asset
       */
      minimumToReceive: bigint | number
    }
    'distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256': {
      /**
       * Biatec config app. Only addressExecutiveFee is allowed to execute this method.
       */
      appBiatecConfigProvider: bigint | number
      /**
       * Asset A
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      /**
       * Amount of asset A to be deposited to the liquidity. In base decimals (9)
       */
      amountA: bigint | number
      /**
       * Amount of asset B to be deposited to the liquidity. In base decimals (9)
       */
      amountB: bigint | number
    }
    'withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64': {
      /**
       * Biatec config app. Only addressExecutiveFee is allowed to execute this method.
       */
      appBiatecConfigProvider: bigint | number
      /**
       * Asset A
       */
      assetA: bigint | number
      /**
       * Asset B
       */
      assetB: bigint | number
      /**
       * Amount of asset A to be deposited to the liquidity. In asset a decimals
       */
      amountA: bigint | number
      /**
       * Amount of asset B to be deposited to the liquidity. In asset b decimals
       */
      amountB: bigint | number
    }
    'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void': {
      appBiatecConfigProvider: bigint | number
      votePk: Uint8Array
      selectionPk: Uint8Array
      stateProofPk: Uint8Array
      voteFirst: bigint | number
      voteLast: bigint | number
      voteKeyDilution: bigint | number
      fee: bigint | number
    }
    'calculateDistributedLiquidity(uint64,uint256)uint256': {
      assetLp: bigint | number
      currentDeposit: bigint | number
    }
    'calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256': {
      x: bigint | number
      y: bigint | number
      price: bigint | number
    }
    'calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256': {
      /**
       * Asset A position balanced on the curve
       */
      x: bigint | number
      /**
       * Asset B position balanced on the curve
       */
      y: bigint | number
      /**
       * Minimum price variable in base scale decimals (pa)
       */
      priceMin: bigint | number
      /**
       * Maximum price variable in base scale decimals (pb)
       */
      priceMax: bigint | number
      /**
       * sqrt(priceMin) in base scale decimals Variable pas
       */
      priceMinSqrt: bigint | number
      /**
       * sqrt(priceMax) in base scale decimals Variable pbs
       */
      priceMaxSqrt: bigint | number
    }
    'calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256': {
      /**
       * Asset A position balanced on the curve
       */
      x: bigint | number
      /**
       * Asset B position balanced on the curve
       */
      y: bigint | number
      /**
       * sqrt(priceMin) in base scale decimals Variable pas
       */
      priceMinSqrt: bigint | number
      /**
       * sqrt(priceMax) in base scale decimals Variable pbs
       */
      priceMaxSqrt: bigint | number
      dSqrt: bigint | number
    }
    'calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256': {
      /**
       * x
       */
      assetAQuantity: bigint | number
      /**
       * y
       */
      assetBQuantity: bigint | number
      /**
       * sqrt(priceMin)
       */
      priceMinSqrt: bigint | number
      /**
       * sqrt(priceMax)
       */
      priceMaxSqrt: bigint | number
      /**
       * Current pool liquidity - L variable
       */
      liquidity: bigint | number
    }
    'calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256': {
      /**
       * Asset A amount in Base decimal representation.. If asset has 6 decimals, 1 is represented as 1000000000
       */
      inAmount: bigint | number
      /**
       * Asset A balance. Variable ab, in base scale
       */
      assetABalance: bigint | number
      /**
       * Asset B balance. Variable bb, in base scale
       */
      assetBBalance: bigint | number
      /**
       * sqrt(Min price). Variable pMinS, in base scale
       */
      priceMinSqrt: bigint | number
      /**
       * sqrt(Max price). Variable pMaxS, in base scale
       */
      priceMaxSqrt: bigint | number
      /**
       * sqrt(Max price). Variable L, in base scale
       */
      liquidity: bigint | number
    }
    'calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256': {
      /**
       * Asset B amount in Base decimal representation.. If asset has 6 decimals, 1 is represented as 1000000000
       */
      inAmount: bigint | number
      /**
       * Asset A balance. Variable ab, in base scale
       */
      assetABalance: bigint | number
      /**
       * Asset B balance. Variable bb, in base scale
       */
      assetBBalance: bigint | number
      /**
       * sqrt(Min price). Variable pMinS, in base scale
       */
      priceMinSqrt: bigint | number
      /**
       * sqrt(Max price). Variable pMaxS, in base scale
       */
      priceMaxSqrt: bigint | number
      /**
       * sqrt(Max price). Variable L, in base scale
       */
      liquidity: bigint | number
    }
    'calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256': {
      /**
       * LP Asset amount in Base decimal representation..
       */
      inAmount: bigint | number
      /**
       * Asset A balance. Variable ab, in base scale
       */
      assetABalance: bigint | number
      /**
       * Current liquidity. Variable L, in base scale
       */
      liquidity: bigint | number
    }
    'calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256': {
      /**
       * Asset A amount in Base decimal representation
       */
      inAmountA: bigint | number
      /**
       * Asset B amount in Base decimal representation
       */
      inAmountB: bigint | number
      /**
       * Asset A balance. Variable ab, in base scale
       */
      assetABalance: bigint | number
      /**
       * Asset B balance. Variable bb, in base scale
       */
      assetBBalance: bigint | number
    }
    'calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256': {
      /**
       * Asset A amount in Base decimal representation
       */
      inAmountA: bigint | number
      /**
       * Asset B amount in Base decimal representation
       */
      inAmountB: bigint | number
      /**
       * Asset A balance. Variable ab, in base scale
       */
      assetABalance: bigint | number
      /**
       * Asset B balance. Variable bb, in base scale
       */
      assetBBalance: bigint | number
    }
    'status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)': {
      appBiatecConfigProvider: bigint | number
      assetA: bigint | number
      assetB: bigint | number
      assetLp: bigint | number
    }
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'updateApplication(uint64,byte[])void': [appBiatecConfigProvider: bigint | number, newVersion: Uint8Array]
    'getCurrentPrice()uint64': []
    'getPriceDivider()uint64': []
    'getLPTokenId()uint64': []
    'bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64': [assetA: bigint | number, assetB: bigint | number, appBiatecConfigProvider: bigint | number, appBiatecPoolProvider: bigint | number, txSeed: AppMethodCallTransactionArgument, fee: bigint | number, priceMin: bigint | number, priceMax: bigint | number, currentPrice: bigint | number, verificationClass: bigint | number]
    'bootstrapStep2()void': []
    'addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64': [appBiatecConfigProvider: bigint | number, appBiatecIdentityProvider: bigint | number, txAssetADeposit: AppMethodCallTransactionArgument | undefined, txAssetBDeposit: AppMethodCallTransactionArgument, assetA: bigint | number, assetB: bigint | number, assetLp: bigint | number]
    'removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256': [appBiatecConfigProvider: bigint | number, appBiatecIdentityProvider: bigint | number, txLpXfer: AppMethodCallTransactionArgument, assetA: bigint | number, assetB: bigint | number, assetLp: bigint | number]
    'removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256': [appBiatecConfigProvider: bigint | number, assetA: bigint | number, assetB: bigint | number, assetLp: bigint | number, amount: bigint | number]
    'swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256': [appBiatecConfigProvider: bigint | number, appBiatecIdentityProvider: bigint | number, appBiatecPoolProvider: bigint | number, txSwap: AppMethodCallTransactionArgument, assetA: bigint | number, assetB: bigint | number, minimumToReceive: bigint | number]
    'distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256': [appBiatecConfigProvider: bigint | number, assetA: bigint | number, assetB: bigint | number, amountA: bigint | number, amountB: bigint | number]
    'withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64': [appBiatecConfigProvider: bigint | number, assetA: bigint | number, assetB: bigint | number, amountA: bigint | number, amountB: bigint | number]
    'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void': [appBiatecConfigProvider: bigint | number, votePk: Uint8Array, selectionPk: Uint8Array, stateProofPk: Uint8Array, voteFirst: bigint | number, voteLast: bigint | number, voteKeyDilution: bigint | number, fee: bigint | number]
    'calculateDistributedLiquidity(uint64,uint256)uint256': [assetLp: bigint | number, currentDeposit: bigint | number]
    'calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256': [x: bigint | number, y: bigint | number, price: bigint | number]
    'calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256': [x: bigint | number, y: bigint | number, priceMin: bigint | number, priceMax: bigint | number, priceMinSqrt: bigint | number, priceMaxSqrt: bigint | number]
    'calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256': [x: bigint | number, y: bigint | number, priceMinSqrt: bigint | number, priceMaxSqrt: bigint | number, dSqrt: bigint | number]
    'calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256': [assetAQuantity: bigint | number, assetBQuantity: bigint | number, priceMinSqrt: bigint | number, priceMaxSqrt: bigint | number, liquidity: bigint | number]
    'calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256': [inAmount: bigint | number, assetABalance: bigint | number, assetBBalance: bigint | number, priceMinSqrt: bigint | number, priceMaxSqrt: bigint | number, liquidity: bigint | number]
    'calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256': [inAmount: bigint | number, assetABalance: bigint | number, assetBBalance: bigint | number, priceMinSqrt: bigint | number, priceMaxSqrt: bigint | number, liquidity: bigint | number]
    'calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256': [inAmount: bigint | number, assetABalance: bigint | number, liquidity: bigint | number]
    'calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256': [inAmountA: bigint | number, inAmountB: bigint | number, assetABalance: bigint | number, assetBBalance: bigint | number]
    'calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256': [inAmountA: bigint | number, inAmountB: bigint | number, assetABalance: bigint | number, assetBBalance: bigint | number]
    'status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)': [appBiatecConfigProvider: bigint | number, assetA: bigint | number, assetB: bigint | number, assetLp: bigint | number]
  }
}

/**
 * The return type for each method
 */
export type BiatecClammPoolReturns = {
  'createApplication()void': void
  'updateApplication(uint64,byte[])void': void
  'getCurrentPrice()uint64': bigint
  'getPriceDivider()uint64': bigint
  'getLPTokenId()uint64': bigint
  'bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64': bigint
  'bootstrapStep2()void': void
  'addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64': bigint
  'removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256': bigint
  'removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256': bigint
  'swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256': bigint
  'distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256': bigint
  'withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64': bigint
  'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void': void
  'calculateDistributedLiquidity(uint64,uint256)uint256': bigint
  'calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256': bigint
  'calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256': bigint
  'calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256': bigint
  'calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256': bigint
  'calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256': bigint
  'calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256': bigint
  'calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256': bigint
  'calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256': bigint
  'calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256': bigint
  'status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)': AmmStatus
}

/**
 * Defines the types of available calls and state of the BiatecClammPool smart contract.
 */
export type BiatecClammPoolTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: BiatecClammPoolArgs['obj']['createApplication()void']
      argsTuple: BiatecClammPoolArgs['tuple']['createApplication()void']
      returns: BiatecClammPoolReturns['createApplication()void']
    }>
    & Record<'updateApplication(uint64,byte[])void' | 'updateApplication', {
      argsObj: BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void']
      argsTuple: BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']
      returns: BiatecClammPoolReturns['updateApplication(uint64,byte[])void']
    }>
    & Record<'getCurrentPrice()uint64' | 'getCurrentPrice', {
      argsObj: BiatecClammPoolArgs['obj']['getCurrentPrice()uint64']
      argsTuple: BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']
      returns: BiatecClammPoolReturns['getCurrentPrice()uint64']
    }>
    & Record<'getPriceDivider()uint64' | 'getPriceDivider', {
      argsObj: BiatecClammPoolArgs['obj']['getPriceDivider()uint64']
      argsTuple: BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']
      returns: BiatecClammPoolReturns['getPriceDivider()uint64']
    }>
    & Record<'getLPTokenId()uint64' | 'getLPTokenId', {
      argsObj: BiatecClammPoolArgs['obj']['getLPTokenId()uint64']
      argsTuple: BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']
      returns: BiatecClammPoolReturns['getLPTokenId()uint64']
    }>
    & Record<'bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64' | 'bootstrap', {
      argsObj: BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
      argsTuple: BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
      /**
       * LP token ID
       */
      returns: BiatecClammPoolReturns['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']
    }>
    & Record<'bootstrapStep2()void' | 'bootstrapStep2', {
      argsObj: BiatecClammPoolArgs['obj']['bootstrapStep2()void']
      argsTuple: BiatecClammPoolArgs['tuple']['bootstrapStep2()void']
      returns: BiatecClammPoolReturns['bootstrapStep2()void']
    }>
    & Record<'addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64' | 'addLiquidity', {
      argsObj: BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']
      argsTuple: BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']
      /**
       * LP Token quantity distributed
       */
      returns: BiatecClammPoolReturns['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']
    }>
    & Record<'removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256' | 'removeLiquidity', {
      argsObj: BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']
      /**
       * LP position reduced
       */
      returns: BiatecClammPoolReturns['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']
    }>
    & Record<'removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256' | 'removeLiquidityAdmin', {
      argsObj: BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']
      /**
       * LP position reduced
       */
      returns: BiatecClammPoolReturns['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']
    }>
    & Record<'swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256' | 'swap', {
      argsObj: BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']
      returns: BiatecClammPoolReturns['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']
    }>
    & Record<'distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256' | 'distributeExcessAssets', {
      argsObj: BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']
      returns: BiatecClammPoolReturns['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']
    }>
    & Record<'withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64' | 'withdrawExcessAssets', {
      argsObj: BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']
      argsTuple: BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']
      returns: BiatecClammPoolReturns['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']
    }>
    & Record<'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void' | 'sendOnlineKeyRegistration', {
      argsObj: BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void']
      argsTuple: BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void']
      returns: BiatecClammPoolReturns['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void']
    }>
    & Record<'calculateDistributedLiquidity(uint64,uint256)uint256' | 'calculateDistributedLiquidity', {
      argsObj: BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']
      returns: BiatecClammPoolReturns['calculateDistributedLiquidity(uint64,uint256)uint256']
    }>
    & Record<'calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256' | 'calculateLiquidityFlatPrice', {
      argsObj: BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']
      returns: BiatecClammPoolReturns['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256' | 'calculateLiquidityD', {
      argsObj: BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
      /**
       * Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
       */
      returns: BiatecClammPoolReturns['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256' | 'calculateLiquidityWithD', {
      argsObj: BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']
      /**
       * Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
       */
      returns: BiatecClammPoolReturns['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256' | 'calculatePrice', {
      argsObj: BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']
      /**
       * the price with specified quantity with the price range set in the contract
       */
      returns: BiatecClammPoolReturns['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256' | 'calculateAssetBWithdrawOnAssetADeposit', {
      argsObj: BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
      /**
       * Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
       */
      returns: BiatecClammPoolReturns['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256' | 'calculateAssetAWithdrawOnAssetBDeposit', {
      argsObj: BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
      /**
       * Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
       */
      returns: BiatecClammPoolReturns['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256' | 'calculateAssetAWithdrawOnLpDeposit', {
      argsObj: BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']
      /**
       * Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
       */
      returns: BiatecClammPoolReturns['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256' | 'calculateAssetBDepositOnAssetADeposit', {
      argsObj: BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']
      /**
       * Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
       */
      returns: BiatecClammPoolReturns['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256' | 'calculateAssetADepositOnAssetBDeposit', {
      argsObj: BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']
      argsTuple: BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']
      /**
       * Amount of asset A to be deposited. The result is in Base decimals (9)
       */
      returns: BiatecClammPoolReturns['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']
    }>
    & Record<'status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)' | 'status', {
      argsObj: BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
      argsTuple: BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
      returns: BiatecClammPoolReturns['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        setupFinished: boolean
        assetA: bigint
        assetADecimalsScaleFromBase: bigint
        assetB: bigint
        assetBDecimalsScaleFromBase: bigint
        assetLp: bigint
        assetABalanceBaseScale: bigint
        assetBBalanceBaseScale: bigint
        priceMin: bigint
        priceMax: bigint
        priceMinSqrt: bigint
        priceMaxSqrt: bigint
        liquidity: bigint
        liquidityUsersFromFees: bigint
        liquidityBiatecFromFees: bigint
        fee: bigint
        currentPrice: bigint
        scale: bigint
        appBiatecConfigProvider: bigint
        verificationClass: bigint
        version: BinaryState
      }
      maps: {}
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type BiatecClammPoolSignatures = keyof BiatecClammPoolTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type BiatecClammPoolNonVoidMethodSignatures = keyof BiatecClammPoolTypes['methods'] extends infer T ? T extends keyof BiatecClammPoolTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the BiatecClammPool smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends BiatecClammPoolSignatures> = BiatecClammPoolTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the BiatecClammPool smart contract to the method's return type
 */
export type MethodReturn<TSignature extends BiatecClammPoolSignatures> = BiatecClammPoolTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = BiatecClammPoolTypes['state']['global']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type BiatecClammPoolCreateCallParams =
  | Expand<CallParams<BiatecClammPoolArgs['obj']['createApplication()void'] | BiatecClammPoolArgs['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<BiatecClammPoolArgs['obj']['createApplication()void'] | BiatecClammPoolArgs['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported update method params for this smart contract
 */
export type BiatecClammPoolUpdateCallParams =
  | Expand<CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & {method: 'updateApplication'}>
  | Expand<CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & {method: 'updateApplication(uint64,byte[])void'}>
/**
 * Defines arguments required for the deploy method.
 */
export type BiatecClammPoolDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: BiatecClammPoolCreateCallParams
  /**
   * Update transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  updateParams?: BiatecClammPoolUpdateCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the BiatecClammPool smart contract
 */
export abstract class BiatecClammPoolParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends BiatecClammPoolCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return BiatecClammPoolParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the BiatecClammPool smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<BiatecClammPoolArgs['obj']['createApplication()void'] | BiatecClammPoolArgs['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Gets available update ABI call param factories
   */
  static get update() {
    return {
      _resolveByMethod<TParams extends BiatecClammPoolUpdateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'updateApplication':
          case 'updateApplication(uint64,byte[])void':
            return BiatecClammPoolParamsFactory.update.updateApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs update ABI call params for the BiatecClammPool smart contract using the updateApplication(uint64,byte[])void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      updateApplication(params: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & AppClientCompilationParams): AppClientMethodCallParams & AppClientCompilationParams {
        return {
          ...params,
          method: 'updateApplication(uint64,byte[])void' as const,
          args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.newVersion],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the getCurrentPrice()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getCurrentPrice(params: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getCurrentPrice()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the getPriceDivider()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getPriceDivider(params: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getPriceDivider()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the getLPTokenId()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getLpTokenId(params: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getLPTokenId()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64 ABI method
   *
   * Only Biatec Pool Provider can deploy and bootsrap this smart contract
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static bootstrap(params: CallParams<BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetA, params.args.assetB, params.args.appBiatecConfigProvider, params.args.appBiatecPoolProvider, params.args.txSeed, params.args.fee, params.args.priceMin, params.args.priceMax, params.args.currentPrice, params.args.verificationClass],
    }
  }
  /**
   * Constructs a no op call for the bootstrapStep2()void ABI method
   *
   * When we know the app id of this pool, we can register it properly at the pool provider
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static bootstrapStep2(params: CallParams<BiatecClammPoolArgs['obj']['bootstrapStep2()void'] | BiatecClammPoolArgs['tuple']['bootstrapStep2()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'bootstrapStep2()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64 ABI method
   *
   * This method adds Asset A and Asset B to the Automated Market Maker Concentrated Liqudidity Pool and send to the liqudidty provider the liquidity token
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static addLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.appBiatecIdentityProvider, params.args.txAssetADeposit, params.args.txAssetBDeposit, params.args.assetA, params.args.assetB, params.args.assetLp],
    }
  }
  /**
   * Constructs a no op call for the removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256 ABI method
   *
   * This method retrieves from the liquidity provider LP token and returns Asset A and Asset B from the Automated Market Maker Concentrated Liqudidity Pool
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static removeLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.appBiatecIdentityProvider, params.args.txLpXfer, params.args.assetA, params.args.assetB, params.args.assetLp],
    }
  }
  /**
   * Constructs a no op call for the removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256 ABI method
   *
  * This method allows biatec admin to reduce the lp position created by lp fees allocation.
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static removeLiquidityAdmin(params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.assetA, params.args.assetB, params.args.assetLp, params.args.amount],
    }
  }
  /**
   * Constructs a no op call for the swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256 ABI method
   *
   * Swap Asset A to Asset B or Asset B to Asst A
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static swap(params: CallParams<BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.appBiatecIdentityProvider, params.args.appBiatecPoolProvider, params.args.txSwap, params.args.assetA, params.args.assetB, params.args.minimumToReceive],
    }
  }
  /**
   * Constructs a no op call for the distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256 ABI method
   *
  * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
  If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
  
  
  This method is used to distribute amount a and amount b of asset a and asset b to holders as the fee income.
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static distributeExcessAssets(params: CallParams<BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.assetA, params.args.assetB, params.args.amountA, params.args.amountB],
    }
  }
  /**
   * Constructs a no op call for the withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64 ABI method
   *
  * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
  If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
  
  
  This method is used to distribute amount a and amount b of asset a and asset b to addressExecutiveFee account.
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static withdrawExcessAssets(params: CallParams<BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.assetA, params.args.assetB, params.args.amountA, params.args.amountB],
    }
  }
  /**
   * Constructs a no op call for the sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void ABI method
   *
  * addressExecutiveFee can perfom key registration for this LP pool
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static sendOnlineKeyRegistration(params: CallParams<BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void'] | BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.votePk, params.args.selectionPk, params.args.stateProofPk, params.args.voteFirst, params.args.voteLast, params.args.voteKeyDilution, params.args.fee],
    }
  }
  /**
   * Constructs a no op call for the calculateDistributedLiquidity(uint64,uint256)uint256 ABI method
   *
  * addressExecutiveFee can perfom key unregistration for this LP pool
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateDistributedLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateDistributedLiquidity(uint64,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetLp, params.args.currentDeposit],
    }
  }
  /**
   * Constructs a no op call for the calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateLiquidityFlatPrice(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.x, params.args.y, params.args.price],
    }
  }
  /**
   * Constructs a no op call for the calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256 ABI method
   *
  * Calculates the liquidity  from the x - Asset A position and y - Asset B position
  This method calculates discriminant - first part of the calculation.
  It is divided so that the readonly method does not need to charge fees

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateLiquidityD(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.x, params.args.y, params.args.priceMin, params.args.priceMax, params.args.priceMinSqrt, params.args.priceMaxSqrt],
    }
  }
  /**
   * Constructs a no op call for the calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256 ABI method
   *
   * Calculates the liquidity  from the x - Asset A position and y - Asset B position
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateLiquidityWithD(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.x, params.args.y, params.args.priceMinSqrt, params.args.priceMaxSqrt, params.args.dSqrt],
    }
  }
  /**
   * Constructs a no op call for the calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256 ABI method
   *
   * Get the current price when asset a has x
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculatePrice(params: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetAQuantity, params.args.assetBQuantity, params.args.priceMinSqrt, params.args.priceMaxSqrt, params.args.liquidity],
    }
  }
  /**
   * Constructs a no op call for the calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256 ABI method
   *
   * Calculates how much asset B will be taken from the smart contract on asset A deposit
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateAssetBWithdrawOnAssetADeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.inAmount, params.args.assetABalance, params.args.assetBBalance, params.args.priceMinSqrt, params.args.priceMaxSqrt, params.args.liquidity],
    }
  }
  /**
   * Constructs a no op call for the calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256 ABI method
   *
   * Calculates how much asset A will be taken from the smart contract on asset B deposit
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateAssetAWithdrawOnAssetBDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.inAmount, params.args.assetABalance, params.args.assetBBalance, params.args.priceMinSqrt, params.args.priceMaxSqrt, params.args.liquidity],
    }
  }
  /**
   * Constructs a no op call for the calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256 ABI method
   *
   * Calculates how much asset A will be taken from the smart contract on LP asset deposit
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateAssetAWithdrawOnLpDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.inAmount, params.args.assetABalance, params.args.liquidity],
    }
  }
  /**
   * Constructs a no op call for the calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256 ABI method
   *
  * Calculates how much asset B should be deposited when user deposit asset a and b.
  
  
  On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateAssetBDepositOnAssetADeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.inAmountA, params.args.inAmountB, params.args.assetABalance, params.args.assetBBalance],
    }
  }
  /**
   * Constructs a no op call for the calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256 ABI method
   *
  * Calculates how much asset A should be deposited when user deposit asset a and b
  
  
  On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static calculateAssetADepositOnAssetBDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.inAmountA, params.args.inAmountB, params.args.assetABalance, params.args.assetBBalance],
    }
  }
  /**
   * Constructs a no op call for the status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64) ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static status(params: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.appBiatecConfigProvider, params.args.assetA, params.args.assetB, params.args.assetLp],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the BiatecClammPool smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class BiatecClammPoolFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `BiatecClammPoolFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClient {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new BiatecClammPoolClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new BiatecClammPoolClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the BiatecClammPool smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: BiatecClammPoolDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? BiatecClammPoolParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (BiatecClammPoolCreateCallParams & { args: Uint8Array[] }) : undefined,
      updateParams: params.updateParams?.method ? BiatecClammPoolParamsFactory.update._resolveByMethod(params.updateParams) : params.updateParams ? params.updateParams as (BiatecClammPoolUpdateCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new BiatecClammPoolClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BiatecClammPool smart contract using the createApplication()void ABI method.
       *
       * Initial setup
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<BiatecClammPoolArgs['obj']['createApplication()void'] | BiatecClammPoolArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(BiatecClammPoolParamsFactory.create.createApplication(params))
      },
    },

    /**
     * Gets available deployUpdate methods
     */
    deployUpdate: {
      /**
       * Updates an existing instance of the BiatecClammPool smart contract using the updateApplication(uint64,byte[])void ABI method.
       *
       * addressUdpater from global biatec configuration is allowed to update application
       *
       * @param params The params for the smart contract call
       * @returns The deployUpdate params
       */
      updateApplication: (params: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & AppClientCompilationParams) => {
        return this.appFactory.params.deployUpdate(BiatecClammPoolParamsFactory.update.updateApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BiatecClammPool smart contract using the createApplication()void ABI method.
       *
       * Initial setup
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<BiatecClammPoolArgs['obj']['createApplication()void'] | BiatecClammPoolArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(BiatecClammPoolParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BiatecClammPool smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * Initial setup
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<BiatecClammPoolArgs['obj']['createApplication()void'] | BiatecClammPoolArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(BiatecClammPoolParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | BiatecClammPoolReturns['createApplication()void']) }, appClient: new BiatecClammPoolClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the BiatecClammPool smart contract
 */
export class BiatecClammPoolClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `BiatecClammPoolClient`
   *
   * @param appClient An `AppClient` instance which has been created with the BiatecClammPool app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `BiatecClammPoolClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends BiatecClammPoolNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `BiatecClammPoolClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<BiatecClammPoolClient> {
    return new BiatecClammPoolClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `BiatecClammPoolClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<BiatecClammPoolClient> {
    return new BiatecClammPoolClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClient {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available update methods
     */
    update: {
      /**
       * Updates an existing instance of the BiatecClammPool smart contract using the `updateApplication(uint64,byte[])void` ABI method.
       *
       * addressUdpater from global biatec configuration is allowed to update application
       *
       * @param params The params for the smart contract call
       * @returns The update params
       */
      updateApplication: (params: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & AppClientCompilationParams) => {
        return this.appClient.params.update(BiatecClammPoolParamsFactory.update.updateApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the BiatecClammPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getCurrentPrice()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getCurrentPrice: (params: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.getCurrentPrice(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getPriceDivider()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getPriceDivider: (params: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.getPriceDivider(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getLPTokenId()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getLpTokenId: (params: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.getLpTokenId(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
     * Only Biatec Pool Provider can deploy and bootsrap this smart contract
     *
     * @param params The params for the smart contract call
     * @returns The call params: LP token ID
     */
    bootstrap: (params: CallParams<BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `bootstrapStep2()void` ABI method.
     *
     * When we know the app id of this pool, we can register it properly at the pool provider
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    bootstrapStep2: (params: CallParams<BiatecClammPoolArgs['obj']['bootstrapStep2()void'] | BiatecClammPoolArgs['tuple']['bootstrapStep2()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.bootstrapStep2(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64` ABI method.
     *
     * This method adds Asset A and Asset B to the Automated Market Maker Concentrated Liqudidity Pool and send to the liqudidty provider the liquidity token
     *
     * @param params The params for the smart contract call
     * @returns The call params: LP Token quantity distributed
     */
    addLiquidity: (params: CallParams<BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256` ABI method.
     *
     * This method retrieves from the liquidity provider LP token and returns Asset A and Asset B from the Automated Market Maker Concentrated Liqudidity Pool
     *
     * @param params The params for the smart contract call
     * @returns The call params: LP position reduced
     */
    removeLiquidity: (params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.removeLiquidity(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256` ABI method.
     *
    * This method allows biatec admin to reduce the lp position created by lp fees allocation.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call params: LP position reduced
     */
    removeLiquidityAdmin: (params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.removeLiquidityAdmin(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256` ABI method.
     *
     * Swap Asset A to Asset B or Asset B to Asst A
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    swap: (params: CallParams<BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256` ABI method.
     *
    * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
    If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
    
    
    This method is used to distribute amount a and amount b of asset a and asset b to holders as the fee income.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    distributeExcessAssets: (params: CallParams<BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.distributeExcessAssets(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
    * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
    If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
    
    
    This method is used to distribute amount a and amount b of asset a and asset b to addressExecutiveFee account.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    withdrawExcessAssets: (params: CallParams<BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.withdrawExcessAssets(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void` ABI method.
     *
    * addressExecutiveFee can perfom key registration for this LP pool
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    sendOnlineKeyRegistration: (params: CallParams<BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void'] | BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.sendOnlineKeyRegistration(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateDistributedLiquidity(uint64,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * addressExecutiveFee can perfom key unregistration for this LP pool
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    calculateDistributedLiquidity: (params: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateDistributedLiquidity(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    calculateLiquidityFlatPrice: (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateLiquidityFlatPrice(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates the liquidity  from the x - Asset A position and y - Asset B position
    This method calculates discriminant - first part of the calculation.
    It is divided so that the readonly method does not need to charge fees

     *
     * @param params The params for the smart contract call
     * @returns The call params: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
     */
    calculateLiquidityD: (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateLiquidityD(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates the liquidity  from the x - Asset A position and y - Asset B position
     *
     * @param params The params for the smart contract call
     * @returns The call params: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
     */
    calculateLiquidityWithD: (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateLiquidityWithD(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Get the current price when asset a has x
     *
     * @param params The params for the smart contract call
     * @returns The call params: the price with specified quantity with the price range set in the contract
     */
    calculatePrice: (params: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculatePrice(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset B will be taken from the smart contract on asset A deposit
     *
     * @param params The params for the smart contract call
     * @returns The call params: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetBWithdrawOnAssetADeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateAssetBWithdrawOnAssetADeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset A will be taken from the smart contract on asset B deposit
     *
     * @param params The params for the smart contract call
     * @returns The call params: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetAWithdrawOnAssetBDeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnAssetBDeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset A will be taken from the smart contract on LP asset deposit
     *
     * @param params The params for the smart contract call
     * @returns The call params: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetAWithdrawOnLpDeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnLpDeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates how much asset B should be deposited when user deposit asset a and b.
    
    
    On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

     *
     * @param params The params for the smart contract call
     * @returns The call params: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetBDepositOnAssetADeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateAssetBDepositOnAssetADeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates how much asset A should be deposited when user deposit asset a and b
    
    
    On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

     *
     * @param params The params for the smart contract call
     * @returns The call params: Amount of asset A to be deposited. The result is in Base decimals (9)
     */
    calculateAssetADepositOnAssetBDeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.calculateAssetADepositOnAssetBDeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    status: (params: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BiatecClammPoolParamsFactory.status(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available update methods
     */
    update: {
      /**
       * Updates an existing instance of the BiatecClammPool smart contract using the `updateApplication(uint64,byte[])void` ABI method.
       *
       * addressUdpater from global biatec configuration is allowed to update application
       *
       * @param params The params for the smart contract call
       * @returns The update transaction
       */
      updateApplication: (params: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & AppClientCompilationParams) => {
        return this.appClient.createTransaction.update(BiatecClammPoolParamsFactory.update.updateApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the BiatecClammPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getCurrentPrice()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getCurrentPrice: (params: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.getCurrentPrice(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getPriceDivider()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getPriceDivider: (params: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.getPriceDivider(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getLPTokenId()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getLpTokenId: (params: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.getLpTokenId(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
     * Only Biatec Pool Provider can deploy and bootsrap this smart contract
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: LP token ID
     */
    bootstrap: (params: CallParams<BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `bootstrapStep2()void` ABI method.
     *
     * When we know the app id of this pool, we can register it properly at the pool provider
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    bootstrapStep2: (params: CallParams<BiatecClammPoolArgs['obj']['bootstrapStep2()void'] | BiatecClammPoolArgs['tuple']['bootstrapStep2()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.bootstrapStep2(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64` ABI method.
     *
     * This method adds Asset A and Asset B to the Automated Market Maker Concentrated Liqudidity Pool and send to the liqudidty provider the liquidity token
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: LP Token quantity distributed
     */
    addLiquidity: (params: CallParams<BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256` ABI method.
     *
     * This method retrieves from the liquidity provider LP token and returns Asset A and Asset B from the Automated Market Maker Concentrated Liqudidity Pool
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: LP position reduced
     */
    removeLiquidity: (params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.removeLiquidity(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256` ABI method.
     *
    * This method allows biatec admin to reduce the lp position created by lp fees allocation.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: LP position reduced
     */
    removeLiquidityAdmin: (params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.removeLiquidityAdmin(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256` ABI method.
     *
     * Swap Asset A to Asset B or Asset B to Asst A
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    swap: (params: CallParams<BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256` ABI method.
     *
    * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
    If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
    
    
    This method is used to distribute amount a and amount b of asset a and asset b to holders as the fee income.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    distributeExcessAssets: (params: CallParams<BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.distributeExcessAssets(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
    * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
    If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
    
    
    This method is used to distribute amount a and amount b of asset a and asset b to addressExecutiveFee account.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    withdrawExcessAssets: (params: CallParams<BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.withdrawExcessAssets(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void` ABI method.
     *
    * addressExecutiveFee can perfom key registration for this LP pool
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    sendOnlineKeyRegistration: (params: CallParams<BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void'] | BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.sendOnlineKeyRegistration(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateDistributedLiquidity(uint64,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * addressExecutiveFee can perfom key unregistration for this LP pool
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    calculateDistributedLiquidity: (params: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateDistributedLiquidity(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    calculateLiquidityFlatPrice: (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateLiquidityFlatPrice(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates the liquidity  from the x - Asset A position and y - Asset B position
    This method calculates discriminant - first part of the calculation.
    It is divided so that the readonly method does not need to charge fees

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
     */
    calculateLiquidityD: (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateLiquidityD(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates the liquidity  from the x - Asset A position and y - Asset B position
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
     */
    calculateLiquidityWithD: (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateLiquidityWithD(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Get the current price when asset a has x
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: the price with specified quantity with the price range set in the contract
     */
    calculatePrice: (params: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculatePrice(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset B will be taken from the smart contract on asset A deposit
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetBWithdrawOnAssetADeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateAssetBWithdrawOnAssetADeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset A will be taken from the smart contract on asset B deposit
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetAWithdrawOnAssetBDeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnAssetBDeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset A will be taken from the smart contract on LP asset deposit
     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetAWithdrawOnLpDeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnLpDeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates how much asset B should be deposited when user deposit asset a and b.
    
    
    On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetBDepositOnAssetADeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateAssetBDepositOnAssetADeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates how much asset A should be deposited when user deposit asset a and b
    
    
    On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: Amount of asset A to be deposited. The result is in Base decimals (9)
     */
    calculateAssetADepositOnAssetBDeposit: (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.calculateAssetADepositOnAssetBDeposit(params))
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    status: (params: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BiatecClammPoolParamsFactory.status(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available update methods
     */
    update: {
      /**
       * Updates an existing instance of the BiatecClammPool smart contract using the `updateApplication(uint64,byte[])void` ABI method.
       *
       * addressUdpater from global biatec configuration is allowed to update application
       *
       * @param params The params for the smart contract call
       * @returns The update result
       */
      updateApplication: async (params: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & AppClientCompilationParams & SendParams) => {
        const result = await this.appClient.send.update(BiatecClammPoolParamsFactory.update.updateApplication(params))
        return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['updateApplication(uint64,byte[])void'])}
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the BiatecClammPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getCurrentPrice()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getCurrentPrice: async (params: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.getCurrentPrice(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['getCurrentPrice()uint64'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getPriceDivider()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getPriceDivider: async (params: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.getPriceDivider(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['getPriceDivider()uint64'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `getLPTokenId()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getLpTokenId: async (params: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.getLpTokenId(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['getLPTokenId()uint64'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
     * Only Biatec Pool Provider can deploy and bootsrap this smart contract
     *
     * @param params The params for the smart contract call
     * @returns The call result: LP token ID
     */
    bootstrap: async (params: CallParams<BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.bootstrap(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `bootstrapStep2()void` ABI method.
     *
     * When we know the app id of this pool, we can register it properly at the pool provider
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    bootstrapStep2: async (params: CallParams<BiatecClammPoolArgs['obj']['bootstrapStep2()void'] | BiatecClammPoolArgs['tuple']['bootstrapStep2()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.bootstrapStep2(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['bootstrapStep2()void'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64` ABI method.
     *
     * This method adds Asset A and Asset B to the Automated Market Maker Concentrated Liqudidity Pool and send to the liqudidty provider the liquidity token
     *
     * @param params The params for the smart contract call
     * @returns The call result: LP Token quantity distributed
     */
    addLiquidity: async (params: CallParams<BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.addLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256` ABI method.
     *
     * This method retrieves from the liquidity provider LP token and returns Asset A and Asset B from the Automated Market Maker Concentrated Liqudidity Pool
     *
     * @param params The params for the smart contract call
     * @returns The call result: LP position reduced
     */
    removeLiquidity: async (params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.removeLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256` ABI method.
     *
    * This method allows biatec admin to reduce the lp position created by lp fees allocation.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call result: LP position reduced
     */
    removeLiquidityAdmin: async (params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.removeLiquidityAdmin(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256` ABI method.
     *
     * Swap Asset A to Asset B or Asset B to Asst A
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    swap: async (params: CallParams<BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.swap(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256` ABI method.
     *
    * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
    If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
    
    
    This method is used to distribute amount a and amount b of asset a and asset b to holders as the fee income.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    distributeExcessAssets: async (params: CallParams<BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.distributeExcessAssets(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64` ABI method.
     *
    * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
    If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
    
    
    This method is used to distribute amount a and amount b of asset a and asset b to addressExecutiveFee account.
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    withdrawExcessAssets: async (params: CallParams<BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.withdrawExcessAssets(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void` ABI method.
     *
    * addressExecutiveFee can perfom key registration for this LP pool
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    sendOnlineKeyRegistration: async (params: CallParams<BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void'] | BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.sendOnlineKeyRegistration(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateDistributedLiquidity(uint64,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * addressExecutiveFee can perfom key unregistration for this LP pool
    
    
    Only addressExecutiveFee is allowed to execute this method.

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    calculateDistributedLiquidity: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateDistributedLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateDistributedLiquidity(uint64,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    calculateLiquidityFlatPrice: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateLiquidityFlatPrice(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates the liquidity  from the x - Asset A position and y - Asset B position
    This method calculates discriminant - first part of the calculation.
    It is divided so that the readonly method does not need to charge fees

     *
     * @param params The params for the smart contract call
     * @returns The call result: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
     */
    calculateLiquidityD: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateLiquidityD(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates the liquidity  from the x - Asset A position and y - Asset B position
     *
     * @param params The params for the smart contract call
     * @returns The call result: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
     */
    calculateLiquidityWithD: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateLiquidityWithD(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Get the current price when asset a has x
     *
     * @param params The params for the smart contract call
     * @returns The call result: the price with specified quantity with the price range set in the contract
     */
    calculatePrice: async (params: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculatePrice(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset B will be taken from the smart contract on asset A deposit
     *
     * @param params The params for the smart contract call
     * @returns The call result: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetBWithdrawOnAssetADeposit: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetBWithdrawOnAssetADeposit(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset A will be taken from the smart contract on asset B deposit
     *
     * @param params The params for the smart contract call
     * @returns The call result: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetAWithdrawOnAssetBDeposit: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnAssetBDeposit(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * Calculates how much asset A will be taken from the smart contract on LP asset deposit
     *
     * @param params The params for the smart contract call
     * @returns The call result: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetAWithdrawOnLpDeposit: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnLpDeposit(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates how much asset B should be deposited when user deposit asset a and b.
    
    
    On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

     *
     * @param params The params for the smart contract call
     * @returns The call result: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
     */
    calculateAssetBDepositOnAssetADeposit: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetBDepositOnAssetADeposit(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
    * Calculates how much asset A should be deposited when user deposit asset a and b
    
    
    On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

     *
     * @param params The params for the smart contract call
     * @returns The call result: Amount of asset A to be deposited. The result is in Base decimals (9)
     */
    calculateAssetADepositOnAssetBDeposit: async (params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetADepositOnAssetBDeposit(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'])}
    },

    /**
     * Makes a call to the BiatecClammPool smart contract using the `status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    status: async (params: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.status(params))
      return {...result, return: result.return as unknown as (undefined | BiatecClammPoolReturns['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new BiatecClammPoolClient(this.appClient.clone(params))
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `getCurrentPrice()uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async getCurrentPrice(params: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']> = {args: []}) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.getCurrentPrice(params))
    return result.return as unknown as BiatecClammPoolReturns['getCurrentPrice()uint64']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `getPriceDivider()uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async getPriceDivider(params: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']> = {args: []}) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.getPriceDivider(params))
    return result.return as unknown as BiatecClammPoolReturns['getPriceDivider()uint64']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `getLPTokenId()uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async getLpTokenId(params: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']> = {args: []}) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.getLpTokenId(params))
    return result.return as unknown as BiatecClammPoolReturns['getLPTokenId()uint64']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateDistributedLiquidity(uint64,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
  * addressExecutiveFee can perfom key unregistration for this LP pool
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async calculateDistributedLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateDistributedLiquidity(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateDistributedLiquidity(uint64,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async calculateLiquidityFlatPrice(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateLiquidityFlatPrice(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
  * Calculates the liquidity  from the x - Asset A position and y - Asset B position
  This method calculates discriminant - first part of the calculation.
  It is divided so that the readonly method does not need to charge fees

   *
   * @param params The params for the smart contract call
   * @returns The call result: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
   */
  async calculateLiquidityD(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateLiquidityD(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * Calculates the liquidity  from the x - Asset A position and y - Asset B position
   *
   * @param params The params for the smart contract call
   * @returns The call result: Liquidity is constant in swapping each direction. On deposit the diff between the liquidity is number of LP tokens received by user.
   */
  async calculateLiquidityWithD(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateLiquidityWithD(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * Get the current price when asset a has x
   *
   * @param params The params for the smart contract call
   * @returns The call result: the price with specified quantity with the price range set in the contract
   */
  async calculatePrice(params: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculatePrice(params))
    return result.return as unknown as BiatecClammPoolReturns['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * Calculates how much asset B will be taken from the smart contract on asset A deposit
   *
   * @param params The params for the smart contract call
   * @returns The call result: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
   */
  async calculateAssetBWithdrawOnAssetADeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetBWithdrawOnAssetADeposit(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * Calculates how much asset A will be taken from the smart contract on asset B deposit
   *
   * @param params The params for the smart contract call
   * @returns The call result: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
   */
  async calculateAssetAWithdrawOnAssetBDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnAssetBDeposit(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * Calculates how much asset A will be taken from the smart contract on LP asset deposit
   *
   * @param params The params for the smart contract call
   * @returns The call result: Amount of asset A to be given to the caller before fees. The result is in Base decimals (9)
   */
  async calculateAssetAWithdrawOnLpDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetAWithdrawOnLpDeposit(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
  * Calculates how much asset B should be deposited when user deposit asset a and b.
  
  
  On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

   *
   * @param params The params for the smart contract call
   * @returns The call result: Amount of asset B to be given to the caller before fees. The result is in Base decimals (9)
   */
  async calculateAssetBDepositOnAssetADeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetBDepositOnAssetADeposit(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
  * Calculates how much asset A should be deposited when user deposit asset a and b
  
  
  On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

   *
   * @param params The params for the smart contract call
   * @returns The call result: Amount of asset A to be deposited. The result is in Base decimals (9)
   */
  async calculateAssetADepositOnAssetBDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.calculateAssetADepositOnAssetBDeposit(params))
    return result.return as unknown as BiatecClammPoolReturns['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']
  }

  /**
   * Makes a readonly (simulated) call to the BiatecClammPool smart contract using the `status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async status(params: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']>) {
    const result = await this.appClient.send.call(BiatecClammPoolParamsFactory.status(params))
    return result.return as unknown as BiatecClammPoolReturns['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']
  }

  /**
   * Methods to access state for the current BiatecClammPool app
   */
  state = {
    /**
     * Methods to access global state for the current BiatecClammPool app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          setupFinished: result.setupFinished,
          assetA: result.assetA,
          assetADecimalsScaleFromBase: result.assetADecimalsScaleFromBase,
          assetB: result.assetB,
          assetBDecimalsScaleFromBase: result.assetBDecimalsScaleFromBase,
          assetLp: result.assetLp,
          assetABalanceBaseScale: result.assetABalanceBaseScale,
          assetBBalanceBaseScale: result.assetBBalanceBaseScale,
          priceMin: result.priceMin,
          priceMax: result.priceMax,
          priceMinSqrt: result.priceMinSqrt,
          priceMaxSqrt: result.priceMaxSqrt,
          liquidity: result.Liquidity,
          liquidityUsersFromFees: result.LiquidityUsersFromFees,
          liquidityBiatecFromFees: result.LiquidityBiatecFromFees,
          fee: result.fee,
          currentPrice: result.currentPrice,
          scale: result.scale,
          appBiatecConfigProvider: result.appBiatecConfigProvider,
          verificationClass: result.verificationClass,
          version: new BinaryStateValue(result.version),
        }
      },
      /**
       * Get the current value of the setupFinished key in global state
       */
      setupFinished: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("setupFinished")) as boolean | undefined },
      /**
       * Get the current value of the assetA key in global state
       */
      assetA: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetA")) as bigint | undefined },
      /**
       * Get the current value of the assetADecimalsScaleFromBase key in global state
       */
      assetADecimalsScaleFromBase: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetADecimalsScaleFromBase")) as bigint | undefined },
      /**
       * Get the current value of the assetB key in global state
       */
      assetB: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetB")) as bigint | undefined },
      /**
       * Get the current value of the assetBDecimalsScaleFromBase key in global state
       */
      assetBDecimalsScaleFromBase: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetBDecimalsScaleFromBase")) as bigint | undefined },
      /**
       * Get the current value of the assetLp key in global state
       */
      assetLp: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetLp")) as bigint | undefined },
      /**
       * Get the current value of the assetABalanceBaseScale key in global state
       */
      assetABalanceBaseScale: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetABalanceBaseScale")) as bigint | undefined },
      /**
       * Get the current value of the assetBBalanceBaseScale key in global state
       */
      assetBBalanceBaseScale: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("assetBBalanceBaseScale")) as bigint | undefined },
      /**
       * Get the current value of the priceMin key in global state
       */
      priceMin: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("priceMin")) as bigint | undefined },
      /**
       * Get the current value of the priceMax key in global state
       */
      priceMax: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("priceMax")) as bigint | undefined },
      /**
       * Get the current value of the priceMinSqrt key in global state
       */
      priceMinSqrt: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("priceMinSqrt")) as bigint | undefined },
      /**
       * Get the current value of the priceMaxSqrt key in global state
       */
      priceMaxSqrt: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("priceMaxSqrt")) as bigint | undefined },
      /**
       * Get the current value of the Liquidity key in global state
       */
      liquidity: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("Liquidity")) as bigint | undefined },
      /**
       * Get the current value of the LiquidityUsersFromFees key in global state
       */
      liquidityUsersFromFees: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("LiquidityUsersFromFees")) as bigint | undefined },
      /**
       * Get the current value of the LiquidityBiatecFromFees key in global state
       */
      liquidityBiatecFromFees: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("LiquidityBiatecFromFees")) as bigint | undefined },
      /**
       * Get the current value of the fee key in global state
       */
      fee: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("fee")) as bigint | undefined },
      /**
       * Get the current value of the currentPrice key in global state
       */
      currentPrice: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("currentPrice")) as bigint | undefined },
      /**
       * Get the current value of the scale key in global state
       */
      scale: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("scale")) as bigint | undefined },
      /**
       * Get the current value of the appBiatecConfigProvider key in global state
       */
      appBiatecConfigProvider: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("appBiatecConfigProvider")) as bigint | undefined },
      /**
       * Get the current value of the verificationClass key in global state
       */
      verificationClass: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("verificationClass")) as bigint | undefined },
      /**
       * Get the current value of the version key in global state
       */
      version: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("version")) as Uint8Array | undefined) },
    },
  }

  public newGroup(): BiatecClammPoolComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a getCurrentPrice()uint64 method call against the BiatecClammPool contract
       */
      getCurrentPrice(params: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getCurrentPrice(params)))
        resultMappers.push((v) => client.decodeReturnValue('getCurrentPrice()uint64', v))
        return this
      },
      /**
       * Add a getPriceDivider()uint64 method call against the BiatecClammPool contract
       */
      getPriceDivider(params: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getPriceDivider(params)))
        resultMappers.push((v) => client.decodeReturnValue('getPriceDivider()uint64', v))
        return this
      },
      /**
       * Add a getLPTokenId()uint64 method call against the BiatecClammPool contract
       */
      getLpTokenId(params: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getLpTokenId(params)))
        resultMappers.push((v) => client.decodeReturnValue('getLPTokenId()uint64', v))
        return this
      },
      /**
       * Add a bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64 method call against the BiatecClammPool contract
       */
      bootstrap(params: CallParams<BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.bootstrap(params)))
        resultMappers.push((v) => client.decodeReturnValue('bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64', v))
        return this
      },
      /**
       * Add a bootstrapStep2()void method call against the BiatecClammPool contract
       */
      bootstrapStep2(params: CallParams<BiatecClammPoolArgs['obj']['bootstrapStep2()void'] | BiatecClammPoolArgs['tuple']['bootstrapStep2()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.bootstrapStep2(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64 method call against the BiatecClammPool contract
       */
      addLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.addLiquidity(params)))
        resultMappers.push((v) => client.decodeReturnValue('addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64', v))
        return this
      },
      /**
       * Add a removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256 method call against the BiatecClammPool contract
       */
      removeLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.removeLiquidity(params)))
        resultMappers.push((v) => client.decodeReturnValue('removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256', v))
        return this
      },
      /**
       * Add a removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256 method call against the BiatecClammPool contract
       */
      removeLiquidityAdmin(params: CallParams<BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.removeLiquidityAdmin(params)))
        resultMappers.push((v) => client.decodeReturnValue('removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256', v))
        return this
      },
      /**
       * Add a swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256 method call against the BiatecClammPool contract
       */
      swap(params: CallParams<BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.swap(params)))
        resultMappers.push((v) => client.decodeReturnValue('swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256', v))
        return this
      },
      /**
       * Add a distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      distributeExcessAssets(params: CallParams<BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.distributeExcessAssets(params)))
        resultMappers.push((v) => client.decodeReturnValue('distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64 method call against the BiatecClammPool contract
       */
      withdrawExcessAssets(params: CallParams<BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.withdrawExcessAssets(params)))
        resultMappers.push((v) => client.decodeReturnValue('withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64', v))
        return this
      },
      /**
       * Add a sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void method call against the BiatecClammPool contract
       */
      sendOnlineKeyRegistration(params: CallParams<BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void'] | BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.sendOnlineKeyRegistration(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a calculateDistributedLiquidity(uint64,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateDistributedLiquidity(params: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateDistributedLiquidity(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateDistributedLiquidity(uint64,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateLiquidityFlatPrice(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateLiquidityFlatPrice(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateLiquidityD(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateLiquidityD(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateLiquidityWithD(params: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateLiquidityWithD(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculatePrice(params: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculatePrice(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateAssetBWithdrawOnAssetADeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateAssetBWithdrawOnAssetADeposit(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateAssetAWithdrawOnAssetBDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateAssetAWithdrawOnAssetBDeposit(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateAssetAWithdrawOnLpDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateAssetAWithdrawOnLpDeposit(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateAssetBDepositOnAssetADeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateAssetBDepositOnAssetADeposit(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256 method call against the BiatecClammPool contract
       */
      calculateAssetADepositOnAssetBDeposit(params: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.calculateAssetADepositOnAssetBDeposit(params)))
        resultMappers.push((v) => client.decodeReturnValue('calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256', v))
        return this
      },
      /**
       * Add a status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64) method call against the BiatecClammPool contract
       */
      status(params: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.status(params)))
        resultMappers.push((v) => client.decodeReturnValue('status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)', v))
        return this
      },
      get update() {
        return {
          updateApplication: (params: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']> & AppClientCompilationParams) => {
            promiseChain = promiseChain.then(async () => composer.addAppUpdateMethodCall(await client.params.update.updateApplication(params)))
            resultMappers.push(undefined)
            return this
          },
        }
      },
      /**
       * Add a clear state call to the BiatecClammPool contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as BiatecClammPoolComposer
  }
}
export type BiatecClammPoolComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the getCurrentPrice()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getCurrentPrice(params?: CallParams<BiatecClammPoolArgs['obj']['getCurrentPrice()uint64'] | BiatecClammPoolArgs['tuple']['getCurrentPrice()uint64']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['getCurrentPrice()uint64'] | undefined]>

  /**
   * Calls the getPriceDivider()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getPriceDivider(params?: CallParams<BiatecClammPoolArgs['obj']['getPriceDivider()uint64'] | BiatecClammPoolArgs['tuple']['getPriceDivider()uint64']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['getPriceDivider()uint64'] | undefined]>

  /**
   * Calls the getLPTokenId()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getLpTokenId(params?: CallParams<BiatecClammPoolArgs['obj']['getLPTokenId()uint64'] | BiatecClammPoolArgs['tuple']['getLPTokenId()uint64']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['getLPTokenId()uint64'] | undefined]>

  /**
   * Calls the bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64 ABI method.
   *
   * Only Biatec Pool Provider can deploy and bootsrap this smart contract
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  bootstrap(params?: CallParams<BiatecClammPoolArgs['obj']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['bootstrap(uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64)uint64'] | undefined]>

  /**
   * Calls the bootstrapStep2()void ABI method.
   *
   * When we know the app id of this pool, we can register it properly at the pool provider
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  bootstrapStep2(params?: CallParams<BiatecClammPoolArgs['obj']['bootstrapStep2()void'] | BiatecClammPoolArgs['tuple']['bootstrapStep2()void']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['bootstrapStep2()void'] | undefined]>

  /**
   * Calls the addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64 ABI method.
   *
   * This method adds Asset A and Asset B to the Automated Market Maker Concentrated Liqudidity Pool and send to the liqudidty provider the liquidity token
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  addLiquidity(params?: CallParams<BiatecClammPoolArgs['obj']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['addLiquidity(uint64,uint64,txn,txn,uint64,uint64,uint64)uint64'] | undefined]>

  /**
   * Calls the removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256 ABI method.
   *
   * This method retrieves from the liquidity provider LP token and returns Asset A and Asset B from the Automated Market Maker Concentrated Liqudidity Pool
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  removeLiquidity(params?: CallParams<BiatecClammPoolArgs['obj']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['removeLiquidity(uint64,uint64,axfer,uint64,uint64,uint64)uint256'] | undefined]>

  /**
   * Calls the removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256 ABI method.
   *
  * This method allows biatec admin to reduce the lp position created by lp fees allocation.
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  removeLiquidityAdmin(params?: CallParams<BiatecClammPoolArgs['obj']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['removeLiquidityAdmin(uint64,uint64,uint64,uint64,uint256)uint256'] | undefined]>

  /**
   * Calls the swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256 ABI method.
   *
   * Swap Asset A to Asset B or Asset B to Asst A
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  swap(params?: CallParams<BiatecClammPoolArgs['obj']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | BiatecClammPoolArgs['tuple']['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['swap(uint64,uint64,uint64,txn,uint64,uint64,uint64)uint256'] | undefined]>

  /**
   * Calls the distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256 ABI method.
   *
  * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
  If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
  
  
  This method is used to distribute amount a and amount b of asset a and asset b to holders as the fee income.
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  distributeExcessAssets(params?: CallParams<BiatecClammPoolArgs['obj']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['distributeExcessAssets(uint64,uint64,uint64,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64 ABI method.
   *
  * If someone deposits excess assets to the LP pool, addressExecutiveFee can either distribute them to the lp tokens or withdraw it, depending on the use case.
  If someone sent there assets in fault, the withrawing can be use to return them back. If the pool received assets for example for having its algo stake online and recieved rewards it is prefered to distribute them to the current LP holders.
  
  
  This method is used to distribute amount a and amount b of asset a and asset b to addressExecutiveFee account.
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  withdrawExcessAssets(params?: CallParams<BiatecClammPoolArgs['obj']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | BiatecClammPoolArgs['tuple']['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['withdrawExcessAssets(uint64,uint64,uint64,uint64,uint64)uint64'] | undefined]>

  /**
   * Calls the sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void ABI method.
   *
  * addressExecutiveFee can perfom key registration for this LP pool
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  sendOnlineKeyRegistration(params?: CallParams<BiatecClammPoolArgs['obj']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void'] | BiatecClammPoolArgs['tuple']['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['sendOnlineKeyRegistration(uint64,byte[],byte[],byte[],uint64,uint64,uint64,uint64)void'] | undefined]>

  /**
   * Calls the calculateDistributedLiquidity(uint64,uint256)uint256 ABI method.
   *
  * addressExecutiveFee can perfom key unregistration for this LP pool
  
  
  Only addressExecutiveFee is allowed to execute this method.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateDistributedLiquidity(params?: CallParams<BiatecClammPoolArgs['obj']['calculateDistributedLiquidity(uint64,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateDistributedLiquidity(uint64,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateDistributedLiquidity(uint64,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateLiquidityFlatPrice(params?: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateLiquidityFlatPrice(uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256 ABI method.
   *
  * Calculates the liquidity  from the x - Asset A position and y - Asset B position
  This method calculates discriminant - first part of the calculation.
  It is divided so that the readonly method does not need to charge fees

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateLiquidityD(params?: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateLiquidityD(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256 ABI method.
   *
   * Calculates the liquidity  from the x - Asset A position and y - Asset B position
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateLiquidityWithD(params?: CallParams<BiatecClammPoolArgs['obj']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateLiquidityWithD(uint256,uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256 ABI method.
   *
   * Get the current price when asset a has x
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculatePrice(params?: CallParams<BiatecClammPoolArgs['obj']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculatePrice(uint256,uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256 ABI method.
   *
   * Calculates how much asset B will be taken from the smart contract on asset A deposit
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateAssetBWithdrawOnAssetADeposit(params?: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateAssetBWithdrawOnAssetADeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256 ABI method.
   *
   * Calculates how much asset A will be taken from the smart contract on asset B deposit
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateAssetAWithdrawOnAssetBDeposit(params?: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateAssetAWithdrawOnAssetBDeposit(uint256,uint256,uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256 ABI method.
   *
   * Calculates how much asset A will be taken from the smart contract on LP asset deposit
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateAssetAWithdrawOnLpDeposit(params?: CallParams<BiatecClammPoolArgs['obj']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateAssetAWithdrawOnLpDeposit(uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256 ABI method.
   *
  * Calculates how much asset B should be deposited when user deposit asset a and b.
  
  
  On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateAssetBDepositOnAssetADeposit(params?: CallParams<BiatecClammPoolArgs['obj']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateAssetBDepositOnAssetADeposit(uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256 ABI method.
   *
  * Calculates how much asset A should be deposited when user deposit asset a and b
  
  
  On deposit min(calculateAssetBDepositOnAssetADeposit, calculateAssetADepositOnAssetBDeposit) should be considered for the real deposit and rest should be swapped or returned back to user

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  calculateAssetADepositOnAssetBDeposit(params?: CallParams<BiatecClammPoolArgs['obj']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | BiatecClammPoolArgs['tuple']['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['calculateAssetADepositOnAssetBDeposit(uint256,uint256,uint256,uint256)uint256'] | undefined]>

  /**
   * Calls the status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64) ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  status(params?: CallParams<BiatecClammPoolArgs['obj']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | BiatecClammPoolArgs['tuple']['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['status(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)'] | undefined]>

  /**
   * Gets available update methods
   */
  readonly update: {
    /**
     * Updates an existing instance of the BiatecClammPool smart contract using the updateApplication(uint64,byte[])void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    updateApplication(params?: CallParams<BiatecClammPoolArgs['obj']['updateApplication(uint64,byte[])void'] | BiatecClammPoolArgs['tuple']['updateApplication(uint64,byte[])void']>): BiatecClammPoolComposer<[...TReturns, BiatecClammPoolReturns['updateApplication(uint64,byte[])void'] | undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the BiatecClammPool smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): BiatecClammPoolComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): BiatecClammPoolComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<BiatecClammPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<BiatecClammPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<BiatecClammPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<BiatecClammPoolComposerResults<TReturns>>
}
export type BiatecClammPoolComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

